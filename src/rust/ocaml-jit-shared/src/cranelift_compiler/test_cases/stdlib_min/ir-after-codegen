function u0:0(r64, r64, r64) -> r64 system_v {
    gv0 = symbol u1:0
    sig0 = (r64, r64) -> r64 system_v
    fn0 = u0:1 sig0

block0(v0: r64, v1: r64, v2: r64):
    v3 = symbol_value.i64 gv0
    v4 = load.i64 notrap aligned v3
    v5 = load.r64 notrap aligned v4
    v6 = load.r64 notrap aligned v4+8
    v7 = iadd_imm v4, 16
    store notrap aligned v7, v3
    v8 = null.r64 
    v9 = call fn0(v5, v6)
    v10 = raw_bitcast.i64 v9
    v11 = icmp_imm eq v10, 1
    brz v11, block1
    jump block2

block1:
    jump block3(v6)

block2:
    jump block3(v5)

block3(v12: r64):
    return v12
}
