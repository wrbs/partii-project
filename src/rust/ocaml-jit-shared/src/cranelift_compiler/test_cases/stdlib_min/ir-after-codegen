function u0:0(r64, i64, i64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    sig0 = (r64, r64) -> r64 system_v
    fn0 = u0:1 sig0

block0(v0: r64, v1: i64, v2: i64):
    v3 = load.r64 notrap aligned v1
    v4 = load.r64 notrap aligned v1+8
    v5 = iadd_imm v1, 16
    v6 = null.r64 
    v7 = iconst.i64 0
    v16 -> v7
    v8 = symbol_value.i64 gv0
    store notrap aligned v5, v8
    v9 = call fn0(v3, v4)
    v10 = symbol_value.i64 gv0
    v11 = load.i64 notrap aligned v10
    v14 -> v11
    v12 = raw_bitcast.i64 v9
    v13 = icmp_imm eq v12, 1
    brz v13, block1
    jump block2

block1:
    jump block3(v3)

block2:
    jump block3(v4)

block3(v15: r64):
    store.i64 notrap aligned v11, v2
    return v15, v7
}
