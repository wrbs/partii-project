function u0:0(r64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    sig0 = (r64, r64) -> r64 system_v
    fn0 = u0:1 sig0

block0(v0: r64):
    v1 = symbol_value.i64 gv0
    v2 = load.i64 notrap aligned v1
    v3 = load.r64 notrap aligned v2
    v4 = load.r64 notrap aligned v2+8
    v5 = iadd_imm v2, 16
    store notrap aligned v5, v1
    v6 = null.r64 
    v7 = iconst.i64 0
    v12 -> v7
    v8 = call fn0(v3, v4)
    v9 = raw_bitcast.i64 v8
    v10 = icmp_imm eq v9, 1
    brz v10, block1
    jump block2

block1:
    jump block3(v3)

block2:
    jump block3(v4)

block3(v11: r64):
    return v11, v7
}
