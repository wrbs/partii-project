
<input>:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <stdlib_min>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 40          	sub    $0x40,%rsp
   8:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   d:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
  12:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
  17:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
  1c:	49 89 d4             	mov    %rdx,%r12
  1f:	48 bb 00 00 00 00 00 	movabs $0x0,%rbx
  26:	00 00 00 
			21: R_X86_64_64	caml_state_addr
  29:	4c 8b 2e             	mov    (%rsi),%r13
  2c:	4c 8b 76 08          	mov    0x8(%rsi),%r14
  30:	48 83 c6 10          	add    $0x10,%rsi
  34:	48 89 b3 98 00 00 00 	mov    %rsi,0x98(%rbx)
  3b:	4c 89 ef             	mov    %r13,%rdi
  3e:	4c 89 f6             	mov    %r14,%rsi
  41:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  48:	00 00 00 
			43: R_X86_64_64	oc_prim233
  4b:	48 89 34 24          	mov    %rsi,(%rsp)
  4f:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
  54:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
  59:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
  5e:	ff d0                	call   *%rax
  60:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
  65:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
  6a:	48 8b b3 98 00 00 00 	mov    0x98(%rbx),%rsi
  71:	bf 01 00 00 00       	mov    $0x1,%edi
  76:	48 39 f8             	cmp    %rdi,%rax
  79:	0f 84 03 00 00 00    	je     82 <stdlib_min+0x82>
  7f:	4d 89 ee             	mov    %r13,%r14
  82:	49 89 34 24          	mov    %rsi,(%r12)
  86:	48 31 d2             	xor    %rdx,%rdx
  89:	4c 89 f0             	mov    %r14,%rax
  8c:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
  91:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
  96:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
  9b:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
  a0:	48 83 c4 40          	add    $0x40,%rsp
  a4:	48 89 ec             	mov    %rbp,%rsp
  a7:	5d                   	pop    %rbp
  a8:	c3                   	ret    
