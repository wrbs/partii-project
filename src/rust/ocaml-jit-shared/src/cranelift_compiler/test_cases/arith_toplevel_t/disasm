VCode_ShowWithRRU {{
  Entry block: 0
Block 0:
  (original IR block: block0)
  (successor: Block 1)
  (successor: Block 3)
  (instruction range: 0 .. 11)
  Inst 0:   pushq   %rbp
  Inst 1:   unwind PushFrameRegs { offset_upward_to_caller_sp: 16 }
  Inst 2:   movq    %rsp, %rbp
  Inst 3:   unwind DefineNewFrame { offset_upward_to_caller_sp: 16, offset_downward_to_clobbers: 0 }
  Inst 4:   load_ext_name u1:0+0, %rcx
  Inst 5:   movq    0(%rsi), %rax
  Inst 6:   movq    %rsi, %rdi
  Inst 7:   addq    $8, %rdi
  Inst 8:   movl    $5, %esi
  Inst 9:   cmpq    %rax, %rsi
  Inst 10:   jnl     label1; j label3
Block 1:
  (original IR block: block2)
  (successor: Block 2)
  (instruction range: 11 .. 13)
  Inst 11:   movl    $15, %eax
  Inst 12:   jmp     label2
Block 2:
  (successor: Block 5)
  (instruction range: 13 .. 14)
  Inst 13:   jmp     label5
Block 3:
  (original IR block: block1)
  (successor: Block 4)
  (instruction range: 14 .. 16)
  Inst 14:   movl    $11, %eax
  Inst 15:   jmp     label4
Block 4:
  (successor: Block 5)
  (instruction range: 16 .. 17)
  Inst 16:   jmp     label5
Block 5:
  (original IR block: block3)
  (instruction range: 17 .. 22)
  Inst 17:   movq    %rdi, 152(%rcx)
  Inst 18:   xorq    %rdx, %rdx
  Inst 19:   movq    %rbp, %rsp
  Inst 20:   popq    %rbp
  Inst 21:   ret
}}
