function u0:0(r64, r64, r64, r64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    gv1 = symbol u1:1
    sig0 = (i64, i32, i32, i64) system_v
    sig1 = (r64, i64) -> r64, i64 system_v
    fn0 = u0:1 sig0
    fn1 = u0:2 sig1

block0(v0: r64, v1: r64, v2: r64, v3: r64):
    v36 -> v1
    v4 = null.r64 
    v5 = iconst.i64 0
    v6 = symbol_value.i64 gv0
    v7 = load.i64 notrap aligned v6+152
    v40 -> v7
    v8 = load.r64 notrap aligned v0+8
    v9 = load.i64 notrap aligned v6
    v10 = iadd_imm v9, -72
    store notrap aligned v10, v6
    v11 = load.i64 notrap aligned v6+8
    br_icmp ult v10, v11, block2
    jump block3(v10)

block2:
    v13 = iconst.i64 8
    v14 = iconst.i32 17
    v15 = iconst.i32 1
    v16 = iconst.i64 0
    call fn0(v13, v14, v15, v16)
    v17 = load.i64 notrap aligned v6
    jump block3(v17)

block3(v12: i64):
    v18 = iconst.i64 8439
    store notrap aligned v18, v12
    v19 = iadd_imm v12, 8
    v20 = raw_bitcast.r64 v19
    store.r64 notrap aligned v8, v20+40
    store.r64 notrap aligned v2, v20+48
    store.r64 notrap aligned v3, v20+56
    v21 = raw_bitcast.i64 v20
    v22 = iconst.i64 0xdead_beef
    store notrap aligned v22, v21
    v23 = raw_bitcast.r64 v21
    v24 = iconst.i64 0xdead_beef
    v25 = iconst.i64 2297
    store notrap aligned v25, v21+8
    store notrap aligned v24, v21+16
    v26 = iadd_imm v21, 16
    v27 = raw_bitcast.r64 v26
    v28 = iconst.i64 0xdead_beef
    v29 = iconst.i64 4345
    store notrap aligned v29, v21+24
    store notrap aligned v28, v21+32
    v30 = iadd_imm v21, 32
    v31 = raw_bitcast.r64 v30
    v32 = iconst.i64 9
    v33 = raw_bitcast.r64 v32
    v34 = iconst.i64 7
    v35 = raw_bitcast.r64 v34
    v37 = iconst.i64 2
    v38 = iconst.i64 1
    v39 = symbol_value.i64 gv1
    store.i64 notrap aligned v40, v6+152
    v41 = iadd_imm.i64 v7, -48
    store.r64 notrap aligned v1, v41
    store notrap aligned v35, v41+8
    store notrap aligned v33, v41+16
    store notrap aligned v39, v41+24
    store notrap aligned v38, v41+32
    store notrap aligned v38, v41+40
    v42, v43 = call fn1(v23, v37)
    v44 = load.i64 notrap aligned v6+152
    v45 = iconst.i64 9
    v46 = raw_bitcast.r64 v45
    v47 = iconst.i64 7
    v48 = raw_bitcast.r64 v47
    v49 = iconst.i64 2
    v50 = iconst.i64 1
    v51 = symbol_value.i64 gv1
    store notrap aligned v44, v6+152
    v52 = iadd_imm v44, -48
    store.r64 notrap aligned v36, v52
    store notrap aligned v48, v52+8
    store notrap aligned v46, v52+16
    store notrap aligned v51, v52+24
    store notrap aligned v50, v52+32
    store notrap aligned v50, v52+40
    v53, v54 = call fn1(v27, v49)
    v55 = load.i64 notrap aligned v6+152
    v56 = iconst.i64 9
    v57 = raw_bitcast.r64 v56
    v58 = iconst.i64 7
    v59 = raw_bitcast.r64 v58
    v60 = iadd_imm v55, -24
    store.r64 notrap aligned v36, v60
    store notrap aligned v59, v60+8
    store notrap aligned v57, v60+16
    v61 = iconst.i64 3
    jump block1

block1:
    store.i64 notrap aligned v60, v6+152
    return v31, v61
}
