function u0:0(r64, i64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    gv1 = symbol u1:1
    sig0 = (i64, i32, i32, i64) system_v
    sig1 = (r64, i64) -> r64, i64 system_v
    fn0 = u0:1 sig0
    fn1 = u0:2 sig1

block0(v0: r64, v1: i64):
    v2 = null.r64 
    v3 = iconst.i64 0
    v4 = symbol_value.i64 gv0
    v5 = load.r64 notrap aligned v1
    v37 -> v5
    v6 = load.r64 notrap aligned v1+8
    v7 = load.r64 notrap aligned v1+16
    v8 = iadd_imm v1, 24
    v41 -> v8
    v9 = load.r64 notrap aligned v0+8
    v10 = load.i64 notrap aligned v4
    v11 = iadd_imm v10, -72
    store notrap aligned v11, v4
    v12 = load.i64 notrap aligned v4+8
    br_icmp ult v11, v12, block2
    jump block3(v11)

block2:
    v14 = iconst.i64 8
    v15 = iconst.i32 17
    v16 = iconst.i32 1
    v17 = iconst.i64 0
    call fn0(v14, v15, v16, v17)
    v18 = load.i64 notrap aligned v4
    jump block3(v18)

block3(v13: i64):
    v19 = iconst.i64 8439
    store notrap aligned v19, v13
    v20 = iadd_imm v13, 8
    v21 = raw_bitcast.r64 v20
    store.r64 notrap aligned v9, v21+40
    store.r64 notrap aligned v6, v21+48
    store.r64 notrap aligned v7, v21+56
    v22 = raw_bitcast.i64 v21
    v23 = iconst.i64 0xdead_beef
    store notrap aligned v23, v22
    v24 = raw_bitcast.r64 v22
    v25 = iconst.i64 0xdead_beef
    v26 = iconst.i64 2297
    store notrap aligned v26, v22+1
    store notrap aligned v25, v22+2
    v27 = iadd_imm v22, 2
    v28 = raw_bitcast.r64 v27
    v29 = iconst.i64 0xdead_beef
    v30 = iconst.i64 4345
    store notrap aligned v30, v22+3
    store notrap aligned v29, v22+4
    v31 = iadd_imm v22, 4
    v32 = raw_bitcast.r64 v31
    v33 = iconst.i64 9
    v34 = raw_bitcast.r64 v33
    v35 = iconst.i64 7
    v36 = raw_bitcast.r64 v35
    v38 = iconst.i64 2
    v39 = iconst.i64 1
    v40 = symbol_value.i64 gv1
    store.i64 notrap aligned v41, v4+152
    v42 = iadd_imm.i64 v8, -48
    store.r64 notrap aligned v5, v42
    store notrap aligned v36, v42+8
    store notrap aligned v34, v42+16
    store notrap aligned v40, v42+24
    store notrap aligned v39, v42+32
    store notrap aligned v39, v42+40
    v43, v44 = call fn1(v24, v38)
    v45 = load.i64 notrap aligned v4+152
    v46 = iconst.i64 9
    v47 = raw_bitcast.r64 v46
    v48 = iconst.i64 7
    v49 = raw_bitcast.r64 v48
    v50 = iconst.i64 2
    v51 = iconst.i64 1
    v52 = symbol_value.i64 gv1
    store notrap aligned v45, v4+152
    v53 = iadd_imm v45, -48
    store.r64 notrap aligned v37, v53
    store notrap aligned v49, v53+8
    store notrap aligned v47, v53+16
    store notrap aligned v52, v53+24
    store notrap aligned v51, v53+32
    store notrap aligned v51, v53+40
    v54, v55 = call fn1(v28, v50)
    v56 = load.i64 notrap aligned v4+152
    v57 = iconst.i64 9
    v58 = raw_bitcast.r64 v57
    v59 = iconst.i64 7
    v60 = raw_bitcast.r64 v59
    v61 = iadd_imm v56, -24
    store.r64 notrap aligned v37, v61
    store notrap aligned v60, v61+8
    store notrap aligned v58, v61+16
    v62 = iconst.i64 3
    jump block1

block1:
    store.i64 notrap aligned v61, v4+152
    return v32, v62
}
