
<input>:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <format_convert_int>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 40          	sub    $0x40,%rsp
   8:	4c 89 64 24 20       	mov    %r12,0x20(%rsp)
   d:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
  12:	4c 89 74 24 30       	mov    %r14,0x30(%rsp)
  17:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
  1c:	49 89 fe             	mov    %rdi,%r14
  1f:	49 bc 00 00 00 00 00 	movabs $0x0,%r12
  26:	00 00 00 
			21: R_X86_64_64	ocaml_extern_sp
  29:	49 8b 34 24          	mov    (%r12),%rsi
  2d:	4c 8b 2e             	mov    (%rsi),%r13
  30:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  34:	48 83 c6 10          	add    $0x10,%rsi
  38:	49 89 34 24          	mov    %rsi,(%r12)
  3c:	49 8b 76 08          	mov    0x8(%r14),%rsi
  40:	49 8b 3c 24          	mov    (%r12),%rdi
  44:	48 89 f8             	mov    %rdi,%rax
  47:	48 83 c0 d8          	add    $0xffffffffffffffd8,%rax
  4b:	4c 89 6f d8          	mov    %r13,-0x28(%rdi)
  4f:	b9 01 00 00 00       	mov    $0x1,%ecx
  54:	48 89 4f e0          	mov    %rcx,-0x20(%rdi)
  58:	b9 01 00 00 00       	mov    $0x1,%ecx
  5d:	48 89 4f e8          	mov    %rcx,-0x18(%rdi)
  61:	b9 01 00 00 00       	mov    $0x1,%ecx
  66:	48 89 4f f0          	mov    %rcx,-0x10(%rdi)
  6a:	48 89 77 f8          	mov    %rsi,-0x8(%rdi)
  6e:	48 89 c7             	mov    %rax,%rdi
  71:	be 01 00 00 00       	mov    $0x1,%esi
  76:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  7d:	00 00 00 
			78: R_X86_64_64	jit_support_cranelift_callback
  80:	48 89 1c 24          	mov    %rbx,(%rsp)
  84:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
  89:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
  8e:	ff d0                	call   *%rax
  90:	48 8b 1c 24          	mov    (%rsp),%rbx
  94:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
  99:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
  9e:	48 89 c7             	mov    %rax,%rdi
  a1:	48 89 de             	mov    %rbx,%rsi
  a4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  ab:	00 00 00 
			a6: R_X86_64_64	oc_prim129
  ae:	48 89 34 24          	mov    %rsi,(%rsp)
  b2:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
  b7:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
  bc:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
  c1:	ff d0                	call   *%rax
  c3:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
  c8:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
  cd:	49 8b 76 10          	mov    0x10(%r14),%rsi
  d1:	49 8b 3c 24          	mov    (%r12),%rdi
  d5:	48 89 f9             	mov    %rdi,%rcx
  d8:	48 83 c1 f0          	add    $0xfffffffffffffff0,%rcx
  dc:	4c 89 6f f0          	mov    %r13,-0x10(%rdi)
  e0:	48 89 47 f8          	mov    %rax,-0x8(%rdi)
  e4:	49 89 0c 24          	mov    %rcx,(%r12)
  e8:	ba 02 00 00 00       	mov    $0x2,%edx
  ed:	48 89 f0             	mov    %rsi,%rax
  f0:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
  f5:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
  fa:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
  ff:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
 104:	48 83 c4 40          	add    $0x40,%rsp
 108:	48 89 ec             	mov    %rbp,%rsp
 10b:	5d                   	pop    %rbp
 10c:	c3                   	ret    
