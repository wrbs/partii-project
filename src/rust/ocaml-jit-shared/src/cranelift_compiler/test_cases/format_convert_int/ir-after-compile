function u0:0(r64, i64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    gv1 = symbol u1:1
    sig0 = (r64, i64) -> r64, i64 system_v
    sig1 = (r64, r64) -> r64 system_v
    fn0 = u0:1 sig0
    fn1 = u0:2 sig1

block0(v0: r64, v1: i64):
    v3 = iconst.i64 0
    v9 -> v3
    v4 = symbol_value.i64 gv0
    v5 = load.r64 notrap aligned v1
    v6 = load.r64 notrap aligned v1+8
    v21 = iconst.i64 16
    v7 = iadd v1, v21
    v8 = load.r64 notrap aligned v0+8
    v10 = iconst.i64 1
    v11 = symbol_value.i64 gv1
    store notrap aligned v7, v4+152
    v22 = iconst.i64 -16
    v23 -> v22
    v12 = iadd v1, v22
    store notrap aligned v5, v12
    store notrap aligned v11, v12+8
    store notrap aligned v10, v12+16
    store notrap aligned v10, v12+24
    v13, v14 = call fn0(v8, v3)
    v15 = load.i64 notrap aligned v4+152
    store notrap aligned v15, v4+152
    v16 = call fn1(v13, v6)
    v17 = load.i64 notrap aligned v4+152
    v18 = load.r64 notrap aligned v0+16
    v19 = iadd v17, v22
    store notrap aligned v5, v19
    store notrap aligned v16, v19+8
    v20 = iconst.i64 2
    jump block1

block1:
    store.i64 notrap aligned v19, v4+152
    return v18, v20
}
