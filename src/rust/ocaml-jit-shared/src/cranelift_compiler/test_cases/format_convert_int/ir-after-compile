function u0:0(r64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    sig0 = (i64, i64) -> r64 system_v
    sig1 = (r64, r64) -> r64 system_v
    fn0 = u0:1 sig0
    fn1 = u0:2 sig1

block0(v0: r64):
    v1 = symbol_value.i64 gv0
    v11 -> v1
    v17 -> v1
    v2 = load.i64 notrap aligned v1
    v3 = load.r64 notrap aligned v2
    v4 = load.r64 notrap aligned v2+8
    v21 = iconst.i64 16
    v5 = iadd v2, v21
    store notrap aligned v5, v1
    v8 = load.r64 notrap aligned v0+8
    v9 = iconst.i64 1
    v10 -> v9
    v12 = load.i64 notrap aligned v1
    v22 = iconst.i64 -40
    v13 = iadd v12, v22
    store notrap aligned v3, v13
    store notrap aligned v9, v13+8
    store notrap aligned v9, v13+16
    store notrap aligned v9, v13+24
    store notrap aligned v8, v13+32
    v14 = call fn0(v13, v9)
    v15 = call fn1(v14, v4)
    v16 = load.r64 notrap aligned v0+16
    v18 = load.i64 notrap aligned v1
    v23 = iconst.i64 -16
    v19 = iadd v18, v23
    store notrap aligned v3, v19
    store notrap aligned v15, v19+8
    store notrap aligned v19, v1
    v20 = iconst.i64 2
    jump block1

block1:
    return v16, v20
}
