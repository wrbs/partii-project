function u0:0(r64, i64, i64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    gv1 = symbol u1:1
    sig0 = (r64, i64, i64, i64) -> r64, i64 system_v
    sig1 = (r64, r64) -> r64 system_v
    fn0 = u0:1 sig0
    fn1 = u0:2 sig1

block0(v0: r64, v1: i64, v2: i64):
    v3 = null.r64 
    v4 = iconst.i64 0
    v5 = symbol_value.i64 gv0
    v6 = load.r64 notrap aligned v1
    v7 = load.r64 notrap aligned v1+8
    v8 = iadd_imm v1, 16
    v9 = load.r64 notrap aligned v0+8
    v10 = iconst.i64 0
    v11 = iconst.i64 1
    v12 = symbol_value.i64 gv1
    v13 = iadd_imm v8, -32
    store notrap aligned v6, v13
    store notrap aligned v12, v13+8
    store notrap aligned v11, v13+16
    store notrap aligned v11, v13+24
    v14, v15 = call fn0(v9, v10, v2, v13)
    store notrap aligned v15, v5+152
    v16 = call fn1(v14, v7)
    v17 = load.i64 notrap aligned v5+152
    v18 = load.r64 notrap aligned v0+16
    v19 = iadd_imm v17, -16
    store notrap aligned v6, v19
    store notrap aligned v16, v19+8
    v20 = iconst.i64 2
    jump block1

block1:
    store.i64 notrap aligned v19, v2
    return v18, v20
}
