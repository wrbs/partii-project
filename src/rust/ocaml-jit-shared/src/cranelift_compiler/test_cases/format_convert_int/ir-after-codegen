function u0:0(r64, r64, r64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    gv1 = symbol u1:1
    sig0 = (r64, i64) -> r64, i64 system_v
    sig1 = (r64, r64) -> r64 system_v
    fn0 = u0:1 sig0
    fn1 = u0:2 sig1

block0(v0: r64, v1: r64, v2: r64):
    v3 = null.r64 
    v4 = iconst.i64 0
    v5 = symbol_value.i64 gv0
    v6 = load.i64 notrap aligned v5+152
    v7 = load.r64 notrap aligned v0+8
    v8 = iconst.i64 0
    v9 = iconst.i64 1
    v10 = symbol_value.i64 gv1
    store notrap aligned v6, v5+152
    v11 = iadd_imm v6, -32
    store notrap aligned v1, v11
    store notrap aligned v10, v11+8
    store notrap aligned v9, v11+16
    store notrap aligned v9, v11+24
    v12, v13 = call fn0(v7, v8)
    v14 = load.i64 notrap aligned v5+152
    store notrap aligned v14, v5+152
    v15 = call fn1(v12, v2)
    v16 = load.i64 notrap aligned v5+152
    v17 = load.r64 notrap aligned v0+16
    v18 = iadd_imm v16, -16
    store notrap aligned v1, v18
    store notrap aligned v15, v18+8
    v19 = iconst.i64 2
    jump block1

block1:
    store.i64 notrap aligned v18, v5+152
    return v17, v19
}
