
<input>:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <arith_mod>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	49 b8 00 00 00 00 00 	movabs r8,0x0
   b:	00 00 00 
			6: R_X86_64_64	caml_state_addr
   e:	48 8b 0e             	mov    rcx,QWORD PTR [rsi]
  11:	48 8b 46 08          	mov    rax,QWORD PTR [rsi+0x8]
  15:	48 89 f7             	mov    rdi,rsi
  18:	48 83 c7 10          	add    rdi,0x10
  1c:	be 01 00 00 00       	mov    esi,0x1
  21:	48 39 f0             	cmp    rax,rsi
  24:	0f 84 54 00 00 00    	je     7e <arith_mod+0x7e>
  2a:	48 c1 f9 01          	sar    rcx,0x1
  2e:	48 89 c6             	mov    rsi,rax
  31:	48 c1 fe 01          	sar    rsi,0x1
  35:	48 89 c8             	mov    rax,rcx
  38:	ba 00 00 00 00       	mov    edx,0x0
  3d:	48 83 fe 00          	cmp    rsi,0x0
  41:	0f 85 02 00 00 00    	jne    49 <arith_mod+0x49>
  47:	0f 0b                	ud2    
  49:	48 83 fe ff          	cmp    rsi,0xffffffffffffffff
  4d:	0f 85 0a 00 00 00    	jne    5d <arith_mod+0x5d>
  53:	ba 00 00 00 00       	mov    edx,0x0
  58:	e9 05 00 00 00       	jmp    62 <arith_mod+0x62>
  5d:	48 99                	cqo    
  5f:	48 f7 fe             	idiv   rsi
  62:	48 89 d6             	mov    rsi,rdx
  65:	48 01 d6             	add    rsi,rdx
  68:	48 83 c6 01          	add    rsi,0x1
  6c:	49 89 b8 98 00 00 00 	mov    QWORD PTR [r8+0x98],rdi
  73:	48 31 d2             	xor    rdx,rdx
  76:	48 89 f0             	mov    rax,rsi
  79:	48 89 ec             	mov    rsp,rbp
  7c:	5d                   	pop    rbp
  7d:	c3                   	ret    
  7e:	48 be 00 00 00 00 00 	movabs rsi,0x0
  85:	00 00 00 
			80: R_X86_64_64	caml_raise_zero_divide
  88:	ff d6                	call   rsi
  8a:	0f 0b                	ud2    
