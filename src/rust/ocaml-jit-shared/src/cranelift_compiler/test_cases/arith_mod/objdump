
<input>:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <arith_mod>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	49 b8 00 00 00 00 00 	movabs r8,0x0
   b:	00 00 00 
			6: R_X86_64_64	caml_state_addr
   e:	49 8b b8 98 00 00 00 	mov    rdi,QWORD PTR [r8+0x98]
  15:	48 89 f1             	mov    rcx,rsi
  18:	48 89 d0             	mov    rax,rdx
  1b:	be 01 00 00 00       	mov    esi,0x1
  20:	48 39 f0             	cmp    rax,rsi
  23:	0f 84 57 00 00 00    	je     80 <arith_mod+0x80>
  29:	48 c1 f9 01          	sar    rcx,0x1
  2d:	48 89 c2             	mov    rdx,rax
  30:	48 c1 fa 01          	sar    rdx,0x1
  34:	48 89 c8             	mov    rax,rcx
  37:	48 89 d6             	mov    rsi,rdx
  3a:	ba 00 00 00 00       	mov    edx,0x0
  3f:	48 83 fe 00          	cmp    rsi,0x0
  43:	0f 85 02 00 00 00    	jne    4b <arith_mod+0x4b>
  49:	0f 0b                	ud2    
  4b:	48 83 fe ff          	cmp    rsi,0xffffffffffffffff
  4f:	0f 85 0a 00 00 00    	jne    5f <arith_mod+0x5f>
  55:	ba 00 00 00 00       	mov    edx,0x0
  5a:	e9 05 00 00 00       	jmp    64 <arith_mod+0x64>
  5f:	48 99                	cqo    
  61:	48 f7 fe             	idiv   rsi
  64:	48 89 d6             	mov    rsi,rdx
  67:	48 01 d6             	add    rsi,rdx
  6a:	48 83 c6 01          	add    rsi,0x1
  6e:	49 89 b8 98 00 00 00 	mov    QWORD PTR [r8+0x98],rdi
  75:	48 31 d2             	xor    rdx,rdx
  78:	48 89 f0             	mov    rax,rsi
  7b:	48 89 ec             	mov    rsp,rbp
  7e:	5d                   	pop    rbp
  7f:	c3                   	ret    
  80:	48 be 00 00 00 00 00 	movabs rsi,0x0
  87:	00 00 00 
			82: R_X86_64_64	caml_raise_zero_divide
  8a:	ff d6                	call   rsi
  8c:	0f 0b                	ud2    
