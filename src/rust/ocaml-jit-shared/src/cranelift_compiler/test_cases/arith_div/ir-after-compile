function u0:0(r64, i64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    sig0 = () system_v
    fn0 = u0:1 sig0

block0(v0: r64, v1: i64):
    v3 = iconst.i64 0
    v4 = symbol_value.i64 gv0
    v5 = load.r64 notrap aligned v1
    v6 = load.r64 notrap aligned v1+8
    v17 = iconst.i64 16
    v7 = iadd v1, v17
    v8 = raw_bitcast.i64 v5
    v9 = raw_bitcast.i64 v6
    v18 = iconst.i64 1
    v21 -> v18
    v10 = icmp eq v9, v18
    brz v10, block3
    jump block2

block2:
    call fn0()
    trap unreachable

block3:
    v19 = iconst.i32 1
    v20 -> v19
    v11 = sshr.i64 v8, v19
    v12 = sshr.i64 v9, v19
    v13 = sdiv v11, v12
    v14 = iadd v13, v13
    v15 = iadd v14, v18
    v16 = raw_bitcast.r64 v15
    jump block1

block1:
    store.i64 notrap aligned v7, v4+152
    return v16, v3
}
