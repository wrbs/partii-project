VCode_ShowWithRRU {{
  Entry block: 0
Block 0:
  (original IR block: block0)
  (successor: Block 1)
  (instruction range: 0 .. 9)
  Inst 0:   pushq   %rbp
  Inst 1:   unwind PushFrameRegs { offset_upward_to_caller_sp: 16 }
  Inst 2:   movq    %rsp, %rbp
  Inst 3:   unwind DefineNewFrame { offset_upward_to_caller_sp: 16, offset_downward_to_clobbers: 0 }
  Inst 4:   load_ext_name u1:0+0, %rcx
  Inst 5:   movq    152(%rcx), %rdi
  Inst 6:   movzbq  -8(%rsi), %rsi
  Inst 7:   movzbl  %sil, %esi
  Inst 8:   jmp     label1
Block 1:
  (original IR block: block6)
  (successor: Block 2)
  (successor: Block 3)
  (successor: Block 5)
  (successor: Block 7)
  (instruction range: 9 .. 11)
  Inst 9:   cmpl    $3, %esi
  Inst 10:   br_table %rsi
Block 2:
  (original IR block: block5)
  (instruction range: 11 .. 12)
      (safepoint: slots [] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11:   ud2 unreachable
Block 3:
  (original IR block: block3)
  (successor: Block 4)
  (instruction range: 12 .. 14)
  Inst 12:   movl    $7, %eax
  Inst 13:   jmp     label4
Block 4:
  (successor: Block 9)
  (instruction range: 14 .. 15)
  Inst 14:   jmp     label9
Block 5:
  (original IR block: block2)
  (successor: Block 6)
  (instruction range: 15 .. 17)
  Inst 15:   movl    $9, %eax
  Inst 16:   jmp     label6
Block 6:
  (successor: Block 9)
  (instruction range: 17 .. 18)
  Inst 17:   jmp     label9
Block 7:
  (original IR block: block1)
  (successor: Block 8)
  (instruction range: 18 .. 20)
  Inst 18:   movl    $11, %eax
  Inst 19:   jmp     label8
Block 8:
  (successor: Block 9)
  (instruction range: 20 .. 21)
  Inst 20:   jmp     label9
Block 9:
  (original IR block: block4)
  (instruction range: 21 .. 26)
  Inst 21:   movq    %rdi, 152(%rcx)
  Inst 22:   xorq    %rdx, %rdx
  Inst 23:   movq    %rbp, %rsp
  Inst 24:   popq    %rbp
  Inst 25:   ret
}}
