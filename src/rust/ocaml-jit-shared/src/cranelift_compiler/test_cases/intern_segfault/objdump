
<input>:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <intern_segfault>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 40          	sub    rsp,0x40
   8:	4c 89 64 24 10       	mov    QWORD PTR [rsp+0x10],r12
   d:	4c 89 6c 24 18       	mov    QWORD PTR [rsp+0x18],r13
  12:	4c 89 74 24 20       	mov    QWORD PTR [rsp+0x20],r14
  17:	48 89 5c 24 28       	mov    QWORD PTR [rsp+0x28],rbx
  1c:	4c 89 7c 24 30       	mov    QWORD PTR [rsp+0x30],r15
  21:	49 bc 00 00 00 00 00 	movabs r12,0x0
  28:	00 00 00 
			23: R_X86_64_64	caml_state_addr
  2b:	b8 03 00 00 00       	mov    eax,0x3
  30:	48 39 f0             	cmp    rax,rsi
  33:	0f 8d 7d 01 00 00    	jge    1b6 <intern_segfault+0x1b6>
  39:	b8 05 00 00 00       	mov    eax,0x5
  3e:	48 39 f0             	cmp    rax,rsi
  41:	0f 85 19 00 00 00    	jne    60 <intern_segfault+0x60>
  47:	48 be 00 00 00 00 00 	movabs rsi,0x0
  4e:	00 00 00 
			49: R_X86_64_64	global_data_addr
  51:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
  54:	48 8b b6 c0 0c 00 00 	mov    rsi,QWORD PTR [rsi+0xcc0]
  5b:	e9 2e 01 00 00       	jmp    18e <intern_segfault+0x18e>
  60:	b8 07 00 00 00       	mov    eax,0x7
  65:	48 39 f0             	cmp    rax,rsi
  68:	0f 85 19 00 00 00    	jne    87 <intern_segfault+0x87>
  6e:	48 be 00 00 00 00 00 	movabs rsi,0x0
  75:	00 00 00 
			70: R_X86_64_64	global_data_addr
  78:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
  7b:	48 8b b6 b8 0c 00 00 	mov    rsi,QWORD PTR [rsi+0xcb8]
  82:	e9 07 01 00 00       	jmp    18e <intern_segfault+0x18e>
  87:	48 83 c6 fc          	add    rsi,0xfffffffffffffffc
  8b:	48 b8 00 00 00 00 00 	movabs rax,0x0
  92:	00 00 00 
			8d: R_X86_64_64	apply1
  95:	48 89 34 24          	mov    QWORD PTR [rsp],rsi
  99:	48 89 7c 24 08       	mov    QWORD PTR [rsp+0x8],rdi
  9e:	ff d0                	call   rax
  a0:	48 89 c6             	mov    rsi,rax
  a3:	48 89 34 24          	mov    QWORD PTR [rsp],rsi
  a7:	49 89 d6             	mov    r14,rdx
  aa:	4d 85 f6             	test   r14,r14
  ad:	0f 85 09 00 00 00    	jne    bc <intern_segfault+0xbc>
  b3:	4c 8b 2c 24          	mov    r13,QWORD PTR [rsp]
  b7:	e9 7a 00 00 00       	jmp    136 <intern_segfault+0x136>
  bc:	4d 8b bc 24 98 00 00 	mov    r15,QWORD PTR [r12+0x98]
  c3:	00 
  c4:	4c 89 f3             	mov    rbx,r14
  c7:	48 83 c3 ff          	add    rbx,0xffffffffffffffff
  cb:	4c 89 f2             	mov    rdx,r14
  ce:	48 c1 e2 03          	shl    rdx,0x3
  d2:	4d 89 fd             	mov    r13,r15
  d5:	49 01 d5             	add    r13,rdx
  d8:	4c 89 ff             	mov    rdi,r15
  db:	48 83 c7 e8          	add    rdi,0xffffffffffffffe8
  df:	4c 89 fe             	mov    rsi,r15
  e2:	48 b8 00 00 00 00 00 	movabs rax,0x0
  e9:	00 00 00 
			e4: R_X86_64_64	memmove
  ec:	ff d0                	call   rax
  ee:	48 be 00 00 00 00 00 	movabs rsi,0x0
  f5:	00 00 00 
			f0: R_X86_64_64	callback_return_addr
  f8:	bf 01 00 00 00       	mov    edi,0x1
  fd:	4b 89 7c f7 f8       	mov    QWORD PTR [r15+r14*8-0x8],rdi
 102:	bf 01 00 00 00       	mov    edi,0x1
 107:	4b 89 7c f7 f0       	mov    QWORD PTR [r15+r14*8-0x10],rdi
 10c:	4b 89 74 f7 e8       	mov    QWORD PTR [r15+r14*8-0x18],rsi
 111:	4d 89 ac 24 98 00 00 	mov    QWORD PTR [r12+0x98],r13
 118:	00 
 119:	48 8b 34 24          	mov    rsi,QWORD PTR [rsp]
 11d:	48 89 f7             	mov    rdi,rsi
 120:	48 89 de             	mov    rsi,rbx
 123:	48 b8 00 00 00 00 00 	movabs rax,0x0
 12a:	00 00 00 
			125: R_X86_64_64	apply_n
 12d:	48 89 3c 24          	mov    QWORD PTR [rsp],rdi
 131:	ff d0                	call   rax
 133:	49 89 c5             	mov    r13,rax
 136:	48 c7 c6 f0 ff ff ff 	mov    rsi,0xfffffffffffffff0
 13d:	49 03 34 24          	add    rsi,QWORD PTR [r12]
 141:	49 89 34 24          	mov    QWORD PTR [r12],rsi
 145:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
 14a:	48 39 fe             	cmp    rsi,rdi
 14d:	0f 83 2c 00 00 00    	jae    17f <intern_segfault+0x17f>
 153:	bf 01 00 00 00       	mov    edi,0x1
 158:	be 11 00 00 00       	mov    esi,0x11
 15d:	ba 01 00 00 00       	mov    edx,0x1
 162:	48 31 c9             	xor    rcx,rcx
 165:	48 b8 00 00 00 00 00 	movabs rax,0x0
 16c:	00 00 00 
			167: R_X86_64_64	caml_alloc_small_dispatch
 16f:	4c 89 6c 24 08       	mov    QWORD PTR [rsp+0x8],r13
 174:	ff d0                	call   rax
 176:	4c 8b 6c 24 08       	mov    r13,QWORD PTR [rsp+0x8]
 17b:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
 17f:	bf 02 04 00 00       	mov    edi,0x402
 184:	48 89 3e             	mov    QWORD PTR [rsi],rdi
 187:	48 83 c6 08          	add    rsi,0x8
 18b:	4c 89 2e             	mov    QWORD PTR [rsi],r13
 18e:	48 31 d2             	xor    rdx,rdx
 191:	48 89 f0             	mov    rax,rsi
 194:	4c 8b 64 24 10       	mov    r12,QWORD PTR [rsp+0x10]
 199:	4c 8b 6c 24 18       	mov    r13,QWORD PTR [rsp+0x18]
 19e:	4c 8b 74 24 20       	mov    r14,QWORD PTR [rsp+0x20]
 1a3:	48 8b 5c 24 28       	mov    rbx,QWORD PTR [rsp+0x28]
 1a8:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
 1ad:	48 83 c4 40          	add    rsp,0x40
 1b1:	48 89 ec             	mov    rsp,rbp
 1b4:	5d                   	pop    rbp
 1b5:	c3                   	ret    
 1b6:	48 be 00 00 00 00 00 	movabs rsi,0x0
 1bd:	00 00 00 
			1b8: R_X86_64_64	global_data_addr
 1c0:	48 8b 3e             	mov    rdi,QWORD PTR [rsi]
 1c3:	4c 8b af b0 0c 00 00 	mov    r13,QWORD PTR [rdi+0xcb0]
 1ca:	48 8b 36             	mov    rsi,QWORD PTR [rsi]
 1cd:	4c 8b 76 50          	mov    r14,QWORD PTR [rsi+0x50]
 1d1:	48 c7 c6 e8 ff ff ff 	mov    rsi,0xffffffffffffffe8
 1d8:	49 03 34 24          	add    rsi,QWORD PTR [r12]
 1dc:	49 89 34 24          	mov    QWORD PTR [r12],rsi
 1e0:	49 8b 7c 24 08       	mov    rdi,QWORD PTR [r12+0x8]
 1e5:	48 39 fe             	cmp    rsi,rdi
 1e8:	0f 83 34 00 00 00    	jae    222 <intern_segfault+0x222>
 1ee:	bf 02 00 00 00       	mov    edi,0x2
 1f3:	be 11 00 00 00       	mov    esi,0x11
 1f8:	ba 01 00 00 00       	mov    edx,0x1
 1fd:	48 31 c9             	xor    rcx,rcx
 200:	48 b8 00 00 00 00 00 	movabs rax,0x0
 207:	00 00 00 
			202: R_X86_64_64	caml_alloc_small_dispatch
 20a:	4c 89 2c 24          	mov    QWORD PTR [rsp],r13
 20e:	4c 89 74 24 08       	mov    QWORD PTR [rsp+0x8],r14
 213:	ff d0                	call   rax
 215:	4c 8b 2c 24          	mov    r13,QWORD PTR [rsp]
 219:	4c 8b 74 24 08       	mov    r14,QWORD PTR [rsp+0x8]
 21e:	49 8b 34 24          	mov    rsi,QWORD PTR [r12]
 222:	bf 00 08 00 00       	mov    edi,0x800
 227:	48 89 3e             	mov    QWORD PTR [rsi],rdi
 22a:	48 83 c6 08          	add    rsi,0x8
 22e:	48 89 f7             	mov    rdi,rsi
 231:	4c 89 37             	mov    QWORD PTR [rdi],r14
 234:	4c 89 6f 08          	mov    QWORD PTR [rdi+0x8],r13
 238:	48 be 00 00 00 00 00 	movabs rsi,0x0
 23f:	00 00 00 
			23a: R_X86_64_64	caml_raise
 242:	48 89 3c 24          	mov    QWORD PTR [rsp],rdi
 246:	ff d6                	call   rsi
 248:	0f 0b                	ud2    
