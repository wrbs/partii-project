function u0:0(r64, r64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    gv1 = symbol u1:1
    sig0 = (r64, r64, r64) -> r64, i64 system_v
    sig1 = (i64, i64, i64) system_v
    sig2 = (r64, i64) -> r64, i64 system_v
    sig3 = (i64, i32, i32, i64) system_v
    fn0 = u0:1 sig0
    fn1 = %Memmove sig1
    fn2 = u0:2 sig2
    fn3 = u0:3 sig3

block0(v0: r64, v1: r64):
    v2 = null.r64 
    v3 = iconst.i64 0
    v4 = symbol_value.i64 gv0
    v5 = load.r64 notrap aligned v0+48
    v6 = load.r64 notrap aligned v0+40
    v7, v8 = call fn0(v6, v5, v1)
    brz v8, block2(v7)
    jump block3

block3:
    v10 = load.i64 notrap aligned v4+152
    v11 = iadd_imm.i64 v8, -1
    v12 = ishl_imm.i64 v8, 3
    v13 = iadd v10, v12
    v14 = iadd_imm v10, -24
    call fn1(v14, v10, v12)
    v15 = iconst.i64 1
    v16 = symbol_value.i64 gv1
    store notrap aligned v15, v13-8
    store notrap aligned v15, v13-16
    store notrap aligned v16, v13-24
    store notrap aligned v13, v4+152
    v17, v18 = call fn2(v7, v11)
    jump block2(v17)

block2(v9: r64):
    v19 = load.r64 notrap aligned v0+32
    v37 -> v19
    v20 = load.r64 notrap aligned v0+24
    v21 = load.i64 notrap aligned v4
    v22 = iadd_imm v21, -24
    store notrap aligned v22, v4
    v23 = load.i64 notrap aligned v4+8
    br_icmp ult v22, v23, block4
    jump block5(v22)

block4:
    v25 = iconst.i64 2
    v26 = iconst.i32 17
    v27 = iconst.i32 1
    v28 = iconst.i64 0
    call fn3(v25, v26, v27, v28)
    v29 = load.i64 notrap aligned v4
    jump block5(v29)

block5(v24: i64):
    v30 = iconst.i64 2052
    store notrap aligned v30, v24
    v31 = iadd_imm v24, 8
    v32 = raw_bitcast.r64 v31
    store.r64 notrap aligned v20, v32
    store.r64 notrap aligned v9, v32+8
    v33 = load.r64 notrap aligned v0+16
    v34 = load.r64 notrap aligned v0+8
    v35 = load.i64 notrap aligned v4+152
    v36 = iadd_imm v35, -24
    store notrap aligned v33, v36
    store notrap aligned v32, v36+8
    store.r64 notrap aligned v19, v36+16
    store notrap aligned v36, v4+152
    v38 = iconst.i64 3
    jump block1

block1:
    return v34, v38
}
