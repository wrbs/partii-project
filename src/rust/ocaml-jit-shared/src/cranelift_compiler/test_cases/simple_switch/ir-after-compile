function u0:0(r64, r64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    jt0 = jump_table [block6, block5, block4]
    jt1 = jump_table [block3, block2, block1]

block0(v0: r64, v1: r64):
    v3 = iconst.i64 0
    v25 -> v3
    v5 = raw_bitcast.i64 v1
    v7 -> v5
    v26 = iconst.i64 1
    v22 -> v26
    v6 = band v5, v26
    brz v6, block9
    jump block8

block8:
    v8 = ireduce.i32 v5
    v27 = iconst.i32 1
    v9 = sshr v8, v27
    jump block11

block11:
    br_table.i32 v9, block10, jt0

block10:
    trap unreachable

block9:
    v10 = load.i8 notrap aligned v1-8
    v11 = uextend.i32 v10
    jump block13

block13:
    br_table.i32 v11, block12, jt1

block12:
    trap unreachable

block1:
    v12 = iconst.i64 11
    v13 = raw_bitcast.r64 v12
    jump block7(v13)

block2:
    v14 = iconst.i64 9
    v15 = raw_bitcast.r64 v14
    jump block7(v15)

block3:
    v16 = iconst.i64 7
    v17 = raw_bitcast.r64 v16
    jump block7(v17)

block4:
    v18 = iconst.i64 5
    v19 = raw_bitcast.r64 v18
    jump block7(v19)

block5:
    v20 = iconst.i64 3
    v21 = raw_bitcast.r64 v20
    jump block7(v21)

block6:
    v23 = raw_bitcast.r64 v26
    jump block7(v23)

block7(v24: r64):
    return v24, v3
}
