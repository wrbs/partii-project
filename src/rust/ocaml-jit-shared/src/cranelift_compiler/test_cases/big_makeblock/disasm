VCode_ShowWithRRU {{
  Entry block: 0
Block 0:
  (original IR block: block0)
  (successor: Block 1)
  (successor: Block 2)
  (instruction range: 0 .. 35)
  Inst 0:   pushq   %rbp
  Inst 1:   unwind PushFrameRegs { offset_upward_to_caller_sp: 16 }
  Inst 2:   movq    %rsp, %rbp
  Inst 3:   unwind DefineNewFrame { offset_upward_to_caller_sp: 16, offset_downward_to_clobbers: 48 }
  Inst 4:   subq    $2160, %rsp
  Inst 5:   movq    %r12, 2112(%rsp)
  Inst 6:   unwind SaveReg { clobber_offset: 0, reg: r25J }
  Inst 7:   movq    %r13, 2120(%rsp)
  Inst 8:   unwind SaveReg { clobber_offset: 8, reg: r26J }
  Inst 9:   movq    %r14, 2128(%rsp)
  Inst 10:   unwind SaveReg { clobber_offset: 16, reg: r27J }
  Inst 11:   movq    %rbx, 2136(%rsp)
  Inst 12:   unwind SaveReg { clobber_offset: 24, reg: r28J }
  Inst 13:   movq    %r15, 2144(%rsp)
  Inst 14:   unwind SaveReg { clobber_offset: 32, reg: r29J }
  Inst 15:   movq    %rdi, rsp(2064 + virtual offset)
  Inst 16:   load_ext_name u1:0+0, %rsi
  Inst 17:   movq    %rsi, rsp(2072 + virtual offset)
  Inst 18:   movl    $637, %edi
  Inst 19:   load_ext_name u0:1+0, %rsi
  Inst 20:   movq    %rdi, rsp(0 + virtual offset)
      (safepoint: slots [S0, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21:   call    *%rsi
  Inst 22:   movl    $1, %esi
  Inst 23:   movq    %rsi, rsp(2048 + virtual offset)
  Inst 24:   movq    rsp(2064 + virtual offset), %rsi
  Inst 25:   movq    8(%rsi), %rdi
  Inst 26:   movq    rsp(2048 + virtual offset), %rsi
  Inst 27:   load_ext_name u0:2+0, %rax
  Inst 28:   movq    %rsi, rsp(0 + virtual offset)
  Inst 29:   movq    %rdi, rsp(8 + virtual offset)
      (safepoint: slots [S0, S1, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30:   call    *%rax
  Inst 31:   movq    %rax, %rbx
  Inst 32:   movq    %rdx, %r14
  Inst 33:   testq   %r14, %r14
  Inst 34:   jz      label1; j label2
Block 1:
  (successor: Block 4)
  (instruction range: 35 .. 37)
  Inst 35:   movq    %rbx, rsp(248 + virtual offset)
  Inst 36:   jmp     label4
Block 2:
  (original IR block: block3)
  (successor: Block 3)
  (instruction range: 37 .. 66)
  Inst 37:   movq    rsp(2072 + virtual offset), %rsi
  Inst 38:   movq    152(%rsi), %r13
  Inst 39:   movq    %r14, %r15
  Inst 40:   addq    $-1, %r15
  Inst 41:   movq    %r14, %rdx
  Inst 42:   shlq    $3, %rdx
  Inst 43:   movq    %r13, %r12
  Inst 44:   addq    %rdx, %r12
  Inst 45:   movq    %r13, %rdi
  Inst 46:   addq    $-24, %rdi
  Inst 47:   movq    %r13, %rsi
  Inst 48:   load_ext_name %Memmove+0, %rax
  Inst 49:   movq    %rbx, rsp(0 + virtual offset)
      (safepoint: slots [S0, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 50:   call    *%rax
  Inst 51:   movq    rsp(0 + virtual offset), %rbx
  Inst 52:   load_ext_name u1:1+0, %rsi
  Inst 53:   movl    $1, %edi
  Inst 54:   movq    %rdi, -8(%r13,%r14,8)
  Inst 55:   movl    $1, %edi
  Inst 56:   movq    %rdi, -16(%r13,%r14,8)
  Inst 57:   movq    %rsi, -24(%r13,%r14,8)
  Inst 58:   movq    rsp(2072 + virtual offset), %rsi
  Inst 59:   movq    %r12, 152(%rsi)
  Inst 60:   movq    %rbx, %rdi
  Inst 61:   movq    %r15, %rsi
  Inst 62:   load_ext_name u0:3+0, %rax
  Inst 63:   movq    %rdi, rsp(0 + virtual offset)
      (safepoint: slots [S0, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 64:   call    *%rax
  Inst 65:   jmp     label3
Block 3:
  (successor: Block 4)
  (instruction range: 66 .. 68)
  Inst 66:   movq    %rax, rsp(248 + virtual offset)
  Inst 67:   jmp     label4
Block 4:
  (original IR block: block2)
  (successor: Block 5)
  (successor: Block 6)
  (instruction range: 68 .. 79)
  Inst 68:   movq    rsp(2064 + virtual offset), %rsi
  Inst 69:   movq    8(%rsi), %rdi
  Inst 70:   movq    rsp(2048 + virtual offset), %rsi
  Inst 71:   load_ext_name u0:2+0, %rax
  Inst 72:   movq    %rsi, rsp(0 + virtual offset)
  Inst 73:   movq    %rdi, rsp(8 + virtual offset)
      (safepoint: slots [S0, S1, S31, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 74:   call    *%rax
  Inst 75:   movq    %rax, %rbx
  Inst 76:   movq    %rdx, %r14
  Inst 77:   testq   %r14, %r14
  Inst 78:   jz      label5; j label6
Block 5:
  (successor: Block 8)
  (instruction range: 79 .. 81)
  Inst 79:   movq    %rbx, rsp(0 + virtual offset)
  Inst 80:   jmp     label8
Block 6:
  (original IR block: block5)
  (successor: Block 7)
  (instruction range: 81 .. 110)
  Inst 81:   movq    rsp(2072 + virtual offset), %rsi
  Inst 82:   movq    152(%rsi), %r13
  Inst 83:   movq    %r14, %r15
  Inst 84:   addq    $-1, %r15
  Inst 85:   movq    %r14, %rdx
  Inst 86:   shlq    $3, %rdx
  Inst 87:   movq    %r13, %r12
  Inst 88:   addq    %rdx, %r12
  Inst 89:   movq    %r13, %rdi
  Inst 90:   addq    $-24, %rdi
  Inst 91:   movq    %r13, %rsi
  Inst 92:   load_ext_name %Memmove+0, %rax
  Inst 93:   movq    %rbx, rsp(8 + virtual offset)
      (safepoint: slots [S1, S31, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 94:   call    *%rax
  Inst 95:   movq    rsp(8 + virtual offset), %rbx
  Inst 96:   load_ext_name u1:1+0, %rsi
  Inst 97:   movl    $1, %edi
  Inst 98:   movq    %rdi, -8(%r13,%r14,8)
  Inst 99:   movl    $1, %edi
  Inst 100:   movq    %rdi, -16(%r13,%r14,8)
  Inst 101:   movq    %rsi, -24(%r13,%r14,8)
  Inst 102:   movq    rsp(2072 + virtual offset), %rsi
  Inst 103:   movq    %r12, 152(%rsi)
  Inst 104:   movq    %rbx, %rdi
  Inst 105:   movq    %r15, %rsi
  Inst 106:   load_ext_name u0:3+0, %rax
  Inst 107:   movq    %rdi, rsp(0 + virtual offset)
      (safepoint: slots [S0, S31, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 108:   call    *%rax
  Inst 109:   jmp     label7
Block 7:
  (successor: Block 8)
  (instruction range: 110 .. 112)
  Inst 110:   movq    %rax, rsp(0 + virtual offset)
  Inst 111:   jmp     label8
Block 8:
  (original IR block: block4)
  (successor: Block 9)
  (successor: Block 10)
  (instruction range: 112 .. 123)
  Inst 112:   movq    rsp(2064 + virtual offset), %rsi
  Inst 113:   movq    8(%rsi), %rdi
  Inst 114:   movq    rsp(2048 + virtual offset), %rsi
  Inst 115:   load_ext_name u0:2+0, %rax
  Inst 116:   movq    %rsi, rsp(8 + virtual offset)
  Inst 117:   movq    %rdi, rsp(16 + virtual offset)
      (safepoint: slots [S0, S1, S2, S31, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 118:   call    *%rax
  Inst 119:   movq    %rax, %r15
  Inst 120:   movq    %rdx, %r14
  Inst 121:   testq   %r14, %r14
  Inst 122:   jz      label9; j label10
Block 9:
  (successor: Block 12)
  (instruction range: 123 .. 126)
  Inst 123:   movq    %r15, rsp(264 + virtual offset)
  Inst 124:   nop     len=0
  Inst 125:   jmp     label12
Block 10:
  (original IR block: block7)
  (successor: Block 11)
  (instruction range: 126 .. 155)
  Inst 126:   movq    rsp(2072 + virtual offset), %rsi
  Inst 127:   movq    152(%rsi), %r13
  Inst 128:   movq    %r14, %rbx
  Inst 129:   addq    $-1, %rbx
  Inst 130:   movq    %r14, %rdx
  Inst 131:   shlq    $3, %rdx
  Inst 132:   movq    %r13, %r12
  Inst 133:   addq    %rdx, %r12
  Inst 134:   movq    %r13, %rdi
  Inst 135:   addq    $-24, %rdi
  Inst 136:   movq    %r13, %rsi
  Inst 137:   load_ext_name %Memmove+0, %rax
  Inst 138:   movq    %r15, rsp(8 + virtual offset)
      (safepoint: slots [S0, S1, S31, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 139:   call    *%rax
  Inst 140:   movq    rsp(8 + virtual offset), %r15
  Inst 141:   load_ext_name u1:1+0, %rsi
  Inst 142:   movl    $1, %edi
  Inst 143:   movq    %rdi, -8(%r13,%r14,8)
  Inst 144:   movl    $1, %edi
  Inst 145:   movq    %rdi, -16(%r13,%r14,8)
  Inst 146:   movq    %rsi, -24(%r13,%r14,8)
  Inst 147:   movq    rsp(2072 + virtual offset), %rsi
  Inst 148:   movq    %r12, 152(%rsi)
  Inst 149:   movq    %r15, %rdi
  Inst 150:   movq    %rbx, %rsi
  Inst 151:   load_ext_name u0:3+0, %rax
  Inst 152:   movq    %rdi, rsp(8 + virtual offset)
      (safepoint: slots [S0, S1, S31, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 153:   call    *%rax
  Inst 154:   jmp     label11
Block 11:
  (successor: Block 12)
  (instruction range: 155 .. 158)
  Inst 155:   movq    %rax, rsp(264 + virtual offset)
  Inst 156:   nop     len=0
  Inst 157:   jmp     label12
Block 12:
  (original IR block: block6)
  (successor: Block 13)
  (successor: Block 14)
  (instruction range: 158 .. 169)
  Inst 158:   movq    rsp(2064 + virtual offset), %rsi
  Inst 159:   movq    8(%rsi), %rdi
  Inst 160:   movq    rsp(2048 + virtual offset), %rsi
  Inst 161:   load_ext_name u0:2+0, %rax
  Inst 162:   movq    %rsi, rsp(8 + virtual offset)
  Inst 163:   movq    %rdi, rsp(16 + virtual offset)
      (safepoint: slots [S0, S1, S2, S31, S33, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 164:   call    *%rax
  Inst 165:   movq    %rax, %rbx
  Inst 166:   movq    %rdx, %r14
  Inst 167:   testq   %r14, %r14
  Inst 168:   jz      label13; j label14
Block 13:
  (successor: Block 16)
  (instruction range: 169 .. 172)
  Inst 169:   movq    %rbx, rsp(8 + virtual offset)
  Inst 170:   nop     len=0
  Inst 171:   jmp     label16
Block 14:
  (original IR block: block9)
  (successor: Block 15)
  (instruction range: 172 .. 201)
  Inst 172:   movq    rsp(2072 + virtual offset), %rsi
  Inst 173:   movq    152(%rsi), %r13
  Inst 174:   movq    %r14, %r15
  Inst 175:   addq    $-1, %r15
  Inst 176:   movq    %r14, %rdx
  Inst 177:   shlq    $3, %rdx
  Inst 178:   movq    %r13, %r12
  Inst 179:   addq    %rdx, %r12
  Inst 180:   movq    %r13, %rdi
  Inst 181:   addq    $-24, %rdi
  Inst 182:   movq    %r13, %rsi
  Inst 183:   load_ext_name %Memmove+0, %rax
  Inst 184:   movq    %rbx, rsp(16 + virtual offset)
      (safepoint: slots [S0, S2, S31, S33, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 185:   call    *%rax
  Inst 186:   movq    rsp(16 + virtual offset), %rbx
  Inst 187:   load_ext_name u1:1+0, %rsi
  Inst 188:   movl    $1, %edi
  Inst 189:   movq    %rdi, -8(%r13,%r14,8)
  Inst 190:   movl    $1, %edi
  Inst 191:   movq    %rdi, -16(%r13,%r14,8)
  Inst 192:   movq    %rsi, -24(%r13,%r14,8)
  Inst 193:   movq    rsp(2072 + virtual offset), %rsi
  Inst 194:   movq    %r12, 152(%rsi)
  Inst 195:   movq    %rbx, %rdi
  Inst 196:   movq    %r15, %rsi
  Inst 197:   load_ext_name u0:3+0, %rax
  Inst 198:   movq    %rdi, rsp(8 + virtual offset)
      (safepoint: slots [S0, S1, S31, S33, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 199:   call    *%rax
  Inst 200:   jmp     label15
Block 15:
  (successor: Block 16)
  (instruction range: 201 .. 204)
  Inst 201:   movq    %rax, rsp(8 + virtual offset)
  Inst 202:   nop     len=0
  Inst 203:   jmp     label16
Block 16:
  (original IR block: block8)
  (successor: Block 17)
  (successor: Block 18)
  (instruction range: 204 .. 215)
  Inst 204:   movq    rsp(2064 + virtual offset), %rsi
  Inst 205:   movq    8(%rsi), %rdi
  Inst 206:   movq    rsp(2048 + virtual offset), %rsi
  Inst 207:   load_ext_name u0:2+0, %rax
  Inst 208:   movq    %rsi, rsp(16 + virtual offset)
  Inst 209:   movq    %rdi, rsp(24 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S31, S33, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 210:   call    *%rax
  Inst 211:   movq    %rax, %rbx
  Inst 212:   movq    %rdx, %r14
  Inst 213:   testq   %r14, %r14
  Inst 214:   jz      label17; j label18
Block 17:
  (successor: Block 20)
  (instruction range: 215 .. 219)
  Inst 215:   movq    %rbx, rsp(280 + virtual offset)
  Inst 216:   nop     len=0
  Inst 217:   nop     len=0
  Inst 218:   jmp     label20
Block 18:
  (original IR block: block11)
  (successor: Block 19)
  (instruction range: 219 .. 248)
  Inst 219:   movq    rsp(2072 + virtual offset), %rsi
  Inst 220:   movq    152(%rsi), %r13
  Inst 221:   movq    %r14, %r15
  Inst 222:   addq    $-1, %r15
  Inst 223:   movq    %r14, %rdx
  Inst 224:   shlq    $3, %rdx
  Inst 225:   movq    %r13, %r12
  Inst 226:   addq    %rdx, %r12
  Inst 227:   movq    %r13, %rdi
  Inst 228:   addq    $-24, %rdi
  Inst 229:   movq    %r13, %rsi
  Inst 230:   load_ext_name %Memmove+0, %rax
  Inst 231:   movq    %rbx, rsp(16 + virtual offset)
      (safepoint: slots [S0, S1, S2, S31, S33, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 232:   call    *%rax
  Inst 233:   movq    rsp(16 + virtual offset), %rbx
  Inst 234:   load_ext_name u1:1+0, %rsi
  Inst 235:   movl    $1, %edi
  Inst 236:   movq    %rdi, -8(%r13,%r14,8)
  Inst 237:   movl    $1, %edi
  Inst 238:   movq    %rdi, -16(%r13,%r14,8)
  Inst 239:   movq    %rsi, -24(%r13,%r14,8)
  Inst 240:   movq    rsp(2072 + virtual offset), %rsi
  Inst 241:   movq    %r12, 152(%rsi)
  Inst 242:   movq    %rbx, %rdi
  Inst 243:   movq    %r15, %rsi
  Inst 244:   load_ext_name u0:3+0, %rax
  Inst 245:   movq    %rdi, rsp(16 + virtual offset)
      (safepoint: slots [S0, S1, S2, S31, S33, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 246:   call    *%rax
  Inst 247:   jmp     label19
Block 19:
  (successor: Block 20)
  (instruction range: 248 .. 252)
  Inst 248:   movq    %rax, rsp(280 + virtual offset)
  Inst 249:   nop     len=0
  Inst 250:   nop     len=0
  Inst 251:   jmp     label20
Block 20:
  (original IR block: block10)
  (successor: Block 21)
  (successor: Block 22)
  (instruction range: 252 .. 263)
  Inst 252:   movq    rsp(2064 + virtual offset), %rsi
  Inst 253:   movq    8(%rsi), %rdi
  Inst 254:   movq    rsp(2048 + virtual offset), %rsi
  Inst 255:   load_ext_name u0:2+0, %rax
  Inst 256:   movq    %rsi, rsp(16 + virtual offset)
  Inst 257:   movq    %rdi, rsp(24 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S31, S33, S35, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 258:   call    *%rax
  Inst 259:   movq    %rax, %r15
  Inst 260:   movq    %rdx, %r14
  Inst 261:   testq   %r14, %r14
  Inst 262:   jz      label21; j label22
Block 21:
  (successor: Block 24)
  (instruction range: 263 .. 267)
  Inst 263:   movq    %r15, rsp(16 + virtual offset)
  Inst 264:   nop     len=0
  Inst 265:   nop     len=0
  Inst 266:   jmp     label24
Block 22:
  (original IR block: block13)
  (successor: Block 23)
  (instruction range: 267 .. 296)
  Inst 267:   movq    rsp(2072 + virtual offset), %rsi
  Inst 268:   movq    152(%rsi), %r13
  Inst 269:   movq    %r14, %rbx
  Inst 270:   addq    $-1, %rbx
  Inst 271:   movq    %r14, %rdx
  Inst 272:   shlq    $3, %rdx
  Inst 273:   movq    %r13, %r12
  Inst 274:   addq    %rdx, %r12
  Inst 275:   movq    %r13, %rdi
  Inst 276:   addq    $-24, %rdi
  Inst 277:   movq    %r13, %rsi
  Inst 278:   load_ext_name %Memmove+0, %rax
  Inst 279:   movq    %r15, rsp(24 + virtual offset)
      (safepoint: slots [S0, S1, S3, S31, S33, S35, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 280:   call    *%rax
  Inst 281:   movq    rsp(24 + virtual offset), %r15
  Inst 282:   load_ext_name u1:1+0, %rsi
  Inst 283:   movl    $1, %edi
  Inst 284:   movq    %rdi, -8(%r13,%r14,8)
  Inst 285:   movl    $1, %edi
  Inst 286:   movq    %rdi, -16(%r13,%r14,8)
  Inst 287:   movq    %rsi, -24(%r13,%r14,8)
  Inst 288:   movq    rsp(2072 + virtual offset), %rsi
  Inst 289:   movq    %r12, 152(%rsi)
  Inst 290:   movq    %r15, %rdi
  Inst 291:   movq    %rbx, %rsi
  Inst 292:   load_ext_name u0:3+0, %rax
  Inst 293:   movq    %rdi, rsp(16 + virtual offset)
      (safepoint: slots [S0, S1, S2, S31, S33, S35, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 294:   call    *%rax
  Inst 295:   jmp     label23
Block 23:
  (successor: Block 24)
  (instruction range: 296 .. 300)
  Inst 296:   movq    %rax, rsp(16 + virtual offset)
  Inst 297:   nop     len=0
  Inst 298:   nop     len=0
  Inst 299:   jmp     label24
Block 24:
  (original IR block: block12)
  (successor: Block 25)
  (successor: Block 26)
  (instruction range: 300 .. 311)
  Inst 300:   movq    rsp(2064 + virtual offset), %rsi
  Inst 301:   movq    8(%rsi), %rdi
  Inst 302:   movq    rsp(2048 + virtual offset), %rsi
  Inst 303:   load_ext_name u0:2+0, %rax
  Inst 304:   movq    %rsi, rsp(24 + virtual offset)
  Inst 305:   movq    %rdi, rsp(32 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S31, S33, S35, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 306:   call    *%rax
  Inst 307:   movq    %rax, %rbx
  Inst 308:   movq    %rdx, %r14
  Inst 309:   testq   %r14, %r14
  Inst 310:   jz      label25; j label26
Block 25:
  (successor: Block 28)
  (instruction range: 311 .. 316)
  Inst 311:   movq    %rbx, rsp(296 + virtual offset)
  Inst 312:   nop     len=0
  Inst 313:   nop     len=0
  Inst 314:   nop     len=0
  Inst 315:   jmp     label28
Block 26:
  (original IR block: block15)
  (successor: Block 27)
  (instruction range: 316 .. 345)
  Inst 316:   movq    rsp(2072 + virtual offset), %rsi
  Inst 317:   movq    152(%rsi), %r13
  Inst 318:   movq    %r14, %r15
  Inst 319:   addq    $-1, %r15
  Inst 320:   movq    %r14, %rdx
  Inst 321:   shlq    $3, %rdx
  Inst 322:   movq    %r13, %r12
  Inst 323:   addq    %rdx, %r12
  Inst 324:   movq    %r13, %rdi
  Inst 325:   addq    $-24, %rdi
  Inst 326:   movq    %r13, %rsi
  Inst 327:   load_ext_name %Memmove+0, %rax
  Inst 328:   movq    %rbx, rsp(24 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S31, S33, S35, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 329:   call    *%rax
  Inst 330:   movq    rsp(24 + virtual offset), %rbx
  Inst 331:   load_ext_name u1:1+0, %rsi
  Inst 332:   movl    $1, %edi
  Inst 333:   movq    %rdi, -8(%r13,%r14,8)
  Inst 334:   movl    $1, %edi
  Inst 335:   movq    %rdi, -16(%r13,%r14,8)
  Inst 336:   movq    %rsi, -24(%r13,%r14,8)
  Inst 337:   movq    rsp(2072 + virtual offset), %rsi
  Inst 338:   movq    %r12, 152(%rsi)
  Inst 339:   movq    %rbx, %rdi
  Inst 340:   movq    %r15, %rsi
  Inst 341:   load_ext_name u0:3+0, %rax
  Inst 342:   movq    %rdi, rsp(24 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S31, S33, S35, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 343:   call    *%rax
  Inst 344:   jmp     label27
Block 27:
  (successor: Block 28)
  (instruction range: 345 .. 350)
  Inst 345:   movq    %rax, rsp(296 + virtual offset)
  Inst 346:   nop     len=0
  Inst 347:   nop     len=0
  Inst 348:   nop     len=0
  Inst 349:   jmp     label28
Block 28:
  (original IR block: block14)
  (successor: Block 29)
  (successor: Block 30)
  (instruction range: 350 .. 361)
  Inst 350:   movq    rsp(2064 + virtual offset), %rsi
  Inst 351:   movq    8(%rsi), %rdi
  Inst 352:   movq    rsp(2048 + virtual offset), %rsi
  Inst 353:   load_ext_name u0:2+0, %rax
  Inst 354:   movq    %rsi, rsp(24 + virtual offset)
  Inst 355:   movq    %rdi, rsp(32 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S31, S33, S35, S37, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 356:   call    *%rax
  Inst 357:   movq    %rax, %rbx
  Inst 358:   movq    %rdx, %r14
  Inst 359:   testq   %r14, %r14
  Inst 360:   jz      label29; j label30
Block 29:
  (successor: Block 32)
  (instruction range: 361 .. 366)
  Inst 361:   movq    %rbx, rsp(24 + virtual offset)
  Inst 362:   nop     len=0
  Inst 363:   nop     len=0
  Inst 364:   nop     len=0
  Inst 365:   jmp     label32
Block 30:
  (original IR block: block17)
  (successor: Block 31)
  (instruction range: 366 .. 395)
  Inst 366:   movq    rsp(2072 + virtual offset), %rsi
  Inst 367:   movq    152(%rsi), %r13
  Inst 368:   movq    %r14, %r15
  Inst 369:   addq    $-1, %r15
  Inst 370:   movq    %r14, %rdx
  Inst 371:   shlq    $3, %rdx
  Inst 372:   movq    %r13, %r12
  Inst 373:   addq    %rdx, %r12
  Inst 374:   movq    %r13, %rdi
  Inst 375:   addq    $-24, %rdi
  Inst 376:   movq    %r13, %rsi
  Inst 377:   load_ext_name %Memmove+0, %rax
  Inst 378:   movq    %rbx, rsp(32 + virtual offset)
      (safepoint: slots [S0, S1, S2, S4, S31, S33, S35, S37, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 379:   call    *%rax
  Inst 380:   movq    rsp(32 + virtual offset), %rbx
  Inst 381:   load_ext_name u1:1+0, %rsi
  Inst 382:   movl    $1, %edi
  Inst 383:   movq    %rdi, -8(%r13,%r14,8)
  Inst 384:   movl    $1, %edi
  Inst 385:   movq    %rdi, -16(%r13,%r14,8)
  Inst 386:   movq    %rsi, -24(%r13,%r14,8)
  Inst 387:   movq    rsp(2072 + virtual offset), %rsi
  Inst 388:   movq    %r12, 152(%rsi)
  Inst 389:   movq    %rbx, %rdi
  Inst 390:   movq    %r15, %rsi
  Inst 391:   load_ext_name u0:3+0, %rax
  Inst 392:   movq    %rdi, rsp(24 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S31, S33, S35, S37, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 393:   call    *%rax
  Inst 394:   jmp     label31
Block 31:
  (successor: Block 32)
  (instruction range: 395 .. 400)
  Inst 395:   movq    %rax, rsp(24 + virtual offset)
  Inst 396:   nop     len=0
  Inst 397:   nop     len=0
  Inst 398:   nop     len=0
  Inst 399:   jmp     label32
Block 32:
  (original IR block: block16)
  (successor: Block 33)
  (successor: Block 34)
  (instruction range: 400 .. 411)
  Inst 400:   movq    rsp(2064 + virtual offset), %rsi
  Inst 401:   movq    8(%rsi), %rdi
  Inst 402:   movq    rsp(2048 + virtual offset), %rsi
  Inst 403:   load_ext_name u0:2+0, %rax
  Inst 404:   movq    %rsi, rsp(32 + virtual offset)
  Inst 405:   movq    %rdi, rsp(40 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S31, S33, S35, S37, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 406:   call    *%rax
  Inst 407:   movq    %rax, %r15
  Inst 408:   movq    %rdx, %r14
  Inst 409:   testq   %r14, %r14
  Inst 410:   jz      label33; j label34
Block 33:
  (successor: Block 36)
  (instruction range: 411 .. 417)
  Inst 411:   movq    %r15, rsp(312 + virtual offset)
  Inst 412:   nop     len=0
  Inst 413:   nop     len=0
  Inst 414:   nop     len=0
  Inst 415:   nop     len=0
  Inst 416:   jmp     label36
Block 34:
  (original IR block: block19)
  (successor: Block 35)
  (instruction range: 417 .. 446)
  Inst 417:   movq    rsp(2072 + virtual offset), %rsi
  Inst 418:   movq    152(%rsi), %r13
  Inst 419:   movq    %r14, %rbx
  Inst 420:   addq    $-1, %rbx
  Inst 421:   movq    %r14, %rdx
  Inst 422:   shlq    $3, %rdx
  Inst 423:   movq    %r13, %r12
  Inst 424:   addq    %rdx, %r12
  Inst 425:   movq    %r13, %rdi
  Inst 426:   addq    $-24, %rdi
  Inst 427:   movq    %r13, %rsi
  Inst 428:   load_ext_name %Memmove+0, %rax
  Inst 429:   movq    %r15, rsp(32 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S31, S33, S35, S37, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 430:   call    *%rax
  Inst 431:   movq    rsp(32 + virtual offset), %r15
  Inst 432:   load_ext_name u1:1+0, %rsi
  Inst 433:   movl    $1, %edi
  Inst 434:   movq    %rdi, -8(%r13,%r14,8)
  Inst 435:   movl    $1, %edi
  Inst 436:   movq    %rdi, -16(%r13,%r14,8)
  Inst 437:   movq    %rsi, -24(%r13,%r14,8)
  Inst 438:   movq    rsp(2072 + virtual offset), %rsi
  Inst 439:   movq    %r12, 152(%rsi)
  Inst 440:   movq    %r15, %rdi
  Inst 441:   movq    %rbx, %rsi
  Inst 442:   load_ext_name u0:3+0, %rax
  Inst 443:   movq    %rdi, rsp(32 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S31, S33, S35, S37, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 444:   call    *%rax
  Inst 445:   jmp     label35
Block 35:
  (successor: Block 36)
  (instruction range: 446 .. 452)
  Inst 446:   movq    %rax, rsp(312 + virtual offset)
  Inst 447:   nop     len=0
  Inst 448:   nop     len=0
  Inst 449:   nop     len=0
  Inst 450:   nop     len=0
  Inst 451:   jmp     label36
Block 36:
  (original IR block: block18)
  (successor: Block 37)
  (successor: Block 38)
  (instruction range: 452 .. 463)
  Inst 452:   movq    rsp(2064 + virtual offset), %rsi
  Inst 453:   movq    8(%rsi), %rdi
  Inst 454:   movq    rsp(2048 + virtual offset), %rsi
  Inst 455:   load_ext_name u0:2+0, %rax
  Inst 456:   movq    %rsi, rsp(32 + virtual offset)
  Inst 457:   movq    %rdi, rsp(40 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S31, S33, S35, S37, S39, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 458:   call    *%rax
  Inst 459:   movq    %rax, %rbx
  Inst 460:   movq    %rdx, %r14
  Inst 461:   testq   %r14, %r14
  Inst 462:   jz      label37; j label38
Block 37:
  (successor: Block 40)
  (instruction range: 463 .. 469)
  Inst 463:   movq    %rbx, rsp(32 + virtual offset)
  Inst 464:   nop     len=0
  Inst 465:   nop     len=0
  Inst 466:   nop     len=0
  Inst 467:   nop     len=0
  Inst 468:   jmp     label40
Block 38:
  (original IR block: block21)
  (successor: Block 39)
  (instruction range: 469 .. 498)
  Inst 469:   movq    rsp(2072 + virtual offset), %rsi
  Inst 470:   movq    152(%rsi), %r13
  Inst 471:   movq    %r14, %r15
  Inst 472:   addq    $-1, %r15
  Inst 473:   movq    %r14, %rdx
  Inst 474:   shlq    $3, %rdx
  Inst 475:   movq    %r13, %r12
  Inst 476:   addq    %rdx, %r12
  Inst 477:   movq    %r13, %rdi
  Inst 478:   addq    $-24, %rdi
  Inst 479:   movq    %r13, %rsi
  Inst 480:   load_ext_name %Memmove+0, %rax
  Inst 481:   movq    %rbx, rsp(40 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S5, S31, S33, S35, S37, S39, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 482:   call    *%rax
  Inst 483:   movq    rsp(40 + virtual offset), %rbx
  Inst 484:   load_ext_name u1:1+0, %rsi
  Inst 485:   movl    $1, %edi
  Inst 486:   movq    %rdi, -8(%r13,%r14,8)
  Inst 487:   movl    $1, %edi
  Inst 488:   movq    %rdi, -16(%r13,%r14,8)
  Inst 489:   movq    %rsi, -24(%r13,%r14,8)
  Inst 490:   movq    rsp(2072 + virtual offset), %rsi
  Inst 491:   movq    %r12, 152(%rsi)
  Inst 492:   movq    %rbx, %rdi
  Inst 493:   movq    %r15, %rsi
  Inst 494:   load_ext_name u0:3+0, %rax
  Inst 495:   movq    %rdi, rsp(32 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S31, S33, S35, S37, S39, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 496:   call    *%rax
  Inst 497:   jmp     label39
Block 39:
  (successor: Block 40)
  (instruction range: 498 .. 504)
  Inst 498:   movq    %rax, rsp(32 + virtual offset)
  Inst 499:   nop     len=0
  Inst 500:   nop     len=0
  Inst 501:   nop     len=0
  Inst 502:   nop     len=0
  Inst 503:   jmp     label40
Block 40:
  (original IR block: block20)
  (successor: Block 41)
  (successor: Block 42)
  (instruction range: 504 .. 515)
  Inst 504:   movq    rsp(2064 + virtual offset), %rsi
  Inst 505:   movq    8(%rsi), %rdi
  Inst 506:   movq    rsp(2048 + virtual offset), %rsi
  Inst 507:   load_ext_name u0:2+0, %rax
  Inst 508:   movq    %rsi, rsp(40 + virtual offset)
  Inst 509:   movq    %rdi, rsp(48 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S31, S33, S35, S37, S39, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 510:   call    *%rax
  Inst 511:   movq    %rax, %rbx
  Inst 512:   movq    %rdx, %r14
  Inst 513:   testq   %r14, %r14
  Inst 514:   jz      label41; j label42
Block 41:
  (successor: Block 44)
  (instruction range: 515 .. 522)
  Inst 515:   movq    %rbx, rsp(328 + virtual offset)
  Inst 516:   nop     len=0
  Inst 517:   nop     len=0
  Inst 518:   nop     len=0
  Inst 519:   nop     len=0
  Inst 520:   nop     len=0
  Inst 521:   jmp     label44
Block 42:
  (original IR block: block23)
  (successor: Block 43)
  (instruction range: 522 .. 551)
  Inst 522:   movq    rsp(2072 + virtual offset), %rsi
  Inst 523:   movq    152(%rsi), %r13
  Inst 524:   movq    %r14, %r15
  Inst 525:   addq    $-1, %r15
  Inst 526:   movq    %r14, %rdx
  Inst 527:   shlq    $3, %rdx
  Inst 528:   movq    %r13, %r12
  Inst 529:   addq    %rdx, %r12
  Inst 530:   movq    %r13, %rdi
  Inst 531:   addq    $-24, %rdi
  Inst 532:   movq    %r13, %rsi
  Inst 533:   load_ext_name %Memmove+0, %rax
  Inst 534:   movq    %rbx, rsp(40 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S31, S33, S35, S37, S39, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 535:   call    *%rax
  Inst 536:   movq    rsp(40 + virtual offset), %rbx
  Inst 537:   load_ext_name u1:1+0, %rsi
  Inst 538:   movl    $1, %edi
  Inst 539:   movq    %rdi, -8(%r13,%r14,8)
  Inst 540:   movl    $1, %edi
  Inst 541:   movq    %rdi, -16(%r13,%r14,8)
  Inst 542:   movq    %rsi, -24(%r13,%r14,8)
  Inst 543:   movq    rsp(2072 + virtual offset), %rsi
  Inst 544:   movq    %r12, 152(%rsi)
  Inst 545:   movq    %rbx, %rdi
  Inst 546:   movq    %r15, %rsi
  Inst 547:   load_ext_name u0:3+0, %rax
  Inst 548:   movq    %rdi, rsp(40 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S31, S33, S35, S37, S39, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 549:   call    *%rax
  Inst 550:   jmp     label43
Block 43:
  (successor: Block 44)
  (instruction range: 551 .. 558)
  Inst 551:   movq    %rax, rsp(328 + virtual offset)
  Inst 552:   nop     len=0
  Inst 553:   nop     len=0
  Inst 554:   nop     len=0
  Inst 555:   nop     len=0
  Inst 556:   nop     len=0
  Inst 557:   jmp     label44
Block 44:
  (original IR block: block22)
  (successor: Block 45)
  (successor: Block 46)
  (instruction range: 558 .. 569)
  Inst 558:   movq    rsp(2064 + virtual offset), %rsi
  Inst 559:   movq    8(%rsi), %rdi
  Inst 560:   movq    rsp(2048 + virtual offset), %rsi
  Inst 561:   load_ext_name u0:2+0, %rax
  Inst 562:   movq    %rsi, rsp(40 + virtual offset)
  Inst 563:   movq    %rdi, rsp(48 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S31, S33, S35, S37, S39, S41, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 564:   call    *%rax
  Inst 565:   movq    %rax, %r15
  Inst 566:   movq    %rdx, %r14
  Inst 567:   testq   %r14, %r14
  Inst 568:   jz      label45; j label46
Block 45:
  (successor: Block 48)
  (instruction range: 569 .. 576)
  Inst 569:   movq    %r15, rsp(40 + virtual offset)
  Inst 570:   nop     len=0
  Inst 571:   nop     len=0
  Inst 572:   nop     len=0
  Inst 573:   nop     len=0
  Inst 574:   nop     len=0
  Inst 575:   jmp     label48
Block 46:
  (original IR block: block25)
  (successor: Block 47)
  (instruction range: 576 .. 605)
  Inst 576:   movq    rsp(2072 + virtual offset), %rsi
  Inst 577:   movq    152(%rsi), %r13
  Inst 578:   movq    %r14, %rbx
  Inst 579:   addq    $-1, %rbx
  Inst 580:   movq    %r14, %rdx
  Inst 581:   shlq    $3, %rdx
  Inst 582:   movq    %r13, %r12
  Inst 583:   addq    %rdx, %r12
  Inst 584:   movq    %r13, %rdi
  Inst 585:   addq    $-24, %rdi
  Inst 586:   movq    %r13, %rsi
  Inst 587:   load_ext_name %Memmove+0, %rax
  Inst 588:   movq    %r15, rsp(48 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S6, S31, S33, S35, S37, S39, S41, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 589:   call    *%rax
  Inst 590:   movq    rsp(48 + virtual offset), %r15
  Inst 591:   load_ext_name u1:1+0, %rsi
  Inst 592:   movl    $1, %edi
  Inst 593:   movq    %rdi, -8(%r13,%r14,8)
  Inst 594:   movl    $1, %edi
  Inst 595:   movq    %rdi, -16(%r13,%r14,8)
  Inst 596:   movq    %rsi, -24(%r13,%r14,8)
  Inst 597:   movq    rsp(2072 + virtual offset), %rsi
  Inst 598:   movq    %r12, 152(%rsi)
  Inst 599:   movq    %r15, %rdi
  Inst 600:   movq    %rbx, %rsi
  Inst 601:   load_ext_name u0:3+0, %rax
  Inst 602:   movq    %rdi, rsp(40 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S31, S33, S35, S37, S39, S41, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 603:   call    *%rax
  Inst 604:   jmp     label47
Block 47:
  (successor: Block 48)
  (instruction range: 605 .. 612)
  Inst 605:   movq    %rax, rsp(40 + virtual offset)
  Inst 606:   nop     len=0
  Inst 607:   nop     len=0
  Inst 608:   nop     len=0
  Inst 609:   nop     len=0
  Inst 610:   nop     len=0
  Inst 611:   jmp     label48
Block 48:
  (original IR block: block24)
  (successor: Block 49)
  (successor: Block 50)
  (instruction range: 612 .. 623)
  Inst 612:   movq    rsp(2064 + virtual offset), %rsi
  Inst 613:   movq    8(%rsi), %rdi
  Inst 614:   movq    rsp(2048 + virtual offset), %rsi
  Inst 615:   load_ext_name u0:2+0, %rax
  Inst 616:   movq    %rsi, rsp(48 + virtual offset)
  Inst 617:   movq    %rdi, rsp(56 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S31, S33, S35, S37, S39, S41, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 618:   call    *%rax
  Inst 619:   movq    %rax, %rbx
  Inst 620:   movq    %rdx, %r14
  Inst 621:   testq   %r14, %r14
  Inst 622:   jz      label49; j label50
Block 49:
  (successor: Block 52)
  (instruction range: 623 .. 631)
  Inst 623:   movq    %rbx, rsp(344 + virtual offset)
  Inst 624:   nop     len=0
  Inst 625:   nop     len=0
  Inst 626:   nop     len=0
  Inst 627:   nop     len=0
  Inst 628:   nop     len=0
  Inst 629:   nop     len=0
  Inst 630:   jmp     label52
Block 50:
  (original IR block: block27)
  (successor: Block 51)
  (instruction range: 631 .. 660)
  Inst 631:   movq    rsp(2072 + virtual offset), %rsi
  Inst 632:   movq    152(%rsi), %r13
  Inst 633:   movq    %r14, %r15
  Inst 634:   addq    $-1, %r15
  Inst 635:   movq    %r14, %rdx
  Inst 636:   shlq    $3, %rdx
  Inst 637:   movq    %r13, %r12
  Inst 638:   addq    %rdx, %r12
  Inst 639:   movq    %r13, %rdi
  Inst 640:   addq    $-24, %rdi
  Inst 641:   movq    %r13, %rsi
  Inst 642:   load_ext_name %Memmove+0, %rax
  Inst 643:   movq    %rbx, rsp(48 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S31, S33, S35, S37, S39, S41, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 644:   call    *%rax
  Inst 645:   movq    rsp(48 + virtual offset), %rbx
  Inst 646:   load_ext_name u1:1+0, %rsi
  Inst 647:   movl    $1, %edi
  Inst 648:   movq    %rdi, -8(%r13,%r14,8)
  Inst 649:   movl    $1, %edi
  Inst 650:   movq    %rdi, -16(%r13,%r14,8)
  Inst 651:   movq    %rsi, -24(%r13,%r14,8)
  Inst 652:   movq    rsp(2072 + virtual offset), %rsi
  Inst 653:   movq    %r12, 152(%rsi)
  Inst 654:   movq    %rbx, %rdi
  Inst 655:   movq    %r15, %rsi
  Inst 656:   load_ext_name u0:3+0, %rax
  Inst 657:   movq    %rdi, rsp(48 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S31, S33, S35, S37, S39, S41, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 658:   call    *%rax
  Inst 659:   jmp     label51
Block 51:
  (successor: Block 52)
  (instruction range: 660 .. 668)
  Inst 660:   movq    %rax, rsp(344 + virtual offset)
  Inst 661:   nop     len=0
  Inst 662:   nop     len=0
  Inst 663:   nop     len=0
  Inst 664:   nop     len=0
  Inst 665:   nop     len=0
  Inst 666:   nop     len=0
  Inst 667:   jmp     label52
Block 52:
  (original IR block: block26)
  (successor: Block 53)
  (successor: Block 54)
  (instruction range: 668 .. 679)
  Inst 668:   movq    rsp(2064 + virtual offset), %rsi
  Inst 669:   movq    8(%rsi), %rdi
  Inst 670:   movq    rsp(2048 + virtual offset), %rsi
  Inst 671:   load_ext_name u0:2+0, %rax
  Inst 672:   movq    %rsi, rsp(48 + virtual offset)
  Inst 673:   movq    %rdi, rsp(56 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S31, S33, S35, S37, S39, S41, S43, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 674:   call    *%rax
  Inst 675:   movq    %rax, %rbx
  Inst 676:   movq    %rdx, %r14
  Inst 677:   testq   %r14, %r14
  Inst 678:   jz      label53; j label54
Block 53:
  (successor: Block 56)
  (instruction range: 679 .. 687)
  Inst 679:   movq    %rbx, rsp(48 + virtual offset)
  Inst 680:   nop     len=0
  Inst 681:   nop     len=0
  Inst 682:   nop     len=0
  Inst 683:   nop     len=0
  Inst 684:   nop     len=0
  Inst 685:   nop     len=0
  Inst 686:   jmp     label56
Block 54:
  (original IR block: block29)
  (successor: Block 55)
  (instruction range: 687 .. 716)
  Inst 687:   movq    rsp(2072 + virtual offset), %rsi
  Inst 688:   movq    152(%rsi), %r13
  Inst 689:   movq    %r14, %r15
  Inst 690:   addq    $-1, %r15
  Inst 691:   movq    %r14, %rdx
  Inst 692:   shlq    $3, %rdx
  Inst 693:   movq    %r13, %r12
  Inst 694:   addq    %rdx, %r12
  Inst 695:   movq    %r13, %rdi
  Inst 696:   addq    $-24, %rdi
  Inst 697:   movq    %r13, %rsi
  Inst 698:   load_ext_name %Memmove+0, %rax
  Inst 699:   movq    %rbx, rsp(56 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S7, S31, S33, S35, S37, S39, S41, S43, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 700:   call    *%rax
  Inst 701:   movq    rsp(56 + virtual offset), %rbx
  Inst 702:   load_ext_name u1:1+0, %rsi
  Inst 703:   movl    $1, %edi
  Inst 704:   movq    %rdi, -8(%r13,%r14,8)
  Inst 705:   movl    $1, %edi
  Inst 706:   movq    %rdi, -16(%r13,%r14,8)
  Inst 707:   movq    %rsi, -24(%r13,%r14,8)
  Inst 708:   movq    rsp(2072 + virtual offset), %rsi
  Inst 709:   movq    %r12, 152(%rsi)
  Inst 710:   movq    %rbx, %rdi
  Inst 711:   movq    %r15, %rsi
  Inst 712:   load_ext_name u0:3+0, %rax
  Inst 713:   movq    %rdi, rsp(48 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S31, S33, S35, S37, S39, S41, S43, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 714:   call    *%rax
  Inst 715:   jmp     label55
Block 55:
  (successor: Block 56)
  (instruction range: 716 .. 724)
  Inst 716:   movq    %rax, rsp(48 + virtual offset)
  Inst 717:   nop     len=0
  Inst 718:   nop     len=0
  Inst 719:   nop     len=0
  Inst 720:   nop     len=0
  Inst 721:   nop     len=0
  Inst 722:   nop     len=0
  Inst 723:   jmp     label56
Block 56:
  (original IR block: block28)
  (successor: Block 57)
  (successor: Block 58)
  (instruction range: 724 .. 735)
  Inst 724:   movq    rsp(2064 + virtual offset), %rsi
  Inst 725:   movq    8(%rsi), %rdi
  Inst 726:   movq    rsp(2048 + virtual offset), %rsi
  Inst 727:   load_ext_name u0:2+0, %rax
  Inst 728:   movq    %rsi, rsp(56 + virtual offset)
  Inst 729:   movq    %rdi, rsp(64 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S31, S33, S35, S37, S39, S41, S43, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 730:   call    *%rax
  Inst 731:   movq    %rax, %r15
  Inst 732:   movq    %rdx, %r14
  Inst 733:   testq   %r14, %r14
  Inst 734:   jz      label57; j label58
Block 57:
  (successor: Block 60)
  (instruction range: 735 .. 744)
  Inst 735:   movq    %r15, rsp(360 + virtual offset)
  Inst 736:   nop     len=0
  Inst 737:   nop     len=0
  Inst 738:   nop     len=0
  Inst 739:   nop     len=0
  Inst 740:   nop     len=0
  Inst 741:   nop     len=0
  Inst 742:   nop     len=0
  Inst 743:   jmp     label60
Block 58:
  (original IR block: block31)
  (successor: Block 59)
  (instruction range: 744 .. 773)
  Inst 744:   movq    rsp(2072 + virtual offset), %rsi
  Inst 745:   movq    152(%rsi), %r13
  Inst 746:   movq    %r14, %rbx
  Inst 747:   addq    $-1, %rbx
  Inst 748:   movq    %r14, %rdx
  Inst 749:   shlq    $3, %rdx
  Inst 750:   movq    %r13, %r12
  Inst 751:   addq    %rdx, %r12
  Inst 752:   movq    %r13, %rdi
  Inst 753:   addq    $-24, %rdi
  Inst 754:   movq    %r13, %rsi
  Inst 755:   load_ext_name %Memmove+0, %rax
  Inst 756:   movq    %r15, rsp(56 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S31, S33, S35, S37, S39, S41, S43, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 757:   call    *%rax
  Inst 758:   movq    rsp(56 + virtual offset), %r15
  Inst 759:   load_ext_name u1:1+0, %rsi
  Inst 760:   movl    $1, %edi
  Inst 761:   movq    %rdi, -8(%r13,%r14,8)
  Inst 762:   movl    $1, %edi
  Inst 763:   movq    %rdi, -16(%r13,%r14,8)
  Inst 764:   movq    %rsi, -24(%r13,%r14,8)
  Inst 765:   movq    rsp(2072 + virtual offset), %rsi
  Inst 766:   movq    %r12, 152(%rsi)
  Inst 767:   movq    %r15, %rdi
  Inst 768:   movq    %rbx, %rsi
  Inst 769:   load_ext_name u0:3+0, %rax
  Inst 770:   movq    %rdi, rsp(56 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S31, S33, S35, S37, S39, S41, S43, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 771:   call    *%rax
  Inst 772:   jmp     label59
Block 59:
  (successor: Block 60)
  (instruction range: 773 .. 782)
  Inst 773:   movq    %rax, rsp(360 + virtual offset)
  Inst 774:   nop     len=0
  Inst 775:   nop     len=0
  Inst 776:   nop     len=0
  Inst 777:   nop     len=0
  Inst 778:   nop     len=0
  Inst 779:   nop     len=0
  Inst 780:   nop     len=0
  Inst 781:   jmp     label60
Block 60:
  (original IR block: block30)
  (successor: Block 61)
  (successor: Block 62)
  (instruction range: 782 .. 793)
  Inst 782:   movq    rsp(2064 + virtual offset), %rsi
  Inst 783:   movq    8(%rsi), %rdi
  Inst 784:   movq    rsp(2048 + virtual offset), %rsi
  Inst 785:   load_ext_name u0:2+0, %rax
  Inst 786:   movq    %rsi, rsp(56 + virtual offset)
  Inst 787:   movq    %rdi, rsp(64 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S31, S33, S35, S37, S39, S41, S43, S45, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 788:   call    *%rax
  Inst 789:   movq    %rax, %rbx
  Inst 790:   movq    %rdx, %r14
  Inst 791:   testq   %r14, %r14
  Inst 792:   jz      label61; j label62
Block 61:
  (successor: Block 64)
  (instruction range: 793 .. 802)
  Inst 793:   movq    %rbx, rsp(56 + virtual offset)
  Inst 794:   nop     len=0
  Inst 795:   nop     len=0
  Inst 796:   nop     len=0
  Inst 797:   nop     len=0
  Inst 798:   nop     len=0
  Inst 799:   nop     len=0
  Inst 800:   nop     len=0
  Inst 801:   jmp     label64
Block 62:
  (original IR block: block33)
  (successor: Block 63)
  (instruction range: 802 .. 831)
  Inst 802:   movq    rsp(2072 + virtual offset), %rsi
  Inst 803:   movq    152(%rsi), %r13
  Inst 804:   movq    %r14, %r15
  Inst 805:   addq    $-1, %r15
  Inst 806:   movq    %r14, %rdx
  Inst 807:   shlq    $3, %rdx
  Inst 808:   movq    %r13, %r12
  Inst 809:   addq    %rdx, %r12
  Inst 810:   movq    %r13, %rdi
  Inst 811:   addq    $-24, %rdi
  Inst 812:   movq    %r13, %rsi
  Inst 813:   load_ext_name %Memmove+0, %rax
  Inst 814:   movq    %rbx, rsp(64 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S8, S31, S33, S35, S37, S39, S41, S43, S45, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 815:   call    *%rax
  Inst 816:   movq    rsp(64 + virtual offset), %rbx
  Inst 817:   load_ext_name u1:1+0, %rsi
  Inst 818:   movl    $1, %edi
  Inst 819:   movq    %rdi, -8(%r13,%r14,8)
  Inst 820:   movl    $1, %edi
  Inst 821:   movq    %rdi, -16(%r13,%r14,8)
  Inst 822:   movq    %rsi, -24(%r13,%r14,8)
  Inst 823:   movq    rsp(2072 + virtual offset), %rsi
  Inst 824:   movq    %r12, 152(%rsi)
  Inst 825:   movq    %rbx, %rdi
  Inst 826:   movq    %r15, %rsi
  Inst 827:   load_ext_name u0:3+0, %rax
  Inst 828:   movq    %rdi, rsp(56 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S31, S33, S35, S37, S39, S41, S43, S45, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 829:   call    *%rax
  Inst 830:   jmp     label63
Block 63:
  (successor: Block 64)
  (instruction range: 831 .. 840)
  Inst 831:   movq    %rax, rsp(56 + virtual offset)
  Inst 832:   nop     len=0
  Inst 833:   nop     len=0
  Inst 834:   nop     len=0
  Inst 835:   nop     len=0
  Inst 836:   nop     len=0
  Inst 837:   nop     len=0
  Inst 838:   nop     len=0
  Inst 839:   jmp     label64
Block 64:
  (original IR block: block32)
  (successor: Block 65)
  (successor: Block 66)
  (instruction range: 840 .. 851)
  Inst 840:   movq    rsp(2064 + virtual offset), %rsi
  Inst 841:   movq    8(%rsi), %rdi
  Inst 842:   movq    rsp(2048 + virtual offset), %rsi
  Inst 843:   load_ext_name u0:2+0, %rax
  Inst 844:   movq    %rsi, rsp(64 + virtual offset)
  Inst 845:   movq    %rdi, rsp(72 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S31, S33, S35, S37, S39, S41, S43, S45, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 846:   call    *%rax
  Inst 847:   movq    %rax, %rbx
  Inst 848:   movq    %rdx, %r14
  Inst 849:   testq   %r14, %r14
  Inst 850:   jz      label65; j label66
Block 65:
  (successor: Block 68)
  (instruction range: 851 .. 861)
  Inst 851:   movq    %rbx, rsp(376 + virtual offset)
  Inst 852:   nop     len=0
  Inst 853:   nop     len=0
  Inst 854:   nop     len=0
  Inst 855:   nop     len=0
  Inst 856:   nop     len=0
  Inst 857:   nop     len=0
  Inst 858:   nop     len=0
  Inst 859:   nop     len=0
  Inst 860:   jmp     label68
Block 66:
  (original IR block: block35)
  (successor: Block 67)
  (instruction range: 861 .. 890)
  Inst 861:   movq    rsp(2072 + virtual offset), %rsi
  Inst 862:   movq    152(%rsi), %r13
  Inst 863:   movq    %r14, %r15
  Inst 864:   addq    $-1, %r15
  Inst 865:   movq    %r14, %rdx
  Inst 866:   shlq    $3, %rdx
  Inst 867:   movq    %r13, %r12
  Inst 868:   addq    %rdx, %r12
  Inst 869:   movq    %r13, %rdi
  Inst 870:   addq    $-24, %rdi
  Inst 871:   movq    %r13, %rsi
  Inst 872:   load_ext_name %Memmove+0, %rax
  Inst 873:   movq    %rbx, rsp(64 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S31, S33, S35, S37, S39, S41, S43, S45, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 874:   call    *%rax
  Inst 875:   movq    rsp(64 + virtual offset), %rbx
  Inst 876:   load_ext_name u1:1+0, %rsi
  Inst 877:   movl    $1, %edi
  Inst 878:   movq    %rdi, -8(%r13,%r14,8)
  Inst 879:   movl    $1, %edi
  Inst 880:   movq    %rdi, -16(%r13,%r14,8)
  Inst 881:   movq    %rsi, -24(%r13,%r14,8)
  Inst 882:   movq    rsp(2072 + virtual offset), %rsi
  Inst 883:   movq    %r12, 152(%rsi)
  Inst 884:   movq    %rbx, %rdi
  Inst 885:   movq    %r15, %rsi
  Inst 886:   load_ext_name u0:3+0, %rax
  Inst 887:   movq    %rdi, rsp(64 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S31, S33, S35, S37, S39, S41, S43, S45, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 888:   call    *%rax
  Inst 889:   jmp     label67
Block 67:
  (successor: Block 68)
  (instruction range: 890 .. 900)
  Inst 890:   movq    %rax, rsp(376 + virtual offset)
  Inst 891:   nop     len=0
  Inst 892:   nop     len=0
  Inst 893:   nop     len=0
  Inst 894:   nop     len=0
  Inst 895:   nop     len=0
  Inst 896:   nop     len=0
  Inst 897:   nop     len=0
  Inst 898:   nop     len=0
  Inst 899:   jmp     label68
Block 68:
  (original IR block: block34)
  (successor: Block 69)
  (successor: Block 70)
  (instruction range: 900 .. 911)
  Inst 900:   movq    rsp(2064 + virtual offset), %rsi
  Inst 901:   movq    8(%rsi), %rdi
  Inst 902:   movq    rsp(2048 + virtual offset), %rsi
  Inst 903:   load_ext_name u0:2+0, %rax
  Inst 904:   movq    %rsi, rsp(64 + virtual offset)
  Inst 905:   movq    %rdi, rsp(72 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S31, S33, S35, S37, S39, S41, S43, S45, S47, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 906:   call    *%rax
  Inst 907:   movq    %rax, %r15
  Inst 908:   movq    %rdx, %r14
  Inst 909:   testq   %r14, %r14
  Inst 910:   jz      label69; j label70
Block 69:
  (successor: Block 72)
  (instruction range: 911 .. 921)
  Inst 911:   movq    %r15, rsp(64 + virtual offset)
  Inst 912:   nop     len=0
  Inst 913:   nop     len=0
  Inst 914:   nop     len=0
  Inst 915:   nop     len=0
  Inst 916:   nop     len=0
  Inst 917:   nop     len=0
  Inst 918:   nop     len=0
  Inst 919:   nop     len=0
  Inst 920:   jmp     label72
Block 70:
  (original IR block: block37)
  (successor: Block 71)
  (instruction range: 921 .. 950)
  Inst 921:   movq    rsp(2072 + virtual offset), %rsi
  Inst 922:   movq    152(%rsi), %r13
  Inst 923:   movq    %r14, %rbx
  Inst 924:   addq    $-1, %rbx
  Inst 925:   movq    %r14, %rdx
  Inst 926:   shlq    $3, %rdx
  Inst 927:   movq    %r13, %r12
  Inst 928:   addq    %rdx, %r12
  Inst 929:   movq    %r13, %rdi
  Inst 930:   addq    $-24, %rdi
  Inst 931:   movq    %r13, %rsi
  Inst 932:   load_ext_name %Memmove+0, %rax
  Inst 933:   movq    %r15, rsp(72 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S9, S31, S33, S35, S37, S39, S41, S43, S45, S47, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 934:   call    *%rax
  Inst 935:   movq    rsp(72 + virtual offset), %r15
  Inst 936:   load_ext_name u1:1+0, %rsi
  Inst 937:   movl    $1, %edi
  Inst 938:   movq    %rdi, -8(%r13,%r14,8)
  Inst 939:   movl    $1, %edi
  Inst 940:   movq    %rdi, -16(%r13,%r14,8)
  Inst 941:   movq    %rsi, -24(%r13,%r14,8)
  Inst 942:   movq    rsp(2072 + virtual offset), %rsi
  Inst 943:   movq    %r12, 152(%rsi)
  Inst 944:   movq    %r15, %rdi
  Inst 945:   movq    %rbx, %rsi
  Inst 946:   load_ext_name u0:3+0, %rax
  Inst 947:   movq    %rdi, rsp(64 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S31, S33, S35, S37, S39, S41, S43, S45, S47, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 948:   call    *%rax
  Inst 949:   jmp     label71
Block 71:
  (successor: Block 72)
  (instruction range: 950 .. 960)
  Inst 950:   movq    %rax, rsp(64 + virtual offset)
  Inst 951:   nop     len=0
  Inst 952:   nop     len=0
  Inst 953:   nop     len=0
  Inst 954:   nop     len=0
  Inst 955:   nop     len=0
  Inst 956:   nop     len=0
  Inst 957:   nop     len=0
  Inst 958:   nop     len=0
  Inst 959:   jmp     label72
Block 72:
  (original IR block: block36)
  (successor: Block 73)
  (successor: Block 74)
  (instruction range: 960 .. 971)
  Inst 960:   movq    rsp(2064 + virtual offset), %rsi
  Inst 961:   movq    8(%rsi), %rdi
  Inst 962:   movq    rsp(2048 + virtual offset), %rsi
  Inst 963:   load_ext_name u0:2+0, %rax
  Inst 964:   movq    %rsi, rsp(72 + virtual offset)
  Inst 965:   movq    %rdi, rsp(80 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S31, S33, S35, S37, S39, S41, S43, S45, S47, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 966:   call    *%rax
  Inst 967:   movq    %rax, %rbx
  Inst 968:   movq    %rdx, %r14
  Inst 969:   testq   %r14, %r14
  Inst 970:   jz      label73; j label74
Block 73:
  (successor: Block 76)
  (instruction range: 971 .. 982)
  Inst 971:   movq    %rbx, rsp(392 + virtual offset)
  Inst 972:   nop     len=0
  Inst 973:   nop     len=0
  Inst 974:   nop     len=0
  Inst 975:   nop     len=0
  Inst 976:   nop     len=0
  Inst 977:   nop     len=0
  Inst 978:   nop     len=0
  Inst 979:   nop     len=0
  Inst 980:   nop     len=0
  Inst 981:   jmp     label76
Block 74:
  (original IR block: block39)
  (successor: Block 75)
  (instruction range: 982 .. 1011)
  Inst 982:   movq    rsp(2072 + virtual offset), %rsi
  Inst 983:   movq    152(%rsi), %r13
  Inst 984:   movq    %r14, %r15
  Inst 985:   addq    $-1, %r15
  Inst 986:   movq    %r14, %rdx
  Inst 987:   shlq    $3, %rdx
  Inst 988:   movq    %r13, %r12
  Inst 989:   addq    %rdx, %r12
  Inst 990:   movq    %r13, %rdi
  Inst 991:   addq    $-24, %rdi
  Inst 992:   movq    %r13, %rsi
  Inst 993:   load_ext_name %Memmove+0, %rax
  Inst 994:   movq    %rbx, rsp(72 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S31, S33, S35, S37, S39, S41, S43, S45, S47, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 995:   call    *%rax
  Inst 996:   movq    rsp(72 + virtual offset), %rbx
  Inst 997:   load_ext_name u1:1+0, %rsi
  Inst 998:   movl    $1, %edi
  Inst 999:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1000:   movl    $1, %edi
  Inst 1001:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1002:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1003:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1004:   movq    %r12, 152(%rsi)
  Inst 1005:   movq    %rbx, %rdi
  Inst 1006:   movq    %r15, %rsi
  Inst 1007:   load_ext_name u0:3+0, %rax
  Inst 1008:   movq    %rdi, rsp(72 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S31, S33, S35, S37, S39, S41, S43, S45, S47, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1009:   call    *%rax
  Inst 1010:   jmp     label75
Block 75:
  (successor: Block 76)
  (instruction range: 1011 .. 1022)
  Inst 1011:   movq    %rax, rsp(392 + virtual offset)
  Inst 1012:   nop     len=0
  Inst 1013:   nop     len=0
  Inst 1014:   nop     len=0
  Inst 1015:   nop     len=0
  Inst 1016:   nop     len=0
  Inst 1017:   nop     len=0
  Inst 1018:   nop     len=0
  Inst 1019:   nop     len=0
  Inst 1020:   nop     len=0
  Inst 1021:   jmp     label76
Block 76:
  (original IR block: block38)
  (successor: Block 77)
  (successor: Block 78)
  (instruction range: 1022 .. 1033)
  Inst 1022:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1023:   movq    8(%rsi), %rdi
  Inst 1024:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1025:   load_ext_name u0:2+0, %rax
  Inst 1026:   movq    %rsi, rsp(72 + virtual offset)
  Inst 1027:   movq    %rdi, rsp(80 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1028:   call    *%rax
  Inst 1029:   movq    %rax, %rbx
  Inst 1030:   movq    %rdx, %r14
  Inst 1031:   testq   %r14, %r14
  Inst 1032:   jz      label77; j label78
Block 77:
  (successor: Block 80)
  (instruction range: 1033 .. 1044)
  Inst 1033:   movq    %rbx, rsp(72 + virtual offset)
  Inst 1034:   nop     len=0
  Inst 1035:   nop     len=0
  Inst 1036:   nop     len=0
  Inst 1037:   nop     len=0
  Inst 1038:   nop     len=0
  Inst 1039:   nop     len=0
  Inst 1040:   nop     len=0
  Inst 1041:   nop     len=0
  Inst 1042:   nop     len=0
  Inst 1043:   jmp     label80
Block 78:
  (original IR block: block41)
  (successor: Block 79)
  (instruction range: 1044 .. 1073)
  Inst 1044:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1045:   movq    152(%rsi), %r13
  Inst 1046:   movq    %r14, %r15
  Inst 1047:   addq    $-1, %r15
  Inst 1048:   movq    %r14, %rdx
  Inst 1049:   shlq    $3, %rdx
  Inst 1050:   movq    %r13, %r12
  Inst 1051:   addq    %rdx, %r12
  Inst 1052:   movq    %r13, %rdi
  Inst 1053:   addq    $-24, %rdi
  Inst 1054:   movq    %r13, %rsi
  Inst 1055:   load_ext_name %Memmove+0, %rax
  Inst 1056:   movq    %rbx, rsp(80 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S10, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1057:   call    *%rax
  Inst 1058:   movq    rsp(80 + virtual offset), %rbx
  Inst 1059:   load_ext_name u1:1+0, %rsi
  Inst 1060:   movl    $1, %edi
  Inst 1061:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1062:   movl    $1, %edi
  Inst 1063:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1064:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1065:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1066:   movq    %r12, 152(%rsi)
  Inst 1067:   movq    %rbx, %rdi
  Inst 1068:   movq    %r15, %rsi
  Inst 1069:   load_ext_name u0:3+0, %rax
  Inst 1070:   movq    %rdi, rsp(72 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1071:   call    *%rax
  Inst 1072:   jmp     label79
Block 79:
  (successor: Block 80)
  (instruction range: 1073 .. 1084)
  Inst 1073:   movq    %rax, rsp(72 + virtual offset)
  Inst 1074:   nop     len=0
  Inst 1075:   nop     len=0
  Inst 1076:   nop     len=0
  Inst 1077:   nop     len=0
  Inst 1078:   nop     len=0
  Inst 1079:   nop     len=0
  Inst 1080:   nop     len=0
  Inst 1081:   nop     len=0
  Inst 1082:   nop     len=0
  Inst 1083:   jmp     label80
Block 80:
  (original IR block: block40)
  (successor: Block 81)
  (successor: Block 82)
  (instruction range: 1084 .. 1095)
  Inst 1084:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1085:   movq    8(%rsi), %rdi
  Inst 1086:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1087:   load_ext_name u0:2+0, %rax
  Inst 1088:   movq    %rsi, rsp(80 + virtual offset)
  Inst 1089:   movq    %rdi, rsp(88 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1090:   call    *%rax
  Inst 1091:   movq    %rax, %r15
  Inst 1092:   movq    %rdx, %r14
  Inst 1093:   testq   %r14, %r14
  Inst 1094:   jz      label81; j label82
Block 81:
  (successor: Block 84)
  (instruction range: 1095 .. 1107)
  Inst 1095:   movq    %r15, rsp(408 + virtual offset)
  Inst 1096:   nop     len=0
  Inst 1097:   nop     len=0
  Inst 1098:   nop     len=0
  Inst 1099:   nop     len=0
  Inst 1100:   nop     len=0
  Inst 1101:   nop     len=0
  Inst 1102:   nop     len=0
  Inst 1103:   nop     len=0
  Inst 1104:   nop     len=0
  Inst 1105:   nop     len=0
  Inst 1106:   jmp     label84
Block 82:
  (original IR block: block43)
  (successor: Block 83)
  (instruction range: 1107 .. 1136)
  Inst 1107:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1108:   movq    152(%rsi), %r13
  Inst 1109:   movq    %r14, %rbx
  Inst 1110:   addq    $-1, %rbx
  Inst 1111:   movq    %r14, %rdx
  Inst 1112:   shlq    $3, %rdx
  Inst 1113:   movq    %r13, %r12
  Inst 1114:   addq    %rdx, %r12
  Inst 1115:   movq    %r13, %rdi
  Inst 1116:   addq    $-24, %rdi
  Inst 1117:   movq    %r13, %rsi
  Inst 1118:   load_ext_name %Memmove+0, %rax
  Inst 1119:   movq    %r15, rsp(80 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1120:   call    *%rax
  Inst 1121:   movq    rsp(80 + virtual offset), %r15
  Inst 1122:   load_ext_name u1:1+0, %rsi
  Inst 1123:   movl    $1, %edi
  Inst 1124:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1125:   movl    $1, %edi
  Inst 1126:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1127:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1128:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1129:   movq    %r12, 152(%rsi)
  Inst 1130:   movq    %r15, %rdi
  Inst 1131:   movq    %rbx, %rsi
  Inst 1132:   load_ext_name u0:3+0, %rax
  Inst 1133:   movq    %rdi, rsp(80 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1134:   call    *%rax
  Inst 1135:   jmp     label83
Block 83:
  (successor: Block 84)
  (instruction range: 1136 .. 1148)
  Inst 1136:   movq    %rax, rsp(408 + virtual offset)
  Inst 1137:   nop     len=0
  Inst 1138:   nop     len=0
  Inst 1139:   nop     len=0
  Inst 1140:   nop     len=0
  Inst 1141:   nop     len=0
  Inst 1142:   nop     len=0
  Inst 1143:   nop     len=0
  Inst 1144:   nop     len=0
  Inst 1145:   nop     len=0
  Inst 1146:   nop     len=0
  Inst 1147:   jmp     label84
Block 84:
  (original IR block: block42)
  (successor: Block 85)
  (successor: Block 86)
  (instruction range: 1148 .. 1159)
  Inst 1148:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1149:   movq    8(%rsi), %rdi
  Inst 1150:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1151:   load_ext_name u0:2+0, %rax
  Inst 1152:   movq    %rsi, rsp(80 + virtual offset)
  Inst 1153:   movq    %rdi, rsp(88 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1154:   call    *%rax
  Inst 1155:   movq    %rax, %rbx
  Inst 1156:   movq    %rdx, %r14
  Inst 1157:   testq   %r14, %r14
  Inst 1158:   jz      label85; j label86
Block 85:
  (successor: Block 88)
  (instruction range: 1159 .. 1171)
  Inst 1159:   movq    %rbx, rsp(80 + virtual offset)
  Inst 1160:   nop     len=0
  Inst 1161:   nop     len=0
  Inst 1162:   nop     len=0
  Inst 1163:   nop     len=0
  Inst 1164:   nop     len=0
  Inst 1165:   nop     len=0
  Inst 1166:   nop     len=0
  Inst 1167:   nop     len=0
  Inst 1168:   nop     len=0
  Inst 1169:   nop     len=0
  Inst 1170:   jmp     label88
Block 86:
  (original IR block: block45)
  (successor: Block 87)
  (instruction range: 1171 .. 1200)
  Inst 1171:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1172:   movq    152(%rsi), %r13
  Inst 1173:   movq    %r14, %r15
  Inst 1174:   addq    $-1, %r15
  Inst 1175:   movq    %r14, %rdx
  Inst 1176:   shlq    $3, %rdx
  Inst 1177:   movq    %r13, %r12
  Inst 1178:   addq    %rdx, %r12
  Inst 1179:   movq    %r13, %rdi
  Inst 1180:   addq    $-24, %rdi
  Inst 1181:   movq    %r13, %rsi
  Inst 1182:   load_ext_name %Memmove+0, %rax
  Inst 1183:   movq    %rbx, rsp(88 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S11, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1184:   call    *%rax
  Inst 1185:   movq    rsp(88 + virtual offset), %rbx
  Inst 1186:   load_ext_name u1:1+0, %rsi
  Inst 1187:   movl    $1, %edi
  Inst 1188:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1189:   movl    $1, %edi
  Inst 1190:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1191:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1192:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1193:   movq    %r12, 152(%rsi)
  Inst 1194:   movq    %rbx, %rdi
  Inst 1195:   movq    %r15, %rsi
  Inst 1196:   load_ext_name u0:3+0, %rax
  Inst 1197:   movq    %rdi, rsp(80 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1198:   call    *%rax
  Inst 1199:   jmp     label87
Block 87:
  (successor: Block 88)
  (instruction range: 1200 .. 1212)
  Inst 1200:   movq    %rax, rsp(80 + virtual offset)
  Inst 1201:   nop     len=0
  Inst 1202:   nop     len=0
  Inst 1203:   nop     len=0
  Inst 1204:   nop     len=0
  Inst 1205:   nop     len=0
  Inst 1206:   nop     len=0
  Inst 1207:   nop     len=0
  Inst 1208:   nop     len=0
  Inst 1209:   nop     len=0
  Inst 1210:   nop     len=0
  Inst 1211:   jmp     label88
Block 88:
  (original IR block: block44)
  (successor: Block 89)
  (successor: Block 90)
  (instruction range: 1212 .. 1223)
  Inst 1212:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1213:   movq    8(%rsi), %rdi
  Inst 1214:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1215:   load_ext_name u0:2+0, %rax
  Inst 1216:   movq    %rsi, rsp(88 + virtual offset)
  Inst 1217:   movq    %rdi, rsp(96 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1218:   call    *%rax
  Inst 1219:   movq    %rax, %rbx
  Inst 1220:   movq    %rdx, %r14
  Inst 1221:   testq   %r14, %r14
  Inst 1222:   jz      label89; j label90
Block 89:
  (successor: Block 92)
  (instruction range: 1223 .. 1236)
  Inst 1223:   movq    %rbx, rsp(424 + virtual offset)
  Inst 1224:   nop     len=0
  Inst 1225:   nop     len=0
  Inst 1226:   nop     len=0
  Inst 1227:   nop     len=0
  Inst 1228:   nop     len=0
  Inst 1229:   nop     len=0
  Inst 1230:   nop     len=0
  Inst 1231:   nop     len=0
  Inst 1232:   nop     len=0
  Inst 1233:   nop     len=0
  Inst 1234:   nop     len=0
  Inst 1235:   jmp     label92
Block 90:
  (original IR block: block47)
  (successor: Block 91)
  (instruction range: 1236 .. 1265)
  Inst 1236:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1237:   movq    152(%rsi), %r13
  Inst 1238:   movq    %r14, %r15
  Inst 1239:   addq    $-1, %r15
  Inst 1240:   movq    %r14, %rdx
  Inst 1241:   shlq    $3, %rdx
  Inst 1242:   movq    %r13, %r12
  Inst 1243:   addq    %rdx, %r12
  Inst 1244:   movq    %r13, %rdi
  Inst 1245:   addq    $-24, %rdi
  Inst 1246:   movq    %r13, %rsi
  Inst 1247:   load_ext_name %Memmove+0, %rax
  Inst 1248:   movq    %rbx, rsp(88 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1249:   call    *%rax
  Inst 1250:   movq    rsp(88 + virtual offset), %rbx
  Inst 1251:   load_ext_name u1:1+0, %rsi
  Inst 1252:   movl    $1, %edi
  Inst 1253:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1254:   movl    $1, %edi
  Inst 1255:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1256:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1257:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1258:   movq    %r12, 152(%rsi)
  Inst 1259:   movq    %rbx, %rdi
  Inst 1260:   movq    %r15, %rsi
  Inst 1261:   load_ext_name u0:3+0, %rax
  Inst 1262:   movq    %rdi, rsp(88 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1263:   call    *%rax
  Inst 1264:   jmp     label91
Block 91:
  (successor: Block 92)
  (instruction range: 1265 .. 1278)
  Inst 1265:   movq    %rax, rsp(424 + virtual offset)
  Inst 1266:   nop     len=0
  Inst 1267:   nop     len=0
  Inst 1268:   nop     len=0
  Inst 1269:   nop     len=0
  Inst 1270:   nop     len=0
  Inst 1271:   nop     len=0
  Inst 1272:   nop     len=0
  Inst 1273:   nop     len=0
  Inst 1274:   nop     len=0
  Inst 1275:   nop     len=0
  Inst 1276:   nop     len=0
  Inst 1277:   jmp     label92
Block 92:
  (original IR block: block46)
  (successor: Block 93)
  (successor: Block 94)
  (instruction range: 1278 .. 1289)
  Inst 1278:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1279:   movq    8(%rsi), %rdi
  Inst 1280:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1281:   load_ext_name u0:2+0, %rax
  Inst 1282:   movq    %rsi, rsp(88 + virtual offset)
  Inst 1283:   movq    %rdi, rsp(96 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1284:   call    *%rax
  Inst 1285:   movq    %rax, %r15
  Inst 1286:   movq    %rdx, %r14
  Inst 1287:   testq   %r14, %r14
  Inst 1288:   jz      label93; j label94
Block 93:
  (successor: Block 96)
  (instruction range: 1289 .. 1302)
  Inst 1289:   movq    %r15, rsp(88 + virtual offset)
  Inst 1290:   nop     len=0
  Inst 1291:   nop     len=0
  Inst 1292:   nop     len=0
  Inst 1293:   nop     len=0
  Inst 1294:   nop     len=0
  Inst 1295:   nop     len=0
  Inst 1296:   nop     len=0
  Inst 1297:   nop     len=0
  Inst 1298:   nop     len=0
  Inst 1299:   nop     len=0
  Inst 1300:   nop     len=0
  Inst 1301:   jmp     label96
Block 94:
  (original IR block: block49)
  (successor: Block 95)
  (instruction range: 1302 .. 1331)
  Inst 1302:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1303:   movq    152(%rsi), %r13
  Inst 1304:   movq    %r14, %rbx
  Inst 1305:   addq    $-1, %rbx
  Inst 1306:   movq    %r14, %rdx
  Inst 1307:   shlq    $3, %rdx
  Inst 1308:   movq    %r13, %r12
  Inst 1309:   addq    %rdx, %r12
  Inst 1310:   movq    %r13, %rdi
  Inst 1311:   addq    $-24, %rdi
  Inst 1312:   movq    %r13, %rsi
  Inst 1313:   load_ext_name %Memmove+0, %rax
  Inst 1314:   movq    %r15, rsp(96 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S12, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1315:   call    *%rax
  Inst 1316:   movq    rsp(96 + virtual offset), %r15
  Inst 1317:   load_ext_name u1:1+0, %rsi
  Inst 1318:   movl    $1, %edi
  Inst 1319:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1320:   movl    $1, %edi
  Inst 1321:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1322:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1323:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1324:   movq    %r12, 152(%rsi)
  Inst 1325:   movq    %r15, %rdi
  Inst 1326:   movq    %rbx, %rsi
  Inst 1327:   load_ext_name u0:3+0, %rax
  Inst 1328:   movq    %rdi, rsp(88 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1329:   call    *%rax
  Inst 1330:   jmp     label95
Block 95:
  (successor: Block 96)
  (instruction range: 1331 .. 1344)
  Inst 1331:   movq    %rax, rsp(88 + virtual offset)
  Inst 1332:   nop     len=0
  Inst 1333:   nop     len=0
  Inst 1334:   nop     len=0
  Inst 1335:   nop     len=0
  Inst 1336:   nop     len=0
  Inst 1337:   nop     len=0
  Inst 1338:   nop     len=0
  Inst 1339:   nop     len=0
  Inst 1340:   nop     len=0
  Inst 1341:   nop     len=0
  Inst 1342:   nop     len=0
  Inst 1343:   jmp     label96
Block 96:
  (original IR block: block48)
  (successor: Block 97)
  (successor: Block 98)
  (instruction range: 1344 .. 1355)
  Inst 1344:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1345:   movq    8(%rsi), %rdi
  Inst 1346:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1347:   load_ext_name u0:2+0, %rax
  Inst 1348:   movq    %rsi, rsp(96 + virtual offset)
  Inst 1349:   movq    %rdi, rsp(104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1350:   call    *%rax
  Inst 1351:   movq    %rax, %rbx
  Inst 1352:   movq    %rdx, %r14
  Inst 1353:   testq   %r14, %r14
  Inst 1354:   jz      label97; j label98
Block 97:
  (successor: Block 100)
  (instruction range: 1355 .. 1369)
  Inst 1355:   movq    %rbx, rsp(440 + virtual offset)
  Inst 1356:   nop     len=0
  Inst 1357:   nop     len=0
  Inst 1358:   nop     len=0
  Inst 1359:   nop     len=0
  Inst 1360:   nop     len=0
  Inst 1361:   nop     len=0
  Inst 1362:   nop     len=0
  Inst 1363:   nop     len=0
  Inst 1364:   nop     len=0
  Inst 1365:   nop     len=0
  Inst 1366:   nop     len=0
  Inst 1367:   nop     len=0
  Inst 1368:   jmp     label100
Block 98:
  (original IR block: block51)
  (successor: Block 99)
  (instruction range: 1369 .. 1398)
  Inst 1369:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1370:   movq    152(%rsi), %r13
  Inst 1371:   movq    %r14, %r15
  Inst 1372:   addq    $-1, %r15
  Inst 1373:   movq    %r14, %rdx
  Inst 1374:   shlq    $3, %rdx
  Inst 1375:   movq    %r13, %r12
  Inst 1376:   addq    %rdx, %r12
  Inst 1377:   movq    %r13, %rdi
  Inst 1378:   addq    $-24, %rdi
  Inst 1379:   movq    %r13, %rsi
  Inst 1380:   load_ext_name %Memmove+0, %rax
  Inst 1381:   movq    %rbx, rsp(96 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1382:   call    *%rax
  Inst 1383:   movq    rsp(96 + virtual offset), %rbx
  Inst 1384:   load_ext_name u1:1+0, %rsi
  Inst 1385:   movl    $1, %edi
  Inst 1386:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1387:   movl    $1, %edi
  Inst 1388:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1389:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1390:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1391:   movq    %r12, 152(%rsi)
  Inst 1392:   movq    %rbx, %rdi
  Inst 1393:   movq    %r15, %rsi
  Inst 1394:   load_ext_name u0:3+0, %rax
  Inst 1395:   movq    %rdi, rsp(96 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1396:   call    *%rax
  Inst 1397:   jmp     label99
Block 99:
  (successor: Block 100)
  (instruction range: 1398 .. 1412)
  Inst 1398:   movq    %rax, rsp(440 + virtual offset)
  Inst 1399:   nop     len=0
  Inst 1400:   nop     len=0
  Inst 1401:   nop     len=0
  Inst 1402:   nop     len=0
  Inst 1403:   nop     len=0
  Inst 1404:   nop     len=0
  Inst 1405:   nop     len=0
  Inst 1406:   nop     len=0
  Inst 1407:   nop     len=0
  Inst 1408:   nop     len=0
  Inst 1409:   nop     len=0
  Inst 1410:   nop     len=0
  Inst 1411:   jmp     label100
Block 100:
  (original IR block: block50)
  (successor: Block 101)
  (successor: Block 102)
  (instruction range: 1412 .. 1423)
  Inst 1412:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1413:   movq    8(%rsi), %rdi
  Inst 1414:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1415:   load_ext_name u0:2+0, %rax
  Inst 1416:   movq    %rsi, rsp(96 + virtual offset)
  Inst 1417:   movq    %rdi, rsp(104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1418:   call    *%rax
  Inst 1419:   movq    %rax, %rbx
  Inst 1420:   movq    %rdx, %r14
  Inst 1421:   testq   %r14, %r14
  Inst 1422:   jz      label101; j label102
Block 101:
  (successor: Block 104)
  (instruction range: 1423 .. 1437)
  Inst 1423:   movq    %rbx, rsp(96 + virtual offset)
  Inst 1424:   nop     len=0
  Inst 1425:   nop     len=0
  Inst 1426:   nop     len=0
  Inst 1427:   nop     len=0
  Inst 1428:   nop     len=0
  Inst 1429:   nop     len=0
  Inst 1430:   nop     len=0
  Inst 1431:   nop     len=0
  Inst 1432:   nop     len=0
  Inst 1433:   nop     len=0
  Inst 1434:   nop     len=0
  Inst 1435:   nop     len=0
  Inst 1436:   jmp     label104
Block 102:
  (original IR block: block53)
  (successor: Block 103)
  (instruction range: 1437 .. 1466)
  Inst 1437:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1438:   movq    152(%rsi), %r13
  Inst 1439:   movq    %r14, %r15
  Inst 1440:   addq    $-1, %r15
  Inst 1441:   movq    %r14, %rdx
  Inst 1442:   shlq    $3, %rdx
  Inst 1443:   movq    %r13, %r12
  Inst 1444:   addq    %rdx, %r12
  Inst 1445:   movq    %r13, %rdi
  Inst 1446:   addq    $-24, %rdi
  Inst 1447:   movq    %r13, %rsi
  Inst 1448:   load_ext_name %Memmove+0, %rax
  Inst 1449:   movq    %rbx, rsp(104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S13, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1450:   call    *%rax
  Inst 1451:   movq    rsp(104 + virtual offset), %rbx
  Inst 1452:   load_ext_name u1:1+0, %rsi
  Inst 1453:   movl    $1, %edi
  Inst 1454:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1455:   movl    $1, %edi
  Inst 1456:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1457:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1458:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1459:   movq    %r12, 152(%rsi)
  Inst 1460:   movq    %rbx, %rdi
  Inst 1461:   movq    %r15, %rsi
  Inst 1462:   load_ext_name u0:3+0, %rax
  Inst 1463:   movq    %rdi, rsp(96 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1464:   call    *%rax
  Inst 1465:   jmp     label103
Block 103:
  (successor: Block 104)
  (instruction range: 1466 .. 1480)
  Inst 1466:   movq    %rax, rsp(96 + virtual offset)
  Inst 1467:   nop     len=0
  Inst 1468:   nop     len=0
  Inst 1469:   nop     len=0
  Inst 1470:   nop     len=0
  Inst 1471:   nop     len=0
  Inst 1472:   nop     len=0
  Inst 1473:   nop     len=0
  Inst 1474:   nop     len=0
  Inst 1475:   nop     len=0
  Inst 1476:   nop     len=0
  Inst 1477:   nop     len=0
  Inst 1478:   nop     len=0
  Inst 1479:   jmp     label104
Block 104:
  (original IR block: block52)
  (successor: Block 105)
  (successor: Block 106)
  (instruction range: 1480 .. 1491)
  Inst 1480:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1481:   movq    8(%rsi), %rdi
  Inst 1482:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1483:   load_ext_name u0:2+0, %rax
  Inst 1484:   movq    %rsi, rsp(104 + virtual offset)
  Inst 1485:   movq    %rdi, rsp(112 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1486:   call    *%rax
  Inst 1487:   movq    %rax, %r15
  Inst 1488:   movq    %rdx, %r14
  Inst 1489:   testq   %r14, %r14
  Inst 1490:   jz      label105; j label106
Block 105:
  (successor: Block 108)
  (instruction range: 1491 .. 1506)
  Inst 1491:   movq    %r15, rsp(456 + virtual offset)
  Inst 1492:   nop     len=0
  Inst 1493:   nop     len=0
  Inst 1494:   nop     len=0
  Inst 1495:   nop     len=0
  Inst 1496:   nop     len=0
  Inst 1497:   nop     len=0
  Inst 1498:   nop     len=0
  Inst 1499:   nop     len=0
  Inst 1500:   nop     len=0
  Inst 1501:   nop     len=0
  Inst 1502:   nop     len=0
  Inst 1503:   nop     len=0
  Inst 1504:   nop     len=0
  Inst 1505:   jmp     label108
Block 106:
  (original IR block: block55)
  (successor: Block 107)
  (instruction range: 1506 .. 1535)
  Inst 1506:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1507:   movq    152(%rsi), %r13
  Inst 1508:   movq    %r14, %rbx
  Inst 1509:   addq    $-1, %rbx
  Inst 1510:   movq    %r14, %rdx
  Inst 1511:   shlq    $3, %rdx
  Inst 1512:   movq    %r13, %r12
  Inst 1513:   addq    %rdx, %r12
  Inst 1514:   movq    %r13, %rdi
  Inst 1515:   addq    $-24, %rdi
  Inst 1516:   movq    %r13, %rsi
  Inst 1517:   load_ext_name %Memmove+0, %rax
  Inst 1518:   movq    %r15, rsp(104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1519:   call    *%rax
  Inst 1520:   movq    rsp(104 + virtual offset), %r15
  Inst 1521:   load_ext_name u1:1+0, %rsi
  Inst 1522:   movl    $1, %edi
  Inst 1523:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1524:   movl    $1, %edi
  Inst 1525:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1526:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1527:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1528:   movq    %r12, 152(%rsi)
  Inst 1529:   movq    %r15, %rdi
  Inst 1530:   movq    %rbx, %rsi
  Inst 1531:   load_ext_name u0:3+0, %rax
  Inst 1532:   movq    %rdi, rsp(104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1533:   call    *%rax
  Inst 1534:   jmp     label107
Block 107:
  (successor: Block 108)
  (instruction range: 1535 .. 1550)
  Inst 1535:   movq    %rax, rsp(456 + virtual offset)
  Inst 1536:   nop     len=0
  Inst 1537:   nop     len=0
  Inst 1538:   nop     len=0
  Inst 1539:   nop     len=0
  Inst 1540:   nop     len=0
  Inst 1541:   nop     len=0
  Inst 1542:   nop     len=0
  Inst 1543:   nop     len=0
  Inst 1544:   nop     len=0
  Inst 1545:   nop     len=0
  Inst 1546:   nop     len=0
  Inst 1547:   nop     len=0
  Inst 1548:   nop     len=0
  Inst 1549:   jmp     label108
Block 108:
  (original IR block: block54)
  (successor: Block 109)
  (successor: Block 110)
  (instruction range: 1550 .. 1561)
  Inst 1550:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1551:   movq    8(%rsi), %rdi
  Inst 1552:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1553:   load_ext_name u0:2+0, %rax
  Inst 1554:   movq    %rsi, rsp(104 + virtual offset)
  Inst 1555:   movq    %rdi, rsp(112 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1556:   call    *%rax
  Inst 1557:   movq    %rax, %rbx
  Inst 1558:   movq    %rdx, %r14
  Inst 1559:   testq   %r14, %r14
  Inst 1560:   jz      label109; j label110
Block 109:
  (successor: Block 112)
  (instruction range: 1561 .. 1576)
  Inst 1561:   movq    %rbx, rsp(104 + virtual offset)
  Inst 1562:   nop     len=0
  Inst 1563:   nop     len=0
  Inst 1564:   nop     len=0
  Inst 1565:   nop     len=0
  Inst 1566:   nop     len=0
  Inst 1567:   nop     len=0
  Inst 1568:   nop     len=0
  Inst 1569:   nop     len=0
  Inst 1570:   nop     len=0
  Inst 1571:   nop     len=0
  Inst 1572:   nop     len=0
  Inst 1573:   nop     len=0
  Inst 1574:   nop     len=0
  Inst 1575:   jmp     label112
Block 110:
  (original IR block: block57)
  (successor: Block 111)
  (instruction range: 1576 .. 1605)
  Inst 1576:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1577:   movq    152(%rsi), %r13
  Inst 1578:   movq    %r14, %r15
  Inst 1579:   addq    $-1, %r15
  Inst 1580:   movq    %r14, %rdx
  Inst 1581:   shlq    $3, %rdx
  Inst 1582:   movq    %r13, %r12
  Inst 1583:   addq    %rdx, %r12
  Inst 1584:   movq    %r13, %rdi
  Inst 1585:   addq    $-24, %rdi
  Inst 1586:   movq    %r13, %rsi
  Inst 1587:   load_ext_name %Memmove+0, %rax
  Inst 1588:   movq    %rbx, rsp(112 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S14, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1589:   call    *%rax
  Inst 1590:   movq    rsp(112 + virtual offset), %rbx
  Inst 1591:   load_ext_name u1:1+0, %rsi
  Inst 1592:   movl    $1, %edi
  Inst 1593:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1594:   movl    $1, %edi
  Inst 1595:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1596:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1597:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1598:   movq    %r12, 152(%rsi)
  Inst 1599:   movq    %rbx, %rdi
  Inst 1600:   movq    %r15, %rsi
  Inst 1601:   load_ext_name u0:3+0, %rax
  Inst 1602:   movq    %rdi, rsp(104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1603:   call    *%rax
  Inst 1604:   jmp     label111
Block 111:
  (successor: Block 112)
  (instruction range: 1605 .. 1620)
  Inst 1605:   movq    %rax, rsp(104 + virtual offset)
  Inst 1606:   nop     len=0
  Inst 1607:   nop     len=0
  Inst 1608:   nop     len=0
  Inst 1609:   nop     len=0
  Inst 1610:   nop     len=0
  Inst 1611:   nop     len=0
  Inst 1612:   nop     len=0
  Inst 1613:   nop     len=0
  Inst 1614:   nop     len=0
  Inst 1615:   nop     len=0
  Inst 1616:   nop     len=0
  Inst 1617:   nop     len=0
  Inst 1618:   nop     len=0
  Inst 1619:   jmp     label112
Block 112:
  (original IR block: block56)
  (successor: Block 113)
  (successor: Block 114)
  (instruction range: 1620 .. 1631)
  Inst 1620:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1621:   movq    8(%rsi), %rdi
  Inst 1622:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1623:   load_ext_name u0:2+0, %rax
  Inst 1624:   movq    %rsi, rsp(112 + virtual offset)
  Inst 1625:   movq    %rdi, rsp(120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1626:   call    *%rax
  Inst 1627:   movq    %rax, %rbx
  Inst 1628:   movq    %rdx, %r14
  Inst 1629:   testq   %r14, %r14
  Inst 1630:   jz      label113; j label114
Block 113:
  (successor: Block 116)
  (instruction range: 1631 .. 1647)
  Inst 1631:   movq    %rbx, rsp(472 + virtual offset)
  Inst 1632:   nop     len=0
  Inst 1633:   nop     len=0
  Inst 1634:   nop     len=0
  Inst 1635:   nop     len=0
  Inst 1636:   nop     len=0
  Inst 1637:   nop     len=0
  Inst 1638:   nop     len=0
  Inst 1639:   nop     len=0
  Inst 1640:   nop     len=0
  Inst 1641:   nop     len=0
  Inst 1642:   nop     len=0
  Inst 1643:   nop     len=0
  Inst 1644:   nop     len=0
  Inst 1645:   nop     len=0
  Inst 1646:   jmp     label116
Block 114:
  (original IR block: block59)
  (successor: Block 115)
  (instruction range: 1647 .. 1676)
  Inst 1647:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1648:   movq    152(%rsi), %r13
  Inst 1649:   movq    %r14, %r15
  Inst 1650:   addq    $-1, %r15
  Inst 1651:   movq    %r14, %rdx
  Inst 1652:   shlq    $3, %rdx
  Inst 1653:   movq    %r13, %r12
  Inst 1654:   addq    %rdx, %r12
  Inst 1655:   movq    %r13, %rdi
  Inst 1656:   addq    $-24, %rdi
  Inst 1657:   movq    %r13, %rsi
  Inst 1658:   load_ext_name %Memmove+0, %rax
  Inst 1659:   movq    %rbx, rsp(112 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1660:   call    *%rax
  Inst 1661:   movq    rsp(112 + virtual offset), %rbx
  Inst 1662:   load_ext_name u1:1+0, %rsi
  Inst 1663:   movl    $1, %edi
  Inst 1664:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1665:   movl    $1, %edi
  Inst 1666:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1667:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1668:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1669:   movq    %r12, 152(%rsi)
  Inst 1670:   movq    %rbx, %rdi
  Inst 1671:   movq    %r15, %rsi
  Inst 1672:   load_ext_name u0:3+0, %rax
  Inst 1673:   movq    %rdi, rsp(112 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1674:   call    *%rax
  Inst 1675:   jmp     label115
Block 115:
  (successor: Block 116)
  (instruction range: 1676 .. 1692)
  Inst 1676:   movq    %rax, rsp(472 + virtual offset)
  Inst 1677:   nop     len=0
  Inst 1678:   nop     len=0
  Inst 1679:   nop     len=0
  Inst 1680:   nop     len=0
  Inst 1681:   nop     len=0
  Inst 1682:   nop     len=0
  Inst 1683:   nop     len=0
  Inst 1684:   nop     len=0
  Inst 1685:   nop     len=0
  Inst 1686:   nop     len=0
  Inst 1687:   nop     len=0
  Inst 1688:   nop     len=0
  Inst 1689:   nop     len=0
  Inst 1690:   nop     len=0
  Inst 1691:   jmp     label116
Block 116:
  (original IR block: block58)
  (successor: Block 117)
  (successor: Block 118)
  (instruction range: 1692 .. 1703)
  Inst 1692:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1693:   movq    8(%rsi), %rdi
  Inst 1694:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1695:   load_ext_name u0:2+0, %rax
  Inst 1696:   movq    %rsi, rsp(112 + virtual offset)
  Inst 1697:   movq    %rdi, rsp(120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1698:   call    *%rax
  Inst 1699:   movq    %rax, %r15
  Inst 1700:   movq    %rdx, %r14
  Inst 1701:   testq   %r14, %r14
  Inst 1702:   jz      label117; j label118
Block 117:
  (successor: Block 120)
  (instruction range: 1703 .. 1719)
  Inst 1703:   movq    %r15, rsp(112 + virtual offset)
  Inst 1704:   nop     len=0
  Inst 1705:   nop     len=0
  Inst 1706:   nop     len=0
  Inst 1707:   nop     len=0
  Inst 1708:   nop     len=0
  Inst 1709:   nop     len=0
  Inst 1710:   nop     len=0
  Inst 1711:   nop     len=0
  Inst 1712:   nop     len=0
  Inst 1713:   nop     len=0
  Inst 1714:   nop     len=0
  Inst 1715:   nop     len=0
  Inst 1716:   nop     len=0
  Inst 1717:   nop     len=0
  Inst 1718:   jmp     label120
Block 118:
  (original IR block: block61)
  (successor: Block 119)
  (instruction range: 1719 .. 1748)
  Inst 1719:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1720:   movq    152(%rsi), %r13
  Inst 1721:   movq    %r14, %rbx
  Inst 1722:   addq    $-1, %rbx
  Inst 1723:   movq    %r14, %rdx
  Inst 1724:   shlq    $3, %rdx
  Inst 1725:   movq    %r13, %r12
  Inst 1726:   addq    %rdx, %r12
  Inst 1727:   movq    %r13, %rdi
  Inst 1728:   addq    $-24, %rdi
  Inst 1729:   movq    %r13, %rsi
  Inst 1730:   load_ext_name %Memmove+0, %rax
  Inst 1731:   movq    %r15, rsp(120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S15, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1732:   call    *%rax
  Inst 1733:   movq    rsp(120 + virtual offset), %r15
  Inst 1734:   load_ext_name u1:1+0, %rsi
  Inst 1735:   movl    $1, %edi
  Inst 1736:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1737:   movl    $1, %edi
  Inst 1738:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1739:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1740:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1741:   movq    %r12, 152(%rsi)
  Inst 1742:   movq    %r15, %rdi
  Inst 1743:   movq    %rbx, %rsi
  Inst 1744:   load_ext_name u0:3+0, %rax
  Inst 1745:   movq    %rdi, rsp(112 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1746:   call    *%rax
  Inst 1747:   jmp     label119
Block 119:
  (successor: Block 120)
  (instruction range: 1748 .. 1764)
  Inst 1748:   movq    %rax, rsp(112 + virtual offset)
  Inst 1749:   nop     len=0
  Inst 1750:   nop     len=0
  Inst 1751:   nop     len=0
  Inst 1752:   nop     len=0
  Inst 1753:   nop     len=0
  Inst 1754:   nop     len=0
  Inst 1755:   nop     len=0
  Inst 1756:   nop     len=0
  Inst 1757:   nop     len=0
  Inst 1758:   nop     len=0
  Inst 1759:   nop     len=0
  Inst 1760:   nop     len=0
  Inst 1761:   nop     len=0
  Inst 1762:   nop     len=0
  Inst 1763:   jmp     label120
Block 120:
  (original IR block: block60)
  (successor: Block 121)
  (successor: Block 122)
  (instruction range: 1764 .. 1775)
  Inst 1764:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1765:   movq    8(%rsi), %rdi
  Inst 1766:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1767:   load_ext_name u0:2+0, %rax
  Inst 1768:   movq    %rsi, rsp(120 + virtual offset)
  Inst 1769:   movq    %rdi, rsp(128 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1770:   call    *%rax
  Inst 1771:   movq    %rax, %rbx
  Inst 1772:   movq    %rdx, %r14
  Inst 1773:   testq   %r14, %r14
  Inst 1774:   jz      label121; j label122
Block 121:
  (successor: Block 124)
  (instruction range: 1775 .. 1792)
  Inst 1775:   movq    %rbx, rsp(488 + virtual offset)
  Inst 1776:   nop     len=0
  Inst 1777:   nop     len=0
  Inst 1778:   nop     len=0
  Inst 1779:   nop     len=0
  Inst 1780:   nop     len=0
  Inst 1781:   nop     len=0
  Inst 1782:   nop     len=0
  Inst 1783:   nop     len=0
  Inst 1784:   nop     len=0
  Inst 1785:   nop     len=0
  Inst 1786:   nop     len=0
  Inst 1787:   nop     len=0
  Inst 1788:   nop     len=0
  Inst 1789:   nop     len=0
  Inst 1790:   nop     len=0
  Inst 1791:   jmp     label124
Block 122:
  (original IR block: block63)
  (successor: Block 123)
  (instruction range: 1792 .. 1821)
  Inst 1792:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1793:   movq    152(%rsi), %r13
  Inst 1794:   movq    %r14, %r15
  Inst 1795:   addq    $-1, %r15
  Inst 1796:   movq    %r14, %rdx
  Inst 1797:   shlq    $3, %rdx
  Inst 1798:   movq    %r13, %r12
  Inst 1799:   addq    %rdx, %r12
  Inst 1800:   movq    %r13, %rdi
  Inst 1801:   addq    $-24, %rdi
  Inst 1802:   movq    %r13, %rsi
  Inst 1803:   load_ext_name %Memmove+0, %rax
  Inst 1804:   movq    %rbx, rsp(120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1805:   call    *%rax
  Inst 1806:   movq    rsp(120 + virtual offset), %rbx
  Inst 1807:   load_ext_name u1:1+0, %rsi
  Inst 1808:   movl    $1, %edi
  Inst 1809:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1810:   movl    $1, %edi
  Inst 1811:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1812:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1813:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1814:   movq    %r12, 152(%rsi)
  Inst 1815:   movq    %rbx, %rdi
  Inst 1816:   movq    %r15, %rsi
  Inst 1817:   load_ext_name u0:3+0, %rax
  Inst 1818:   movq    %rdi, rsp(120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1819:   call    *%rax
  Inst 1820:   jmp     label123
Block 123:
  (successor: Block 124)
  (instruction range: 1821 .. 1838)
  Inst 1821:   movq    %rax, rsp(488 + virtual offset)
  Inst 1822:   nop     len=0
  Inst 1823:   nop     len=0
  Inst 1824:   nop     len=0
  Inst 1825:   nop     len=0
  Inst 1826:   nop     len=0
  Inst 1827:   nop     len=0
  Inst 1828:   nop     len=0
  Inst 1829:   nop     len=0
  Inst 1830:   nop     len=0
  Inst 1831:   nop     len=0
  Inst 1832:   nop     len=0
  Inst 1833:   nop     len=0
  Inst 1834:   nop     len=0
  Inst 1835:   nop     len=0
  Inst 1836:   nop     len=0
  Inst 1837:   jmp     label124
Block 124:
  (original IR block: block62)
  (successor: Block 125)
  (successor: Block 126)
  (instruction range: 1838 .. 1849)
  Inst 1838:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1839:   movq    8(%rsi), %rdi
  Inst 1840:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1841:   load_ext_name u0:2+0, %rax
  Inst 1842:   movq    %rsi, rsp(120 + virtual offset)
  Inst 1843:   movq    %rdi, rsp(128 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1844:   call    *%rax
  Inst 1845:   movq    %rax, %rbx
  Inst 1846:   movq    %rdx, %r14
  Inst 1847:   testq   %r14, %r14
  Inst 1848:   jz      label125; j label126
Block 125:
  (successor: Block 128)
  (instruction range: 1849 .. 1866)
  Inst 1849:   movq    %rbx, rsp(120 + virtual offset)
  Inst 1850:   nop     len=0
  Inst 1851:   nop     len=0
  Inst 1852:   nop     len=0
  Inst 1853:   nop     len=0
  Inst 1854:   nop     len=0
  Inst 1855:   nop     len=0
  Inst 1856:   nop     len=0
  Inst 1857:   nop     len=0
  Inst 1858:   nop     len=0
  Inst 1859:   nop     len=0
  Inst 1860:   nop     len=0
  Inst 1861:   nop     len=0
  Inst 1862:   nop     len=0
  Inst 1863:   nop     len=0
  Inst 1864:   nop     len=0
  Inst 1865:   jmp     label128
Block 126:
  (original IR block: block65)
  (successor: Block 127)
  (instruction range: 1866 .. 1895)
  Inst 1866:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1867:   movq    152(%rsi), %r13
  Inst 1868:   movq    %r14, %r15
  Inst 1869:   addq    $-1, %r15
  Inst 1870:   movq    %r14, %rdx
  Inst 1871:   shlq    $3, %rdx
  Inst 1872:   movq    %r13, %r12
  Inst 1873:   addq    %rdx, %r12
  Inst 1874:   movq    %r13, %rdi
  Inst 1875:   addq    $-24, %rdi
  Inst 1876:   movq    %r13, %rsi
  Inst 1877:   load_ext_name %Memmove+0, %rax
  Inst 1878:   movq    %rbx, rsp(128 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S16, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1879:   call    *%rax
  Inst 1880:   movq    rsp(128 + virtual offset), %rbx
  Inst 1881:   load_ext_name u1:1+0, %rsi
  Inst 1882:   movl    $1, %edi
  Inst 1883:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1884:   movl    $1, %edi
  Inst 1885:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1886:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1887:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1888:   movq    %r12, 152(%rsi)
  Inst 1889:   movq    %rbx, %rdi
  Inst 1890:   movq    %r15, %rsi
  Inst 1891:   load_ext_name u0:3+0, %rax
  Inst 1892:   movq    %rdi, rsp(120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1893:   call    *%rax
  Inst 1894:   jmp     label127
Block 127:
  (successor: Block 128)
  (instruction range: 1895 .. 1912)
  Inst 1895:   movq    %rax, rsp(120 + virtual offset)
  Inst 1896:   nop     len=0
  Inst 1897:   nop     len=0
  Inst 1898:   nop     len=0
  Inst 1899:   nop     len=0
  Inst 1900:   nop     len=0
  Inst 1901:   nop     len=0
  Inst 1902:   nop     len=0
  Inst 1903:   nop     len=0
  Inst 1904:   nop     len=0
  Inst 1905:   nop     len=0
  Inst 1906:   nop     len=0
  Inst 1907:   nop     len=0
  Inst 1908:   nop     len=0
  Inst 1909:   nop     len=0
  Inst 1910:   nop     len=0
  Inst 1911:   jmp     label128
Block 128:
  (original IR block: block64)
  (successor: Block 129)
  (successor: Block 130)
  (instruction range: 1912 .. 1923)
  Inst 1912:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1913:   movq    8(%rsi), %rdi
  Inst 1914:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1915:   load_ext_name u0:2+0, %rax
  Inst 1916:   movq    %rsi, rsp(128 + virtual offset)
  Inst 1917:   movq    %rdi, rsp(136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1918:   call    *%rax
  Inst 1919:   movq    %rax, %r15
  Inst 1920:   movq    %rdx, %r14
  Inst 1921:   testq   %r14, %r14
  Inst 1922:   jz      label129; j label130
Block 129:
  (successor: Block 132)
  (instruction range: 1923 .. 1941)
  Inst 1923:   movq    %r15, rsp(504 + virtual offset)
  Inst 1924:   nop     len=0
  Inst 1925:   nop     len=0
  Inst 1926:   nop     len=0
  Inst 1927:   nop     len=0
  Inst 1928:   nop     len=0
  Inst 1929:   nop     len=0
  Inst 1930:   nop     len=0
  Inst 1931:   nop     len=0
  Inst 1932:   nop     len=0
  Inst 1933:   nop     len=0
  Inst 1934:   nop     len=0
  Inst 1935:   nop     len=0
  Inst 1936:   nop     len=0
  Inst 1937:   nop     len=0
  Inst 1938:   nop     len=0
  Inst 1939:   nop     len=0
  Inst 1940:   jmp     label132
Block 130:
  (original IR block: block67)
  (successor: Block 131)
  (instruction range: 1941 .. 1970)
  Inst 1941:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1942:   movq    152(%rsi), %r13
  Inst 1943:   movq    %r14, %rbx
  Inst 1944:   addq    $-1, %rbx
  Inst 1945:   movq    %r14, %rdx
  Inst 1946:   shlq    $3, %rdx
  Inst 1947:   movq    %r13, %r12
  Inst 1948:   addq    %rdx, %r12
  Inst 1949:   movq    %r13, %rdi
  Inst 1950:   addq    $-24, %rdi
  Inst 1951:   movq    %r13, %rsi
  Inst 1952:   load_ext_name %Memmove+0, %rax
  Inst 1953:   movq    %r15, rsp(128 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1954:   call    *%rax
  Inst 1955:   movq    rsp(128 + virtual offset), %r15
  Inst 1956:   load_ext_name u1:1+0, %rsi
  Inst 1957:   movl    $1, %edi
  Inst 1958:   movq    %rdi, -8(%r13,%r14,8)
  Inst 1959:   movl    $1, %edi
  Inst 1960:   movq    %rdi, -16(%r13,%r14,8)
  Inst 1961:   movq    %rsi, -24(%r13,%r14,8)
  Inst 1962:   movq    rsp(2072 + virtual offset), %rsi
  Inst 1963:   movq    %r12, 152(%rsi)
  Inst 1964:   movq    %r15, %rdi
  Inst 1965:   movq    %rbx, %rsi
  Inst 1966:   load_ext_name u0:3+0, %rax
  Inst 1967:   movq    %rdi, rsp(128 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1968:   call    *%rax
  Inst 1969:   jmp     label131
Block 131:
  (successor: Block 132)
  (instruction range: 1970 .. 1988)
  Inst 1970:   movq    %rax, rsp(504 + virtual offset)
  Inst 1971:   nop     len=0
  Inst 1972:   nop     len=0
  Inst 1973:   nop     len=0
  Inst 1974:   nop     len=0
  Inst 1975:   nop     len=0
  Inst 1976:   nop     len=0
  Inst 1977:   nop     len=0
  Inst 1978:   nop     len=0
  Inst 1979:   nop     len=0
  Inst 1980:   nop     len=0
  Inst 1981:   nop     len=0
  Inst 1982:   nop     len=0
  Inst 1983:   nop     len=0
  Inst 1984:   nop     len=0
  Inst 1985:   nop     len=0
  Inst 1986:   nop     len=0
  Inst 1987:   jmp     label132
Block 132:
  (original IR block: block66)
  (successor: Block 133)
  (successor: Block 134)
  (instruction range: 1988 .. 1999)
  Inst 1988:   movq    rsp(2064 + virtual offset), %rsi
  Inst 1989:   movq    8(%rsi), %rdi
  Inst 1990:   movq    rsp(2048 + virtual offset), %rsi
  Inst 1991:   load_ext_name u0:2+0, %rax
  Inst 1992:   movq    %rsi, rsp(128 + virtual offset)
  Inst 1993:   movq    %rdi, rsp(136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 1994:   call    *%rax
  Inst 1995:   movq    %rax, %rbx
  Inst 1996:   movq    %rdx, %r14
  Inst 1997:   testq   %r14, %r14
  Inst 1998:   jz      label133; j label134
Block 133:
  (successor: Block 136)
  (instruction range: 1999 .. 2017)
  Inst 1999:   movq    %rbx, rsp(128 + virtual offset)
  Inst 2000:   nop     len=0
  Inst 2001:   nop     len=0
  Inst 2002:   nop     len=0
  Inst 2003:   nop     len=0
  Inst 2004:   nop     len=0
  Inst 2005:   nop     len=0
  Inst 2006:   nop     len=0
  Inst 2007:   nop     len=0
  Inst 2008:   nop     len=0
  Inst 2009:   nop     len=0
  Inst 2010:   nop     len=0
  Inst 2011:   nop     len=0
  Inst 2012:   nop     len=0
  Inst 2013:   nop     len=0
  Inst 2014:   nop     len=0
  Inst 2015:   nop     len=0
  Inst 2016:   jmp     label136
Block 134:
  (original IR block: block69)
  (successor: Block 135)
  (instruction range: 2017 .. 2046)
  Inst 2017:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2018:   movq    152(%rsi), %r13
  Inst 2019:   movq    %r14, %r15
  Inst 2020:   addq    $-1, %r15
  Inst 2021:   movq    %r14, %rdx
  Inst 2022:   shlq    $3, %rdx
  Inst 2023:   movq    %r13, %r12
  Inst 2024:   addq    %rdx, %r12
  Inst 2025:   movq    %r13, %rdi
  Inst 2026:   addq    $-24, %rdi
  Inst 2027:   movq    %r13, %rsi
  Inst 2028:   load_ext_name %Memmove+0, %rax
  Inst 2029:   movq    %rbx, rsp(136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S17, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2030:   call    *%rax
  Inst 2031:   movq    rsp(136 + virtual offset), %rbx
  Inst 2032:   load_ext_name u1:1+0, %rsi
  Inst 2033:   movl    $1, %edi
  Inst 2034:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2035:   movl    $1, %edi
  Inst 2036:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2037:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2038:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2039:   movq    %r12, 152(%rsi)
  Inst 2040:   movq    %rbx, %rdi
  Inst 2041:   movq    %r15, %rsi
  Inst 2042:   load_ext_name u0:3+0, %rax
  Inst 2043:   movq    %rdi, rsp(128 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2044:   call    *%rax
  Inst 2045:   jmp     label135
Block 135:
  (successor: Block 136)
  (instruction range: 2046 .. 2064)
  Inst 2046:   movq    %rax, rsp(128 + virtual offset)
  Inst 2047:   nop     len=0
  Inst 2048:   nop     len=0
  Inst 2049:   nop     len=0
  Inst 2050:   nop     len=0
  Inst 2051:   nop     len=0
  Inst 2052:   nop     len=0
  Inst 2053:   nop     len=0
  Inst 2054:   nop     len=0
  Inst 2055:   nop     len=0
  Inst 2056:   nop     len=0
  Inst 2057:   nop     len=0
  Inst 2058:   nop     len=0
  Inst 2059:   nop     len=0
  Inst 2060:   nop     len=0
  Inst 2061:   nop     len=0
  Inst 2062:   nop     len=0
  Inst 2063:   jmp     label136
Block 136:
  (original IR block: block68)
  (successor: Block 137)
  (successor: Block 138)
  (instruction range: 2064 .. 2075)
  Inst 2064:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2065:   movq    8(%rsi), %rdi
  Inst 2066:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2067:   load_ext_name u0:2+0, %rax
  Inst 2068:   movq    %rsi, rsp(136 + virtual offset)
  Inst 2069:   movq    %rdi, rsp(144 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2070:   call    *%rax
  Inst 2071:   movq    %rax, %rbx
  Inst 2072:   movq    %rdx, %r14
  Inst 2073:   testq   %r14, %r14
  Inst 2074:   jz      label137; j label138
Block 137:
  (successor: Block 140)
  (instruction range: 2075 .. 2094)
  Inst 2075:   movq    %rbx, rsp(520 + virtual offset)
  Inst 2076:   nop     len=0
  Inst 2077:   nop     len=0
  Inst 2078:   nop     len=0
  Inst 2079:   nop     len=0
  Inst 2080:   nop     len=0
  Inst 2081:   nop     len=0
  Inst 2082:   nop     len=0
  Inst 2083:   nop     len=0
  Inst 2084:   nop     len=0
  Inst 2085:   nop     len=0
  Inst 2086:   nop     len=0
  Inst 2087:   nop     len=0
  Inst 2088:   nop     len=0
  Inst 2089:   nop     len=0
  Inst 2090:   nop     len=0
  Inst 2091:   nop     len=0
  Inst 2092:   nop     len=0
  Inst 2093:   jmp     label140
Block 138:
  (original IR block: block71)
  (successor: Block 139)
  (instruction range: 2094 .. 2123)
  Inst 2094:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2095:   movq    152(%rsi), %r13
  Inst 2096:   movq    %r14, %r15
  Inst 2097:   addq    $-1, %r15
  Inst 2098:   movq    %r14, %rdx
  Inst 2099:   shlq    $3, %rdx
  Inst 2100:   movq    %r13, %r12
  Inst 2101:   addq    %rdx, %r12
  Inst 2102:   movq    %r13, %rdi
  Inst 2103:   addq    $-24, %rdi
  Inst 2104:   movq    %r13, %rsi
  Inst 2105:   load_ext_name %Memmove+0, %rax
  Inst 2106:   movq    %rbx, rsp(136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2107:   call    *%rax
  Inst 2108:   movq    rsp(136 + virtual offset), %rbx
  Inst 2109:   load_ext_name u1:1+0, %rsi
  Inst 2110:   movl    $1, %edi
  Inst 2111:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2112:   movl    $1, %edi
  Inst 2113:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2114:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2115:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2116:   movq    %r12, 152(%rsi)
  Inst 2117:   movq    %rbx, %rdi
  Inst 2118:   movq    %r15, %rsi
  Inst 2119:   load_ext_name u0:3+0, %rax
  Inst 2120:   movq    %rdi, rsp(136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2121:   call    *%rax
  Inst 2122:   jmp     label139
Block 139:
  (successor: Block 140)
  (instruction range: 2123 .. 2142)
  Inst 2123:   movq    %rax, rsp(520 + virtual offset)
  Inst 2124:   nop     len=0
  Inst 2125:   nop     len=0
  Inst 2126:   nop     len=0
  Inst 2127:   nop     len=0
  Inst 2128:   nop     len=0
  Inst 2129:   nop     len=0
  Inst 2130:   nop     len=0
  Inst 2131:   nop     len=0
  Inst 2132:   nop     len=0
  Inst 2133:   nop     len=0
  Inst 2134:   nop     len=0
  Inst 2135:   nop     len=0
  Inst 2136:   nop     len=0
  Inst 2137:   nop     len=0
  Inst 2138:   nop     len=0
  Inst 2139:   nop     len=0
  Inst 2140:   nop     len=0
  Inst 2141:   jmp     label140
Block 140:
  (original IR block: block70)
  (successor: Block 141)
  (successor: Block 142)
  (instruction range: 2142 .. 2153)
  Inst 2142:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2143:   movq    8(%rsi), %rdi
  Inst 2144:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2145:   load_ext_name u0:2+0, %rax
  Inst 2146:   movq    %rsi, rsp(136 + virtual offset)
  Inst 2147:   movq    %rdi, rsp(144 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2148:   call    *%rax
  Inst 2149:   movq    %rax, %r15
  Inst 2150:   movq    %rdx, %r14
  Inst 2151:   testq   %r14, %r14
  Inst 2152:   jz      label141; j label142
Block 141:
  (successor: Block 144)
  (instruction range: 2153 .. 2172)
  Inst 2153:   movq    %r15, rsp(136 + virtual offset)
  Inst 2154:   nop     len=0
  Inst 2155:   nop     len=0
  Inst 2156:   nop     len=0
  Inst 2157:   nop     len=0
  Inst 2158:   nop     len=0
  Inst 2159:   nop     len=0
  Inst 2160:   nop     len=0
  Inst 2161:   nop     len=0
  Inst 2162:   nop     len=0
  Inst 2163:   nop     len=0
  Inst 2164:   nop     len=0
  Inst 2165:   nop     len=0
  Inst 2166:   nop     len=0
  Inst 2167:   nop     len=0
  Inst 2168:   nop     len=0
  Inst 2169:   nop     len=0
  Inst 2170:   nop     len=0
  Inst 2171:   jmp     label144
Block 142:
  (original IR block: block73)
  (successor: Block 143)
  (instruction range: 2172 .. 2201)
  Inst 2172:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2173:   movq    152(%rsi), %r13
  Inst 2174:   movq    %r14, %rbx
  Inst 2175:   addq    $-1, %rbx
  Inst 2176:   movq    %r14, %rdx
  Inst 2177:   shlq    $3, %rdx
  Inst 2178:   movq    %r13, %r12
  Inst 2179:   addq    %rdx, %r12
  Inst 2180:   movq    %r13, %rdi
  Inst 2181:   addq    $-24, %rdi
  Inst 2182:   movq    %r13, %rsi
  Inst 2183:   load_ext_name %Memmove+0, %rax
  Inst 2184:   movq    %r15, rsp(144 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S18, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2185:   call    *%rax
  Inst 2186:   movq    rsp(144 + virtual offset), %r15
  Inst 2187:   load_ext_name u1:1+0, %rsi
  Inst 2188:   movl    $1, %edi
  Inst 2189:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2190:   movl    $1, %edi
  Inst 2191:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2192:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2193:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2194:   movq    %r12, 152(%rsi)
  Inst 2195:   movq    %r15, %rdi
  Inst 2196:   movq    %rbx, %rsi
  Inst 2197:   load_ext_name u0:3+0, %rax
  Inst 2198:   movq    %rdi, rsp(136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2199:   call    *%rax
  Inst 2200:   jmp     label143
Block 143:
  (successor: Block 144)
  (instruction range: 2201 .. 2220)
  Inst 2201:   movq    %rax, rsp(136 + virtual offset)
  Inst 2202:   nop     len=0
  Inst 2203:   nop     len=0
  Inst 2204:   nop     len=0
  Inst 2205:   nop     len=0
  Inst 2206:   nop     len=0
  Inst 2207:   nop     len=0
  Inst 2208:   nop     len=0
  Inst 2209:   nop     len=0
  Inst 2210:   nop     len=0
  Inst 2211:   nop     len=0
  Inst 2212:   nop     len=0
  Inst 2213:   nop     len=0
  Inst 2214:   nop     len=0
  Inst 2215:   nop     len=0
  Inst 2216:   nop     len=0
  Inst 2217:   nop     len=0
  Inst 2218:   nop     len=0
  Inst 2219:   jmp     label144
Block 144:
  (original IR block: block72)
  (successor: Block 145)
  (successor: Block 146)
  (instruction range: 2220 .. 2231)
  Inst 2220:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2221:   movq    8(%rsi), %rdi
  Inst 2222:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2223:   load_ext_name u0:2+0, %rax
  Inst 2224:   movq    %rsi, rsp(144 + virtual offset)
  Inst 2225:   movq    %rdi, rsp(152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2226:   call    *%rax
  Inst 2227:   movq    %rax, %rbx
  Inst 2228:   movq    %rdx, %r14
  Inst 2229:   testq   %r14, %r14
  Inst 2230:   jz      label145; j label146
Block 145:
  (successor: Block 148)
  (instruction range: 2231 .. 2251)
  Inst 2231:   movq    %rbx, rsp(536 + virtual offset)
  Inst 2232:   nop     len=0
  Inst 2233:   nop     len=0
  Inst 2234:   nop     len=0
  Inst 2235:   nop     len=0
  Inst 2236:   nop     len=0
  Inst 2237:   nop     len=0
  Inst 2238:   nop     len=0
  Inst 2239:   nop     len=0
  Inst 2240:   nop     len=0
  Inst 2241:   nop     len=0
  Inst 2242:   nop     len=0
  Inst 2243:   nop     len=0
  Inst 2244:   nop     len=0
  Inst 2245:   nop     len=0
  Inst 2246:   nop     len=0
  Inst 2247:   nop     len=0
  Inst 2248:   nop     len=0
  Inst 2249:   nop     len=0
  Inst 2250:   jmp     label148
Block 146:
  (original IR block: block75)
  (successor: Block 147)
  (instruction range: 2251 .. 2280)
  Inst 2251:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2252:   movq    152(%rsi), %r13
  Inst 2253:   movq    %r14, %r15
  Inst 2254:   addq    $-1, %r15
  Inst 2255:   movq    %r14, %rdx
  Inst 2256:   shlq    $3, %rdx
  Inst 2257:   movq    %r13, %r12
  Inst 2258:   addq    %rdx, %r12
  Inst 2259:   movq    %r13, %rdi
  Inst 2260:   addq    $-24, %rdi
  Inst 2261:   movq    %r13, %rsi
  Inst 2262:   load_ext_name %Memmove+0, %rax
  Inst 2263:   movq    %rbx, rsp(144 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2264:   call    *%rax
  Inst 2265:   movq    rsp(144 + virtual offset), %rbx
  Inst 2266:   load_ext_name u1:1+0, %rsi
  Inst 2267:   movl    $1, %edi
  Inst 2268:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2269:   movl    $1, %edi
  Inst 2270:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2271:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2272:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2273:   movq    %r12, 152(%rsi)
  Inst 2274:   movq    %rbx, %rdi
  Inst 2275:   movq    %r15, %rsi
  Inst 2276:   load_ext_name u0:3+0, %rax
  Inst 2277:   movq    %rdi, rsp(144 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2278:   call    *%rax
  Inst 2279:   jmp     label147
Block 147:
  (successor: Block 148)
  (instruction range: 2280 .. 2300)
  Inst 2280:   movq    %rax, rsp(536 + virtual offset)
  Inst 2281:   nop     len=0
  Inst 2282:   nop     len=0
  Inst 2283:   nop     len=0
  Inst 2284:   nop     len=0
  Inst 2285:   nop     len=0
  Inst 2286:   nop     len=0
  Inst 2287:   nop     len=0
  Inst 2288:   nop     len=0
  Inst 2289:   nop     len=0
  Inst 2290:   nop     len=0
  Inst 2291:   nop     len=0
  Inst 2292:   nop     len=0
  Inst 2293:   nop     len=0
  Inst 2294:   nop     len=0
  Inst 2295:   nop     len=0
  Inst 2296:   nop     len=0
  Inst 2297:   nop     len=0
  Inst 2298:   nop     len=0
  Inst 2299:   jmp     label148
Block 148:
  (original IR block: block74)
  (successor: Block 149)
  (successor: Block 150)
  (instruction range: 2300 .. 2311)
  Inst 2300:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2301:   movq    8(%rsi), %rdi
  Inst 2302:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2303:   load_ext_name u0:2+0, %rax
  Inst 2304:   movq    %rsi, rsp(144 + virtual offset)
  Inst 2305:   movq    %rdi, rsp(152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2306:   call    *%rax
  Inst 2307:   movq    %rax, %rbx
  Inst 2308:   movq    %rdx, %r14
  Inst 2309:   testq   %r14, %r14
  Inst 2310:   jz      label149; j label150
Block 149:
  (successor: Block 152)
  (instruction range: 2311 .. 2331)
  Inst 2311:   movq    %rbx, rsp(144 + virtual offset)
  Inst 2312:   nop     len=0
  Inst 2313:   nop     len=0
  Inst 2314:   nop     len=0
  Inst 2315:   nop     len=0
  Inst 2316:   nop     len=0
  Inst 2317:   nop     len=0
  Inst 2318:   nop     len=0
  Inst 2319:   nop     len=0
  Inst 2320:   nop     len=0
  Inst 2321:   nop     len=0
  Inst 2322:   nop     len=0
  Inst 2323:   nop     len=0
  Inst 2324:   nop     len=0
  Inst 2325:   nop     len=0
  Inst 2326:   nop     len=0
  Inst 2327:   nop     len=0
  Inst 2328:   nop     len=0
  Inst 2329:   nop     len=0
  Inst 2330:   jmp     label152
Block 150:
  (original IR block: block77)
  (successor: Block 151)
  (instruction range: 2331 .. 2360)
  Inst 2331:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2332:   movq    152(%rsi), %r13
  Inst 2333:   movq    %r14, %r15
  Inst 2334:   addq    $-1, %r15
  Inst 2335:   movq    %r14, %rdx
  Inst 2336:   shlq    $3, %rdx
  Inst 2337:   movq    %r13, %r12
  Inst 2338:   addq    %rdx, %r12
  Inst 2339:   movq    %r13, %rdi
  Inst 2340:   addq    $-24, %rdi
  Inst 2341:   movq    %r13, %rsi
  Inst 2342:   load_ext_name %Memmove+0, %rax
  Inst 2343:   movq    %rbx, rsp(152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S19, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2344:   call    *%rax
  Inst 2345:   movq    rsp(152 + virtual offset), %rbx
  Inst 2346:   load_ext_name u1:1+0, %rsi
  Inst 2347:   movl    $1, %edi
  Inst 2348:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2349:   movl    $1, %edi
  Inst 2350:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2351:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2352:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2353:   movq    %r12, 152(%rsi)
  Inst 2354:   movq    %rbx, %rdi
  Inst 2355:   movq    %r15, %rsi
  Inst 2356:   load_ext_name u0:3+0, %rax
  Inst 2357:   movq    %rdi, rsp(144 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2358:   call    *%rax
  Inst 2359:   jmp     label151
Block 151:
  (successor: Block 152)
  (instruction range: 2360 .. 2380)
  Inst 2360:   movq    %rax, rsp(144 + virtual offset)
  Inst 2361:   nop     len=0
  Inst 2362:   nop     len=0
  Inst 2363:   nop     len=0
  Inst 2364:   nop     len=0
  Inst 2365:   nop     len=0
  Inst 2366:   nop     len=0
  Inst 2367:   nop     len=0
  Inst 2368:   nop     len=0
  Inst 2369:   nop     len=0
  Inst 2370:   nop     len=0
  Inst 2371:   nop     len=0
  Inst 2372:   nop     len=0
  Inst 2373:   nop     len=0
  Inst 2374:   nop     len=0
  Inst 2375:   nop     len=0
  Inst 2376:   nop     len=0
  Inst 2377:   nop     len=0
  Inst 2378:   nop     len=0
  Inst 2379:   jmp     label152
Block 152:
  (original IR block: block76)
  (successor: Block 153)
  (successor: Block 154)
  (instruction range: 2380 .. 2391)
  Inst 2380:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2381:   movq    8(%rsi), %rdi
  Inst 2382:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2383:   load_ext_name u0:2+0, %rax
  Inst 2384:   movq    %rsi, rsp(152 + virtual offset)
  Inst 2385:   movq    %rdi, rsp(160 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2386:   call    *%rax
  Inst 2387:   movq    %rax, %r15
  Inst 2388:   movq    %rdx, %r14
  Inst 2389:   testq   %r14, %r14
  Inst 2390:   jz      label153; j label154
Block 153:
  (successor: Block 156)
  (instruction range: 2391 .. 2412)
  Inst 2391:   movq    %r15, rsp(552 + virtual offset)
  Inst 2392:   nop     len=0
  Inst 2393:   nop     len=0
  Inst 2394:   nop     len=0
  Inst 2395:   nop     len=0
  Inst 2396:   nop     len=0
  Inst 2397:   nop     len=0
  Inst 2398:   nop     len=0
  Inst 2399:   nop     len=0
  Inst 2400:   nop     len=0
  Inst 2401:   nop     len=0
  Inst 2402:   nop     len=0
  Inst 2403:   nop     len=0
  Inst 2404:   nop     len=0
  Inst 2405:   nop     len=0
  Inst 2406:   nop     len=0
  Inst 2407:   nop     len=0
  Inst 2408:   nop     len=0
  Inst 2409:   nop     len=0
  Inst 2410:   nop     len=0
  Inst 2411:   jmp     label156
Block 154:
  (original IR block: block79)
  (successor: Block 155)
  (instruction range: 2412 .. 2441)
  Inst 2412:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2413:   movq    152(%rsi), %r13
  Inst 2414:   movq    %r14, %rbx
  Inst 2415:   addq    $-1, %rbx
  Inst 2416:   movq    %r14, %rdx
  Inst 2417:   shlq    $3, %rdx
  Inst 2418:   movq    %r13, %r12
  Inst 2419:   addq    %rdx, %r12
  Inst 2420:   movq    %r13, %rdi
  Inst 2421:   addq    $-24, %rdi
  Inst 2422:   movq    %r13, %rsi
  Inst 2423:   load_ext_name %Memmove+0, %rax
  Inst 2424:   movq    %r15, rsp(152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2425:   call    *%rax
  Inst 2426:   movq    rsp(152 + virtual offset), %r15
  Inst 2427:   load_ext_name u1:1+0, %rsi
  Inst 2428:   movl    $1, %edi
  Inst 2429:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2430:   movl    $1, %edi
  Inst 2431:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2432:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2433:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2434:   movq    %r12, 152(%rsi)
  Inst 2435:   movq    %r15, %rdi
  Inst 2436:   movq    %rbx, %rsi
  Inst 2437:   load_ext_name u0:3+0, %rax
  Inst 2438:   movq    %rdi, rsp(152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2439:   call    *%rax
  Inst 2440:   jmp     label155
Block 155:
  (successor: Block 156)
  (instruction range: 2441 .. 2462)
  Inst 2441:   movq    %rax, rsp(552 + virtual offset)
  Inst 2442:   nop     len=0
  Inst 2443:   nop     len=0
  Inst 2444:   nop     len=0
  Inst 2445:   nop     len=0
  Inst 2446:   nop     len=0
  Inst 2447:   nop     len=0
  Inst 2448:   nop     len=0
  Inst 2449:   nop     len=0
  Inst 2450:   nop     len=0
  Inst 2451:   nop     len=0
  Inst 2452:   nop     len=0
  Inst 2453:   nop     len=0
  Inst 2454:   nop     len=0
  Inst 2455:   nop     len=0
  Inst 2456:   nop     len=0
  Inst 2457:   nop     len=0
  Inst 2458:   nop     len=0
  Inst 2459:   nop     len=0
  Inst 2460:   nop     len=0
  Inst 2461:   jmp     label156
Block 156:
  (original IR block: block78)
  (successor: Block 157)
  (successor: Block 158)
  (instruction range: 2462 .. 2473)
  Inst 2462:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2463:   movq    8(%rsi), %rdi
  Inst 2464:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2465:   load_ext_name u0:2+0, %rax
  Inst 2466:   movq    %rsi, rsp(152 + virtual offset)
  Inst 2467:   movq    %rdi, rsp(160 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2468:   call    *%rax
  Inst 2469:   movq    %rax, %rbx
  Inst 2470:   movq    %rdx, %r14
  Inst 2471:   testq   %r14, %r14
  Inst 2472:   jz      label157; j label158
Block 157:
  (successor: Block 160)
  (instruction range: 2473 .. 2494)
  Inst 2473:   movq    %rbx, rsp(152 + virtual offset)
  Inst 2474:   nop     len=0
  Inst 2475:   nop     len=0
  Inst 2476:   nop     len=0
  Inst 2477:   nop     len=0
  Inst 2478:   nop     len=0
  Inst 2479:   nop     len=0
  Inst 2480:   nop     len=0
  Inst 2481:   nop     len=0
  Inst 2482:   nop     len=0
  Inst 2483:   nop     len=0
  Inst 2484:   nop     len=0
  Inst 2485:   nop     len=0
  Inst 2486:   nop     len=0
  Inst 2487:   nop     len=0
  Inst 2488:   nop     len=0
  Inst 2489:   nop     len=0
  Inst 2490:   nop     len=0
  Inst 2491:   nop     len=0
  Inst 2492:   nop     len=0
  Inst 2493:   jmp     label160
Block 158:
  (original IR block: block81)
  (successor: Block 159)
  (instruction range: 2494 .. 2523)
  Inst 2494:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2495:   movq    152(%rsi), %r13
  Inst 2496:   movq    %r14, %r15
  Inst 2497:   addq    $-1, %r15
  Inst 2498:   movq    %r14, %rdx
  Inst 2499:   shlq    $3, %rdx
  Inst 2500:   movq    %r13, %r12
  Inst 2501:   addq    %rdx, %r12
  Inst 2502:   movq    %r13, %rdi
  Inst 2503:   addq    $-24, %rdi
  Inst 2504:   movq    %r13, %rsi
  Inst 2505:   load_ext_name %Memmove+0, %rax
  Inst 2506:   movq    %rbx, rsp(160 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S20, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2507:   call    *%rax
  Inst 2508:   movq    rsp(160 + virtual offset), %rbx
  Inst 2509:   load_ext_name u1:1+0, %rsi
  Inst 2510:   movl    $1, %edi
  Inst 2511:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2512:   movl    $1, %edi
  Inst 2513:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2514:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2515:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2516:   movq    %r12, 152(%rsi)
  Inst 2517:   movq    %rbx, %rdi
  Inst 2518:   movq    %r15, %rsi
  Inst 2519:   load_ext_name u0:3+0, %rax
  Inst 2520:   movq    %rdi, rsp(152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2521:   call    *%rax
  Inst 2522:   jmp     label159
Block 159:
  (successor: Block 160)
  (instruction range: 2523 .. 2544)
  Inst 2523:   movq    %rax, rsp(152 + virtual offset)
  Inst 2524:   nop     len=0
  Inst 2525:   nop     len=0
  Inst 2526:   nop     len=0
  Inst 2527:   nop     len=0
  Inst 2528:   nop     len=0
  Inst 2529:   nop     len=0
  Inst 2530:   nop     len=0
  Inst 2531:   nop     len=0
  Inst 2532:   nop     len=0
  Inst 2533:   nop     len=0
  Inst 2534:   nop     len=0
  Inst 2535:   nop     len=0
  Inst 2536:   nop     len=0
  Inst 2537:   nop     len=0
  Inst 2538:   nop     len=0
  Inst 2539:   nop     len=0
  Inst 2540:   nop     len=0
  Inst 2541:   nop     len=0
  Inst 2542:   nop     len=0
  Inst 2543:   jmp     label160
Block 160:
  (original IR block: block80)
  (successor: Block 161)
  (successor: Block 162)
  (instruction range: 2544 .. 2555)
  Inst 2544:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2545:   movq    8(%rsi), %rdi
  Inst 2546:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2547:   load_ext_name u0:2+0, %rax
  Inst 2548:   movq    %rsi, rsp(160 + virtual offset)
  Inst 2549:   movq    %rdi, rsp(168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2550:   call    *%rax
  Inst 2551:   movq    %rax, %rbx
  Inst 2552:   movq    %rdx, %r14
  Inst 2553:   testq   %r14, %r14
  Inst 2554:   jz      label161; j label162
Block 161:
  (successor: Block 164)
  (instruction range: 2555 .. 2577)
  Inst 2555:   movq    %rbx, rsp(568 + virtual offset)
  Inst 2556:   nop     len=0
  Inst 2557:   nop     len=0
  Inst 2558:   nop     len=0
  Inst 2559:   nop     len=0
  Inst 2560:   nop     len=0
  Inst 2561:   nop     len=0
  Inst 2562:   nop     len=0
  Inst 2563:   nop     len=0
  Inst 2564:   nop     len=0
  Inst 2565:   nop     len=0
  Inst 2566:   nop     len=0
  Inst 2567:   nop     len=0
  Inst 2568:   nop     len=0
  Inst 2569:   nop     len=0
  Inst 2570:   nop     len=0
  Inst 2571:   nop     len=0
  Inst 2572:   nop     len=0
  Inst 2573:   nop     len=0
  Inst 2574:   nop     len=0
  Inst 2575:   nop     len=0
  Inst 2576:   jmp     label164
Block 162:
  (original IR block: block83)
  (successor: Block 163)
  (instruction range: 2577 .. 2606)
  Inst 2577:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2578:   movq    152(%rsi), %r13
  Inst 2579:   movq    %r14, %r15
  Inst 2580:   addq    $-1, %r15
  Inst 2581:   movq    %r14, %rdx
  Inst 2582:   shlq    $3, %rdx
  Inst 2583:   movq    %r13, %r12
  Inst 2584:   addq    %rdx, %r12
  Inst 2585:   movq    %r13, %rdi
  Inst 2586:   addq    $-24, %rdi
  Inst 2587:   movq    %r13, %rsi
  Inst 2588:   load_ext_name %Memmove+0, %rax
  Inst 2589:   movq    %rbx, rsp(160 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2590:   call    *%rax
  Inst 2591:   movq    rsp(160 + virtual offset), %rbx
  Inst 2592:   load_ext_name u1:1+0, %rsi
  Inst 2593:   movl    $1, %edi
  Inst 2594:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2595:   movl    $1, %edi
  Inst 2596:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2597:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2598:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2599:   movq    %r12, 152(%rsi)
  Inst 2600:   movq    %rbx, %rdi
  Inst 2601:   movq    %r15, %rsi
  Inst 2602:   load_ext_name u0:3+0, %rax
  Inst 2603:   movq    %rdi, rsp(160 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2604:   call    *%rax
  Inst 2605:   jmp     label163
Block 163:
  (successor: Block 164)
  (instruction range: 2606 .. 2628)
  Inst 2606:   movq    %rax, rsp(568 + virtual offset)
  Inst 2607:   nop     len=0
  Inst 2608:   nop     len=0
  Inst 2609:   nop     len=0
  Inst 2610:   nop     len=0
  Inst 2611:   nop     len=0
  Inst 2612:   nop     len=0
  Inst 2613:   nop     len=0
  Inst 2614:   nop     len=0
  Inst 2615:   nop     len=0
  Inst 2616:   nop     len=0
  Inst 2617:   nop     len=0
  Inst 2618:   nop     len=0
  Inst 2619:   nop     len=0
  Inst 2620:   nop     len=0
  Inst 2621:   nop     len=0
  Inst 2622:   nop     len=0
  Inst 2623:   nop     len=0
  Inst 2624:   nop     len=0
  Inst 2625:   nop     len=0
  Inst 2626:   nop     len=0
  Inst 2627:   jmp     label164
Block 164:
  (original IR block: block82)
  (successor: Block 165)
  (successor: Block 166)
  (instruction range: 2628 .. 2639)
  Inst 2628:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2629:   movq    8(%rsi), %rdi
  Inst 2630:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2631:   load_ext_name u0:2+0, %rax
  Inst 2632:   movq    %rsi, rsp(160 + virtual offset)
  Inst 2633:   movq    %rdi, rsp(168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2634:   call    *%rax
  Inst 2635:   movq    %rax, %r15
  Inst 2636:   movq    %rdx, %r14
  Inst 2637:   testq   %r14, %r14
  Inst 2638:   jz      label165; j label166
Block 165:
  (successor: Block 168)
  (instruction range: 2639 .. 2661)
  Inst 2639:   movq    %r15, rsp(160 + virtual offset)
  Inst 2640:   nop     len=0
  Inst 2641:   nop     len=0
  Inst 2642:   nop     len=0
  Inst 2643:   nop     len=0
  Inst 2644:   nop     len=0
  Inst 2645:   nop     len=0
  Inst 2646:   nop     len=0
  Inst 2647:   nop     len=0
  Inst 2648:   nop     len=0
  Inst 2649:   nop     len=0
  Inst 2650:   nop     len=0
  Inst 2651:   nop     len=0
  Inst 2652:   nop     len=0
  Inst 2653:   nop     len=0
  Inst 2654:   nop     len=0
  Inst 2655:   nop     len=0
  Inst 2656:   nop     len=0
  Inst 2657:   nop     len=0
  Inst 2658:   nop     len=0
  Inst 2659:   nop     len=0
  Inst 2660:   jmp     label168
Block 166:
  (original IR block: block85)
  (successor: Block 167)
  (instruction range: 2661 .. 2690)
  Inst 2661:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2662:   movq    152(%rsi), %r13
  Inst 2663:   movq    %r14, %rbx
  Inst 2664:   addq    $-1, %rbx
  Inst 2665:   movq    %r14, %rdx
  Inst 2666:   shlq    $3, %rdx
  Inst 2667:   movq    %r13, %r12
  Inst 2668:   addq    %rdx, %r12
  Inst 2669:   movq    %r13, %rdi
  Inst 2670:   addq    $-24, %rdi
  Inst 2671:   movq    %r13, %rsi
  Inst 2672:   load_ext_name %Memmove+0, %rax
  Inst 2673:   movq    %r15, rsp(168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S21, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2674:   call    *%rax
  Inst 2675:   movq    rsp(168 + virtual offset), %r15
  Inst 2676:   load_ext_name u1:1+0, %rsi
  Inst 2677:   movl    $1, %edi
  Inst 2678:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2679:   movl    $1, %edi
  Inst 2680:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2681:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2682:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2683:   movq    %r12, 152(%rsi)
  Inst 2684:   movq    %r15, %rdi
  Inst 2685:   movq    %rbx, %rsi
  Inst 2686:   load_ext_name u0:3+0, %rax
  Inst 2687:   movq    %rdi, rsp(160 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2688:   call    *%rax
  Inst 2689:   jmp     label167
Block 167:
  (successor: Block 168)
  (instruction range: 2690 .. 2712)
  Inst 2690:   movq    %rax, rsp(160 + virtual offset)
  Inst 2691:   nop     len=0
  Inst 2692:   nop     len=0
  Inst 2693:   nop     len=0
  Inst 2694:   nop     len=0
  Inst 2695:   nop     len=0
  Inst 2696:   nop     len=0
  Inst 2697:   nop     len=0
  Inst 2698:   nop     len=0
  Inst 2699:   nop     len=0
  Inst 2700:   nop     len=0
  Inst 2701:   nop     len=0
  Inst 2702:   nop     len=0
  Inst 2703:   nop     len=0
  Inst 2704:   nop     len=0
  Inst 2705:   nop     len=0
  Inst 2706:   nop     len=0
  Inst 2707:   nop     len=0
  Inst 2708:   nop     len=0
  Inst 2709:   nop     len=0
  Inst 2710:   nop     len=0
  Inst 2711:   jmp     label168
Block 168:
  (original IR block: block84)
  (successor: Block 169)
  (successor: Block 170)
  (instruction range: 2712 .. 2723)
  Inst 2712:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2713:   movq    8(%rsi), %rdi
  Inst 2714:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2715:   load_ext_name u0:2+0, %rax
  Inst 2716:   movq    %rsi, rsp(168 + virtual offset)
  Inst 2717:   movq    %rdi, rsp(176 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2718:   call    *%rax
  Inst 2719:   movq    %rax, %rbx
  Inst 2720:   movq    %rdx, %r14
  Inst 2721:   testq   %r14, %r14
  Inst 2722:   jz      label169; j label170
Block 169:
  (successor: Block 172)
  (instruction range: 2723 .. 2746)
  Inst 2723:   movq    %rbx, rsp(584 + virtual offset)
  Inst 2724:   nop     len=0
  Inst 2725:   nop     len=0
  Inst 2726:   nop     len=0
  Inst 2727:   nop     len=0
  Inst 2728:   nop     len=0
  Inst 2729:   nop     len=0
  Inst 2730:   nop     len=0
  Inst 2731:   nop     len=0
  Inst 2732:   nop     len=0
  Inst 2733:   nop     len=0
  Inst 2734:   nop     len=0
  Inst 2735:   nop     len=0
  Inst 2736:   nop     len=0
  Inst 2737:   nop     len=0
  Inst 2738:   nop     len=0
  Inst 2739:   nop     len=0
  Inst 2740:   nop     len=0
  Inst 2741:   nop     len=0
  Inst 2742:   nop     len=0
  Inst 2743:   nop     len=0
  Inst 2744:   nop     len=0
  Inst 2745:   jmp     label172
Block 170:
  (original IR block: block87)
  (successor: Block 171)
  (instruction range: 2746 .. 2775)
  Inst 2746:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2747:   movq    152(%rsi), %r13
  Inst 2748:   movq    %r14, %r15
  Inst 2749:   addq    $-1, %r15
  Inst 2750:   movq    %r14, %rdx
  Inst 2751:   shlq    $3, %rdx
  Inst 2752:   movq    %r13, %r12
  Inst 2753:   addq    %rdx, %r12
  Inst 2754:   movq    %r13, %rdi
  Inst 2755:   addq    $-24, %rdi
  Inst 2756:   movq    %r13, %rsi
  Inst 2757:   load_ext_name %Memmove+0, %rax
  Inst 2758:   movq    %rbx, rsp(168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2759:   call    *%rax
  Inst 2760:   movq    rsp(168 + virtual offset), %rbx
  Inst 2761:   load_ext_name u1:1+0, %rsi
  Inst 2762:   movl    $1, %edi
  Inst 2763:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2764:   movl    $1, %edi
  Inst 2765:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2766:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2767:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2768:   movq    %r12, 152(%rsi)
  Inst 2769:   movq    %rbx, %rdi
  Inst 2770:   movq    %r15, %rsi
  Inst 2771:   load_ext_name u0:3+0, %rax
  Inst 2772:   movq    %rdi, rsp(168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2773:   call    *%rax
  Inst 2774:   jmp     label171
Block 171:
  (successor: Block 172)
  (instruction range: 2775 .. 2798)
  Inst 2775:   movq    %rax, rsp(584 + virtual offset)
  Inst 2776:   nop     len=0
  Inst 2777:   nop     len=0
  Inst 2778:   nop     len=0
  Inst 2779:   nop     len=0
  Inst 2780:   nop     len=0
  Inst 2781:   nop     len=0
  Inst 2782:   nop     len=0
  Inst 2783:   nop     len=0
  Inst 2784:   nop     len=0
  Inst 2785:   nop     len=0
  Inst 2786:   nop     len=0
  Inst 2787:   nop     len=0
  Inst 2788:   nop     len=0
  Inst 2789:   nop     len=0
  Inst 2790:   nop     len=0
  Inst 2791:   nop     len=0
  Inst 2792:   nop     len=0
  Inst 2793:   nop     len=0
  Inst 2794:   nop     len=0
  Inst 2795:   nop     len=0
  Inst 2796:   nop     len=0
  Inst 2797:   jmp     label172
Block 172:
  (original IR block: block86)
  (successor: Block 173)
  (successor: Block 174)
  (instruction range: 2798 .. 2809)
  Inst 2798:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2799:   movq    8(%rsi), %rdi
  Inst 2800:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2801:   load_ext_name u0:2+0, %rax
  Inst 2802:   movq    %rsi, rsp(168 + virtual offset)
  Inst 2803:   movq    %rdi, rsp(176 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2804:   call    *%rax
  Inst 2805:   movq    %rax, %rbx
  Inst 2806:   movq    %rdx, %r14
  Inst 2807:   testq   %r14, %r14
  Inst 2808:   jz      label173; j label174
Block 173:
  (successor: Block 176)
  (instruction range: 2809 .. 2832)
  Inst 2809:   movq    %rbx, rsp(168 + virtual offset)
  Inst 2810:   nop     len=0
  Inst 2811:   nop     len=0
  Inst 2812:   nop     len=0
  Inst 2813:   nop     len=0
  Inst 2814:   nop     len=0
  Inst 2815:   nop     len=0
  Inst 2816:   nop     len=0
  Inst 2817:   nop     len=0
  Inst 2818:   nop     len=0
  Inst 2819:   nop     len=0
  Inst 2820:   nop     len=0
  Inst 2821:   nop     len=0
  Inst 2822:   nop     len=0
  Inst 2823:   nop     len=0
  Inst 2824:   nop     len=0
  Inst 2825:   nop     len=0
  Inst 2826:   nop     len=0
  Inst 2827:   nop     len=0
  Inst 2828:   nop     len=0
  Inst 2829:   nop     len=0
  Inst 2830:   nop     len=0
  Inst 2831:   jmp     label176
Block 174:
  (original IR block: block89)
  (successor: Block 175)
  (instruction range: 2832 .. 2861)
  Inst 2832:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2833:   movq    152(%rsi), %r13
  Inst 2834:   movq    %r14, %r15
  Inst 2835:   addq    $-1, %r15
  Inst 2836:   movq    %r14, %rdx
  Inst 2837:   shlq    $3, %rdx
  Inst 2838:   movq    %r13, %r12
  Inst 2839:   addq    %rdx, %r12
  Inst 2840:   movq    %r13, %rdi
  Inst 2841:   addq    $-24, %rdi
  Inst 2842:   movq    %r13, %rsi
  Inst 2843:   load_ext_name %Memmove+0, %rax
  Inst 2844:   movq    %rbx, rsp(176 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S22, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2845:   call    *%rax
  Inst 2846:   movq    rsp(176 + virtual offset), %rbx
  Inst 2847:   load_ext_name u1:1+0, %rsi
  Inst 2848:   movl    $1, %edi
  Inst 2849:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2850:   movl    $1, %edi
  Inst 2851:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2852:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2853:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2854:   movq    %r12, 152(%rsi)
  Inst 2855:   movq    %rbx, %rdi
  Inst 2856:   movq    %r15, %rsi
  Inst 2857:   load_ext_name u0:3+0, %rax
  Inst 2858:   movq    %rdi, rsp(168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2859:   call    *%rax
  Inst 2860:   jmp     label175
Block 175:
  (successor: Block 176)
  (instruction range: 2861 .. 2884)
  Inst 2861:   movq    %rax, rsp(168 + virtual offset)
  Inst 2862:   nop     len=0
  Inst 2863:   nop     len=0
  Inst 2864:   nop     len=0
  Inst 2865:   nop     len=0
  Inst 2866:   nop     len=0
  Inst 2867:   nop     len=0
  Inst 2868:   nop     len=0
  Inst 2869:   nop     len=0
  Inst 2870:   nop     len=0
  Inst 2871:   nop     len=0
  Inst 2872:   nop     len=0
  Inst 2873:   nop     len=0
  Inst 2874:   nop     len=0
  Inst 2875:   nop     len=0
  Inst 2876:   nop     len=0
  Inst 2877:   nop     len=0
  Inst 2878:   nop     len=0
  Inst 2879:   nop     len=0
  Inst 2880:   nop     len=0
  Inst 2881:   nop     len=0
  Inst 2882:   nop     len=0
  Inst 2883:   jmp     label176
Block 176:
  (original IR block: block88)
  (successor: Block 177)
  (successor: Block 178)
  (instruction range: 2884 .. 2895)
  Inst 2884:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2885:   movq    8(%rsi), %rdi
  Inst 2886:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2887:   load_ext_name u0:2+0, %rax
  Inst 2888:   movq    %rsi, rsp(176 + virtual offset)
  Inst 2889:   movq    %rdi, rsp(184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2890:   call    *%rax
  Inst 2891:   movq    %rax, %r15
  Inst 2892:   movq    %rdx, %r14
  Inst 2893:   testq   %r14, %r14
  Inst 2894:   jz      label177; j label178
Block 177:
  (successor: Block 180)
  (instruction range: 2895 .. 2919)
  Inst 2895:   movq    %r15, rsp(600 + virtual offset)
  Inst 2896:   nop     len=0
  Inst 2897:   nop     len=0
  Inst 2898:   nop     len=0
  Inst 2899:   nop     len=0
  Inst 2900:   nop     len=0
  Inst 2901:   nop     len=0
  Inst 2902:   nop     len=0
  Inst 2903:   nop     len=0
  Inst 2904:   nop     len=0
  Inst 2905:   nop     len=0
  Inst 2906:   nop     len=0
  Inst 2907:   nop     len=0
  Inst 2908:   nop     len=0
  Inst 2909:   nop     len=0
  Inst 2910:   nop     len=0
  Inst 2911:   nop     len=0
  Inst 2912:   nop     len=0
  Inst 2913:   nop     len=0
  Inst 2914:   nop     len=0
  Inst 2915:   nop     len=0
  Inst 2916:   nop     len=0
  Inst 2917:   nop     len=0
  Inst 2918:   jmp     label180
Block 178:
  (original IR block: block91)
  (successor: Block 179)
  (instruction range: 2919 .. 2948)
  Inst 2919:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2920:   movq    152(%rsi), %r13
  Inst 2921:   movq    %r14, %rbx
  Inst 2922:   addq    $-1, %rbx
  Inst 2923:   movq    %r14, %rdx
  Inst 2924:   shlq    $3, %rdx
  Inst 2925:   movq    %r13, %r12
  Inst 2926:   addq    %rdx, %r12
  Inst 2927:   movq    %r13, %rdi
  Inst 2928:   addq    $-24, %rdi
  Inst 2929:   movq    %r13, %rsi
  Inst 2930:   load_ext_name %Memmove+0, %rax
  Inst 2931:   movq    %r15, rsp(176 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2932:   call    *%rax
  Inst 2933:   movq    rsp(176 + virtual offset), %r15
  Inst 2934:   load_ext_name u1:1+0, %rsi
  Inst 2935:   movl    $1, %edi
  Inst 2936:   movq    %rdi, -8(%r13,%r14,8)
  Inst 2937:   movl    $1, %edi
  Inst 2938:   movq    %rdi, -16(%r13,%r14,8)
  Inst 2939:   movq    %rsi, -24(%r13,%r14,8)
  Inst 2940:   movq    rsp(2072 + virtual offset), %rsi
  Inst 2941:   movq    %r12, 152(%rsi)
  Inst 2942:   movq    %r15, %rdi
  Inst 2943:   movq    %rbx, %rsi
  Inst 2944:   load_ext_name u0:3+0, %rax
  Inst 2945:   movq    %rdi, rsp(176 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2946:   call    *%rax
  Inst 2947:   jmp     label179
Block 179:
  (successor: Block 180)
  (instruction range: 2948 .. 2972)
  Inst 2948:   movq    %rax, rsp(600 + virtual offset)
  Inst 2949:   nop     len=0
  Inst 2950:   nop     len=0
  Inst 2951:   nop     len=0
  Inst 2952:   nop     len=0
  Inst 2953:   nop     len=0
  Inst 2954:   nop     len=0
  Inst 2955:   nop     len=0
  Inst 2956:   nop     len=0
  Inst 2957:   nop     len=0
  Inst 2958:   nop     len=0
  Inst 2959:   nop     len=0
  Inst 2960:   nop     len=0
  Inst 2961:   nop     len=0
  Inst 2962:   nop     len=0
  Inst 2963:   nop     len=0
  Inst 2964:   nop     len=0
  Inst 2965:   nop     len=0
  Inst 2966:   nop     len=0
  Inst 2967:   nop     len=0
  Inst 2968:   nop     len=0
  Inst 2969:   nop     len=0
  Inst 2970:   nop     len=0
  Inst 2971:   jmp     label180
Block 180:
  (original IR block: block90)
  (successor: Block 181)
  (successor: Block 182)
  (instruction range: 2972 .. 2983)
  Inst 2972:   movq    rsp(2064 + virtual offset), %rsi
  Inst 2973:   movq    8(%rsi), %rdi
  Inst 2974:   movq    rsp(2048 + virtual offset), %rsi
  Inst 2975:   load_ext_name u0:2+0, %rax
  Inst 2976:   movq    %rsi, rsp(176 + virtual offset)
  Inst 2977:   movq    %rdi, rsp(184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 2978:   call    *%rax
  Inst 2979:   movq    %rax, %rbx
  Inst 2980:   movq    %rdx, %r14
  Inst 2981:   testq   %r14, %r14
  Inst 2982:   jz      label181; j label182
Block 181:
  (successor: Block 184)
  (instruction range: 2983 .. 3007)
  Inst 2983:   movq    %rbx, rsp(176 + virtual offset)
  Inst 2984:   nop     len=0
  Inst 2985:   nop     len=0
  Inst 2986:   nop     len=0
  Inst 2987:   nop     len=0
  Inst 2988:   nop     len=0
  Inst 2989:   nop     len=0
  Inst 2990:   nop     len=0
  Inst 2991:   nop     len=0
  Inst 2992:   nop     len=0
  Inst 2993:   nop     len=0
  Inst 2994:   nop     len=0
  Inst 2995:   nop     len=0
  Inst 2996:   nop     len=0
  Inst 2997:   nop     len=0
  Inst 2998:   nop     len=0
  Inst 2999:   nop     len=0
  Inst 3000:   nop     len=0
  Inst 3001:   nop     len=0
  Inst 3002:   nop     len=0
  Inst 3003:   nop     len=0
  Inst 3004:   nop     len=0
  Inst 3005:   nop     len=0
  Inst 3006:   jmp     label184
Block 182:
  (original IR block: block93)
  (successor: Block 183)
  (instruction range: 3007 .. 3036)
  Inst 3007:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3008:   movq    152(%rsi), %r13
  Inst 3009:   movq    %r14, %r15
  Inst 3010:   addq    $-1, %r15
  Inst 3011:   movq    %r14, %rdx
  Inst 3012:   shlq    $3, %rdx
  Inst 3013:   movq    %r13, %r12
  Inst 3014:   addq    %rdx, %r12
  Inst 3015:   movq    %r13, %rdi
  Inst 3016:   addq    $-24, %rdi
  Inst 3017:   movq    %r13, %rsi
  Inst 3018:   load_ext_name %Memmove+0, %rax
  Inst 3019:   movq    %rbx, rsp(184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S23, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3020:   call    *%rax
  Inst 3021:   movq    rsp(184 + virtual offset), %rbx
  Inst 3022:   load_ext_name u1:1+0, %rsi
  Inst 3023:   movl    $1, %edi
  Inst 3024:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3025:   movl    $1, %edi
  Inst 3026:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3027:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3028:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3029:   movq    %r12, 152(%rsi)
  Inst 3030:   movq    %rbx, %rdi
  Inst 3031:   movq    %r15, %rsi
  Inst 3032:   load_ext_name u0:3+0, %rax
  Inst 3033:   movq    %rdi, rsp(176 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3034:   call    *%rax
  Inst 3035:   jmp     label183
Block 183:
  (successor: Block 184)
  (instruction range: 3036 .. 3060)
  Inst 3036:   movq    %rax, rsp(176 + virtual offset)
  Inst 3037:   nop     len=0
  Inst 3038:   nop     len=0
  Inst 3039:   nop     len=0
  Inst 3040:   nop     len=0
  Inst 3041:   nop     len=0
  Inst 3042:   nop     len=0
  Inst 3043:   nop     len=0
  Inst 3044:   nop     len=0
  Inst 3045:   nop     len=0
  Inst 3046:   nop     len=0
  Inst 3047:   nop     len=0
  Inst 3048:   nop     len=0
  Inst 3049:   nop     len=0
  Inst 3050:   nop     len=0
  Inst 3051:   nop     len=0
  Inst 3052:   nop     len=0
  Inst 3053:   nop     len=0
  Inst 3054:   nop     len=0
  Inst 3055:   nop     len=0
  Inst 3056:   nop     len=0
  Inst 3057:   nop     len=0
  Inst 3058:   nop     len=0
  Inst 3059:   jmp     label184
Block 184:
  (original IR block: block92)
  (successor: Block 185)
  (successor: Block 186)
  (instruction range: 3060 .. 3071)
  Inst 3060:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3061:   movq    8(%rsi), %rdi
  Inst 3062:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3063:   load_ext_name u0:2+0, %rax
  Inst 3064:   movq    %rsi, rsp(184 + virtual offset)
  Inst 3065:   movq    %rdi, rsp(192 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3066:   call    *%rax
  Inst 3067:   movq    %rax, %rbx
  Inst 3068:   movq    %rdx, %r14
  Inst 3069:   testq   %r14, %r14
  Inst 3070:   jz      label185; j label186
Block 185:
  (successor: Block 188)
  (instruction range: 3071 .. 3096)
  Inst 3071:   movq    %rbx, rsp(616 + virtual offset)
  Inst 3072:   nop     len=0
  Inst 3073:   nop     len=0
  Inst 3074:   nop     len=0
  Inst 3075:   nop     len=0
  Inst 3076:   nop     len=0
  Inst 3077:   nop     len=0
  Inst 3078:   nop     len=0
  Inst 3079:   nop     len=0
  Inst 3080:   nop     len=0
  Inst 3081:   nop     len=0
  Inst 3082:   nop     len=0
  Inst 3083:   nop     len=0
  Inst 3084:   nop     len=0
  Inst 3085:   nop     len=0
  Inst 3086:   nop     len=0
  Inst 3087:   nop     len=0
  Inst 3088:   nop     len=0
  Inst 3089:   nop     len=0
  Inst 3090:   nop     len=0
  Inst 3091:   nop     len=0
  Inst 3092:   nop     len=0
  Inst 3093:   nop     len=0
  Inst 3094:   nop     len=0
  Inst 3095:   jmp     label188
Block 186:
  (original IR block: block95)
  (successor: Block 187)
  (instruction range: 3096 .. 3125)
  Inst 3096:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3097:   movq    152(%rsi), %r13
  Inst 3098:   movq    %r14, %r15
  Inst 3099:   addq    $-1, %r15
  Inst 3100:   movq    %r14, %rdx
  Inst 3101:   shlq    $3, %rdx
  Inst 3102:   movq    %r13, %r12
  Inst 3103:   addq    %rdx, %r12
  Inst 3104:   movq    %r13, %rdi
  Inst 3105:   addq    $-24, %rdi
  Inst 3106:   movq    %r13, %rsi
  Inst 3107:   load_ext_name %Memmove+0, %rax
  Inst 3108:   movq    %rbx, rsp(184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3109:   call    *%rax
  Inst 3110:   movq    rsp(184 + virtual offset), %rbx
  Inst 3111:   load_ext_name u1:1+0, %rsi
  Inst 3112:   movl    $1, %edi
  Inst 3113:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3114:   movl    $1, %edi
  Inst 3115:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3116:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3117:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3118:   movq    %r12, 152(%rsi)
  Inst 3119:   movq    %rbx, %rdi
  Inst 3120:   movq    %r15, %rsi
  Inst 3121:   load_ext_name u0:3+0, %rax
  Inst 3122:   movq    %rdi, rsp(184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3123:   call    *%rax
  Inst 3124:   jmp     label187
Block 187:
  (successor: Block 188)
  (instruction range: 3125 .. 3150)
  Inst 3125:   movq    %rax, rsp(616 + virtual offset)
  Inst 3126:   nop     len=0
  Inst 3127:   nop     len=0
  Inst 3128:   nop     len=0
  Inst 3129:   nop     len=0
  Inst 3130:   nop     len=0
  Inst 3131:   nop     len=0
  Inst 3132:   nop     len=0
  Inst 3133:   nop     len=0
  Inst 3134:   nop     len=0
  Inst 3135:   nop     len=0
  Inst 3136:   nop     len=0
  Inst 3137:   nop     len=0
  Inst 3138:   nop     len=0
  Inst 3139:   nop     len=0
  Inst 3140:   nop     len=0
  Inst 3141:   nop     len=0
  Inst 3142:   nop     len=0
  Inst 3143:   nop     len=0
  Inst 3144:   nop     len=0
  Inst 3145:   nop     len=0
  Inst 3146:   nop     len=0
  Inst 3147:   nop     len=0
  Inst 3148:   nop     len=0
  Inst 3149:   jmp     label188
Block 188:
  (original IR block: block94)
  (successor: Block 189)
  (successor: Block 190)
  (instruction range: 3150 .. 3161)
  Inst 3150:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3151:   movq    8(%rsi), %rdi
  Inst 3152:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3153:   load_ext_name u0:2+0, %rax
  Inst 3154:   movq    %rsi, rsp(184 + virtual offset)
  Inst 3155:   movq    %rdi, rsp(192 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3156:   call    *%rax
  Inst 3157:   movq    %rax, %r15
  Inst 3158:   movq    %rdx, %r14
  Inst 3159:   testq   %r14, %r14
  Inst 3160:   jz      label189; j label190
Block 189:
  (successor: Block 192)
  (instruction range: 3161 .. 3186)
  Inst 3161:   movq    %r15, rsp(184 + virtual offset)
  Inst 3162:   nop     len=0
  Inst 3163:   nop     len=0
  Inst 3164:   nop     len=0
  Inst 3165:   nop     len=0
  Inst 3166:   nop     len=0
  Inst 3167:   nop     len=0
  Inst 3168:   nop     len=0
  Inst 3169:   nop     len=0
  Inst 3170:   nop     len=0
  Inst 3171:   nop     len=0
  Inst 3172:   nop     len=0
  Inst 3173:   nop     len=0
  Inst 3174:   nop     len=0
  Inst 3175:   nop     len=0
  Inst 3176:   nop     len=0
  Inst 3177:   nop     len=0
  Inst 3178:   nop     len=0
  Inst 3179:   nop     len=0
  Inst 3180:   nop     len=0
  Inst 3181:   nop     len=0
  Inst 3182:   nop     len=0
  Inst 3183:   nop     len=0
  Inst 3184:   nop     len=0
  Inst 3185:   jmp     label192
Block 190:
  (original IR block: block97)
  (successor: Block 191)
  (instruction range: 3186 .. 3215)
  Inst 3186:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3187:   movq    152(%rsi), %r13
  Inst 3188:   movq    %r14, %rbx
  Inst 3189:   addq    $-1, %rbx
  Inst 3190:   movq    %r14, %rdx
  Inst 3191:   shlq    $3, %rdx
  Inst 3192:   movq    %r13, %r12
  Inst 3193:   addq    %rdx, %r12
  Inst 3194:   movq    %r13, %rdi
  Inst 3195:   addq    $-24, %rdi
  Inst 3196:   movq    %r13, %rsi
  Inst 3197:   load_ext_name %Memmove+0, %rax
  Inst 3198:   movq    %r15, rsp(192 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S24, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3199:   call    *%rax
  Inst 3200:   movq    rsp(192 + virtual offset), %r15
  Inst 3201:   load_ext_name u1:1+0, %rsi
  Inst 3202:   movl    $1, %edi
  Inst 3203:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3204:   movl    $1, %edi
  Inst 3205:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3206:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3207:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3208:   movq    %r12, 152(%rsi)
  Inst 3209:   movq    %r15, %rdi
  Inst 3210:   movq    %rbx, %rsi
  Inst 3211:   load_ext_name u0:3+0, %rax
  Inst 3212:   movq    %rdi, rsp(184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3213:   call    *%rax
  Inst 3214:   jmp     label191
Block 191:
  (successor: Block 192)
  (instruction range: 3215 .. 3240)
  Inst 3215:   movq    %rax, rsp(184 + virtual offset)
  Inst 3216:   nop     len=0
  Inst 3217:   nop     len=0
  Inst 3218:   nop     len=0
  Inst 3219:   nop     len=0
  Inst 3220:   nop     len=0
  Inst 3221:   nop     len=0
  Inst 3222:   nop     len=0
  Inst 3223:   nop     len=0
  Inst 3224:   nop     len=0
  Inst 3225:   nop     len=0
  Inst 3226:   nop     len=0
  Inst 3227:   nop     len=0
  Inst 3228:   nop     len=0
  Inst 3229:   nop     len=0
  Inst 3230:   nop     len=0
  Inst 3231:   nop     len=0
  Inst 3232:   nop     len=0
  Inst 3233:   nop     len=0
  Inst 3234:   nop     len=0
  Inst 3235:   nop     len=0
  Inst 3236:   nop     len=0
  Inst 3237:   nop     len=0
  Inst 3238:   nop     len=0
  Inst 3239:   jmp     label192
Block 192:
  (original IR block: block96)
  (successor: Block 193)
  (successor: Block 194)
  (instruction range: 3240 .. 3251)
  Inst 3240:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3241:   movq    8(%rsi), %rdi
  Inst 3242:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3243:   load_ext_name u0:2+0, %rax
  Inst 3244:   movq    %rsi, rsp(192 + virtual offset)
  Inst 3245:   movq    %rdi, rsp(200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3246:   call    *%rax
  Inst 3247:   movq    %rax, %rbx
  Inst 3248:   movq    %rdx, %r14
  Inst 3249:   testq   %r14, %r14
  Inst 3250:   jz      label193; j label194
Block 193:
  (successor: Block 196)
  (instruction range: 3251 .. 3277)
  Inst 3251:   movq    %rbx, rsp(632 + virtual offset)
  Inst 3252:   nop     len=0
  Inst 3253:   nop     len=0
  Inst 3254:   nop     len=0
  Inst 3255:   nop     len=0
  Inst 3256:   nop     len=0
  Inst 3257:   nop     len=0
  Inst 3258:   nop     len=0
  Inst 3259:   nop     len=0
  Inst 3260:   nop     len=0
  Inst 3261:   nop     len=0
  Inst 3262:   nop     len=0
  Inst 3263:   nop     len=0
  Inst 3264:   nop     len=0
  Inst 3265:   nop     len=0
  Inst 3266:   nop     len=0
  Inst 3267:   nop     len=0
  Inst 3268:   nop     len=0
  Inst 3269:   nop     len=0
  Inst 3270:   nop     len=0
  Inst 3271:   nop     len=0
  Inst 3272:   nop     len=0
  Inst 3273:   nop     len=0
  Inst 3274:   nop     len=0
  Inst 3275:   nop     len=0
  Inst 3276:   jmp     label196
Block 194:
  (original IR block: block99)
  (successor: Block 195)
  (instruction range: 3277 .. 3306)
  Inst 3277:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3278:   movq    152(%rsi), %r13
  Inst 3279:   movq    %r14, %r15
  Inst 3280:   addq    $-1, %r15
  Inst 3281:   movq    %r14, %rdx
  Inst 3282:   shlq    $3, %rdx
  Inst 3283:   movq    %r13, %r12
  Inst 3284:   addq    %rdx, %r12
  Inst 3285:   movq    %r13, %rdi
  Inst 3286:   addq    $-24, %rdi
  Inst 3287:   movq    %r13, %rsi
  Inst 3288:   load_ext_name %Memmove+0, %rax
  Inst 3289:   movq    %rbx, rsp(192 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3290:   call    *%rax
  Inst 3291:   movq    rsp(192 + virtual offset), %rbx
  Inst 3292:   load_ext_name u1:1+0, %rsi
  Inst 3293:   movl    $1, %edi
  Inst 3294:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3295:   movl    $1, %edi
  Inst 3296:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3297:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3298:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3299:   movq    %r12, 152(%rsi)
  Inst 3300:   movq    %rbx, %rdi
  Inst 3301:   movq    %r15, %rsi
  Inst 3302:   load_ext_name u0:3+0, %rax
  Inst 3303:   movq    %rdi, rsp(192 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3304:   call    *%rax
  Inst 3305:   jmp     label195
Block 195:
  (successor: Block 196)
  (instruction range: 3306 .. 3332)
  Inst 3306:   movq    %rax, rsp(632 + virtual offset)
  Inst 3307:   nop     len=0
  Inst 3308:   nop     len=0
  Inst 3309:   nop     len=0
  Inst 3310:   nop     len=0
  Inst 3311:   nop     len=0
  Inst 3312:   nop     len=0
  Inst 3313:   nop     len=0
  Inst 3314:   nop     len=0
  Inst 3315:   nop     len=0
  Inst 3316:   nop     len=0
  Inst 3317:   nop     len=0
  Inst 3318:   nop     len=0
  Inst 3319:   nop     len=0
  Inst 3320:   nop     len=0
  Inst 3321:   nop     len=0
  Inst 3322:   nop     len=0
  Inst 3323:   nop     len=0
  Inst 3324:   nop     len=0
  Inst 3325:   nop     len=0
  Inst 3326:   nop     len=0
  Inst 3327:   nop     len=0
  Inst 3328:   nop     len=0
  Inst 3329:   nop     len=0
  Inst 3330:   nop     len=0
  Inst 3331:   jmp     label196
Block 196:
  (original IR block: block98)
  (successor: Block 197)
  (successor: Block 198)
  (instruction range: 3332 .. 3343)
  Inst 3332:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3333:   movq    8(%rsi), %rdi
  Inst 3334:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3335:   load_ext_name u0:2+0, %rax
  Inst 3336:   movq    %rsi, rsp(192 + virtual offset)
  Inst 3337:   movq    %rdi, rsp(200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3338:   call    *%rax
  Inst 3339:   movq    %rax, %rbx
  Inst 3340:   movq    %rdx, %r14
  Inst 3341:   testq   %r14, %r14
  Inst 3342:   jz      label197; j label198
Block 197:
  (successor: Block 200)
  (instruction range: 3343 .. 3369)
  Inst 3343:   movq    %rbx, rsp(192 + virtual offset)
  Inst 3344:   nop     len=0
  Inst 3345:   nop     len=0
  Inst 3346:   nop     len=0
  Inst 3347:   nop     len=0
  Inst 3348:   nop     len=0
  Inst 3349:   nop     len=0
  Inst 3350:   nop     len=0
  Inst 3351:   nop     len=0
  Inst 3352:   nop     len=0
  Inst 3353:   nop     len=0
  Inst 3354:   nop     len=0
  Inst 3355:   nop     len=0
  Inst 3356:   nop     len=0
  Inst 3357:   nop     len=0
  Inst 3358:   nop     len=0
  Inst 3359:   nop     len=0
  Inst 3360:   nop     len=0
  Inst 3361:   nop     len=0
  Inst 3362:   nop     len=0
  Inst 3363:   nop     len=0
  Inst 3364:   nop     len=0
  Inst 3365:   nop     len=0
  Inst 3366:   nop     len=0
  Inst 3367:   nop     len=0
  Inst 3368:   jmp     label200
Block 198:
  (original IR block: block101)
  (successor: Block 199)
  (instruction range: 3369 .. 3398)
  Inst 3369:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3370:   movq    152(%rsi), %r13
  Inst 3371:   movq    %r14, %r15
  Inst 3372:   addq    $-1, %r15
  Inst 3373:   movq    %r14, %rdx
  Inst 3374:   shlq    $3, %rdx
  Inst 3375:   movq    %r13, %r12
  Inst 3376:   addq    %rdx, %r12
  Inst 3377:   movq    %r13, %rdi
  Inst 3378:   addq    $-24, %rdi
  Inst 3379:   movq    %r13, %rsi
  Inst 3380:   load_ext_name %Memmove+0, %rax
  Inst 3381:   movq    %rbx, rsp(200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S25, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3382:   call    *%rax
  Inst 3383:   movq    rsp(200 + virtual offset), %rbx
  Inst 3384:   load_ext_name u1:1+0, %rsi
  Inst 3385:   movl    $1, %edi
  Inst 3386:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3387:   movl    $1, %edi
  Inst 3388:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3389:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3390:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3391:   movq    %r12, 152(%rsi)
  Inst 3392:   movq    %rbx, %rdi
  Inst 3393:   movq    %r15, %rsi
  Inst 3394:   load_ext_name u0:3+0, %rax
  Inst 3395:   movq    %rdi, rsp(192 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3396:   call    *%rax
  Inst 3397:   jmp     label199
Block 199:
  (successor: Block 200)
  (instruction range: 3398 .. 3424)
  Inst 3398:   movq    %rax, rsp(192 + virtual offset)
  Inst 3399:   nop     len=0
  Inst 3400:   nop     len=0
  Inst 3401:   nop     len=0
  Inst 3402:   nop     len=0
  Inst 3403:   nop     len=0
  Inst 3404:   nop     len=0
  Inst 3405:   nop     len=0
  Inst 3406:   nop     len=0
  Inst 3407:   nop     len=0
  Inst 3408:   nop     len=0
  Inst 3409:   nop     len=0
  Inst 3410:   nop     len=0
  Inst 3411:   nop     len=0
  Inst 3412:   nop     len=0
  Inst 3413:   nop     len=0
  Inst 3414:   nop     len=0
  Inst 3415:   nop     len=0
  Inst 3416:   nop     len=0
  Inst 3417:   nop     len=0
  Inst 3418:   nop     len=0
  Inst 3419:   nop     len=0
  Inst 3420:   nop     len=0
  Inst 3421:   nop     len=0
  Inst 3422:   nop     len=0
  Inst 3423:   jmp     label200
Block 200:
  (original IR block: block100)
  (successor: Block 201)
  (successor: Block 202)
  (instruction range: 3424 .. 3435)
  Inst 3424:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3425:   movq    8(%rsi), %rdi
  Inst 3426:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3427:   load_ext_name u0:2+0, %rax
  Inst 3428:   movq    %rsi, rsp(200 + virtual offset)
  Inst 3429:   movq    %rdi, rsp(208 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3430:   call    *%rax
  Inst 3431:   movq    %rax, %r15
  Inst 3432:   movq    %rdx, %r14
  Inst 3433:   testq   %r14, %r14
  Inst 3434:   jz      label201; j label202
Block 201:
  (successor: Block 204)
  (instruction range: 3435 .. 3462)
  Inst 3435:   movq    %r15, rsp(648 + virtual offset)
  Inst 3436:   nop     len=0
  Inst 3437:   nop     len=0
  Inst 3438:   nop     len=0
  Inst 3439:   nop     len=0
  Inst 3440:   nop     len=0
  Inst 3441:   nop     len=0
  Inst 3442:   nop     len=0
  Inst 3443:   nop     len=0
  Inst 3444:   nop     len=0
  Inst 3445:   nop     len=0
  Inst 3446:   nop     len=0
  Inst 3447:   nop     len=0
  Inst 3448:   nop     len=0
  Inst 3449:   nop     len=0
  Inst 3450:   nop     len=0
  Inst 3451:   nop     len=0
  Inst 3452:   nop     len=0
  Inst 3453:   nop     len=0
  Inst 3454:   nop     len=0
  Inst 3455:   nop     len=0
  Inst 3456:   nop     len=0
  Inst 3457:   nop     len=0
  Inst 3458:   nop     len=0
  Inst 3459:   nop     len=0
  Inst 3460:   nop     len=0
  Inst 3461:   jmp     label204
Block 202:
  (original IR block: block103)
  (successor: Block 203)
  (instruction range: 3462 .. 3491)
  Inst 3462:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3463:   movq    152(%rsi), %r13
  Inst 3464:   movq    %r14, %rbx
  Inst 3465:   addq    $-1, %rbx
  Inst 3466:   movq    %r14, %rdx
  Inst 3467:   shlq    $3, %rdx
  Inst 3468:   movq    %r13, %r12
  Inst 3469:   addq    %rdx, %r12
  Inst 3470:   movq    %r13, %rdi
  Inst 3471:   addq    $-24, %rdi
  Inst 3472:   movq    %r13, %rsi
  Inst 3473:   load_ext_name %Memmove+0, %rax
  Inst 3474:   movq    %r15, rsp(200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3475:   call    *%rax
  Inst 3476:   movq    rsp(200 + virtual offset), %r15
  Inst 3477:   load_ext_name u1:1+0, %rsi
  Inst 3478:   movl    $1, %edi
  Inst 3479:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3480:   movl    $1, %edi
  Inst 3481:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3482:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3483:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3484:   movq    %r12, 152(%rsi)
  Inst 3485:   movq    %r15, %rdi
  Inst 3486:   movq    %rbx, %rsi
  Inst 3487:   load_ext_name u0:3+0, %rax
  Inst 3488:   movq    %rdi, rsp(200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3489:   call    *%rax
  Inst 3490:   jmp     label203
Block 203:
  (successor: Block 204)
  (instruction range: 3491 .. 3518)
  Inst 3491:   movq    %rax, rsp(648 + virtual offset)
  Inst 3492:   nop     len=0
  Inst 3493:   nop     len=0
  Inst 3494:   nop     len=0
  Inst 3495:   nop     len=0
  Inst 3496:   nop     len=0
  Inst 3497:   nop     len=0
  Inst 3498:   nop     len=0
  Inst 3499:   nop     len=0
  Inst 3500:   nop     len=0
  Inst 3501:   nop     len=0
  Inst 3502:   nop     len=0
  Inst 3503:   nop     len=0
  Inst 3504:   nop     len=0
  Inst 3505:   nop     len=0
  Inst 3506:   nop     len=0
  Inst 3507:   nop     len=0
  Inst 3508:   nop     len=0
  Inst 3509:   nop     len=0
  Inst 3510:   nop     len=0
  Inst 3511:   nop     len=0
  Inst 3512:   nop     len=0
  Inst 3513:   nop     len=0
  Inst 3514:   nop     len=0
  Inst 3515:   nop     len=0
  Inst 3516:   nop     len=0
  Inst 3517:   jmp     label204
Block 204:
  (original IR block: block102)
  (successor: Block 205)
  (successor: Block 206)
  (instruction range: 3518 .. 3529)
  Inst 3518:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3519:   movq    8(%rsi), %rdi
  Inst 3520:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3521:   load_ext_name u0:2+0, %rax
  Inst 3522:   movq    %rsi, rsp(200 + virtual offset)
  Inst 3523:   movq    %rdi, rsp(208 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3524:   call    *%rax
  Inst 3525:   movq    %rax, %rbx
  Inst 3526:   movq    %rdx, %r14
  Inst 3527:   testq   %r14, %r14
  Inst 3528:   jz      label205; j label206
Block 205:
  (successor: Block 208)
  (instruction range: 3529 .. 3556)
  Inst 3529:   movq    %rbx, rsp(200 + virtual offset)
  Inst 3530:   nop     len=0
  Inst 3531:   nop     len=0
  Inst 3532:   nop     len=0
  Inst 3533:   nop     len=0
  Inst 3534:   nop     len=0
  Inst 3535:   nop     len=0
  Inst 3536:   nop     len=0
  Inst 3537:   nop     len=0
  Inst 3538:   nop     len=0
  Inst 3539:   nop     len=0
  Inst 3540:   nop     len=0
  Inst 3541:   nop     len=0
  Inst 3542:   nop     len=0
  Inst 3543:   nop     len=0
  Inst 3544:   nop     len=0
  Inst 3545:   nop     len=0
  Inst 3546:   nop     len=0
  Inst 3547:   nop     len=0
  Inst 3548:   nop     len=0
  Inst 3549:   nop     len=0
  Inst 3550:   nop     len=0
  Inst 3551:   nop     len=0
  Inst 3552:   nop     len=0
  Inst 3553:   nop     len=0
  Inst 3554:   nop     len=0
  Inst 3555:   jmp     label208
Block 206:
  (original IR block: block105)
  (successor: Block 207)
  (instruction range: 3556 .. 3585)
  Inst 3556:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3557:   movq    152(%rsi), %r13
  Inst 3558:   movq    %r14, %r15
  Inst 3559:   addq    $-1, %r15
  Inst 3560:   movq    %r14, %rdx
  Inst 3561:   shlq    $3, %rdx
  Inst 3562:   movq    %r13, %r12
  Inst 3563:   addq    %rdx, %r12
  Inst 3564:   movq    %r13, %rdi
  Inst 3565:   addq    $-24, %rdi
  Inst 3566:   movq    %r13, %rsi
  Inst 3567:   load_ext_name %Memmove+0, %rax
  Inst 3568:   movq    %rbx, rsp(208 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S26, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3569:   call    *%rax
  Inst 3570:   movq    rsp(208 + virtual offset), %rbx
  Inst 3571:   load_ext_name u1:1+0, %rsi
  Inst 3572:   movl    $1, %edi
  Inst 3573:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3574:   movl    $1, %edi
  Inst 3575:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3576:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3577:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3578:   movq    %r12, 152(%rsi)
  Inst 3579:   movq    %rbx, %rdi
  Inst 3580:   movq    %r15, %rsi
  Inst 3581:   load_ext_name u0:3+0, %rax
  Inst 3582:   movq    %rdi, rsp(200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3583:   call    *%rax
  Inst 3584:   jmp     label207
Block 207:
  (successor: Block 208)
  (instruction range: 3585 .. 3612)
  Inst 3585:   movq    %rax, rsp(200 + virtual offset)
  Inst 3586:   nop     len=0
  Inst 3587:   nop     len=0
  Inst 3588:   nop     len=0
  Inst 3589:   nop     len=0
  Inst 3590:   nop     len=0
  Inst 3591:   nop     len=0
  Inst 3592:   nop     len=0
  Inst 3593:   nop     len=0
  Inst 3594:   nop     len=0
  Inst 3595:   nop     len=0
  Inst 3596:   nop     len=0
  Inst 3597:   nop     len=0
  Inst 3598:   nop     len=0
  Inst 3599:   nop     len=0
  Inst 3600:   nop     len=0
  Inst 3601:   nop     len=0
  Inst 3602:   nop     len=0
  Inst 3603:   nop     len=0
  Inst 3604:   nop     len=0
  Inst 3605:   nop     len=0
  Inst 3606:   nop     len=0
  Inst 3607:   nop     len=0
  Inst 3608:   nop     len=0
  Inst 3609:   nop     len=0
  Inst 3610:   nop     len=0
  Inst 3611:   jmp     label208
Block 208:
  (original IR block: block104)
  (successor: Block 209)
  (successor: Block 210)
  (instruction range: 3612 .. 3623)
  Inst 3612:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3613:   movq    8(%rsi), %rdi
  Inst 3614:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3615:   load_ext_name u0:2+0, %rax
  Inst 3616:   movq    %rsi, rsp(208 + virtual offset)
  Inst 3617:   movq    %rdi, rsp(216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3618:   call    *%rax
  Inst 3619:   movq    %rax, %rbx
  Inst 3620:   movq    %rdx, %r14
  Inst 3621:   testq   %r14, %r14
  Inst 3622:   jz      label209; j label210
Block 209:
  (successor: Block 212)
  (instruction range: 3623 .. 3651)
  Inst 3623:   movq    %rbx, rsp(664 + virtual offset)
  Inst 3624:   nop     len=0
  Inst 3625:   nop     len=0
  Inst 3626:   nop     len=0
  Inst 3627:   nop     len=0
  Inst 3628:   nop     len=0
  Inst 3629:   nop     len=0
  Inst 3630:   nop     len=0
  Inst 3631:   nop     len=0
  Inst 3632:   nop     len=0
  Inst 3633:   nop     len=0
  Inst 3634:   nop     len=0
  Inst 3635:   nop     len=0
  Inst 3636:   nop     len=0
  Inst 3637:   nop     len=0
  Inst 3638:   nop     len=0
  Inst 3639:   nop     len=0
  Inst 3640:   nop     len=0
  Inst 3641:   nop     len=0
  Inst 3642:   nop     len=0
  Inst 3643:   nop     len=0
  Inst 3644:   nop     len=0
  Inst 3645:   nop     len=0
  Inst 3646:   nop     len=0
  Inst 3647:   nop     len=0
  Inst 3648:   nop     len=0
  Inst 3649:   nop     len=0
  Inst 3650:   jmp     label212
Block 210:
  (original IR block: block107)
  (successor: Block 211)
  (instruction range: 3651 .. 3680)
  Inst 3651:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3652:   movq    152(%rsi), %r13
  Inst 3653:   movq    %r14, %r15
  Inst 3654:   addq    $-1, %r15
  Inst 3655:   movq    %r14, %rdx
  Inst 3656:   shlq    $3, %rdx
  Inst 3657:   movq    %r13, %r12
  Inst 3658:   addq    %rdx, %r12
  Inst 3659:   movq    %r13, %rdi
  Inst 3660:   addq    $-24, %rdi
  Inst 3661:   movq    %r13, %rsi
  Inst 3662:   load_ext_name %Memmove+0, %rax
  Inst 3663:   movq    %rbx, rsp(208 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3664:   call    *%rax
  Inst 3665:   movq    rsp(208 + virtual offset), %rbx
  Inst 3666:   load_ext_name u1:1+0, %rsi
  Inst 3667:   movl    $1, %edi
  Inst 3668:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3669:   movl    $1, %edi
  Inst 3670:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3671:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3672:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3673:   movq    %r12, 152(%rsi)
  Inst 3674:   movq    %rbx, %rdi
  Inst 3675:   movq    %r15, %rsi
  Inst 3676:   load_ext_name u0:3+0, %rax
  Inst 3677:   movq    %rdi, rsp(208 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3678:   call    *%rax
  Inst 3679:   jmp     label211
Block 211:
  (successor: Block 212)
  (instruction range: 3680 .. 3708)
  Inst 3680:   movq    %rax, rsp(664 + virtual offset)
  Inst 3681:   nop     len=0
  Inst 3682:   nop     len=0
  Inst 3683:   nop     len=0
  Inst 3684:   nop     len=0
  Inst 3685:   nop     len=0
  Inst 3686:   nop     len=0
  Inst 3687:   nop     len=0
  Inst 3688:   nop     len=0
  Inst 3689:   nop     len=0
  Inst 3690:   nop     len=0
  Inst 3691:   nop     len=0
  Inst 3692:   nop     len=0
  Inst 3693:   nop     len=0
  Inst 3694:   nop     len=0
  Inst 3695:   nop     len=0
  Inst 3696:   nop     len=0
  Inst 3697:   nop     len=0
  Inst 3698:   nop     len=0
  Inst 3699:   nop     len=0
  Inst 3700:   nop     len=0
  Inst 3701:   nop     len=0
  Inst 3702:   nop     len=0
  Inst 3703:   nop     len=0
  Inst 3704:   nop     len=0
  Inst 3705:   nop     len=0
  Inst 3706:   nop     len=0
  Inst 3707:   jmp     label212
Block 212:
  (original IR block: block106)
  (successor: Block 213)
  (successor: Block 214)
  (instruction range: 3708 .. 3719)
  Inst 3708:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3709:   movq    8(%rsi), %rdi
  Inst 3710:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3711:   load_ext_name u0:2+0, %rax
  Inst 3712:   movq    %rsi, rsp(208 + virtual offset)
  Inst 3713:   movq    %rdi, rsp(216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3714:   call    *%rax
  Inst 3715:   movq    %rax, %r15
  Inst 3716:   movq    %rdx, %r14
  Inst 3717:   testq   %r14, %r14
  Inst 3718:   jz      label213; j label214
Block 213:
  (successor: Block 216)
  (instruction range: 3719 .. 3747)
  Inst 3719:   movq    %r15, rsp(208 + virtual offset)
  Inst 3720:   nop     len=0
  Inst 3721:   nop     len=0
  Inst 3722:   nop     len=0
  Inst 3723:   nop     len=0
  Inst 3724:   nop     len=0
  Inst 3725:   nop     len=0
  Inst 3726:   nop     len=0
  Inst 3727:   nop     len=0
  Inst 3728:   nop     len=0
  Inst 3729:   nop     len=0
  Inst 3730:   nop     len=0
  Inst 3731:   nop     len=0
  Inst 3732:   nop     len=0
  Inst 3733:   nop     len=0
  Inst 3734:   nop     len=0
  Inst 3735:   nop     len=0
  Inst 3736:   nop     len=0
  Inst 3737:   nop     len=0
  Inst 3738:   nop     len=0
  Inst 3739:   nop     len=0
  Inst 3740:   nop     len=0
  Inst 3741:   nop     len=0
  Inst 3742:   nop     len=0
  Inst 3743:   nop     len=0
  Inst 3744:   nop     len=0
  Inst 3745:   nop     len=0
  Inst 3746:   jmp     label216
Block 214:
  (original IR block: block109)
  (successor: Block 215)
  (instruction range: 3747 .. 3776)
  Inst 3747:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3748:   movq    152(%rsi), %r13
  Inst 3749:   movq    %r14, %rbx
  Inst 3750:   addq    $-1, %rbx
  Inst 3751:   movq    %r14, %rdx
  Inst 3752:   shlq    $3, %rdx
  Inst 3753:   movq    %r13, %r12
  Inst 3754:   addq    %rdx, %r12
  Inst 3755:   movq    %r13, %rdi
  Inst 3756:   addq    $-24, %rdi
  Inst 3757:   movq    %r13, %rsi
  Inst 3758:   load_ext_name %Memmove+0, %rax
  Inst 3759:   movq    %r15, rsp(216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S27, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3760:   call    *%rax
  Inst 3761:   movq    rsp(216 + virtual offset), %r15
  Inst 3762:   load_ext_name u1:1+0, %rsi
  Inst 3763:   movl    $1, %edi
  Inst 3764:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3765:   movl    $1, %edi
  Inst 3766:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3767:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3768:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3769:   movq    %r12, 152(%rsi)
  Inst 3770:   movq    %r15, %rdi
  Inst 3771:   movq    %rbx, %rsi
  Inst 3772:   load_ext_name u0:3+0, %rax
  Inst 3773:   movq    %rdi, rsp(208 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3774:   call    *%rax
  Inst 3775:   jmp     label215
Block 215:
  (successor: Block 216)
  (instruction range: 3776 .. 3804)
  Inst 3776:   movq    %rax, rsp(208 + virtual offset)
  Inst 3777:   nop     len=0
  Inst 3778:   nop     len=0
  Inst 3779:   nop     len=0
  Inst 3780:   nop     len=0
  Inst 3781:   nop     len=0
  Inst 3782:   nop     len=0
  Inst 3783:   nop     len=0
  Inst 3784:   nop     len=0
  Inst 3785:   nop     len=0
  Inst 3786:   nop     len=0
  Inst 3787:   nop     len=0
  Inst 3788:   nop     len=0
  Inst 3789:   nop     len=0
  Inst 3790:   nop     len=0
  Inst 3791:   nop     len=0
  Inst 3792:   nop     len=0
  Inst 3793:   nop     len=0
  Inst 3794:   nop     len=0
  Inst 3795:   nop     len=0
  Inst 3796:   nop     len=0
  Inst 3797:   nop     len=0
  Inst 3798:   nop     len=0
  Inst 3799:   nop     len=0
  Inst 3800:   nop     len=0
  Inst 3801:   nop     len=0
  Inst 3802:   nop     len=0
  Inst 3803:   jmp     label216
Block 216:
  (original IR block: block108)
  (successor: Block 217)
  (successor: Block 218)
  (instruction range: 3804 .. 3815)
  Inst 3804:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3805:   movq    8(%rsi), %rdi
  Inst 3806:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3807:   load_ext_name u0:2+0, %rax
  Inst 3808:   movq    %rsi, rsp(216 + virtual offset)
  Inst 3809:   movq    %rdi, rsp(224 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3810:   call    *%rax
  Inst 3811:   movq    %rax, %rbx
  Inst 3812:   movq    %rdx, %r14
  Inst 3813:   testq   %r14, %r14
  Inst 3814:   jz      label217; j label218
Block 217:
  (successor: Block 220)
  (instruction range: 3815 .. 3844)
  Inst 3815:   movq    %rbx, rsp(680 + virtual offset)
  Inst 3816:   nop     len=0
  Inst 3817:   nop     len=0
  Inst 3818:   nop     len=0
  Inst 3819:   nop     len=0
  Inst 3820:   nop     len=0
  Inst 3821:   nop     len=0
  Inst 3822:   nop     len=0
  Inst 3823:   nop     len=0
  Inst 3824:   nop     len=0
  Inst 3825:   nop     len=0
  Inst 3826:   nop     len=0
  Inst 3827:   nop     len=0
  Inst 3828:   nop     len=0
  Inst 3829:   nop     len=0
  Inst 3830:   nop     len=0
  Inst 3831:   nop     len=0
  Inst 3832:   nop     len=0
  Inst 3833:   nop     len=0
  Inst 3834:   nop     len=0
  Inst 3835:   nop     len=0
  Inst 3836:   nop     len=0
  Inst 3837:   nop     len=0
  Inst 3838:   nop     len=0
  Inst 3839:   nop     len=0
  Inst 3840:   nop     len=0
  Inst 3841:   nop     len=0
  Inst 3842:   nop     len=0
  Inst 3843:   jmp     label220
Block 218:
  (original IR block: block111)
  (successor: Block 219)
  (instruction range: 3844 .. 3873)
  Inst 3844:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3845:   movq    152(%rsi), %r13
  Inst 3846:   movq    %r14, %r15
  Inst 3847:   addq    $-1, %r15
  Inst 3848:   movq    %r14, %rdx
  Inst 3849:   shlq    $3, %rdx
  Inst 3850:   movq    %r13, %r12
  Inst 3851:   addq    %rdx, %r12
  Inst 3852:   movq    %r13, %rdi
  Inst 3853:   addq    $-24, %rdi
  Inst 3854:   movq    %r13, %rsi
  Inst 3855:   load_ext_name %Memmove+0, %rax
  Inst 3856:   movq    %rbx, rsp(216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3857:   call    *%rax
  Inst 3858:   movq    rsp(216 + virtual offset), %rbx
  Inst 3859:   load_ext_name u1:1+0, %rsi
  Inst 3860:   movl    $1, %edi
  Inst 3861:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3862:   movl    $1, %edi
  Inst 3863:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3864:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3865:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3866:   movq    %r12, 152(%rsi)
  Inst 3867:   movq    %rbx, %rdi
  Inst 3868:   movq    %r15, %rsi
  Inst 3869:   load_ext_name u0:3+0, %rax
  Inst 3870:   movq    %rdi, rsp(216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3871:   call    *%rax
  Inst 3872:   jmp     label219
Block 219:
  (successor: Block 220)
  (instruction range: 3873 .. 3902)
  Inst 3873:   movq    %rax, rsp(680 + virtual offset)
  Inst 3874:   nop     len=0
  Inst 3875:   nop     len=0
  Inst 3876:   nop     len=0
  Inst 3877:   nop     len=0
  Inst 3878:   nop     len=0
  Inst 3879:   nop     len=0
  Inst 3880:   nop     len=0
  Inst 3881:   nop     len=0
  Inst 3882:   nop     len=0
  Inst 3883:   nop     len=0
  Inst 3884:   nop     len=0
  Inst 3885:   nop     len=0
  Inst 3886:   nop     len=0
  Inst 3887:   nop     len=0
  Inst 3888:   nop     len=0
  Inst 3889:   nop     len=0
  Inst 3890:   nop     len=0
  Inst 3891:   nop     len=0
  Inst 3892:   nop     len=0
  Inst 3893:   nop     len=0
  Inst 3894:   nop     len=0
  Inst 3895:   nop     len=0
  Inst 3896:   nop     len=0
  Inst 3897:   nop     len=0
  Inst 3898:   nop     len=0
  Inst 3899:   nop     len=0
  Inst 3900:   nop     len=0
  Inst 3901:   jmp     label220
Block 220:
  (original IR block: block110)
  (successor: Block 221)
  (successor: Block 222)
  (instruction range: 3902 .. 3913)
  Inst 3902:   movq    rsp(2064 + virtual offset), %rsi
  Inst 3903:   movq    8(%rsi), %rdi
  Inst 3904:   movq    rsp(2048 + virtual offset), %rsi
  Inst 3905:   load_ext_name u0:2+0, %rax
  Inst 3906:   movq    %rsi, rsp(216 + virtual offset)
  Inst 3907:   movq    %rdi, rsp(224 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3908:   call    *%rax
  Inst 3909:   movq    %rax, %rbx
  Inst 3910:   movq    %rdx, %r14
  Inst 3911:   testq   %r14, %r14
  Inst 3912:   jz      label221; j label222
Block 221:
  (successor: Block 224)
  (instruction range: 3913 .. 3942)
  Inst 3913:   movq    %rbx, rsp(216 + virtual offset)
  Inst 3914:   nop     len=0
  Inst 3915:   nop     len=0
  Inst 3916:   nop     len=0
  Inst 3917:   nop     len=0
  Inst 3918:   nop     len=0
  Inst 3919:   nop     len=0
  Inst 3920:   nop     len=0
  Inst 3921:   nop     len=0
  Inst 3922:   nop     len=0
  Inst 3923:   nop     len=0
  Inst 3924:   nop     len=0
  Inst 3925:   nop     len=0
  Inst 3926:   nop     len=0
  Inst 3927:   nop     len=0
  Inst 3928:   nop     len=0
  Inst 3929:   nop     len=0
  Inst 3930:   nop     len=0
  Inst 3931:   nop     len=0
  Inst 3932:   nop     len=0
  Inst 3933:   nop     len=0
  Inst 3934:   nop     len=0
  Inst 3935:   nop     len=0
  Inst 3936:   nop     len=0
  Inst 3937:   nop     len=0
  Inst 3938:   nop     len=0
  Inst 3939:   nop     len=0
  Inst 3940:   nop     len=0
  Inst 3941:   jmp     label224
Block 222:
  (original IR block: block113)
  (successor: Block 223)
  (instruction range: 3942 .. 3971)
  Inst 3942:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3943:   movq    152(%rsi), %r13
  Inst 3944:   movq    %r14, %r15
  Inst 3945:   addq    $-1, %r15
  Inst 3946:   movq    %r14, %rdx
  Inst 3947:   shlq    $3, %rdx
  Inst 3948:   movq    %r13, %r12
  Inst 3949:   addq    %rdx, %r12
  Inst 3950:   movq    %r13, %rdi
  Inst 3951:   addq    $-24, %rdi
  Inst 3952:   movq    %r13, %rsi
  Inst 3953:   load_ext_name %Memmove+0, %rax
  Inst 3954:   movq    %rbx, rsp(224 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S28, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3955:   call    *%rax
  Inst 3956:   movq    rsp(224 + virtual offset), %rbx
  Inst 3957:   load_ext_name u1:1+0, %rsi
  Inst 3958:   movl    $1, %edi
  Inst 3959:   movq    %rdi, -8(%r13,%r14,8)
  Inst 3960:   movl    $1, %edi
  Inst 3961:   movq    %rdi, -16(%r13,%r14,8)
  Inst 3962:   movq    %rsi, -24(%r13,%r14,8)
  Inst 3963:   movq    rsp(2072 + virtual offset), %rsi
  Inst 3964:   movq    %r12, 152(%rsi)
  Inst 3965:   movq    %rbx, %rdi
  Inst 3966:   movq    %r15, %rsi
  Inst 3967:   load_ext_name u0:3+0, %rax
  Inst 3968:   movq    %rdi, rsp(216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 3969:   call    *%rax
  Inst 3970:   jmp     label223
Block 223:
  (successor: Block 224)
  (instruction range: 3971 .. 4000)
  Inst 3971:   movq    %rax, rsp(216 + virtual offset)
  Inst 3972:   nop     len=0
  Inst 3973:   nop     len=0
  Inst 3974:   nop     len=0
  Inst 3975:   nop     len=0
  Inst 3976:   nop     len=0
  Inst 3977:   nop     len=0
  Inst 3978:   nop     len=0
  Inst 3979:   nop     len=0
  Inst 3980:   nop     len=0
  Inst 3981:   nop     len=0
  Inst 3982:   nop     len=0
  Inst 3983:   nop     len=0
  Inst 3984:   nop     len=0
  Inst 3985:   nop     len=0
  Inst 3986:   nop     len=0
  Inst 3987:   nop     len=0
  Inst 3988:   nop     len=0
  Inst 3989:   nop     len=0
  Inst 3990:   nop     len=0
  Inst 3991:   nop     len=0
  Inst 3992:   nop     len=0
  Inst 3993:   nop     len=0
  Inst 3994:   nop     len=0
  Inst 3995:   nop     len=0
  Inst 3996:   nop     len=0
  Inst 3997:   nop     len=0
  Inst 3998:   nop     len=0
  Inst 3999:   jmp     label224
Block 224:
  (original IR block: block112)
  (successor: Block 225)
  (successor: Block 226)
  (instruction range: 4000 .. 4011)
  Inst 4000:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4001:   movq    8(%rsi), %rdi
  Inst 4002:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4003:   load_ext_name u0:2+0, %rax
  Inst 4004:   movq    %rsi, rsp(224 + virtual offset)
  Inst 4005:   movq    %rdi, rsp(232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4006:   call    *%rax
  Inst 4007:   movq    %rax, %r15
  Inst 4008:   movq    %rdx, %r14
  Inst 4009:   testq   %r14, %r14
  Inst 4010:   jz      label225; j label226
Block 225:
  (successor: Block 228)
  (instruction range: 4011 .. 4041)
  Inst 4011:   movq    %r15, rsp(696 + virtual offset)
  Inst 4012:   nop     len=0
  Inst 4013:   nop     len=0
  Inst 4014:   nop     len=0
  Inst 4015:   nop     len=0
  Inst 4016:   nop     len=0
  Inst 4017:   nop     len=0
  Inst 4018:   nop     len=0
  Inst 4019:   nop     len=0
  Inst 4020:   nop     len=0
  Inst 4021:   nop     len=0
  Inst 4022:   nop     len=0
  Inst 4023:   nop     len=0
  Inst 4024:   nop     len=0
  Inst 4025:   nop     len=0
  Inst 4026:   nop     len=0
  Inst 4027:   nop     len=0
  Inst 4028:   nop     len=0
  Inst 4029:   nop     len=0
  Inst 4030:   nop     len=0
  Inst 4031:   nop     len=0
  Inst 4032:   nop     len=0
  Inst 4033:   nop     len=0
  Inst 4034:   nop     len=0
  Inst 4035:   nop     len=0
  Inst 4036:   nop     len=0
  Inst 4037:   nop     len=0
  Inst 4038:   nop     len=0
  Inst 4039:   nop     len=0
  Inst 4040:   jmp     label228
Block 226:
  (original IR block: block115)
  (successor: Block 227)
  (instruction range: 4041 .. 4070)
  Inst 4041:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4042:   movq    152(%rsi), %r13
  Inst 4043:   movq    %r14, %rbx
  Inst 4044:   addq    $-1, %rbx
  Inst 4045:   movq    %r14, %rdx
  Inst 4046:   shlq    $3, %rdx
  Inst 4047:   movq    %r13, %r12
  Inst 4048:   addq    %rdx, %r12
  Inst 4049:   movq    %r13, %rdi
  Inst 4050:   addq    $-24, %rdi
  Inst 4051:   movq    %r13, %rsi
  Inst 4052:   load_ext_name %Memmove+0, %rax
  Inst 4053:   movq    %r15, rsp(224 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4054:   call    *%rax
  Inst 4055:   movq    rsp(224 + virtual offset), %r15
  Inst 4056:   load_ext_name u1:1+0, %rsi
  Inst 4057:   movl    $1, %edi
  Inst 4058:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4059:   movl    $1, %edi
  Inst 4060:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4061:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4062:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4063:   movq    %r12, 152(%rsi)
  Inst 4064:   movq    %r15, %rdi
  Inst 4065:   movq    %rbx, %rsi
  Inst 4066:   load_ext_name u0:3+0, %rax
  Inst 4067:   movq    %rdi, rsp(224 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4068:   call    *%rax
  Inst 4069:   jmp     label227
Block 227:
  (successor: Block 228)
  (instruction range: 4070 .. 4100)
  Inst 4070:   movq    %rax, rsp(696 + virtual offset)
  Inst 4071:   nop     len=0
  Inst 4072:   nop     len=0
  Inst 4073:   nop     len=0
  Inst 4074:   nop     len=0
  Inst 4075:   nop     len=0
  Inst 4076:   nop     len=0
  Inst 4077:   nop     len=0
  Inst 4078:   nop     len=0
  Inst 4079:   nop     len=0
  Inst 4080:   nop     len=0
  Inst 4081:   nop     len=0
  Inst 4082:   nop     len=0
  Inst 4083:   nop     len=0
  Inst 4084:   nop     len=0
  Inst 4085:   nop     len=0
  Inst 4086:   nop     len=0
  Inst 4087:   nop     len=0
  Inst 4088:   nop     len=0
  Inst 4089:   nop     len=0
  Inst 4090:   nop     len=0
  Inst 4091:   nop     len=0
  Inst 4092:   nop     len=0
  Inst 4093:   nop     len=0
  Inst 4094:   nop     len=0
  Inst 4095:   nop     len=0
  Inst 4096:   nop     len=0
  Inst 4097:   nop     len=0
  Inst 4098:   nop     len=0
  Inst 4099:   jmp     label228
Block 228:
  (original IR block: block114)
  (successor: Block 229)
  (successor: Block 230)
  (instruction range: 4100 .. 4111)
  Inst 4100:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4101:   movq    8(%rsi), %rdi
  Inst 4102:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4103:   load_ext_name u0:2+0, %rax
  Inst 4104:   movq    %rsi, rsp(224 + virtual offset)
  Inst 4105:   movq    %rdi, rsp(232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4106:   call    *%rax
  Inst 4107:   movq    %rax, %rbx
  Inst 4108:   movq    %rdx, %r14
  Inst 4109:   testq   %r14, %r14
  Inst 4110:   jz      label229; j label230
Block 229:
  (successor: Block 232)
  (instruction range: 4111 .. 4141)
  Inst 4111:   movq    %rbx, rsp(224 + virtual offset)
  Inst 4112:   nop     len=0
  Inst 4113:   nop     len=0
  Inst 4114:   nop     len=0
  Inst 4115:   nop     len=0
  Inst 4116:   nop     len=0
  Inst 4117:   nop     len=0
  Inst 4118:   nop     len=0
  Inst 4119:   nop     len=0
  Inst 4120:   nop     len=0
  Inst 4121:   nop     len=0
  Inst 4122:   nop     len=0
  Inst 4123:   nop     len=0
  Inst 4124:   nop     len=0
  Inst 4125:   nop     len=0
  Inst 4126:   nop     len=0
  Inst 4127:   nop     len=0
  Inst 4128:   nop     len=0
  Inst 4129:   nop     len=0
  Inst 4130:   nop     len=0
  Inst 4131:   nop     len=0
  Inst 4132:   nop     len=0
  Inst 4133:   nop     len=0
  Inst 4134:   nop     len=0
  Inst 4135:   nop     len=0
  Inst 4136:   nop     len=0
  Inst 4137:   nop     len=0
  Inst 4138:   nop     len=0
  Inst 4139:   nop     len=0
  Inst 4140:   jmp     label232
Block 230:
  (original IR block: block117)
  (successor: Block 231)
  (instruction range: 4141 .. 4170)
  Inst 4141:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4142:   movq    152(%rsi), %r13
  Inst 4143:   movq    %r14, %r15
  Inst 4144:   addq    $-1, %r15
  Inst 4145:   movq    %r14, %rdx
  Inst 4146:   shlq    $3, %rdx
  Inst 4147:   movq    %r13, %r12
  Inst 4148:   addq    %rdx, %r12
  Inst 4149:   movq    %r13, %rdi
  Inst 4150:   addq    $-24, %rdi
  Inst 4151:   movq    %r13, %rsi
  Inst 4152:   load_ext_name %Memmove+0, %rax
  Inst 4153:   movq    %rbx, rsp(232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S29, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4154:   call    *%rax
  Inst 4155:   movq    rsp(232 + virtual offset), %rbx
  Inst 4156:   load_ext_name u1:1+0, %rsi
  Inst 4157:   movl    $1, %edi
  Inst 4158:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4159:   movl    $1, %edi
  Inst 4160:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4161:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4162:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4163:   movq    %r12, 152(%rsi)
  Inst 4164:   movq    %rbx, %rdi
  Inst 4165:   movq    %r15, %rsi
  Inst 4166:   load_ext_name u0:3+0, %rax
  Inst 4167:   movq    %rdi, rsp(224 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4168:   call    *%rax
  Inst 4169:   jmp     label231
Block 231:
  (successor: Block 232)
  (instruction range: 4170 .. 4200)
  Inst 4170:   movq    %rax, rsp(224 + virtual offset)
  Inst 4171:   nop     len=0
  Inst 4172:   nop     len=0
  Inst 4173:   nop     len=0
  Inst 4174:   nop     len=0
  Inst 4175:   nop     len=0
  Inst 4176:   nop     len=0
  Inst 4177:   nop     len=0
  Inst 4178:   nop     len=0
  Inst 4179:   nop     len=0
  Inst 4180:   nop     len=0
  Inst 4181:   nop     len=0
  Inst 4182:   nop     len=0
  Inst 4183:   nop     len=0
  Inst 4184:   nop     len=0
  Inst 4185:   nop     len=0
  Inst 4186:   nop     len=0
  Inst 4187:   nop     len=0
  Inst 4188:   nop     len=0
  Inst 4189:   nop     len=0
  Inst 4190:   nop     len=0
  Inst 4191:   nop     len=0
  Inst 4192:   nop     len=0
  Inst 4193:   nop     len=0
  Inst 4194:   nop     len=0
  Inst 4195:   nop     len=0
  Inst 4196:   nop     len=0
  Inst 4197:   nop     len=0
  Inst 4198:   nop     len=0
  Inst 4199:   jmp     label232
Block 232:
  (original IR block: block116)
  (successor: Block 233)
  (successor: Block 234)
  (instruction range: 4200 .. 4211)
  Inst 4200:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4201:   movq    8(%rsi), %rdi
  Inst 4202:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4203:   load_ext_name u0:2+0, %rax
  Inst 4204:   movq    %rsi, rsp(232 + virtual offset)
  Inst 4205:   movq    %rdi, rsp(240 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4206:   call    *%rax
  Inst 4207:   movq    %rax, %rbx
  Inst 4208:   movq    %rdx, %r14
  Inst 4209:   testq   %r14, %r14
  Inst 4210:   jz      label233; j label234
Block 233:
  (successor: Block 236)
  (instruction range: 4211 .. 4242)
  Inst 4211:   movq    %rbx, rsp(712 + virtual offset)
  Inst 4212:   nop     len=0
  Inst 4213:   nop     len=0
  Inst 4214:   nop     len=0
  Inst 4215:   nop     len=0
  Inst 4216:   nop     len=0
  Inst 4217:   nop     len=0
  Inst 4218:   nop     len=0
  Inst 4219:   nop     len=0
  Inst 4220:   nop     len=0
  Inst 4221:   nop     len=0
  Inst 4222:   nop     len=0
  Inst 4223:   nop     len=0
  Inst 4224:   nop     len=0
  Inst 4225:   nop     len=0
  Inst 4226:   nop     len=0
  Inst 4227:   nop     len=0
  Inst 4228:   nop     len=0
  Inst 4229:   nop     len=0
  Inst 4230:   nop     len=0
  Inst 4231:   nop     len=0
  Inst 4232:   nop     len=0
  Inst 4233:   nop     len=0
  Inst 4234:   nop     len=0
  Inst 4235:   nop     len=0
  Inst 4236:   nop     len=0
  Inst 4237:   nop     len=0
  Inst 4238:   nop     len=0
  Inst 4239:   nop     len=0
  Inst 4240:   nop     len=0
  Inst 4241:   jmp     label236
Block 234:
  (original IR block: block119)
  (successor: Block 235)
  (instruction range: 4242 .. 4271)
  Inst 4242:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4243:   movq    152(%rsi), %r13
  Inst 4244:   movq    %r14, %r15
  Inst 4245:   addq    $-1, %r15
  Inst 4246:   movq    %r14, %rdx
  Inst 4247:   shlq    $3, %rdx
  Inst 4248:   movq    %r13, %r12
  Inst 4249:   addq    %rdx, %r12
  Inst 4250:   movq    %r13, %rdi
  Inst 4251:   addq    $-24, %rdi
  Inst 4252:   movq    %r13, %rsi
  Inst 4253:   load_ext_name %Memmove+0, %rax
  Inst 4254:   movq    %rbx, rsp(232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4255:   call    *%rax
  Inst 4256:   movq    rsp(232 + virtual offset), %rbx
  Inst 4257:   load_ext_name u1:1+0, %rsi
  Inst 4258:   movl    $1, %edi
  Inst 4259:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4260:   movl    $1, %edi
  Inst 4261:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4262:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4263:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4264:   movq    %r12, 152(%rsi)
  Inst 4265:   movq    %rbx, %rdi
  Inst 4266:   movq    %r15, %rsi
  Inst 4267:   load_ext_name u0:3+0, %rax
  Inst 4268:   movq    %rdi, rsp(232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4269:   call    *%rax
  Inst 4270:   jmp     label235
Block 235:
  (successor: Block 236)
  (instruction range: 4271 .. 4302)
  Inst 4271:   movq    %rax, rsp(712 + virtual offset)
  Inst 4272:   nop     len=0
  Inst 4273:   nop     len=0
  Inst 4274:   nop     len=0
  Inst 4275:   nop     len=0
  Inst 4276:   nop     len=0
  Inst 4277:   nop     len=0
  Inst 4278:   nop     len=0
  Inst 4279:   nop     len=0
  Inst 4280:   nop     len=0
  Inst 4281:   nop     len=0
  Inst 4282:   nop     len=0
  Inst 4283:   nop     len=0
  Inst 4284:   nop     len=0
  Inst 4285:   nop     len=0
  Inst 4286:   nop     len=0
  Inst 4287:   nop     len=0
  Inst 4288:   nop     len=0
  Inst 4289:   nop     len=0
  Inst 4290:   nop     len=0
  Inst 4291:   nop     len=0
  Inst 4292:   nop     len=0
  Inst 4293:   nop     len=0
  Inst 4294:   nop     len=0
  Inst 4295:   nop     len=0
  Inst 4296:   nop     len=0
  Inst 4297:   nop     len=0
  Inst 4298:   nop     len=0
  Inst 4299:   nop     len=0
  Inst 4300:   nop     len=0
  Inst 4301:   jmp     label236
Block 236:
  (original IR block: block118)
  (successor: Block 237)
  (successor: Block 238)
  (instruction range: 4302 .. 4313)
  Inst 4302:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4303:   movq    8(%rsi), %rdi
  Inst 4304:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4305:   load_ext_name u0:2+0, %rax
  Inst 4306:   movq    %rsi, rsp(232 + virtual offset)
  Inst 4307:   movq    %rdi, rsp(240 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4308:   call    *%rax
  Inst 4309:   movq    %rax, %r15
  Inst 4310:   movq    %rdx, %r14
  Inst 4311:   testq   %r14, %r14
  Inst 4312:   jz      label237; j label238
Block 237:
  (successor: Block 240)
  (instruction range: 4313 .. 4344)
  Inst 4313:   movq    %r15, rsp(232 + virtual offset)
  Inst 4314:   nop     len=0
  Inst 4315:   nop     len=0
  Inst 4316:   nop     len=0
  Inst 4317:   nop     len=0
  Inst 4318:   nop     len=0
  Inst 4319:   nop     len=0
  Inst 4320:   nop     len=0
  Inst 4321:   nop     len=0
  Inst 4322:   nop     len=0
  Inst 4323:   nop     len=0
  Inst 4324:   nop     len=0
  Inst 4325:   nop     len=0
  Inst 4326:   nop     len=0
  Inst 4327:   nop     len=0
  Inst 4328:   nop     len=0
  Inst 4329:   nop     len=0
  Inst 4330:   nop     len=0
  Inst 4331:   nop     len=0
  Inst 4332:   nop     len=0
  Inst 4333:   nop     len=0
  Inst 4334:   nop     len=0
  Inst 4335:   nop     len=0
  Inst 4336:   nop     len=0
  Inst 4337:   nop     len=0
  Inst 4338:   nop     len=0
  Inst 4339:   nop     len=0
  Inst 4340:   nop     len=0
  Inst 4341:   nop     len=0
  Inst 4342:   nop     len=0
  Inst 4343:   jmp     label240
Block 238:
  (original IR block: block121)
  (successor: Block 239)
  (instruction range: 4344 .. 4373)
  Inst 4344:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4345:   movq    152(%rsi), %r13
  Inst 4346:   movq    %r14, %rbx
  Inst 4347:   addq    $-1, %rbx
  Inst 4348:   movq    %r14, %rdx
  Inst 4349:   shlq    $3, %rdx
  Inst 4350:   movq    %r13, %r12
  Inst 4351:   addq    %rdx, %r12
  Inst 4352:   movq    %r13, %rdi
  Inst 4353:   addq    $-24, %rdi
  Inst 4354:   movq    %r13, %rsi
  Inst 4355:   load_ext_name %Memmove+0, %rax
  Inst 4356:   movq    %r15, rsp(240 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S30, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4357:   call    *%rax
  Inst 4358:   movq    rsp(240 + virtual offset), %r15
  Inst 4359:   load_ext_name u1:1+0, %rsi
  Inst 4360:   movl    $1, %edi
  Inst 4361:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4362:   movl    $1, %edi
  Inst 4363:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4364:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4365:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4366:   movq    %r12, 152(%rsi)
  Inst 4367:   movq    %r15, %rdi
  Inst 4368:   movq    %rbx, %rsi
  Inst 4369:   load_ext_name u0:3+0, %rax
  Inst 4370:   movq    %rdi, rsp(232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4371:   call    *%rax
  Inst 4372:   jmp     label239
Block 239:
  (successor: Block 240)
  (instruction range: 4373 .. 4404)
  Inst 4373:   movq    %rax, rsp(232 + virtual offset)
  Inst 4374:   nop     len=0
  Inst 4375:   nop     len=0
  Inst 4376:   nop     len=0
  Inst 4377:   nop     len=0
  Inst 4378:   nop     len=0
  Inst 4379:   nop     len=0
  Inst 4380:   nop     len=0
  Inst 4381:   nop     len=0
  Inst 4382:   nop     len=0
  Inst 4383:   nop     len=0
  Inst 4384:   nop     len=0
  Inst 4385:   nop     len=0
  Inst 4386:   nop     len=0
  Inst 4387:   nop     len=0
  Inst 4388:   nop     len=0
  Inst 4389:   nop     len=0
  Inst 4390:   nop     len=0
  Inst 4391:   nop     len=0
  Inst 4392:   nop     len=0
  Inst 4393:   nop     len=0
  Inst 4394:   nop     len=0
  Inst 4395:   nop     len=0
  Inst 4396:   nop     len=0
  Inst 4397:   nop     len=0
  Inst 4398:   nop     len=0
  Inst 4399:   nop     len=0
  Inst 4400:   nop     len=0
  Inst 4401:   nop     len=0
  Inst 4402:   nop     len=0
  Inst 4403:   jmp     label240
Block 240:
  (original IR block: block120)
  (successor: Block 241)
  (successor: Block 242)
  (instruction range: 4404 .. 4415)
  Inst 4404:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4405:   movq    8(%rsi), %rdi
  Inst 4406:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4407:   load_ext_name u0:2+0, %rax
  Inst 4408:   movq    %rsi, rsp(240 + virtual offset)
  Inst 4409:   movq    %rdi, rsp(256 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4410:   call    *%rax
  Inst 4411:   movq    %rax, %rbx
  Inst 4412:   movq    %rdx, %r14
  Inst 4413:   testq   %r14, %r14
  Inst 4414:   jz      label241; j label242
Block 241:
  (successor: Block 244)
  (instruction range: 4415 .. 4447)
  Inst 4415:   movq    %rbx, rsp(728 + virtual offset)
  Inst 4416:   nop     len=0
  Inst 4417:   nop     len=0
  Inst 4418:   nop     len=0
  Inst 4419:   nop     len=0
  Inst 4420:   nop     len=0
  Inst 4421:   nop     len=0
  Inst 4422:   nop     len=0
  Inst 4423:   nop     len=0
  Inst 4424:   nop     len=0
  Inst 4425:   nop     len=0
  Inst 4426:   nop     len=0
  Inst 4427:   nop     len=0
  Inst 4428:   nop     len=0
  Inst 4429:   nop     len=0
  Inst 4430:   nop     len=0
  Inst 4431:   nop     len=0
  Inst 4432:   nop     len=0
  Inst 4433:   nop     len=0
  Inst 4434:   nop     len=0
  Inst 4435:   nop     len=0
  Inst 4436:   nop     len=0
  Inst 4437:   nop     len=0
  Inst 4438:   nop     len=0
  Inst 4439:   nop     len=0
  Inst 4440:   nop     len=0
  Inst 4441:   nop     len=0
  Inst 4442:   nop     len=0
  Inst 4443:   nop     len=0
  Inst 4444:   nop     len=0
  Inst 4445:   nop     len=0
  Inst 4446:   jmp     label244
Block 242:
  (original IR block: block123)
  (successor: Block 243)
  (instruction range: 4447 .. 4476)
  Inst 4447:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4448:   movq    152(%rsi), %r13
  Inst 4449:   movq    %r14, %r15
  Inst 4450:   addq    $-1, %r15
  Inst 4451:   movq    %r14, %rdx
  Inst 4452:   shlq    $3, %rdx
  Inst 4453:   movq    %r13, %r12
  Inst 4454:   addq    %rdx, %r12
  Inst 4455:   movq    %r13, %rdi
  Inst 4456:   addq    $-24, %rdi
  Inst 4457:   movq    %r13, %rsi
  Inst 4458:   load_ext_name %Memmove+0, %rax
  Inst 4459:   movq    %rbx, rsp(240 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4460:   call    *%rax
  Inst 4461:   movq    rsp(240 + virtual offset), %rbx
  Inst 4462:   load_ext_name u1:1+0, %rsi
  Inst 4463:   movl    $1, %edi
  Inst 4464:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4465:   movl    $1, %edi
  Inst 4466:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4467:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4468:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4469:   movq    %r12, 152(%rsi)
  Inst 4470:   movq    %rbx, %rdi
  Inst 4471:   movq    %r15, %rsi
  Inst 4472:   load_ext_name u0:3+0, %rax
  Inst 4473:   movq    %rdi, rsp(240 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4474:   call    *%rax
  Inst 4475:   jmp     label243
Block 243:
  (successor: Block 244)
  (instruction range: 4476 .. 4508)
  Inst 4476:   movq    %rax, rsp(728 + virtual offset)
  Inst 4477:   nop     len=0
  Inst 4478:   nop     len=0
  Inst 4479:   nop     len=0
  Inst 4480:   nop     len=0
  Inst 4481:   nop     len=0
  Inst 4482:   nop     len=0
  Inst 4483:   nop     len=0
  Inst 4484:   nop     len=0
  Inst 4485:   nop     len=0
  Inst 4486:   nop     len=0
  Inst 4487:   nop     len=0
  Inst 4488:   nop     len=0
  Inst 4489:   nop     len=0
  Inst 4490:   nop     len=0
  Inst 4491:   nop     len=0
  Inst 4492:   nop     len=0
  Inst 4493:   nop     len=0
  Inst 4494:   nop     len=0
  Inst 4495:   nop     len=0
  Inst 4496:   nop     len=0
  Inst 4497:   nop     len=0
  Inst 4498:   nop     len=0
  Inst 4499:   nop     len=0
  Inst 4500:   nop     len=0
  Inst 4501:   nop     len=0
  Inst 4502:   nop     len=0
  Inst 4503:   nop     len=0
  Inst 4504:   nop     len=0
  Inst 4505:   nop     len=0
  Inst 4506:   nop     len=0
  Inst 4507:   jmp     label244
Block 244:
  (original IR block: block122)
  (successor: Block 245)
  (successor: Block 246)
  (instruction range: 4508 .. 4519)
  Inst 4508:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4509:   movq    8(%rsi), %rdi
  Inst 4510:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4511:   load_ext_name u0:2+0, %rax
  Inst 4512:   movq    %rsi, rsp(240 + virtual offset)
  Inst 4513:   movq    %rdi, rsp(256 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4514:   call    *%rax
  Inst 4515:   movq    %rax, %rbx
  Inst 4516:   movq    %rdx, %r14
  Inst 4517:   testq   %r14, %r14
  Inst 4518:   jz      label245; j label246
Block 245:
  (successor: Block 248)
  (instruction range: 4519 .. 4551)
  Inst 4519:   movq    %rbx, rsp(240 + virtual offset)
  Inst 4520:   nop     len=0
  Inst 4521:   nop     len=0
  Inst 4522:   nop     len=0
  Inst 4523:   nop     len=0
  Inst 4524:   nop     len=0
  Inst 4525:   nop     len=0
  Inst 4526:   nop     len=0
  Inst 4527:   nop     len=0
  Inst 4528:   nop     len=0
  Inst 4529:   nop     len=0
  Inst 4530:   nop     len=0
  Inst 4531:   nop     len=0
  Inst 4532:   nop     len=0
  Inst 4533:   nop     len=0
  Inst 4534:   nop     len=0
  Inst 4535:   nop     len=0
  Inst 4536:   nop     len=0
  Inst 4537:   nop     len=0
  Inst 4538:   nop     len=0
  Inst 4539:   nop     len=0
  Inst 4540:   nop     len=0
  Inst 4541:   nop     len=0
  Inst 4542:   nop     len=0
  Inst 4543:   nop     len=0
  Inst 4544:   nop     len=0
  Inst 4545:   nop     len=0
  Inst 4546:   nop     len=0
  Inst 4547:   nop     len=0
  Inst 4548:   nop     len=0
  Inst 4549:   nop     len=0
  Inst 4550:   jmp     label248
Block 246:
  (original IR block: block125)
  (successor: Block 247)
  (instruction range: 4551 .. 4580)
  Inst 4551:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4552:   movq    152(%rsi), %r13
  Inst 4553:   movq    %r14, %r15
  Inst 4554:   addq    $-1, %r15
  Inst 4555:   movq    %r14, %rdx
  Inst 4556:   shlq    $3, %rdx
  Inst 4557:   movq    %r13, %r12
  Inst 4558:   addq    %rdx, %r12
  Inst 4559:   movq    %r13, %rdi
  Inst 4560:   addq    $-24, %rdi
  Inst 4561:   movq    %r13, %rsi
  Inst 4562:   load_ext_name %Memmove+0, %rax
  Inst 4563:   movq    %rbx, rsp(256 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S31, S32, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4564:   call    *%rax
  Inst 4565:   movq    rsp(256 + virtual offset), %rbx
  Inst 4566:   load_ext_name u1:1+0, %rsi
  Inst 4567:   movl    $1, %edi
  Inst 4568:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4569:   movl    $1, %edi
  Inst 4570:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4571:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4572:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4573:   movq    %r12, 152(%rsi)
  Inst 4574:   movq    %rbx, %rdi
  Inst 4575:   movq    %r15, %rsi
  Inst 4576:   load_ext_name u0:3+0, %rax
  Inst 4577:   movq    %rdi, rsp(240 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4578:   call    *%rax
  Inst 4579:   jmp     label247
Block 247:
  (successor: Block 248)
  (instruction range: 4580 .. 4612)
  Inst 4580:   movq    %rax, rsp(240 + virtual offset)
  Inst 4581:   nop     len=0
  Inst 4582:   nop     len=0
  Inst 4583:   nop     len=0
  Inst 4584:   nop     len=0
  Inst 4585:   nop     len=0
  Inst 4586:   nop     len=0
  Inst 4587:   nop     len=0
  Inst 4588:   nop     len=0
  Inst 4589:   nop     len=0
  Inst 4590:   nop     len=0
  Inst 4591:   nop     len=0
  Inst 4592:   nop     len=0
  Inst 4593:   nop     len=0
  Inst 4594:   nop     len=0
  Inst 4595:   nop     len=0
  Inst 4596:   nop     len=0
  Inst 4597:   nop     len=0
  Inst 4598:   nop     len=0
  Inst 4599:   nop     len=0
  Inst 4600:   nop     len=0
  Inst 4601:   nop     len=0
  Inst 4602:   nop     len=0
  Inst 4603:   nop     len=0
  Inst 4604:   nop     len=0
  Inst 4605:   nop     len=0
  Inst 4606:   nop     len=0
  Inst 4607:   nop     len=0
  Inst 4608:   nop     len=0
  Inst 4609:   nop     len=0
  Inst 4610:   nop     len=0
  Inst 4611:   jmp     label248
Block 248:
  (original IR block: block124)
  (successor: Block 249)
  (successor: Block 250)
  (instruction range: 4612 .. 4623)
  Inst 4612:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4613:   movq    8(%rsi), %rdi
  Inst 4614:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4615:   load_ext_name u0:2+0, %rax
  Inst 4616:   movq    %rsi, rsp(256 + virtual offset)
  Inst 4617:   movq    %rdi, rsp(272 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4618:   call    *%rax
  Inst 4619:   movq    %rax, %r15
  Inst 4620:   movq    %rdx, %r14
  Inst 4621:   testq   %r14, %r14
  Inst 4622:   jz      label249; j label250
Block 249:
  (successor: Block 252)
  (instruction range: 4623 .. 4656)
  Inst 4623:   movq    %r15, rsp(744 + virtual offset)
  Inst 4624:   nop     len=0
  Inst 4625:   nop     len=0
  Inst 4626:   nop     len=0
  Inst 4627:   nop     len=0
  Inst 4628:   nop     len=0
  Inst 4629:   nop     len=0
  Inst 4630:   nop     len=0
  Inst 4631:   nop     len=0
  Inst 4632:   nop     len=0
  Inst 4633:   nop     len=0
  Inst 4634:   nop     len=0
  Inst 4635:   nop     len=0
  Inst 4636:   nop     len=0
  Inst 4637:   nop     len=0
  Inst 4638:   nop     len=0
  Inst 4639:   nop     len=0
  Inst 4640:   nop     len=0
  Inst 4641:   nop     len=0
  Inst 4642:   nop     len=0
  Inst 4643:   nop     len=0
  Inst 4644:   nop     len=0
  Inst 4645:   nop     len=0
  Inst 4646:   nop     len=0
  Inst 4647:   nop     len=0
  Inst 4648:   nop     len=0
  Inst 4649:   nop     len=0
  Inst 4650:   nop     len=0
  Inst 4651:   nop     len=0
  Inst 4652:   nop     len=0
  Inst 4653:   nop     len=0
  Inst 4654:   nop     len=0
  Inst 4655:   jmp     label252
Block 250:
  (original IR block: block127)
  (successor: Block 251)
  (instruction range: 4656 .. 4685)
  Inst 4656:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4657:   movq    152(%rsi), %r13
  Inst 4658:   movq    %r14, %rbx
  Inst 4659:   addq    $-1, %rbx
  Inst 4660:   movq    %r14, %rdx
  Inst 4661:   shlq    $3, %rdx
  Inst 4662:   movq    %r13, %r12
  Inst 4663:   addq    %rdx, %r12
  Inst 4664:   movq    %r13, %rdi
  Inst 4665:   addq    $-24, %rdi
  Inst 4666:   movq    %r13, %rsi
  Inst 4667:   load_ext_name %Memmove+0, %rax
  Inst 4668:   movq    %r15, rsp(256 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4669:   call    *%rax
  Inst 4670:   movq    rsp(256 + virtual offset), %r15
  Inst 4671:   load_ext_name u1:1+0, %rsi
  Inst 4672:   movl    $1, %edi
  Inst 4673:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4674:   movl    $1, %edi
  Inst 4675:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4676:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4677:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4678:   movq    %r12, 152(%rsi)
  Inst 4679:   movq    %r15, %rdi
  Inst 4680:   movq    %rbx, %rsi
  Inst 4681:   load_ext_name u0:3+0, %rax
  Inst 4682:   movq    %rdi, rsp(256 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4683:   call    *%rax
  Inst 4684:   jmp     label251
Block 251:
  (successor: Block 252)
  (instruction range: 4685 .. 4718)
  Inst 4685:   movq    %rax, rsp(744 + virtual offset)
  Inst 4686:   nop     len=0
  Inst 4687:   nop     len=0
  Inst 4688:   nop     len=0
  Inst 4689:   nop     len=0
  Inst 4690:   nop     len=0
  Inst 4691:   nop     len=0
  Inst 4692:   nop     len=0
  Inst 4693:   nop     len=0
  Inst 4694:   nop     len=0
  Inst 4695:   nop     len=0
  Inst 4696:   nop     len=0
  Inst 4697:   nop     len=0
  Inst 4698:   nop     len=0
  Inst 4699:   nop     len=0
  Inst 4700:   nop     len=0
  Inst 4701:   nop     len=0
  Inst 4702:   nop     len=0
  Inst 4703:   nop     len=0
  Inst 4704:   nop     len=0
  Inst 4705:   nop     len=0
  Inst 4706:   nop     len=0
  Inst 4707:   nop     len=0
  Inst 4708:   nop     len=0
  Inst 4709:   nop     len=0
  Inst 4710:   nop     len=0
  Inst 4711:   nop     len=0
  Inst 4712:   nop     len=0
  Inst 4713:   nop     len=0
  Inst 4714:   nop     len=0
  Inst 4715:   nop     len=0
  Inst 4716:   nop     len=0
  Inst 4717:   jmp     label252
Block 252:
  (original IR block: block126)
  (successor: Block 253)
  (successor: Block 254)
  (instruction range: 4718 .. 4729)
  Inst 4718:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4719:   movq    8(%rsi), %rdi
  Inst 4720:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4721:   load_ext_name u0:2+0, %rax
  Inst 4722:   movq    %rsi, rsp(256 + virtual offset)
  Inst 4723:   movq    %rdi, rsp(272 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4724:   call    *%rax
  Inst 4725:   movq    %rax, %rbx
  Inst 4726:   movq    %rdx, %r14
  Inst 4727:   testq   %r14, %r14
  Inst 4728:   jz      label253; j label254
Block 253:
  (successor: Block 256)
  (instruction range: 4729 .. 4762)
  Inst 4729:   movq    %rbx, rsp(256 + virtual offset)
  Inst 4730:   nop     len=0
  Inst 4731:   nop     len=0
  Inst 4732:   nop     len=0
  Inst 4733:   nop     len=0
  Inst 4734:   nop     len=0
  Inst 4735:   nop     len=0
  Inst 4736:   nop     len=0
  Inst 4737:   nop     len=0
  Inst 4738:   nop     len=0
  Inst 4739:   nop     len=0
  Inst 4740:   nop     len=0
  Inst 4741:   nop     len=0
  Inst 4742:   nop     len=0
  Inst 4743:   nop     len=0
  Inst 4744:   nop     len=0
  Inst 4745:   nop     len=0
  Inst 4746:   nop     len=0
  Inst 4747:   nop     len=0
  Inst 4748:   nop     len=0
  Inst 4749:   nop     len=0
  Inst 4750:   nop     len=0
  Inst 4751:   nop     len=0
  Inst 4752:   nop     len=0
  Inst 4753:   nop     len=0
  Inst 4754:   nop     len=0
  Inst 4755:   nop     len=0
  Inst 4756:   nop     len=0
  Inst 4757:   nop     len=0
  Inst 4758:   nop     len=0
  Inst 4759:   nop     len=0
  Inst 4760:   nop     len=0
  Inst 4761:   jmp     label256
Block 254:
  (original IR block: block129)
  (successor: Block 255)
  (instruction range: 4762 .. 4791)
  Inst 4762:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4763:   movq    152(%rsi), %r13
  Inst 4764:   movq    %r14, %r15
  Inst 4765:   addq    $-1, %r15
  Inst 4766:   movq    %r14, %rdx
  Inst 4767:   shlq    $3, %rdx
  Inst 4768:   movq    %r13, %r12
  Inst 4769:   addq    %rdx, %r12
  Inst 4770:   movq    %r13, %rdi
  Inst 4771:   addq    $-24, %rdi
  Inst 4772:   movq    %r13, %rsi
  Inst 4773:   load_ext_name %Memmove+0, %rax
  Inst 4774:   movq    %rbx, rsp(272 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S33, S34, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4775:   call    *%rax
  Inst 4776:   movq    rsp(272 + virtual offset), %rbx
  Inst 4777:   load_ext_name u1:1+0, %rsi
  Inst 4778:   movl    $1, %edi
  Inst 4779:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4780:   movl    $1, %edi
  Inst 4781:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4782:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4783:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4784:   movq    %r12, 152(%rsi)
  Inst 4785:   movq    %rbx, %rdi
  Inst 4786:   movq    %r15, %rsi
  Inst 4787:   load_ext_name u0:3+0, %rax
  Inst 4788:   movq    %rdi, rsp(256 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4789:   call    *%rax
  Inst 4790:   jmp     label255
Block 255:
  (successor: Block 256)
  (instruction range: 4791 .. 4824)
  Inst 4791:   movq    %rax, rsp(256 + virtual offset)
  Inst 4792:   nop     len=0
  Inst 4793:   nop     len=0
  Inst 4794:   nop     len=0
  Inst 4795:   nop     len=0
  Inst 4796:   nop     len=0
  Inst 4797:   nop     len=0
  Inst 4798:   nop     len=0
  Inst 4799:   nop     len=0
  Inst 4800:   nop     len=0
  Inst 4801:   nop     len=0
  Inst 4802:   nop     len=0
  Inst 4803:   nop     len=0
  Inst 4804:   nop     len=0
  Inst 4805:   nop     len=0
  Inst 4806:   nop     len=0
  Inst 4807:   nop     len=0
  Inst 4808:   nop     len=0
  Inst 4809:   nop     len=0
  Inst 4810:   nop     len=0
  Inst 4811:   nop     len=0
  Inst 4812:   nop     len=0
  Inst 4813:   nop     len=0
  Inst 4814:   nop     len=0
  Inst 4815:   nop     len=0
  Inst 4816:   nop     len=0
  Inst 4817:   nop     len=0
  Inst 4818:   nop     len=0
  Inst 4819:   nop     len=0
  Inst 4820:   nop     len=0
  Inst 4821:   nop     len=0
  Inst 4822:   nop     len=0
  Inst 4823:   jmp     label256
Block 256:
  (original IR block: block128)
  (successor: Block 257)
  (successor: Block 258)
  (instruction range: 4824 .. 4835)
  Inst 4824:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4825:   movq    8(%rsi), %rdi
  Inst 4826:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4827:   load_ext_name u0:2+0, %rax
  Inst 4828:   movq    %rsi, rsp(272 + virtual offset)
  Inst 4829:   movq    %rdi, rsp(288 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4830:   call    *%rax
  Inst 4831:   movq    %rax, %rbx
  Inst 4832:   movq    %rdx, %r14
  Inst 4833:   testq   %r14, %r14
  Inst 4834:   jz      label257; j label258
Block 257:
  (successor: Block 260)
  (instruction range: 4835 .. 4869)
  Inst 4835:   movq    %rbx, rsp(760 + virtual offset)
  Inst 4836:   nop     len=0
  Inst 4837:   nop     len=0
  Inst 4838:   nop     len=0
  Inst 4839:   nop     len=0
  Inst 4840:   nop     len=0
  Inst 4841:   nop     len=0
  Inst 4842:   nop     len=0
  Inst 4843:   nop     len=0
  Inst 4844:   nop     len=0
  Inst 4845:   nop     len=0
  Inst 4846:   nop     len=0
  Inst 4847:   nop     len=0
  Inst 4848:   nop     len=0
  Inst 4849:   nop     len=0
  Inst 4850:   nop     len=0
  Inst 4851:   nop     len=0
  Inst 4852:   nop     len=0
  Inst 4853:   nop     len=0
  Inst 4854:   nop     len=0
  Inst 4855:   nop     len=0
  Inst 4856:   nop     len=0
  Inst 4857:   nop     len=0
  Inst 4858:   nop     len=0
  Inst 4859:   nop     len=0
  Inst 4860:   nop     len=0
  Inst 4861:   nop     len=0
  Inst 4862:   nop     len=0
  Inst 4863:   nop     len=0
  Inst 4864:   nop     len=0
  Inst 4865:   nop     len=0
  Inst 4866:   nop     len=0
  Inst 4867:   nop     len=0
  Inst 4868:   jmp     label260
Block 258:
  (original IR block: block131)
  (successor: Block 259)
  (instruction range: 4869 .. 4898)
  Inst 4869:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4870:   movq    152(%rsi), %r13
  Inst 4871:   movq    %r14, %r15
  Inst 4872:   addq    $-1, %r15
  Inst 4873:   movq    %r14, %rdx
  Inst 4874:   shlq    $3, %rdx
  Inst 4875:   movq    %r13, %r12
  Inst 4876:   addq    %rdx, %r12
  Inst 4877:   movq    %r13, %rdi
  Inst 4878:   addq    $-24, %rdi
  Inst 4879:   movq    %r13, %rsi
  Inst 4880:   load_ext_name %Memmove+0, %rax
  Inst 4881:   movq    %rbx, rsp(272 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4882:   call    *%rax
  Inst 4883:   movq    rsp(272 + virtual offset), %rbx
  Inst 4884:   load_ext_name u1:1+0, %rsi
  Inst 4885:   movl    $1, %edi
  Inst 4886:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4887:   movl    $1, %edi
  Inst 4888:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4889:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4890:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4891:   movq    %r12, 152(%rsi)
  Inst 4892:   movq    %rbx, %rdi
  Inst 4893:   movq    %r15, %rsi
  Inst 4894:   load_ext_name u0:3+0, %rax
  Inst 4895:   movq    %rdi, rsp(272 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4896:   call    *%rax
  Inst 4897:   jmp     label259
Block 259:
  (successor: Block 260)
  (instruction range: 4898 .. 4932)
  Inst 4898:   movq    %rax, rsp(760 + virtual offset)
  Inst 4899:   nop     len=0
  Inst 4900:   nop     len=0
  Inst 4901:   nop     len=0
  Inst 4902:   nop     len=0
  Inst 4903:   nop     len=0
  Inst 4904:   nop     len=0
  Inst 4905:   nop     len=0
  Inst 4906:   nop     len=0
  Inst 4907:   nop     len=0
  Inst 4908:   nop     len=0
  Inst 4909:   nop     len=0
  Inst 4910:   nop     len=0
  Inst 4911:   nop     len=0
  Inst 4912:   nop     len=0
  Inst 4913:   nop     len=0
  Inst 4914:   nop     len=0
  Inst 4915:   nop     len=0
  Inst 4916:   nop     len=0
  Inst 4917:   nop     len=0
  Inst 4918:   nop     len=0
  Inst 4919:   nop     len=0
  Inst 4920:   nop     len=0
  Inst 4921:   nop     len=0
  Inst 4922:   nop     len=0
  Inst 4923:   nop     len=0
  Inst 4924:   nop     len=0
  Inst 4925:   nop     len=0
  Inst 4926:   nop     len=0
  Inst 4927:   nop     len=0
  Inst 4928:   nop     len=0
  Inst 4929:   nop     len=0
  Inst 4930:   nop     len=0
  Inst 4931:   jmp     label260
Block 260:
  (original IR block: block130)
  (successor: Block 261)
  (successor: Block 262)
  (instruction range: 4932 .. 4943)
  Inst 4932:   movq    rsp(2064 + virtual offset), %rsi
  Inst 4933:   movq    8(%rsi), %rdi
  Inst 4934:   movq    rsp(2048 + virtual offset), %rsi
  Inst 4935:   load_ext_name u0:2+0, %rax
  Inst 4936:   movq    %rsi, rsp(272 + virtual offset)
  Inst 4937:   movq    %rdi, rsp(288 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4938:   call    *%rax
  Inst 4939:   movq    %rax, %r15
  Inst 4940:   movq    %rdx, %r14
  Inst 4941:   testq   %r14, %r14
  Inst 4942:   jz      label261; j label262
Block 261:
  (successor: Block 264)
  (instruction range: 4943 .. 4977)
  Inst 4943:   movq    %r15, rsp(272 + virtual offset)
  Inst 4944:   nop     len=0
  Inst 4945:   nop     len=0
  Inst 4946:   nop     len=0
  Inst 4947:   nop     len=0
  Inst 4948:   nop     len=0
  Inst 4949:   nop     len=0
  Inst 4950:   nop     len=0
  Inst 4951:   nop     len=0
  Inst 4952:   nop     len=0
  Inst 4953:   nop     len=0
  Inst 4954:   nop     len=0
  Inst 4955:   nop     len=0
  Inst 4956:   nop     len=0
  Inst 4957:   nop     len=0
  Inst 4958:   nop     len=0
  Inst 4959:   nop     len=0
  Inst 4960:   nop     len=0
  Inst 4961:   nop     len=0
  Inst 4962:   nop     len=0
  Inst 4963:   nop     len=0
  Inst 4964:   nop     len=0
  Inst 4965:   nop     len=0
  Inst 4966:   nop     len=0
  Inst 4967:   nop     len=0
  Inst 4968:   nop     len=0
  Inst 4969:   nop     len=0
  Inst 4970:   nop     len=0
  Inst 4971:   nop     len=0
  Inst 4972:   nop     len=0
  Inst 4973:   nop     len=0
  Inst 4974:   nop     len=0
  Inst 4975:   nop     len=0
  Inst 4976:   jmp     label264
Block 262:
  (original IR block: block133)
  (successor: Block 263)
  (instruction range: 4977 .. 5006)
  Inst 4977:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4978:   movq    152(%rsi), %r13
  Inst 4979:   movq    %r14, %rbx
  Inst 4980:   addq    $-1, %rbx
  Inst 4981:   movq    %r14, %rdx
  Inst 4982:   shlq    $3, %rdx
  Inst 4983:   movq    %r13, %r12
  Inst 4984:   addq    %rdx, %r12
  Inst 4985:   movq    %r13, %rdi
  Inst 4986:   addq    $-24, %rdi
  Inst 4987:   movq    %r13, %rsi
  Inst 4988:   load_ext_name %Memmove+0, %rax
  Inst 4989:   movq    %r15, rsp(288 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S35, S36, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 4990:   call    *%rax
  Inst 4991:   movq    rsp(288 + virtual offset), %r15
  Inst 4992:   load_ext_name u1:1+0, %rsi
  Inst 4993:   movl    $1, %edi
  Inst 4994:   movq    %rdi, -8(%r13,%r14,8)
  Inst 4995:   movl    $1, %edi
  Inst 4996:   movq    %rdi, -16(%r13,%r14,8)
  Inst 4997:   movq    %rsi, -24(%r13,%r14,8)
  Inst 4998:   movq    rsp(2072 + virtual offset), %rsi
  Inst 4999:   movq    %r12, 152(%rsi)
  Inst 5000:   movq    %r15, %rdi
  Inst 5001:   movq    %rbx, %rsi
  Inst 5002:   load_ext_name u0:3+0, %rax
  Inst 5003:   movq    %rdi, rsp(272 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5004:   call    *%rax
  Inst 5005:   jmp     label263
Block 263:
  (successor: Block 264)
  (instruction range: 5006 .. 5040)
  Inst 5006:   movq    %rax, rsp(272 + virtual offset)
  Inst 5007:   nop     len=0
  Inst 5008:   nop     len=0
  Inst 5009:   nop     len=0
  Inst 5010:   nop     len=0
  Inst 5011:   nop     len=0
  Inst 5012:   nop     len=0
  Inst 5013:   nop     len=0
  Inst 5014:   nop     len=0
  Inst 5015:   nop     len=0
  Inst 5016:   nop     len=0
  Inst 5017:   nop     len=0
  Inst 5018:   nop     len=0
  Inst 5019:   nop     len=0
  Inst 5020:   nop     len=0
  Inst 5021:   nop     len=0
  Inst 5022:   nop     len=0
  Inst 5023:   nop     len=0
  Inst 5024:   nop     len=0
  Inst 5025:   nop     len=0
  Inst 5026:   nop     len=0
  Inst 5027:   nop     len=0
  Inst 5028:   nop     len=0
  Inst 5029:   nop     len=0
  Inst 5030:   nop     len=0
  Inst 5031:   nop     len=0
  Inst 5032:   nop     len=0
  Inst 5033:   nop     len=0
  Inst 5034:   nop     len=0
  Inst 5035:   nop     len=0
  Inst 5036:   nop     len=0
  Inst 5037:   nop     len=0
  Inst 5038:   nop     len=0
  Inst 5039:   jmp     label264
Block 264:
  (original IR block: block132)
  (successor: Block 265)
  (successor: Block 266)
  (instruction range: 5040 .. 5051)
  Inst 5040:   movq    rsp(2064 + virtual offset), %rsi
  Inst 5041:   movq    8(%rsi), %rdi
  Inst 5042:   movq    rsp(2048 + virtual offset), %rsi
  Inst 5043:   load_ext_name u0:2+0, %rax
  Inst 5044:   movq    %rsi, rsp(288 + virtual offset)
  Inst 5045:   movq    %rdi, rsp(304 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5046:   call    *%rax
  Inst 5047:   movq    %rax, %rbx
  Inst 5048:   movq    %rdx, %r14
  Inst 5049:   testq   %r14, %r14
  Inst 5050:   jz      label265; j label266
Block 265:
  (successor: Block 268)
  (instruction range: 5051 .. 5086)
  Inst 5051:   movq    %rbx, rsp(776 + virtual offset)
  Inst 5052:   nop     len=0
  Inst 5053:   nop     len=0
  Inst 5054:   nop     len=0
  Inst 5055:   nop     len=0
  Inst 5056:   nop     len=0
  Inst 5057:   nop     len=0
  Inst 5058:   nop     len=0
  Inst 5059:   nop     len=0
  Inst 5060:   nop     len=0
  Inst 5061:   nop     len=0
  Inst 5062:   nop     len=0
  Inst 5063:   nop     len=0
  Inst 5064:   nop     len=0
  Inst 5065:   nop     len=0
  Inst 5066:   nop     len=0
  Inst 5067:   nop     len=0
  Inst 5068:   nop     len=0
  Inst 5069:   nop     len=0
  Inst 5070:   nop     len=0
  Inst 5071:   nop     len=0
  Inst 5072:   nop     len=0
  Inst 5073:   nop     len=0
  Inst 5074:   nop     len=0
  Inst 5075:   nop     len=0
  Inst 5076:   nop     len=0
  Inst 5077:   nop     len=0
  Inst 5078:   nop     len=0
  Inst 5079:   nop     len=0
  Inst 5080:   nop     len=0
  Inst 5081:   nop     len=0
  Inst 5082:   nop     len=0
  Inst 5083:   nop     len=0
  Inst 5084:   nop     len=0
  Inst 5085:   jmp     label268
Block 266:
  (original IR block: block135)
  (successor: Block 267)
  (instruction range: 5086 .. 5115)
  Inst 5086:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5087:   movq    152(%rsi), %r13
  Inst 5088:   movq    %r14, %r15
  Inst 5089:   addq    $-1, %r15
  Inst 5090:   movq    %r14, %rdx
  Inst 5091:   shlq    $3, %rdx
  Inst 5092:   movq    %r13, %r12
  Inst 5093:   addq    %rdx, %r12
  Inst 5094:   movq    %r13, %rdi
  Inst 5095:   addq    $-24, %rdi
  Inst 5096:   movq    %r13, %rsi
  Inst 5097:   load_ext_name %Memmove+0, %rax
  Inst 5098:   movq    %rbx, rsp(288 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5099:   call    *%rax
  Inst 5100:   movq    rsp(288 + virtual offset), %rbx
  Inst 5101:   load_ext_name u1:1+0, %rsi
  Inst 5102:   movl    $1, %edi
  Inst 5103:   movq    %rdi, -8(%r13,%r14,8)
  Inst 5104:   movl    $1, %edi
  Inst 5105:   movq    %rdi, -16(%r13,%r14,8)
  Inst 5106:   movq    %rsi, -24(%r13,%r14,8)
  Inst 5107:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5108:   movq    %r12, 152(%rsi)
  Inst 5109:   movq    %rbx, %rdi
  Inst 5110:   movq    %r15, %rsi
  Inst 5111:   load_ext_name u0:3+0, %rax
  Inst 5112:   movq    %rdi, rsp(288 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5113:   call    *%rax
  Inst 5114:   jmp     label267
Block 267:
  (successor: Block 268)
  (instruction range: 5115 .. 5150)
  Inst 5115:   movq    %rax, rsp(776 + virtual offset)
  Inst 5116:   nop     len=0
  Inst 5117:   nop     len=0
  Inst 5118:   nop     len=0
  Inst 5119:   nop     len=0
  Inst 5120:   nop     len=0
  Inst 5121:   nop     len=0
  Inst 5122:   nop     len=0
  Inst 5123:   nop     len=0
  Inst 5124:   nop     len=0
  Inst 5125:   nop     len=0
  Inst 5126:   nop     len=0
  Inst 5127:   nop     len=0
  Inst 5128:   nop     len=0
  Inst 5129:   nop     len=0
  Inst 5130:   nop     len=0
  Inst 5131:   nop     len=0
  Inst 5132:   nop     len=0
  Inst 5133:   nop     len=0
  Inst 5134:   nop     len=0
  Inst 5135:   nop     len=0
  Inst 5136:   nop     len=0
  Inst 5137:   nop     len=0
  Inst 5138:   nop     len=0
  Inst 5139:   nop     len=0
  Inst 5140:   nop     len=0
  Inst 5141:   nop     len=0
  Inst 5142:   nop     len=0
  Inst 5143:   nop     len=0
  Inst 5144:   nop     len=0
  Inst 5145:   nop     len=0
  Inst 5146:   nop     len=0
  Inst 5147:   nop     len=0
  Inst 5148:   nop     len=0
  Inst 5149:   jmp     label268
Block 268:
  (original IR block: block134)
  (successor: Block 269)
  (successor: Block 270)
  (instruction range: 5150 .. 5161)
  Inst 5150:   movq    rsp(2064 + virtual offset), %rsi
  Inst 5151:   movq    8(%rsi), %rdi
  Inst 5152:   movq    rsp(2048 + virtual offset), %rsi
  Inst 5153:   load_ext_name u0:2+0, %rax
  Inst 5154:   movq    %rsi, rsp(288 + virtual offset)
  Inst 5155:   movq    %rdi, rsp(304 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5156:   call    *%rax
  Inst 5157:   movq    %rax, %rbx
  Inst 5158:   movq    %rdx, %r14
  Inst 5159:   testq   %r14, %r14
  Inst 5160:   jz      label269; j label270
Block 269:
  (successor: Block 272)
  (instruction range: 5161 .. 5196)
  Inst 5161:   movq    %rbx, rsp(288 + virtual offset)
  Inst 5162:   nop     len=0
  Inst 5163:   nop     len=0
  Inst 5164:   nop     len=0
  Inst 5165:   nop     len=0
  Inst 5166:   nop     len=0
  Inst 5167:   nop     len=0
  Inst 5168:   nop     len=0
  Inst 5169:   nop     len=0
  Inst 5170:   nop     len=0
  Inst 5171:   nop     len=0
  Inst 5172:   nop     len=0
  Inst 5173:   nop     len=0
  Inst 5174:   nop     len=0
  Inst 5175:   nop     len=0
  Inst 5176:   nop     len=0
  Inst 5177:   nop     len=0
  Inst 5178:   nop     len=0
  Inst 5179:   nop     len=0
  Inst 5180:   nop     len=0
  Inst 5181:   nop     len=0
  Inst 5182:   nop     len=0
  Inst 5183:   nop     len=0
  Inst 5184:   nop     len=0
  Inst 5185:   nop     len=0
  Inst 5186:   nop     len=0
  Inst 5187:   nop     len=0
  Inst 5188:   nop     len=0
  Inst 5189:   nop     len=0
  Inst 5190:   nop     len=0
  Inst 5191:   nop     len=0
  Inst 5192:   nop     len=0
  Inst 5193:   nop     len=0
  Inst 5194:   nop     len=0
  Inst 5195:   jmp     label272
Block 270:
  (original IR block: block137)
  (successor: Block 271)
  (instruction range: 5196 .. 5225)
  Inst 5196:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5197:   movq    152(%rsi), %r13
  Inst 5198:   movq    %r14, %r15
  Inst 5199:   addq    $-1, %r15
  Inst 5200:   movq    %r14, %rdx
  Inst 5201:   shlq    $3, %rdx
  Inst 5202:   movq    %r13, %r12
  Inst 5203:   addq    %rdx, %r12
  Inst 5204:   movq    %r13, %rdi
  Inst 5205:   addq    $-24, %rdi
  Inst 5206:   movq    %r13, %rsi
  Inst 5207:   load_ext_name %Memmove+0, %rax
  Inst 5208:   movq    %rbx, rsp(304 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S37, S38, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5209:   call    *%rax
  Inst 5210:   movq    rsp(304 + virtual offset), %rbx
  Inst 5211:   load_ext_name u1:1+0, %rsi
  Inst 5212:   movl    $1, %edi
  Inst 5213:   movq    %rdi, -8(%r13,%r14,8)
  Inst 5214:   movl    $1, %edi
  Inst 5215:   movq    %rdi, -16(%r13,%r14,8)
  Inst 5216:   movq    %rsi, -24(%r13,%r14,8)
  Inst 5217:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5218:   movq    %r12, 152(%rsi)
  Inst 5219:   movq    %rbx, %rdi
  Inst 5220:   movq    %r15, %rsi
  Inst 5221:   load_ext_name u0:3+0, %rax
  Inst 5222:   movq    %rdi, rsp(288 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5223:   call    *%rax
  Inst 5224:   jmp     label271
Block 271:
  (successor: Block 272)
  (instruction range: 5225 .. 5260)
  Inst 5225:   movq    %rax, rsp(288 + virtual offset)
  Inst 5226:   nop     len=0
  Inst 5227:   nop     len=0
  Inst 5228:   nop     len=0
  Inst 5229:   nop     len=0
  Inst 5230:   nop     len=0
  Inst 5231:   nop     len=0
  Inst 5232:   nop     len=0
  Inst 5233:   nop     len=0
  Inst 5234:   nop     len=0
  Inst 5235:   nop     len=0
  Inst 5236:   nop     len=0
  Inst 5237:   nop     len=0
  Inst 5238:   nop     len=0
  Inst 5239:   nop     len=0
  Inst 5240:   nop     len=0
  Inst 5241:   nop     len=0
  Inst 5242:   nop     len=0
  Inst 5243:   nop     len=0
  Inst 5244:   nop     len=0
  Inst 5245:   nop     len=0
  Inst 5246:   nop     len=0
  Inst 5247:   nop     len=0
  Inst 5248:   nop     len=0
  Inst 5249:   nop     len=0
  Inst 5250:   nop     len=0
  Inst 5251:   nop     len=0
  Inst 5252:   nop     len=0
  Inst 5253:   nop     len=0
  Inst 5254:   nop     len=0
  Inst 5255:   nop     len=0
  Inst 5256:   nop     len=0
  Inst 5257:   nop     len=0
  Inst 5258:   nop     len=0
  Inst 5259:   jmp     label272
Block 272:
  (original IR block: block136)
  (successor: Block 273)
  (successor: Block 274)
  (instruction range: 5260 .. 5271)
  Inst 5260:   movq    rsp(2064 + virtual offset), %rsi
  Inst 5261:   movq    8(%rsi), %rdi
  Inst 5262:   movq    rsp(2048 + virtual offset), %rsi
  Inst 5263:   load_ext_name u0:2+0, %rax
  Inst 5264:   movq    %rsi, rsp(304 + virtual offset)
  Inst 5265:   movq    %rdi, rsp(320 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5266:   call    *%rax
  Inst 5267:   movq    %rax, %r15
  Inst 5268:   movq    %rdx, %r14
  Inst 5269:   testq   %r14, %r14
  Inst 5270:   jz      label273; j label274
Block 273:
  (successor: Block 276)
  (instruction range: 5271 .. 5307)
  Inst 5271:   movq    %r15, rsp(792 + virtual offset)
  Inst 5272:   nop     len=0
  Inst 5273:   nop     len=0
  Inst 5274:   nop     len=0
  Inst 5275:   nop     len=0
  Inst 5276:   nop     len=0
  Inst 5277:   nop     len=0
  Inst 5278:   nop     len=0
  Inst 5279:   nop     len=0
  Inst 5280:   nop     len=0
  Inst 5281:   nop     len=0
  Inst 5282:   nop     len=0
  Inst 5283:   nop     len=0
  Inst 5284:   nop     len=0
  Inst 5285:   nop     len=0
  Inst 5286:   nop     len=0
  Inst 5287:   nop     len=0
  Inst 5288:   nop     len=0
  Inst 5289:   nop     len=0
  Inst 5290:   nop     len=0
  Inst 5291:   nop     len=0
  Inst 5292:   nop     len=0
  Inst 5293:   nop     len=0
  Inst 5294:   nop     len=0
  Inst 5295:   nop     len=0
  Inst 5296:   nop     len=0
  Inst 5297:   nop     len=0
  Inst 5298:   nop     len=0
  Inst 5299:   nop     len=0
  Inst 5300:   nop     len=0
  Inst 5301:   nop     len=0
  Inst 5302:   nop     len=0
  Inst 5303:   nop     len=0
  Inst 5304:   nop     len=0
  Inst 5305:   nop     len=0
  Inst 5306:   jmp     label276
Block 274:
  (original IR block: block139)
  (successor: Block 275)
  (instruction range: 5307 .. 5336)
  Inst 5307:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5308:   movq    152(%rsi), %r13
  Inst 5309:   movq    %r14, %rbx
  Inst 5310:   addq    $-1, %rbx
  Inst 5311:   movq    %r14, %rdx
  Inst 5312:   shlq    $3, %rdx
  Inst 5313:   movq    %r13, %r12
  Inst 5314:   addq    %rdx, %r12
  Inst 5315:   movq    %r13, %rdi
  Inst 5316:   addq    $-24, %rdi
  Inst 5317:   movq    %r13, %rsi
  Inst 5318:   load_ext_name %Memmove+0, %rax
  Inst 5319:   movq    %r15, rsp(304 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5320:   call    *%rax
  Inst 5321:   movq    rsp(304 + virtual offset), %r15
  Inst 5322:   load_ext_name u1:1+0, %rsi
  Inst 5323:   movl    $1, %edi
  Inst 5324:   movq    %rdi, -8(%r13,%r14,8)
  Inst 5325:   movl    $1, %edi
  Inst 5326:   movq    %rdi, -16(%r13,%r14,8)
  Inst 5327:   movq    %rsi, -24(%r13,%r14,8)
  Inst 5328:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5329:   movq    %r12, 152(%rsi)
  Inst 5330:   movq    %r15, %rdi
  Inst 5331:   movq    %rbx, %rsi
  Inst 5332:   load_ext_name u0:3+0, %rax
  Inst 5333:   movq    %rdi, rsp(304 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5334:   call    *%rax
  Inst 5335:   jmp     label275
Block 275:
  (successor: Block 276)
  (instruction range: 5336 .. 5372)
  Inst 5336:   movq    %rax, rsp(792 + virtual offset)
  Inst 5337:   nop     len=0
  Inst 5338:   nop     len=0
  Inst 5339:   nop     len=0
  Inst 5340:   nop     len=0
  Inst 5341:   nop     len=0
  Inst 5342:   nop     len=0
  Inst 5343:   nop     len=0
  Inst 5344:   nop     len=0
  Inst 5345:   nop     len=0
  Inst 5346:   nop     len=0
  Inst 5347:   nop     len=0
  Inst 5348:   nop     len=0
  Inst 5349:   nop     len=0
  Inst 5350:   nop     len=0
  Inst 5351:   nop     len=0
  Inst 5352:   nop     len=0
  Inst 5353:   nop     len=0
  Inst 5354:   nop     len=0
  Inst 5355:   nop     len=0
  Inst 5356:   nop     len=0
  Inst 5357:   nop     len=0
  Inst 5358:   nop     len=0
  Inst 5359:   nop     len=0
  Inst 5360:   nop     len=0
  Inst 5361:   nop     len=0
  Inst 5362:   nop     len=0
  Inst 5363:   nop     len=0
  Inst 5364:   nop     len=0
  Inst 5365:   nop     len=0
  Inst 5366:   nop     len=0
  Inst 5367:   nop     len=0
  Inst 5368:   nop     len=0
  Inst 5369:   nop     len=0
  Inst 5370:   nop     len=0
  Inst 5371:   jmp     label276
Block 276:
  (original IR block: block138)
  (successor: Block 277)
  (successor: Block 278)
  (instruction range: 5372 .. 5383)
  Inst 5372:   movq    rsp(2064 + virtual offset), %rsi
  Inst 5373:   movq    8(%rsi), %rdi
  Inst 5374:   movq    rsp(2048 + virtual offset), %rsi
  Inst 5375:   load_ext_name u0:2+0, %rax
  Inst 5376:   movq    %rsi, rsp(304 + virtual offset)
  Inst 5377:   movq    %rdi, rsp(320 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5378:   call    *%rax
  Inst 5379:   movq    %rax, %rbx
  Inst 5380:   movq    %rdx, %r14
  Inst 5381:   testq   %r14, %r14
  Inst 5382:   jz      label277; j label278
Block 277:
  (successor: Block 280)
  (instruction range: 5383 .. 5419)
  Inst 5383:   movq    %rbx, rsp(304 + virtual offset)
  Inst 5384:   nop     len=0
  Inst 5385:   nop     len=0
  Inst 5386:   nop     len=0
  Inst 5387:   nop     len=0
  Inst 5388:   nop     len=0
  Inst 5389:   nop     len=0
  Inst 5390:   nop     len=0
  Inst 5391:   nop     len=0
  Inst 5392:   nop     len=0
  Inst 5393:   nop     len=0
  Inst 5394:   nop     len=0
  Inst 5395:   nop     len=0
  Inst 5396:   nop     len=0
  Inst 5397:   nop     len=0
  Inst 5398:   nop     len=0
  Inst 5399:   nop     len=0
  Inst 5400:   nop     len=0
  Inst 5401:   nop     len=0
  Inst 5402:   nop     len=0
  Inst 5403:   nop     len=0
  Inst 5404:   nop     len=0
  Inst 5405:   nop     len=0
  Inst 5406:   nop     len=0
  Inst 5407:   nop     len=0
  Inst 5408:   nop     len=0
  Inst 5409:   nop     len=0
  Inst 5410:   nop     len=0
  Inst 5411:   nop     len=0
  Inst 5412:   nop     len=0
  Inst 5413:   nop     len=0
  Inst 5414:   nop     len=0
  Inst 5415:   nop     len=0
  Inst 5416:   nop     len=0
  Inst 5417:   nop     len=0
  Inst 5418:   jmp     label280
Block 278:
  (original IR block: block141)
  (successor: Block 279)
  (instruction range: 5419 .. 5448)
  Inst 5419:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5420:   movq    152(%rsi), %r13
  Inst 5421:   movq    %r14, %r15
  Inst 5422:   addq    $-1, %r15
  Inst 5423:   movq    %r14, %rdx
  Inst 5424:   shlq    $3, %rdx
  Inst 5425:   movq    %r13, %r12
  Inst 5426:   addq    %rdx, %r12
  Inst 5427:   movq    %r13, %rdi
  Inst 5428:   addq    $-24, %rdi
  Inst 5429:   movq    %r13, %rsi
  Inst 5430:   load_ext_name %Memmove+0, %rax
  Inst 5431:   movq    %rbx, rsp(320 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S39, S40, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5432:   call    *%rax
  Inst 5433:   movq    rsp(320 + virtual offset), %rbx
  Inst 5434:   load_ext_name u1:1+0, %rsi
  Inst 5435:   movl    $1, %edi
  Inst 5436:   movq    %rdi, -8(%r13,%r14,8)
  Inst 5437:   movl    $1, %edi
  Inst 5438:   movq    %rdi, -16(%r13,%r14,8)
  Inst 5439:   movq    %rsi, -24(%r13,%r14,8)
  Inst 5440:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5441:   movq    %r12, 152(%rsi)
  Inst 5442:   movq    %rbx, %rdi
  Inst 5443:   movq    %r15, %rsi
  Inst 5444:   load_ext_name u0:3+0, %rax
  Inst 5445:   movq    %rdi, rsp(304 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5446:   call    *%rax
  Inst 5447:   jmp     label279
Block 279:
  (successor: Block 280)
  (instruction range: 5448 .. 5484)
  Inst 5448:   movq    %rax, rsp(304 + virtual offset)
  Inst 5449:   nop     len=0
  Inst 5450:   nop     len=0
  Inst 5451:   nop     len=0
  Inst 5452:   nop     len=0
  Inst 5453:   nop     len=0
  Inst 5454:   nop     len=0
  Inst 5455:   nop     len=0
  Inst 5456:   nop     len=0
  Inst 5457:   nop     len=0
  Inst 5458:   nop     len=0
  Inst 5459:   nop     len=0
  Inst 5460:   nop     len=0
  Inst 5461:   nop     len=0
  Inst 5462:   nop     len=0
  Inst 5463:   nop     len=0
  Inst 5464:   nop     len=0
  Inst 5465:   nop     len=0
  Inst 5466:   nop     len=0
  Inst 5467:   nop     len=0
  Inst 5468:   nop     len=0
  Inst 5469:   nop     len=0
  Inst 5470:   nop     len=0
  Inst 5471:   nop     len=0
  Inst 5472:   nop     len=0
  Inst 5473:   nop     len=0
  Inst 5474:   nop     len=0
  Inst 5475:   nop     len=0
  Inst 5476:   nop     len=0
  Inst 5477:   nop     len=0
  Inst 5478:   nop     len=0
  Inst 5479:   nop     len=0
  Inst 5480:   nop     len=0
  Inst 5481:   nop     len=0
  Inst 5482:   nop     len=0
  Inst 5483:   jmp     label280
Block 280:
  (original IR block: block140)
  (successor: Block 281)
  (successor: Block 282)
  (instruction range: 5484 .. 5495)
  Inst 5484:   movq    rsp(2064 + virtual offset), %rsi
  Inst 5485:   movq    8(%rsi), %rdi
  Inst 5486:   movq    rsp(2048 + virtual offset), %rsi
  Inst 5487:   load_ext_name u0:2+0, %rax
  Inst 5488:   movq    %rsi, rsp(320 + virtual offset)
  Inst 5489:   movq    %rdi, rsp(336 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5490:   call    *%rax
  Inst 5491:   movq    %rax, %rbx
  Inst 5492:   movq    %rdx, %r14
  Inst 5493:   testq   %r14, %r14
  Inst 5494:   jz      label281; j label282
Block 281:
  (successor: Block 284)
  (instruction range: 5495 .. 5532)
  Inst 5495:   movq    %rbx, rsp(808 + virtual offset)
  Inst 5496:   nop     len=0
  Inst 5497:   nop     len=0
  Inst 5498:   nop     len=0
  Inst 5499:   nop     len=0
  Inst 5500:   nop     len=0
  Inst 5501:   nop     len=0
  Inst 5502:   nop     len=0
  Inst 5503:   nop     len=0
  Inst 5504:   nop     len=0
  Inst 5505:   nop     len=0
  Inst 5506:   nop     len=0
  Inst 5507:   nop     len=0
  Inst 5508:   nop     len=0
  Inst 5509:   nop     len=0
  Inst 5510:   nop     len=0
  Inst 5511:   nop     len=0
  Inst 5512:   nop     len=0
  Inst 5513:   nop     len=0
  Inst 5514:   nop     len=0
  Inst 5515:   nop     len=0
  Inst 5516:   nop     len=0
  Inst 5517:   nop     len=0
  Inst 5518:   nop     len=0
  Inst 5519:   nop     len=0
  Inst 5520:   nop     len=0
  Inst 5521:   nop     len=0
  Inst 5522:   nop     len=0
  Inst 5523:   nop     len=0
  Inst 5524:   nop     len=0
  Inst 5525:   nop     len=0
  Inst 5526:   nop     len=0
  Inst 5527:   nop     len=0
  Inst 5528:   nop     len=0
  Inst 5529:   nop     len=0
  Inst 5530:   nop     len=0
  Inst 5531:   jmp     label284
Block 282:
  (original IR block: block143)
  (successor: Block 283)
  (instruction range: 5532 .. 5561)
  Inst 5532:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5533:   movq    152(%rsi), %r13
  Inst 5534:   movq    %r14, %r15
  Inst 5535:   addq    $-1, %r15
  Inst 5536:   movq    %r14, %rdx
  Inst 5537:   shlq    $3, %rdx
  Inst 5538:   movq    %r13, %r12
  Inst 5539:   addq    %rdx, %r12
  Inst 5540:   movq    %r13, %rdi
  Inst 5541:   addq    $-24, %rdi
  Inst 5542:   movq    %r13, %rsi
  Inst 5543:   load_ext_name %Memmove+0, %rax
  Inst 5544:   movq    %rbx, rsp(320 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5545:   call    *%rax
  Inst 5546:   movq    rsp(320 + virtual offset), %rbx
  Inst 5547:   load_ext_name u1:1+0, %rsi
  Inst 5548:   movl    $1, %edi
  Inst 5549:   movq    %rdi, -8(%r13,%r14,8)
  Inst 5550:   movl    $1, %edi
  Inst 5551:   movq    %rdi, -16(%r13,%r14,8)
  Inst 5552:   movq    %rsi, -24(%r13,%r14,8)
  Inst 5553:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5554:   movq    %r12, 152(%rsi)
  Inst 5555:   movq    %rbx, %rdi
  Inst 5556:   movq    %r15, %rsi
  Inst 5557:   load_ext_name u0:3+0, %rax
  Inst 5558:   movq    %rdi, rsp(320 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5559:   call    *%rax
  Inst 5560:   jmp     label283
Block 283:
  (successor: Block 284)
  (instruction range: 5561 .. 5598)
  Inst 5561:   movq    %rax, rsp(808 + virtual offset)
  Inst 5562:   nop     len=0
  Inst 5563:   nop     len=0
  Inst 5564:   nop     len=0
  Inst 5565:   nop     len=0
  Inst 5566:   nop     len=0
  Inst 5567:   nop     len=0
  Inst 5568:   nop     len=0
  Inst 5569:   nop     len=0
  Inst 5570:   nop     len=0
  Inst 5571:   nop     len=0
  Inst 5572:   nop     len=0
  Inst 5573:   nop     len=0
  Inst 5574:   nop     len=0
  Inst 5575:   nop     len=0
  Inst 5576:   nop     len=0
  Inst 5577:   nop     len=0
  Inst 5578:   nop     len=0
  Inst 5579:   nop     len=0
  Inst 5580:   nop     len=0
  Inst 5581:   nop     len=0
  Inst 5582:   nop     len=0
  Inst 5583:   nop     len=0
  Inst 5584:   nop     len=0
  Inst 5585:   nop     len=0
  Inst 5586:   nop     len=0
  Inst 5587:   nop     len=0
  Inst 5588:   nop     len=0
  Inst 5589:   nop     len=0
  Inst 5590:   nop     len=0
  Inst 5591:   nop     len=0
  Inst 5592:   nop     len=0
  Inst 5593:   nop     len=0
  Inst 5594:   nop     len=0
  Inst 5595:   nop     len=0
  Inst 5596:   nop     len=0
  Inst 5597:   jmp     label284
Block 284:
  (original IR block: block142)
  (successor: Block 285)
  (successor: Block 286)
  (instruction range: 5598 .. 5609)
  Inst 5598:   movq    rsp(2064 + virtual offset), %rsi
  Inst 5599:   movq    8(%rsi), %rdi
  Inst 5600:   movq    rsp(2048 + virtual offset), %rsi
  Inst 5601:   load_ext_name u0:2+0, %rax
  Inst 5602:   movq    %rsi, rsp(320 + virtual offset)
  Inst 5603:   movq    %rdi, rsp(336 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5604:   call    *%rax
  Inst 5605:   movq    %rax, %r15
  Inst 5606:   movq    %rdx, %r14
  Inst 5607:   testq   %r14, %r14
  Inst 5608:   jz      label285; j label286
Block 285:
  (successor: Block 288)
  (instruction range: 5609 .. 5646)
  Inst 5609:   movq    %r15, rsp(320 + virtual offset)
  Inst 5610:   nop     len=0
  Inst 5611:   nop     len=0
  Inst 5612:   nop     len=0
  Inst 5613:   nop     len=0
  Inst 5614:   nop     len=0
  Inst 5615:   nop     len=0
  Inst 5616:   nop     len=0
  Inst 5617:   nop     len=0
  Inst 5618:   nop     len=0
  Inst 5619:   nop     len=0
  Inst 5620:   nop     len=0
  Inst 5621:   nop     len=0
  Inst 5622:   nop     len=0
  Inst 5623:   nop     len=0
  Inst 5624:   nop     len=0
  Inst 5625:   nop     len=0
  Inst 5626:   nop     len=0
  Inst 5627:   nop     len=0
  Inst 5628:   nop     len=0
  Inst 5629:   nop     len=0
  Inst 5630:   nop     len=0
  Inst 5631:   nop     len=0
  Inst 5632:   nop     len=0
  Inst 5633:   nop     len=0
  Inst 5634:   nop     len=0
  Inst 5635:   nop     len=0
  Inst 5636:   nop     len=0
  Inst 5637:   nop     len=0
  Inst 5638:   nop     len=0
  Inst 5639:   nop     len=0
  Inst 5640:   nop     len=0
  Inst 5641:   nop     len=0
  Inst 5642:   nop     len=0
  Inst 5643:   nop     len=0
  Inst 5644:   nop     len=0
  Inst 5645:   jmp     label288
Block 286:
  (original IR block: block145)
  (successor: Block 287)
  (instruction range: 5646 .. 5675)
  Inst 5646:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5647:   movq    152(%rsi), %r13
  Inst 5648:   movq    %r14, %rbx
  Inst 5649:   addq    $-1, %rbx
  Inst 5650:   movq    %r14, %rdx
  Inst 5651:   shlq    $3, %rdx
  Inst 5652:   movq    %r13, %r12
  Inst 5653:   addq    %rdx, %r12
  Inst 5654:   movq    %r13, %rdi
  Inst 5655:   addq    $-24, %rdi
  Inst 5656:   movq    %r13, %rsi
  Inst 5657:   load_ext_name %Memmove+0, %rax
  Inst 5658:   movq    %r15, rsp(336 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S41, S42, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5659:   call    *%rax
  Inst 5660:   movq    rsp(336 + virtual offset), %r15
  Inst 5661:   load_ext_name u1:1+0, %rsi
  Inst 5662:   movl    $1, %edi
  Inst 5663:   movq    %rdi, -8(%r13,%r14,8)
  Inst 5664:   movl    $1, %edi
  Inst 5665:   movq    %rdi, -16(%r13,%r14,8)
  Inst 5666:   movq    %rsi, -24(%r13,%r14,8)
  Inst 5667:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5668:   movq    %r12, 152(%rsi)
  Inst 5669:   movq    %r15, %rdi
  Inst 5670:   movq    %rbx, %rsi
  Inst 5671:   load_ext_name u0:3+0, %rax
  Inst 5672:   movq    %rdi, rsp(320 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5673:   call    *%rax
  Inst 5674:   jmp     label287
Block 287:
  (successor: Block 288)
  (instruction range: 5675 .. 5712)
  Inst 5675:   movq    %rax, rsp(320 + virtual offset)
  Inst 5676:   nop     len=0
  Inst 5677:   nop     len=0
  Inst 5678:   nop     len=0
  Inst 5679:   nop     len=0
  Inst 5680:   nop     len=0
  Inst 5681:   nop     len=0
  Inst 5682:   nop     len=0
  Inst 5683:   nop     len=0
  Inst 5684:   nop     len=0
  Inst 5685:   nop     len=0
  Inst 5686:   nop     len=0
  Inst 5687:   nop     len=0
  Inst 5688:   nop     len=0
  Inst 5689:   nop     len=0
  Inst 5690:   nop     len=0
  Inst 5691:   nop     len=0
  Inst 5692:   nop     len=0
  Inst 5693:   nop     len=0
  Inst 5694:   nop     len=0
  Inst 5695:   nop     len=0
  Inst 5696:   nop     len=0
  Inst 5697:   nop     len=0
  Inst 5698:   nop     len=0
  Inst 5699:   nop     len=0
  Inst 5700:   nop     len=0
  Inst 5701:   nop     len=0
  Inst 5702:   nop     len=0
  Inst 5703:   nop     len=0
  Inst 5704:   nop     len=0
  Inst 5705:   nop     len=0
  Inst 5706:   nop     len=0
  Inst 5707:   nop     len=0
  Inst 5708:   nop     len=0
  Inst 5709:   nop     len=0
  Inst 5710:   nop     len=0
  Inst 5711:   jmp     label288
Block 288:
  (original IR block: block144)
  (successor: Block 289)
  (successor: Block 290)
  (instruction range: 5712 .. 5723)
  Inst 5712:   movq    rsp(2064 + virtual offset), %rsi
  Inst 5713:   movq    8(%rsi), %rdi
  Inst 5714:   movq    rsp(2048 + virtual offset), %rsi
  Inst 5715:   load_ext_name u0:2+0, %rax
  Inst 5716:   movq    %rsi, rsp(336 + virtual offset)
  Inst 5717:   movq    %rdi, rsp(352 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5718:   call    *%rax
  Inst 5719:   movq    %rax, %rbx
  Inst 5720:   movq    %rdx, %r14
  Inst 5721:   testq   %r14, %r14
  Inst 5722:   jz      label289; j label290
Block 289:
  (successor: Block 292)
  (instruction range: 5723 .. 5761)
  Inst 5723:   movq    %rbx, rsp(824 + virtual offset)
  Inst 5724:   nop     len=0
  Inst 5725:   nop     len=0
  Inst 5726:   nop     len=0
  Inst 5727:   nop     len=0
  Inst 5728:   nop     len=0
  Inst 5729:   nop     len=0
  Inst 5730:   nop     len=0
  Inst 5731:   nop     len=0
  Inst 5732:   nop     len=0
  Inst 5733:   nop     len=0
  Inst 5734:   nop     len=0
  Inst 5735:   nop     len=0
  Inst 5736:   nop     len=0
  Inst 5737:   nop     len=0
  Inst 5738:   nop     len=0
  Inst 5739:   nop     len=0
  Inst 5740:   nop     len=0
  Inst 5741:   nop     len=0
  Inst 5742:   nop     len=0
  Inst 5743:   nop     len=0
  Inst 5744:   nop     len=0
  Inst 5745:   nop     len=0
  Inst 5746:   nop     len=0
  Inst 5747:   nop     len=0
  Inst 5748:   nop     len=0
  Inst 5749:   nop     len=0
  Inst 5750:   nop     len=0
  Inst 5751:   nop     len=0
  Inst 5752:   nop     len=0
  Inst 5753:   nop     len=0
  Inst 5754:   nop     len=0
  Inst 5755:   nop     len=0
  Inst 5756:   nop     len=0
  Inst 5757:   nop     len=0
  Inst 5758:   nop     len=0
  Inst 5759:   nop     len=0
  Inst 5760:   jmp     label292
Block 290:
  (original IR block: block147)
  (successor: Block 291)
  (instruction range: 5761 .. 5790)
  Inst 5761:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5762:   movq    152(%rsi), %r13
  Inst 5763:   movq    %r14, %r15
  Inst 5764:   addq    $-1, %r15
  Inst 5765:   movq    %r14, %rdx
  Inst 5766:   shlq    $3, %rdx
  Inst 5767:   movq    %r13, %r12
  Inst 5768:   addq    %rdx, %r12
  Inst 5769:   movq    %r13, %rdi
  Inst 5770:   addq    $-24, %rdi
  Inst 5771:   movq    %r13, %rsi
  Inst 5772:   load_ext_name %Memmove+0, %rax
  Inst 5773:   movq    %rbx, rsp(336 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5774:   call    *%rax
  Inst 5775:   movq    rsp(336 + virtual offset), %rbx
  Inst 5776:   load_ext_name u1:1+0, %rsi
  Inst 5777:   movl    $1, %edi
  Inst 5778:   movq    %rdi, -8(%r13,%r14,8)
  Inst 5779:   movl    $1, %edi
  Inst 5780:   movq    %rdi, -16(%r13,%r14,8)
  Inst 5781:   movq    %rsi, -24(%r13,%r14,8)
  Inst 5782:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5783:   movq    %r12, 152(%rsi)
  Inst 5784:   movq    %rbx, %rdi
  Inst 5785:   movq    %r15, %rsi
  Inst 5786:   load_ext_name u0:3+0, %rax
  Inst 5787:   movq    %rdi, rsp(336 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5788:   call    *%rax
  Inst 5789:   jmp     label291
Block 291:
  (successor: Block 292)
  (instruction range: 5790 .. 5828)
  Inst 5790:   movq    %rax, rsp(824 + virtual offset)
  Inst 5791:   nop     len=0
  Inst 5792:   nop     len=0
  Inst 5793:   nop     len=0
  Inst 5794:   nop     len=0
  Inst 5795:   nop     len=0
  Inst 5796:   nop     len=0
  Inst 5797:   nop     len=0
  Inst 5798:   nop     len=0
  Inst 5799:   nop     len=0
  Inst 5800:   nop     len=0
  Inst 5801:   nop     len=0
  Inst 5802:   nop     len=0
  Inst 5803:   nop     len=0
  Inst 5804:   nop     len=0
  Inst 5805:   nop     len=0
  Inst 5806:   nop     len=0
  Inst 5807:   nop     len=0
  Inst 5808:   nop     len=0
  Inst 5809:   nop     len=0
  Inst 5810:   nop     len=0
  Inst 5811:   nop     len=0
  Inst 5812:   nop     len=0
  Inst 5813:   nop     len=0
  Inst 5814:   nop     len=0
  Inst 5815:   nop     len=0
  Inst 5816:   nop     len=0
  Inst 5817:   nop     len=0
  Inst 5818:   nop     len=0
  Inst 5819:   nop     len=0
  Inst 5820:   nop     len=0
  Inst 5821:   nop     len=0
  Inst 5822:   nop     len=0
  Inst 5823:   nop     len=0
  Inst 5824:   nop     len=0
  Inst 5825:   nop     len=0
  Inst 5826:   nop     len=0
  Inst 5827:   jmp     label292
Block 292:
  (original IR block: block146)
  (successor: Block 293)
  (successor: Block 294)
  (instruction range: 5828 .. 5839)
  Inst 5828:   movq    rsp(2064 + virtual offset), %rsi
  Inst 5829:   movq    8(%rsi), %rdi
  Inst 5830:   movq    rsp(2048 + virtual offset), %rsi
  Inst 5831:   load_ext_name u0:2+0, %rax
  Inst 5832:   movq    %rsi, rsp(336 + virtual offset)
  Inst 5833:   movq    %rdi, rsp(352 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5834:   call    *%rax
  Inst 5835:   movq    %rax, %rbx
  Inst 5836:   movq    %rdx, %r14
  Inst 5837:   testq   %r14, %r14
  Inst 5838:   jz      label293; j label294
Block 293:
  (successor: Block 296)
  (instruction range: 5839 .. 5877)
  Inst 5839:   movq    %rbx, rsp(336 + virtual offset)
  Inst 5840:   nop     len=0
  Inst 5841:   nop     len=0
  Inst 5842:   nop     len=0
  Inst 5843:   nop     len=0
  Inst 5844:   nop     len=0
  Inst 5845:   nop     len=0
  Inst 5846:   nop     len=0
  Inst 5847:   nop     len=0
  Inst 5848:   nop     len=0
  Inst 5849:   nop     len=0
  Inst 5850:   nop     len=0
  Inst 5851:   nop     len=0
  Inst 5852:   nop     len=0
  Inst 5853:   nop     len=0
  Inst 5854:   nop     len=0
  Inst 5855:   nop     len=0
  Inst 5856:   nop     len=0
  Inst 5857:   nop     len=0
  Inst 5858:   nop     len=0
  Inst 5859:   nop     len=0
  Inst 5860:   nop     len=0
  Inst 5861:   nop     len=0
  Inst 5862:   nop     len=0
  Inst 5863:   nop     len=0
  Inst 5864:   nop     len=0
  Inst 5865:   nop     len=0
  Inst 5866:   nop     len=0
  Inst 5867:   nop     len=0
  Inst 5868:   nop     len=0
  Inst 5869:   nop     len=0
  Inst 5870:   nop     len=0
  Inst 5871:   nop     len=0
  Inst 5872:   nop     len=0
  Inst 5873:   nop     len=0
  Inst 5874:   nop     len=0
  Inst 5875:   nop     len=0
  Inst 5876:   jmp     label296
Block 294:
  (original IR block: block149)
  (successor: Block 295)
  (instruction range: 5877 .. 5906)
  Inst 5877:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5878:   movq    152(%rsi), %r13
  Inst 5879:   movq    %r14, %r15
  Inst 5880:   addq    $-1, %r15
  Inst 5881:   movq    %r14, %rdx
  Inst 5882:   shlq    $3, %rdx
  Inst 5883:   movq    %r13, %r12
  Inst 5884:   addq    %rdx, %r12
  Inst 5885:   movq    %r13, %rdi
  Inst 5886:   addq    $-24, %rdi
  Inst 5887:   movq    %r13, %rsi
  Inst 5888:   load_ext_name %Memmove+0, %rax
  Inst 5889:   movq    %rbx, rsp(352 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S43, S44, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5890:   call    *%rax
  Inst 5891:   movq    rsp(352 + virtual offset), %rbx
  Inst 5892:   load_ext_name u1:1+0, %rsi
  Inst 5893:   movl    $1, %edi
  Inst 5894:   movq    %rdi, -8(%r13,%r14,8)
  Inst 5895:   movl    $1, %edi
  Inst 5896:   movq    %rdi, -16(%r13,%r14,8)
  Inst 5897:   movq    %rsi, -24(%r13,%r14,8)
  Inst 5898:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5899:   movq    %r12, 152(%rsi)
  Inst 5900:   movq    %rbx, %rdi
  Inst 5901:   movq    %r15, %rsi
  Inst 5902:   load_ext_name u0:3+0, %rax
  Inst 5903:   movq    %rdi, rsp(336 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5904:   call    *%rax
  Inst 5905:   jmp     label295
Block 295:
  (successor: Block 296)
  (instruction range: 5906 .. 5944)
  Inst 5906:   movq    %rax, rsp(336 + virtual offset)
  Inst 5907:   nop     len=0
  Inst 5908:   nop     len=0
  Inst 5909:   nop     len=0
  Inst 5910:   nop     len=0
  Inst 5911:   nop     len=0
  Inst 5912:   nop     len=0
  Inst 5913:   nop     len=0
  Inst 5914:   nop     len=0
  Inst 5915:   nop     len=0
  Inst 5916:   nop     len=0
  Inst 5917:   nop     len=0
  Inst 5918:   nop     len=0
  Inst 5919:   nop     len=0
  Inst 5920:   nop     len=0
  Inst 5921:   nop     len=0
  Inst 5922:   nop     len=0
  Inst 5923:   nop     len=0
  Inst 5924:   nop     len=0
  Inst 5925:   nop     len=0
  Inst 5926:   nop     len=0
  Inst 5927:   nop     len=0
  Inst 5928:   nop     len=0
  Inst 5929:   nop     len=0
  Inst 5930:   nop     len=0
  Inst 5931:   nop     len=0
  Inst 5932:   nop     len=0
  Inst 5933:   nop     len=0
  Inst 5934:   nop     len=0
  Inst 5935:   nop     len=0
  Inst 5936:   nop     len=0
  Inst 5937:   nop     len=0
  Inst 5938:   nop     len=0
  Inst 5939:   nop     len=0
  Inst 5940:   nop     len=0
  Inst 5941:   nop     len=0
  Inst 5942:   nop     len=0
  Inst 5943:   jmp     label296
Block 296:
  (original IR block: block148)
  (successor: Block 297)
  (successor: Block 298)
  (instruction range: 5944 .. 5955)
  Inst 5944:   movq    rsp(2064 + virtual offset), %rsi
  Inst 5945:   movq    8(%rsi), %rdi
  Inst 5946:   movq    rsp(2048 + virtual offset), %rsi
  Inst 5947:   load_ext_name u0:2+0, %rax
  Inst 5948:   movq    %rsi, rsp(352 + virtual offset)
  Inst 5949:   movq    %rdi, rsp(368 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 5950:   call    *%rax
  Inst 5951:   movq    %rax, %r15
  Inst 5952:   movq    %rdx, %r14
  Inst 5953:   testq   %r14, %r14
  Inst 5954:   jz      label297; j label298
Block 297:
  (successor: Block 300)
  (instruction range: 5955 .. 5994)
  Inst 5955:   movq    %r15, rsp(840 + virtual offset)
  Inst 5956:   nop     len=0
  Inst 5957:   nop     len=0
  Inst 5958:   nop     len=0
  Inst 5959:   nop     len=0
  Inst 5960:   nop     len=0
  Inst 5961:   nop     len=0
  Inst 5962:   nop     len=0
  Inst 5963:   nop     len=0
  Inst 5964:   nop     len=0
  Inst 5965:   nop     len=0
  Inst 5966:   nop     len=0
  Inst 5967:   nop     len=0
  Inst 5968:   nop     len=0
  Inst 5969:   nop     len=0
  Inst 5970:   nop     len=0
  Inst 5971:   nop     len=0
  Inst 5972:   nop     len=0
  Inst 5973:   nop     len=0
  Inst 5974:   nop     len=0
  Inst 5975:   nop     len=0
  Inst 5976:   nop     len=0
  Inst 5977:   nop     len=0
  Inst 5978:   nop     len=0
  Inst 5979:   nop     len=0
  Inst 5980:   nop     len=0
  Inst 5981:   nop     len=0
  Inst 5982:   nop     len=0
  Inst 5983:   nop     len=0
  Inst 5984:   nop     len=0
  Inst 5985:   nop     len=0
  Inst 5986:   nop     len=0
  Inst 5987:   nop     len=0
  Inst 5988:   nop     len=0
  Inst 5989:   nop     len=0
  Inst 5990:   nop     len=0
  Inst 5991:   nop     len=0
  Inst 5992:   nop     len=0
  Inst 5993:   jmp     label300
Block 298:
  (original IR block: block151)
  (successor: Block 299)
  (instruction range: 5994 .. 6023)
  Inst 5994:   movq    rsp(2072 + virtual offset), %rsi
  Inst 5995:   movq    152(%rsi), %r13
  Inst 5996:   movq    %r14, %rbx
  Inst 5997:   addq    $-1, %rbx
  Inst 5998:   movq    %r14, %rdx
  Inst 5999:   shlq    $3, %rdx
  Inst 6000:   movq    %r13, %r12
  Inst 6001:   addq    %rdx, %r12
  Inst 6002:   movq    %r13, %rdi
  Inst 6003:   addq    $-24, %rdi
  Inst 6004:   movq    %r13, %rsi
  Inst 6005:   load_ext_name %Memmove+0, %rax
  Inst 6006:   movq    %r15, rsp(352 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6007:   call    *%rax
  Inst 6008:   movq    rsp(352 + virtual offset), %r15
  Inst 6009:   load_ext_name u1:1+0, %rsi
  Inst 6010:   movl    $1, %edi
  Inst 6011:   movq    %rdi, -8(%r13,%r14,8)
  Inst 6012:   movl    $1, %edi
  Inst 6013:   movq    %rdi, -16(%r13,%r14,8)
  Inst 6014:   movq    %rsi, -24(%r13,%r14,8)
  Inst 6015:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6016:   movq    %r12, 152(%rsi)
  Inst 6017:   movq    %r15, %rdi
  Inst 6018:   movq    %rbx, %rsi
  Inst 6019:   load_ext_name u0:3+0, %rax
  Inst 6020:   movq    %rdi, rsp(352 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6021:   call    *%rax
  Inst 6022:   jmp     label299
Block 299:
  (successor: Block 300)
  (instruction range: 6023 .. 6062)
  Inst 6023:   movq    %rax, rsp(840 + virtual offset)
  Inst 6024:   nop     len=0
  Inst 6025:   nop     len=0
  Inst 6026:   nop     len=0
  Inst 6027:   nop     len=0
  Inst 6028:   nop     len=0
  Inst 6029:   nop     len=0
  Inst 6030:   nop     len=0
  Inst 6031:   nop     len=0
  Inst 6032:   nop     len=0
  Inst 6033:   nop     len=0
  Inst 6034:   nop     len=0
  Inst 6035:   nop     len=0
  Inst 6036:   nop     len=0
  Inst 6037:   nop     len=0
  Inst 6038:   nop     len=0
  Inst 6039:   nop     len=0
  Inst 6040:   nop     len=0
  Inst 6041:   nop     len=0
  Inst 6042:   nop     len=0
  Inst 6043:   nop     len=0
  Inst 6044:   nop     len=0
  Inst 6045:   nop     len=0
  Inst 6046:   nop     len=0
  Inst 6047:   nop     len=0
  Inst 6048:   nop     len=0
  Inst 6049:   nop     len=0
  Inst 6050:   nop     len=0
  Inst 6051:   nop     len=0
  Inst 6052:   nop     len=0
  Inst 6053:   nop     len=0
  Inst 6054:   nop     len=0
  Inst 6055:   nop     len=0
  Inst 6056:   nop     len=0
  Inst 6057:   nop     len=0
  Inst 6058:   nop     len=0
  Inst 6059:   nop     len=0
  Inst 6060:   nop     len=0
  Inst 6061:   jmp     label300
Block 300:
  (original IR block: block150)
  (successor: Block 301)
  (successor: Block 302)
  (instruction range: 6062 .. 6073)
  Inst 6062:   movq    rsp(2064 + virtual offset), %rsi
  Inst 6063:   movq    8(%rsi), %rdi
  Inst 6064:   movq    rsp(2048 + virtual offset), %rsi
  Inst 6065:   load_ext_name u0:2+0, %rax
  Inst 6066:   movq    %rsi, rsp(352 + virtual offset)
  Inst 6067:   movq    %rdi, rsp(368 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6068:   call    *%rax
  Inst 6069:   movq    %rax, %rbx
  Inst 6070:   movq    %rdx, %r14
  Inst 6071:   testq   %r14, %r14
  Inst 6072:   jz      label301; j label302
Block 301:
  (successor: Block 304)
  (instruction range: 6073 .. 6112)
  Inst 6073:   movq    %rbx, rsp(352 + virtual offset)
  Inst 6074:   nop     len=0
  Inst 6075:   nop     len=0
  Inst 6076:   nop     len=0
  Inst 6077:   nop     len=0
  Inst 6078:   nop     len=0
  Inst 6079:   nop     len=0
  Inst 6080:   nop     len=0
  Inst 6081:   nop     len=0
  Inst 6082:   nop     len=0
  Inst 6083:   nop     len=0
  Inst 6084:   nop     len=0
  Inst 6085:   nop     len=0
  Inst 6086:   nop     len=0
  Inst 6087:   nop     len=0
  Inst 6088:   nop     len=0
  Inst 6089:   nop     len=0
  Inst 6090:   nop     len=0
  Inst 6091:   nop     len=0
  Inst 6092:   nop     len=0
  Inst 6093:   nop     len=0
  Inst 6094:   nop     len=0
  Inst 6095:   nop     len=0
  Inst 6096:   nop     len=0
  Inst 6097:   nop     len=0
  Inst 6098:   nop     len=0
  Inst 6099:   nop     len=0
  Inst 6100:   nop     len=0
  Inst 6101:   nop     len=0
  Inst 6102:   nop     len=0
  Inst 6103:   nop     len=0
  Inst 6104:   nop     len=0
  Inst 6105:   nop     len=0
  Inst 6106:   nop     len=0
  Inst 6107:   nop     len=0
  Inst 6108:   nop     len=0
  Inst 6109:   nop     len=0
  Inst 6110:   nop     len=0
  Inst 6111:   jmp     label304
Block 302:
  (original IR block: block153)
  (successor: Block 303)
  (instruction range: 6112 .. 6141)
  Inst 6112:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6113:   movq    152(%rsi), %r13
  Inst 6114:   movq    %r14, %r15
  Inst 6115:   addq    $-1, %r15
  Inst 6116:   movq    %r14, %rdx
  Inst 6117:   shlq    $3, %rdx
  Inst 6118:   movq    %r13, %r12
  Inst 6119:   addq    %rdx, %r12
  Inst 6120:   movq    %r13, %rdi
  Inst 6121:   addq    $-24, %rdi
  Inst 6122:   movq    %r13, %rsi
  Inst 6123:   load_ext_name %Memmove+0, %rax
  Inst 6124:   movq    %rbx, rsp(368 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S45, S46, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6125:   call    *%rax
  Inst 6126:   movq    rsp(368 + virtual offset), %rbx
  Inst 6127:   load_ext_name u1:1+0, %rsi
  Inst 6128:   movl    $1, %edi
  Inst 6129:   movq    %rdi, -8(%r13,%r14,8)
  Inst 6130:   movl    $1, %edi
  Inst 6131:   movq    %rdi, -16(%r13,%r14,8)
  Inst 6132:   movq    %rsi, -24(%r13,%r14,8)
  Inst 6133:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6134:   movq    %r12, 152(%rsi)
  Inst 6135:   movq    %rbx, %rdi
  Inst 6136:   movq    %r15, %rsi
  Inst 6137:   load_ext_name u0:3+0, %rax
  Inst 6138:   movq    %rdi, rsp(352 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6139:   call    *%rax
  Inst 6140:   jmp     label303
Block 303:
  (successor: Block 304)
  (instruction range: 6141 .. 6180)
  Inst 6141:   movq    %rax, rsp(352 + virtual offset)
  Inst 6142:   nop     len=0
  Inst 6143:   nop     len=0
  Inst 6144:   nop     len=0
  Inst 6145:   nop     len=0
  Inst 6146:   nop     len=0
  Inst 6147:   nop     len=0
  Inst 6148:   nop     len=0
  Inst 6149:   nop     len=0
  Inst 6150:   nop     len=0
  Inst 6151:   nop     len=0
  Inst 6152:   nop     len=0
  Inst 6153:   nop     len=0
  Inst 6154:   nop     len=0
  Inst 6155:   nop     len=0
  Inst 6156:   nop     len=0
  Inst 6157:   nop     len=0
  Inst 6158:   nop     len=0
  Inst 6159:   nop     len=0
  Inst 6160:   nop     len=0
  Inst 6161:   nop     len=0
  Inst 6162:   nop     len=0
  Inst 6163:   nop     len=0
  Inst 6164:   nop     len=0
  Inst 6165:   nop     len=0
  Inst 6166:   nop     len=0
  Inst 6167:   nop     len=0
  Inst 6168:   nop     len=0
  Inst 6169:   nop     len=0
  Inst 6170:   nop     len=0
  Inst 6171:   nop     len=0
  Inst 6172:   nop     len=0
  Inst 6173:   nop     len=0
  Inst 6174:   nop     len=0
  Inst 6175:   nop     len=0
  Inst 6176:   nop     len=0
  Inst 6177:   nop     len=0
  Inst 6178:   nop     len=0
  Inst 6179:   jmp     label304
Block 304:
  (original IR block: block152)
  (successor: Block 305)
  (successor: Block 306)
  (instruction range: 6180 .. 6191)
  Inst 6180:   movq    rsp(2064 + virtual offset), %rsi
  Inst 6181:   movq    8(%rsi), %rdi
  Inst 6182:   movq    rsp(2048 + virtual offset), %rsi
  Inst 6183:   load_ext_name u0:2+0, %rax
  Inst 6184:   movq    %rsi, rsp(368 + virtual offset)
  Inst 6185:   movq    %rdi, rsp(384 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6186:   call    *%rax
  Inst 6187:   movq    %rax, %rbx
  Inst 6188:   movq    %rdx, %r14
  Inst 6189:   testq   %r14, %r14
  Inst 6190:   jz      label305; j label306
Block 305:
  (successor: Block 308)
  (instruction range: 6191 .. 6231)
  Inst 6191:   movq    %rbx, rsp(856 + virtual offset)
  Inst 6192:   nop     len=0
  Inst 6193:   nop     len=0
  Inst 6194:   nop     len=0
  Inst 6195:   nop     len=0
  Inst 6196:   nop     len=0
  Inst 6197:   nop     len=0
  Inst 6198:   nop     len=0
  Inst 6199:   nop     len=0
  Inst 6200:   nop     len=0
  Inst 6201:   nop     len=0
  Inst 6202:   nop     len=0
  Inst 6203:   nop     len=0
  Inst 6204:   nop     len=0
  Inst 6205:   nop     len=0
  Inst 6206:   nop     len=0
  Inst 6207:   nop     len=0
  Inst 6208:   nop     len=0
  Inst 6209:   nop     len=0
  Inst 6210:   nop     len=0
  Inst 6211:   nop     len=0
  Inst 6212:   nop     len=0
  Inst 6213:   nop     len=0
  Inst 6214:   nop     len=0
  Inst 6215:   nop     len=0
  Inst 6216:   nop     len=0
  Inst 6217:   nop     len=0
  Inst 6218:   nop     len=0
  Inst 6219:   nop     len=0
  Inst 6220:   nop     len=0
  Inst 6221:   nop     len=0
  Inst 6222:   nop     len=0
  Inst 6223:   nop     len=0
  Inst 6224:   nop     len=0
  Inst 6225:   nop     len=0
  Inst 6226:   nop     len=0
  Inst 6227:   nop     len=0
  Inst 6228:   nop     len=0
  Inst 6229:   nop     len=0
  Inst 6230:   jmp     label308
Block 306:
  (original IR block: block155)
  (successor: Block 307)
  (instruction range: 6231 .. 6260)
  Inst 6231:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6232:   movq    152(%rsi), %r13
  Inst 6233:   movq    %r14, %r15
  Inst 6234:   addq    $-1, %r15
  Inst 6235:   movq    %r14, %rdx
  Inst 6236:   shlq    $3, %rdx
  Inst 6237:   movq    %r13, %r12
  Inst 6238:   addq    %rdx, %r12
  Inst 6239:   movq    %r13, %rdi
  Inst 6240:   addq    $-24, %rdi
  Inst 6241:   movq    %r13, %rsi
  Inst 6242:   load_ext_name %Memmove+0, %rax
  Inst 6243:   movq    %rbx, rsp(368 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6244:   call    *%rax
  Inst 6245:   movq    rsp(368 + virtual offset), %rbx
  Inst 6246:   load_ext_name u1:1+0, %rsi
  Inst 6247:   movl    $1, %edi
  Inst 6248:   movq    %rdi, -8(%r13,%r14,8)
  Inst 6249:   movl    $1, %edi
  Inst 6250:   movq    %rdi, -16(%r13,%r14,8)
  Inst 6251:   movq    %rsi, -24(%r13,%r14,8)
  Inst 6252:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6253:   movq    %r12, 152(%rsi)
  Inst 6254:   movq    %rbx, %rdi
  Inst 6255:   movq    %r15, %rsi
  Inst 6256:   load_ext_name u0:3+0, %rax
  Inst 6257:   movq    %rdi, rsp(368 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6258:   call    *%rax
  Inst 6259:   jmp     label307
Block 307:
  (successor: Block 308)
  (instruction range: 6260 .. 6300)
  Inst 6260:   movq    %rax, rsp(856 + virtual offset)
  Inst 6261:   nop     len=0
  Inst 6262:   nop     len=0
  Inst 6263:   nop     len=0
  Inst 6264:   nop     len=0
  Inst 6265:   nop     len=0
  Inst 6266:   nop     len=0
  Inst 6267:   nop     len=0
  Inst 6268:   nop     len=0
  Inst 6269:   nop     len=0
  Inst 6270:   nop     len=0
  Inst 6271:   nop     len=0
  Inst 6272:   nop     len=0
  Inst 6273:   nop     len=0
  Inst 6274:   nop     len=0
  Inst 6275:   nop     len=0
  Inst 6276:   nop     len=0
  Inst 6277:   nop     len=0
  Inst 6278:   nop     len=0
  Inst 6279:   nop     len=0
  Inst 6280:   nop     len=0
  Inst 6281:   nop     len=0
  Inst 6282:   nop     len=0
  Inst 6283:   nop     len=0
  Inst 6284:   nop     len=0
  Inst 6285:   nop     len=0
  Inst 6286:   nop     len=0
  Inst 6287:   nop     len=0
  Inst 6288:   nop     len=0
  Inst 6289:   nop     len=0
  Inst 6290:   nop     len=0
  Inst 6291:   nop     len=0
  Inst 6292:   nop     len=0
  Inst 6293:   nop     len=0
  Inst 6294:   nop     len=0
  Inst 6295:   nop     len=0
  Inst 6296:   nop     len=0
  Inst 6297:   nop     len=0
  Inst 6298:   nop     len=0
  Inst 6299:   jmp     label308
Block 308:
  (original IR block: block154)
  (successor: Block 309)
  (successor: Block 310)
  (instruction range: 6300 .. 6311)
  Inst 6300:   movq    rsp(2064 + virtual offset), %rsi
  Inst 6301:   movq    8(%rsi), %rdi
  Inst 6302:   movq    rsp(2048 + virtual offset), %rsi
  Inst 6303:   load_ext_name u0:2+0, %rax
  Inst 6304:   movq    %rsi, rsp(368 + virtual offset)
  Inst 6305:   movq    %rdi, rsp(384 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6306:   call    *%rax
  Inst 6307:   movq    %rax, %r15
  Inst 6308:   movq    %rdx, %r14
  Inst 6309:   testq   %r14, %r14
  Inst 6310:   jz      label309; j label310
Block 309:
  (successor: Block 312)
  (instruction range: 6311 .. 6351)
  Inst 6311:   movq    %r15, rsp(368 + virtual offset)
  Inst 6312:   nop     len=0
  Inst 6313:   nop     len=0
  Inst 6314:   nop     len=0
  Inst 6315:   nop     len=0
  Inst 6316:   nop     len=0
  Inst 6317:   nop     len=0
  Inst 6318:   nop     len=0
  Inst 6319:   nop     len=0
  Inst 6320:   nop     len=0
  Inst 6321:   nop     len=0
  Inst 6322:   nop     len=0
  Inst 6323:   nop     len=0
  Inst 6324:   nop     len=0
  Inst 6325:   nop     len=0
  Inst 6326:   nop     len=0
  Inst 6327:   nop     len=0
  Inst 6328:   nop     len=0
  Inst 6329:   nop     len=0
  Inst 6330:   nop     len=0
  Inst 6331:   nop     len=0
  Inst 6332:   nop     len=0
  Inst 6333:   nop     len=0
  Inst 6334:   nop     len=0
  Inst 6335:   nop     len=0
  Inst 6336:   nop     len=0
  Inst 6337:   nop     len=0
  Inst 6338:   nop     len=0
  Inst 6339:   nop     len=0
  Inst 6340:   nop     len=0
  Inst 6341:   nop     len=0
  Inst 6342:   nop     len=0
  Inst 6343:   nop     len=0
  Inst 6344:   nop     len=0
  Inst 6345:   nop     len=0
  Inst 6346:   nop     len=0
  Inst 6347:   nop     len=0
  Inst 6348:   nop     len=0
  Inst 6349:   nop     len=0
  Inst 6350:   jmp     label312
Block 310:
  (original IR block: block157)
  (successor: Block 311)
  (instruction range: 6351 .. 6380)
  Inst 6351:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6352:   movq    152(%rsi), %r13
  Inst 6353:   movq    %r14, %rbx
  Inst 6354:   addq    $-1, %rbx
  Inst 6355:   movq    %r14, %rdx
  Inst 6356:   shlq    $3, %rdx
  Inst 6357:   movq    %r13, %r12
  Inst 6358:   addq    %rdx, %r12
  Inst 6359:   movq    %r13, %rdi
  Inst 6360:   addq    $-24, %rdi
  Inst 6361:   movq    %r13, %rsi
  Inst 6362:   load_ext_name %Memmove+0, %rax
  Inst 6363:   movq    %r15, rsp(384 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S47, S48, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6364:   call    *%rax
  Inst 6365:   movq    rsp(384 + virtual offset), %r15
  Inst 6366:   load_ext_name u1:1+0, %rsi
  Inst 6367:   movl    $1, %edi
  Inst 6368:   movq    %rdi, -8(%r13,%r14,8)
  Inst 6369:   movl    $1, %edi
  Inst 6370:   movq    %rdi, -16(%r13,%r14,8)
  Inst 6371:   movq    %rsi, -24(%r13,%r14,8)
  Inst 6372:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6373:   movq    %r12, 152(%rsi)
  Inst 6374:   movq    %r15, %rdi
  Inst 6375:   movq    %rbx, %rsi
  Inst 6376:   load_ext_name u0:3+0, %rax
  Inst 6377:   movq    %rdi, rsp(368 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6378:   call    *%rax
  Inst 6379:   jmp     label311
Block 311:
  (successor: Block 312)
  (instruction range: 6380 .. 6420)
  Inst 6380:   movq    %rax, rsp(368 + virtual offset)
  Inst 6381:   nop     len=0
  Inst 6382:   nop     len=0
  Inst 6383:   nop     len=0
  Inst 6384:   nop     len=0
  Inst 6385:   nop     len=0
  Inst 6386:   nop     len=0
  Inst 6387:   nop     len=0
  Inst 6388:   nop     len=0
  Inst 6389:   nop     len=0
  Inst 6390:   nop     len=0
  Inst 6391:   nop     len=0
  Inst 6392:   nop     len=0
  Inst 6393:   nop     len=0
  Inst 6394:   nop     len=0
  Inst 6395:   nop     len=0
  Inst 6396:   nop     len=0
  Inst 6397:   nop     len=0
  Inst 6398:   nop     len=0
  Inst 6399:   nop     len=0
  Inst 6400:   nop     len=0
  Inst 6401:   nop     len=0
  Inst 6402:   nop     len=0
  Inst 6403:   nop     len=0
  Inst 6404:   nop     len=0
  Inst 6405:   nop     len=0
  Inst 6406:   nop     len=0
  Inst 6407:   nop     len=0
  Inst 6408:   nop     len=0
  Inst 6409:   nop     len=0
  Inst 6410:   nop     len=0
  Inst 6411:   nop     len=0
  Inst 6412:   nop     len=0
  Inst 6413:   nop     len=0
  Inst 6414:   nop     len=0
  Inst 6415:   nop     len=0
  Inst 6416:   nop     len=0
  Inst 6417:   nop     len=0
  Inst 6418:   nop     len=0
  Inst 6419:   jmp     label312
Block 312:
  (original IR block: block156)
  (successor: Block 313)
  (successor: Block 314)
  (instruction range: 6420 .. 6431)
  Inst 6420:   movq    rsp(2064 + virtual offset), %rsi
  Inst 6421:   movq    8(%rsi), %rdi
  Inst 6422:   movq    rsp(2048 + virtual offset), %rsi
  Inst 6423:   load_ext_name u0:2+0, %rax
  Inst 6424:   movq    %rsi, rsp(384 + virtual offset)
  Inst 6425:   movq    %rdi, rsp(400 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6426:   call    *%rax
  Inst 6427:   movq    %rax, %rbx
  Inst 6428:   movq    %rdx, %r14
  Inst 6429:   testq   %r14, %r14
  Inst 6430:   jz      label313; j label314
Block 313:
  (successor: Block 316)
  (instruction range: 6431 .. 6472)
  Inst 6431:   movq    %rbx, rsp(872 + virtual offset)
  Inst 6432:   nop     len=0
  Inst 6433:   nop     len=0
  Inst 6434:   nop     len=0
  Inst 6435:   nop     len=0
  Inst 6436:   nop     len=0
  Inst 6437:   nop     len=0
  Inst 6438:   nop     len=0
  Inst 6439:   nop     len=0
  Inst 6440:   nop     len=0
  Inst 6441:   nop     len=0
  Inst 6442:   nop     len=0
  Inst 6443:   nop     len=0
  Inst 6444:   nop     len=0
  Inst 6445:   nop     len=0
  Inst 6446:   nop     len=0
  Inst 6447:   nop     len=0
  Inst 6448:   nop     len=0
  Inst 6449:   nop     len=0
  Inst 6450:   nop     len=0
  Inst 6451:   nop     len=0
  Inst 6452:   nop     len=0
  Inst 6453:   nop     len=0
  Inst 6454:   nop     len=0
  Inst 6455:   nop     len=0
  Inst 6456:   nop     len=0
  Inst 6457:   nop     len=0
  Inst 6458:   nop     len=0
  Inst 6459:   nop     len=0
  Inst 6460:   nop     len=0
  Inst 6461:   nop     len=0
  Inst 6462:   nop     len=0
  Inst 6463:   nop     len=0
  Inst 6464:   nop     len=0
  Inst 6465:   nop     len=0
  Inst 6466:   nop     len=0
  Inst 6467:   nop     len=0
  Inst 6468:   nop     len=0
  Inst 6469:   nop     len=0
  Inst 6470:   nop     len=0
  Inst 6471:   jmp     label316
Block 314:
  (original IR block: block159)
  (successor: Block 315)
  (instruction range: 6472 .. 6501)
  Inst 6472:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6473:   movq    152(%rsi), %r13
  Inst 6474:   movq    %r14, %r15
  Inst 6475:   addq    $-1, %r15
  Inst 6476:   movq    %r14, %rdx
  Inst 6477:   shlq    $3, %rdx
  Inst 6478:   movq    %r13, %r12
  Inst 6479:   addq    %rdx, %r12
  Inst 6480:   movq    %r13, %rdi
  Inst 6481:   addq    $-24, %rdi
  Inst 6482:   movq    %r13, %rsi
  Inst 6483:   load_ext_name %Memmove+0, %rax
  Inst 6484:   movq    %rbx, rsp(384 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6485:   call    *%rax
  Inst 6486:   movq    rsp(384 + virtual offset), %rbx
  Inst 6487:   load_ext_name u1:1+0, %rsi
  Inst 6488:   movl    $1, %edi
  Inst 6489:   movq    %rdi, -8(%r13,%r14,8)
  Inst 6490:   movl    $1, %edi
  Inst 6491:   movq    %rdi, -16(%r13,%r14,8)
  Inst 6492:   movq    %rsi, -24(%r13,%r14,8)
  Inst 6493:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6494:   movq    %r12, 152(%rsi)
  Inst 6495:   movq    %rbx, %rdi
  Inst 6496:   movq    %r15, %rsi
  Inst 6497:   load_ext_name u0:3+0, %rax
  Inst 6498:   movq    %rdi, rsp(384 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6499:   call    *%rax
  Inst 6500:   jmp     label315
Block 315:
  (successor: Block 316)
  (instruction range: 6501 .. 6542)
  Inst 6501:   movq    %rax, rsp(872 + virtual offset)
  Inst 6502:   nop     len=0
  Inst 6503:   nop     len=0
  Inst 6504:   nop     len=0
  Inst 6505:   nop     len=0
  Inst 6506:   nop     len=0
  Inst 6507:   nop     len=0
  Inst 6508:   nop     len=0
  Inst 6509:   nop     len=0
  Inst 6510:   nop     len=0
  Inst 6511:   nop     len=0
  Inst 6512:   nop     len=0
  Inst 6513:   nop     len=0
  Inst 6514:   nop     len=0
  Inst 6515:   nop     len=0
  Inst 6516:   nop     len=0
  Inst 6517:   nop     len=0
  Inst 6518:   nop     len=0
  Inst 6519:   nop     len=0
  Inst 6520:   nop     len=0
  Inst 6521:   nop     len=0
  Inst 6522:   nop     len=0
  Inst 6523:   nop     len=0
  Inst 6524:   nop     len=0
  Inst 6525:   nop     len=0
  Inst 6526:   nop     len=0
  Inst 6527:   nop     len=0
  Inst 6528:   nop     len=0
  Inst 6529:   nop     len=0
  Inst 6530:   nop     len=0
  Inst 6531:   nop     len=0
  Inst 6532:   nop     len=0
  Inst 6533:   nop     len=0
  Inst 6534:   nop     len=0
  Inst 6535:   nop     len=0
  Inst 6536:   nop     len=0
  Inst 6537:   nop     len=0
  Inst 6538:   nop     len=0
  Inst 6539:   nop     len=0
  Inst 6540:   nop     len=0
  Inst 6541:   jmp     label316
Block 316:
  (original IR block: block158)
  (successor: Block 317)
  (successor: Block 318)
  (instruction range: 6542 .. 6553)
  Inst 6542:   movq    rsp(2064 + virtual offset), %rsi
  Inst 6543:   movq    8(%rsi), %rdi
  Inst 6544:   movq    rsp(2048 + virtual offset), %rsi
  Inst 6545:   load_ext_name u0:2+0, %rax
  Inst 6546:   movq    %rsi, rsp(384 + virtual offset)
  Inst 6547:   movq    %rdi, rsp(400 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6548:   call    *%rax
  Inst 6549:   movq    %rax, %rbx
  Inst 6550:   movq    %rdx, %r14
  Inst 6551:   testq   %r14, %r14
  Inst 6552:   jz      label317; j label318
Block 317:
  (successor: Block 320)
  (instruction range: 6553 .. 6594)
  Inst 6553:   movq    %rbx, rsp(384 + virtual offset)
  Inst 6554:   nop     len=0
  Inst 6555:   nop     len=0
  Inst 6556:   nop     len=0
  Inst 6557:   nop     len=0
  Inst 6558:   nop     len=0
  Inst 6559:   nop     len=0
  Inst 6560:   nop     len=0
  Inst 6561:   nop     len=0
  Inst 6562:   nop     len=0
  Inst 6563:   nop     len=0
  Inst 6564:   nop     len=0
  Inst 6565:   nop     len=0
  Inst 6566:   nop     len=0
  Inst 6567:   nop     len=0
  Inst 6568:   nop     len=0
  Inst 6569:   nop     len=0
  Inst 6570:   nop     len=0
  Inst 6571:   nop     len=0
  Inst 6572:   nop     len=0
  Inst 6573:   nop     len=0
  Inst 6574:   nop     len=0
  Inst 6575:   nop     len=0
  Inst 6576:   nop     len=0
  Inst 6577:   nop     len=0
  Inst 6578:   nop     len=0
  Inst 6579:   nop     len=0
  Inst 6580:   nop     len=0
  Inst 6581:   nop     len=0
  Inst 6582:   nop     len=0
  Inst 6583:   nop     len=0
  Inst 6584:   nop     len=0
  Inst 6585:   nop     len=0
  Inst 6586:   nop     len=0
  Inst 6587:   nop     len=0
  Inst 6588:   nop     len=0
  Inst 6589:   nop     len=0
  Inst 6590:   nop     len=0
  Inst 6591:   nop     len=0
  Inst 6592:   nop     len=0
  Inst 6593:   jmp     label320
Block 318:
  (original IR block: block161)
  (successor: Block 319)
  (instruction range: 6594 .. 6623)
  Inst 6594:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6595:   movq    152(%rsi), %r13
  Inst 6596:   movq    %r14, %r15
  Inst 6597:   addq    $-1, %r15
  Inst 6598:   movq    %r14, %rdx
  Inst 6599:   shlq    $3, %rdx
  Inst 6600:   movq    %r13, %r12
  Inst 6601:   addq    %rdx, %r12
  Inst 6602:   movq    %r13, %rdi
  Inst 6603:   addq    $-24, %rdi
  Inst 6604:   movq    %r13, %rsi
  Inst 6605:   load_ext_name %Memmove+0, %rax
  Inst 6606:   movq    %rbx, rsp(400 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S49, S50, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6607:   call    *%rax
  Inst 6608:   movq    rsp(400 + virtual offset), %rbx
  Inst 6609:   load_ext_name u1:1+0, %rsi
  Inst 6610:   movl    $1, %edi
  Inst 6611:   movq    %rdi, -8(%r13,%r14,8)
  Inst 6612:   movl    $1, %edi
  Inst 6613:   movq    %rdi, -16(%r13,%r14,8)
  Inst 6614:   movq    %rsi, -24(%r13,%r14,8)
  Inst 6615:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6616:   movq    %r12, 152(%rsi)
  Inst 6617:   movq    %rbx, %rdi
  Inst 6618:   movq    %r15, %rsi
  Inst 6619:   load_ext_name u0:3+0, %rax
  Inst 6620:   movq    %rdi, rsp(384 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6621:   call    *%rax
  Inst 6622:   jmp     label319
Block 319:
  (successor: Block 320)
  (instruction range: 6623 .. 6664)
  Inst 6623:   movq    %rax, rsp(384 + virtual offset)
  Inst 6624:   nop     len=0
  Inst 6625:   nop     len=0
  Inst 6626:   nop     len=0
  Inst 6627:   nop     len=0
  Inst 6628:   nop     len=0
  Inst 6629:   nop     len=0
  Inst 6630:   nop     len=0
  Inst 6631:   nop     len=0
  Inst 6632:   nop     len=0
  Inst 6633:   nop     len=0
  Inst 6634:   nop     len=0
  Inst 6635:   nop     len=0
  Inst 6636:   nop     len=0
  Inst 6637:   nop     len=0
  Inst 6638:   nop     len=0
  Inst 6639:   nop     len=0
  Inst 6640:   nop     len=0
  Inst 6641:   nop     len=0
  Inst 6642:   nop     len=0
  Inst 6643:   nop     len=0
  Inst 6644:   nop     len=0
  Inst 6645:   nop     len=0
  Inst 6646:   nop     len=0
  Inst 6647:   nop     len=0
  Inst 6648:   nop     len=0
  Inst 6649:   nop     len=0
  Inst 6650:   nop     len=0
  Inst 6651:   nop     len=0
  Inst 6652:   nop     len=0
  Inst 6653:   nop     len=0
  Inst 6654:   nop     len=0
  Inst 6655:   nop     len=0
  Inst 6656:   nop     len=0
  Inst 6657:   nop     len=0
  Inst 6658:   nop     len=0
  Inst 6659:   nop     len=0
  Inst 6660:   nop     len=0
  Inst 6661:   nop     len=0
  Inst 6662:   nop     len=0
  Inst 6663:   jmp     label320
Block 320:
  (original IR block: block160)
  (successor: Block 321)
  (successor: Block 322)
  (instruction range: 6664 .. 6675)
  Inst 6664:   movq    rsp(2064 + virtual offset), %rsi
  Inst 6665:   movq    8(%rsi), %rdi
  Inst 6666:   movq    rsp(2048 + virtual offset), %rsi
  Inst 6667:   load_ext_name u0:2+0, %rax
  Inst 6668:   movq    %rsi, rsp(400 + virtual offset)
  Inst 6669:   movq    %rdi, rsp(416 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6670:   call    *%rax
  Inst 6671:   movq    %rax, %r15
  Inst 6672:   movq    %rdx, %r14
  Inst 6673:   testq   %r14, %r14
  Inst 6674:   jz      label321; j label322
Block 321:
  (successor: Block 324)
  (instruction range: 6675 .. 6717)
  Inst 6675:   movq    %r15, rsp(888 + virtual offset)
  Inst 6676:   nop     len=0
  Inst 6677:   nop     len=0
  Inst 6678:   nop     len=0
  Inst 6679:   nop     len=0
  Inst 6680:   nop     len=0
  Inst 6681:   nop     len=0
  Inst 6682:   nop     len=0
  Inst 6683:   nop     len=0
  Inst 6684:   nop     len=0
  Inst 6685:   nop     len=0
  Inst 6686:   nop     len=0
  Inst 6687:   nop     len=0
  Inst 6688:   nop     len=0
  Inst 6689:   nop     len=0
  Inst 6690:   nop     len=0
  Inst 6691:   nop     len=0
  Inst 6692:   nop     len=0
  Inst 6693:   nop     len=0
  Inst 6694:   nop     len=0
  Inst 6695:   nop     len=0
  Inst 6696:   nop     len=0
  Inst 6697:   nop     len=0
  Inst 6698:   nop     len=0
  Inst 6699:   nop     len=0
  Inst 6700:   nop     len=0
  Inst 6701:   nop     len=0
  Inst 6702:   nop     len=0
  Inst 6703:   nop     len=0
  Inst 6704:   nop     len=0
  Inst 6705:   nop     len=0
  Inst 6706:   nop     len=0
  Inst 6707:   nop     len=0
  Inst 6708:   nop     len=0
  Inst 6709:   nop     len=0
  Inst 6710:   nop     len=0
  Inst 6711:   nop     len=0
  Inst 6712:   nop     len=0
  Inst 6713:   nop     len=0
  Inst 6714:   nop     len=0
  Inst 6715:   nop     len=0
  Inst 6716:   jmp     label324
Block 322:
  (original IR block: block163)
  (successor: Block 323)
  (instruction range: 6717 .. 6746)
  Inst 6717:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6718:   movq    152(%rsi), %r13
  Inst 6719:   movq    %r14, %rbx
  Inst 6720:   addq    $-1, %rbx
  Inst 6721:   movq    %r14, %rdx
  Inst 6722:   shlq    $3, %rdx
  Inst 6723:   movq    %r13, %r12
  Inst 6724:   addq    %rdx, %r12
  Inst 6725:   movq    %r13, %rdi
  Inst 6726:   addq    $-24, %rdi
  Inst 6727:   movq    %r13, %rsi
  Inst 6728:   load_ext_name %Memmove+0, %rax
  Inst 6729:   movq    %r15, rsp(400 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6730:   call    *%rax
  Inst 6731:   movq    rsp(400 + virtual offset), %r15
  Inst 6732:   load_ext_name u1:1+0, %rsi
  Inst 6733:   movl    $1, %edi
  Inst 6734:   movq    %rdi, -8(%r13,%r14,8)
  Inst 6735:   movl    $1, %edi
  Inst 6736:   movq    %rdi, -16(%r13,%r14,8)
  Inst 6737:   movq    %rsi, -24(%r13,%r14,8)
  Inst 6738:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6739:   movq    %r12, 152(%rsi)
  Inst 6740:   movq    %r15, %rdi
  Inst 6741:   movq    %rbx, %rsi
  Inst 6742:   load_ext_name u0:3+0, %rax
  Inst 6743:   movq    %rdi, rsp(400 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6744:   call    *%rax
  Inst 6745:   jmp     label323
Block 323:
  (successor: Block 324)
  (instruction range: 6746 .. 6788)
  Inst 6746:   movq    %rax, rsp(888 + virtual offset)
  Inst 6747:   nop     len=0
  Inst 6748:   nop     len=0
  Inst 6749:   nop     len=0
  Inst 6750:   nop     len=0
  Inst 6751:   nop     len=0
  Inst 6752:   nop     len=0
  Inst 6753:   nop     len=0
  Inst 6754:   nop     len=0
  Inst 6755:   nop     len=0
  Inst 6756:   nop     len=0
  Inst 6757:   nop     len=0
  Inst 6758:   nop     len=0
  Inst 6759:   nop     len=0
  Inst 6760:   nop     len=0
  Inst 6761:   nop     len=0
  Inst 6762:   nop     len=0
  Inst 6763:   nop     len=0
  Inst 6764:   nop     len=0
  Inst 6765:   nop     len=0
  Inst 6766:   nop     len=0
  Inst 6767:   nop     len=0
  Inst 6768:   nop     len=0
  Inst 6769:   nop     len=0
  Inst 6770:   nop     len=0
  Inst 6771:   nop     len=0
  Inst 6772:   nop     len=0
  Inst 6773:   nop     len=0
  Inst 6774:   nop     len=0
  Inst 6775:   nop     len=0
  Inst 6776:   nop     len=0
  Inst 6777:   nop     len=0
  Inst 6778:   nop     len=0
  Inst 6779:   nop     len=0
  Inst 6780:   nop     len=0
  Inst 6781:   nop     len=0
  Inst 6782:   nop     len=0
  Inst 6783:   nop     len=0
  Inst 6784:   nop     len=0
  Inst 6785:   nop     len=0
  Inst 6786:   nop     len=0
  Inst 6787:   jmp     label324
Block 324:
  (original IR block: block162)
  (successor: Block 325)
  (successor: Block 326)
  (instruction range: 6788 .. 6799)
  Inst 6788:   movq    rsp(2064 + virtual offset), %rsi
  Inst 6789:   movq    8(%rsi), %rdi
  Inst 6790:   movq    rsp(2048 + virtual offset), %rsi
  Inst 6791:   load_ext_name u0:2+0, %rax
  Inst 6792:   movq    %rsi, rsp(400 + virtual offset)
  Inst 6793:   movq    %rdi, rsp(416 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6794:   call    *%rax
  Inst 6795:   movq    %rax, %rbx
  Inst 6796:   movq    %rdx, %r14
  Inst 6797:   testq   %r14, %r14
  Inst 6798:   jz      label325; j label326
Block 325:
  (successor: Block 328)
  (instruction range: 6799 .. 6841)
  Inst 6799:   movq    %rbx, rsp(400 + virtual offset)
  Inst 6800:   nop     len=0
  Inst 6801:   nop     len=0
  Inst 6802:   nop     len=0
  Inst 6803:   nop     len=0
  Inst 6804:   nop     len=0
  Inst 6805:   nop     len=0
  Inst 6806:   nop     len=0
  Inst 6807:   nop     len=0
  Inst 6808:   nop     len=0
  Inst 6809:   nop     len=0
  Inst 6810:   nop     len=0
  Inst 6811:   nop     len=0
  Inst 6812:   nop     len=0
  Inst 6813:   nop     len=0
  Inst 6814:   nop     len=0
  Inst 6815:   nop     len=0
  Inst 6816:   nop     len=0
  Inst 6817:   nop     len=0
  Inst 6818:   nop     len=0
  Inst 6819:   nop     len=0
  Inst 6820:   nop     len=0
  Inst 6821:   nop     len=0
  Inst 6822:   nop     len=0
  Inst 6823:   nop     len=0
  Inst 6824:   nop     len=0
  Inst 6825:   nop     len=0
  Inst 6826:   nop     len=0
  Inst 6827:   nop     len=0
  Inst 6828:   nop     len=0
  Inst 6829:   nop     len=0
  Inst 6830:   nop     len=0
  Inst 6831:   nop     len=0
  Inst 6832:   nop     len=0
  Inst 6833:   nop     len=0
  Inst 6834:   nop     len=0
  Inst 6835:   nop     len=0
  Inst 6836:   nop     len=0
  Inst 6837:   nop     len=0
  Inst 6838:   nop     len=0
  Inst 6839:   nop     len=0
  Inst 6840:   jmp     label328
Block 326:
  (original IR block: block165)
  (successor: Block 327)
  (instruction range: 6841 .. 6870)
  Inst 6841:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6842:   movq    152(%rsi), %r13
  Inst 6843:   movq    %r14, %r15
  Inst 6844:   addq    $-1, %r15
  Inst 6845:   movq    %r14, %rdx
  Inst 6846:   shlq    $3, %rdx
  Inst 6847:   movq    %r13, %r12
  Inst 6848:   addq    %rdx, %r12
  Inst 6849:   movq    %r13, %rdi
  Inst 6850:   addq    $-24, %rdi
  Inst 6851:   movq    %r13, %rsi
  Inst 6852:   load_ext_name %Memmove+0, %rax
  Inst 6853:   movq    %rbx, rsp(416 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S51, S52, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6854:   call    *%rax
  Inst 6855:   movq    rsp(416 + virtual offset), %rbx
  Inst 6856:   load_ext_name u1:1+0, %rsi
  Inst 6857:   movl    $1, %edi
  Inst 6858:   movq    %rdi, -8(%r13,%r14,8)
  Inst 6859:   movl    $1, %edi
  Inst 6860:   movq    %rdi, -16(%r13,%r14,8)
  Inst 6861:   movq    %rsi, -24(%r13,%r14,8)
  Inst 6862:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6863:   movq    %r12, 152(%rsi)
  Inst 6864:   movq    %rbx, %rdi
  Inst 6865:   movq    %r15, %rsi
  Inst 6866:   load_ext_name u0:3+0, %rax
  Inst 6867:   movq    %rdi, rsp(400 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6868:   call    *%rax
  Inst 6869:   jmp     label327
Block 327:
  (successor: Block 328)
  (instruction range: 6870 .. 6912)
  Inst 6870:   movq    %rax, rsp(400 + virtual offset)
  Inst 6871:   nop     len=0
  Inst 6872:   nop     len=0
  Inst 6873:   nop     len=0
  Inst 6874:   nop     len=0
  Inst 6875:   nop     len=0
  Inst 6876:   nop     len=0
  Inst 6877:   nop     len=0
  Inst 6878:   nop     len=0
  Inst 6879:   nop     len=0
  Inst 6880:   nop     len=0
  Inst 6881:   nop     len=0
  Inst 6882:   nop     len=0
  Inst 6883:   nop     len=0
  Inst 6884:   nop     len=0
  Inst 6885:   nop     len=0
  Inst 6886:   nop     len=0
  Inst 6887:   nop     len=0
  Inst 6888:   nop     len=0
  Inst 6889:   nop     len=0
  Inst 6890:   nop     len=0
  Inst 6891:   nop     len=0
  Inst 6892:   nop     len=0
  Inst 6893:   nop     len=0
  Inst 6894:   nop     len=0
  Inst 6895:   nop     len=0
  Inst 6896:   nop     len=0
  Inst 6897:   nop     len=0
  Inst 6898:   nop     len=0
  Inst 6899:   nop     len=0
  Inst 6900:   nop     len=0
  Inst 6901:   nop     len=0
  Inst 6902:   nop     len=0
  Inst 6903:   nop     len=0
  Inst 6904:   nop     len=0
  Inst 6905:   nop     len=0
  Inst 6906:   nop     len=0
  Inst 6907:   nop     len=0
  Inst 6908:   nop     len=0
  Inst 6909:   nop     len=0
  Inst 6910:   nop     len=0
  Inst 6911:   jmp     label328
Block 328:
  (original IR block: block164)
  (successor: Block 329)
  (successor: Block 330)
  (instruction range: 6912 .. 6923)
  Inst 6912:   movq    rsp(2064 + virtual offset), %rsi
  Inst 6913:   movq    8(%rsi), %rdi
  Inst 6914:   movq    rsp(2048 + virtual offset), %rsi
  Inst 6915:   load_ext_name u0:2+0, %rax
  Inst 6916:   movq    %rsi, rsp(416 + virtual offset)
  Inst 6917:   movq    %rdi, rsp(432 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6918:   call    *%rax
  Inst 6919:   movq    %rax, %rbx
  Inst 6920:   movq    %rdx, %r14
  Inst 6921:   testq   %r14, %r14
  Inst 6922:   jz      label329; j label330
Block 329:
  (successor: Block 332)
  (instruction range: 6923 .. 6966)
  Inst 6923:   movq    %rbx, rsp(904 + virtual offset)
  Inst 6924:   nop     len=0
  Inst 6925:   nop     len=0
  Inst 6926:   nop     len=0
  Inst 6927:   nop     len=0
  Inst 6928:   nop     len=0
  Inst 6929:   nop     len=0
  Inst 6930:   nop     len=0
  Inst 6931:   nop     len=0
  Inst 6932:   nop     len=0
  Inst 6933:   nop     len=0
  Inst 6934:   nop     len=0
  Inst 6935:   nop     len=0
  Inst 6936:   nop     len=0
  Inst 6937:   nop     len=0
  Inst 6938:   nop     len=0
  Inst 6939:   nop     len=0
  Inst 6940:   nop     len=0
  Inst 6941:   nop     len=0
  Inst 6942:   nop     len=0
  Inst 6943:   nop     len=0
  Inst 6944:   nop     len=0
  Inst 6945:   nop     len=0
  Inst 6946:   nop     len=0
  Inst 6947:   nop     len=0
  Inst 6948:   nop     len=0
  Inst 6949:   nop     len=0
  Inst 6950:   nop     len=0
  Inst 6951:   nop     len=0
  Inst 6952:   nop     len=0
  Inst 6953:   nop     len=0
  Inst 6954:   nop     len=0
  Inst 6955:   nop     len=0
  Inst 6956:   nop     len=0
  Inst 6957:   nop     len=0
  Inst 6958:   nop     len=0
  Inst 6959:   nop     len=0
  Inst 6960:   nop     len=0
  Inst 6961:   nop     len=0
  Inst 6962:   nop     len=0
  Inst 6963:   nop     len=0
  Inst 6964:   nop     len=0
  Inst 6965:   jmp     label332
Block 330:
  (original IR block: block167)
  (successor: Block 331)
  (instruction range: 6966 .. 6995)
  Inst 6966:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6967:   movq    152(%rsi), %r13
  Inst 6968:   movq    %r14, %r15
  Inst 6969:   addq    $-1, %r15
  Inst 6970:   movq    %r14, %rdx
  Inst 6971:   shlq    $3, %rdx
  Inst 6972:   movq    %r13, %r12
  Inst 6973:   addq    %rdx, %r12
  Inst 6974:   movq    %r13, %rdi
  Inst 6975:   addq    $-24, %rdi
  Inst 6976:   movq    %r13, %rsi
  Inst 6977:   load_ext_name %Memmove+0, %rax
  Inst 6978:   movq    %rbx, rsp(416 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6979:   call    *%rax
  Inst 6980:   movq    rsp(416 + virtual offset), %rbx
  Inst 6981:   load_ext_name u1:1+0, %rsi
  Inst 6982:   movl    $1, %edi
  Inst 6983:   movq    %rdi, -8(%r13,%r14,8)
  Inst 6984:   movl    $1, %edi
  Inst 6985:   movq    %rdi, -16(%r13,%r14,8)
  Inst 6986:   movq    %rsi, -24(%r13,%r14,8)
  Inst 6987:   movq    rsp(2072 + virtual offset), %rsi
  Inst 6988:   movq    %r12, 152(%rsi)
  Inst 6989:   movq    %rbx, %rdi
  Inst 6990:   movq    %r15, %rsi
  Inst 6991:   load_ext_name u0:3+0, %rax
  Inst 6992:   movq    %rdi, rsp(416 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 6993:   call    *%rax
  Inst 6994:   jmp     label331
Block 331:
  (successor: Block 332)
  (instruction range: 6995 .. 7038)
  Inst 6995:   movq    %rax, rsp(904 + virtual offset)
  Inst 6996:   nop     len=0
  Inst 6997:   nop     len=0
  Inst 6998:   nop     len=0
  Inst 6999:   nop     len=0
  Inst 7000:   nop     len=0
  Inst 7001:   nop     len=0
  Inst 7002:   nop     len=0
  Inst 7003:   nop     len=0
  Inst 7004:   nop     len=0
  Inst 7005:   nop     len=0
  Inst 7006:   nop     len=0
  Inst 7007:   nop     len=0
  Inst 7008:   nop     len=0
  Inst 7009:   nop     len=0
  Inst 7010:   nop     len=0
  Inst 7011:   nop     len=0
  Inst 7012:   nop     len=0
  Inst 7013:   nop     len=0
  Inst 7014:   nop     len=0
  Inst 7015:   nop     len=0
  Inst 7016:   nop     len=0
  Inst 7017:   nop     len=0
  Inst 7018:   nop     len=0
  Inst 7019:   nop     len=0
  Inst 7020:   nop     len=0
  Inst 7021:   nop     len=0
  Inst 7022:   nop     len=0
  Inst 7023:   nop     len=0
  Inst 7024:   nop     len=0
  Inst 7025:   nop     len=0
  Inst 7026:   nop     len=0
  Inst 7027:   nop     len=0
  Inst 7028:   nop     len=0
  Inst 7029:   nop     len=0
  Inst 7030:   nop     len=0
  Inst 7031:   nop     len=0
  Inst 7032:   nop     len=0
  Inst 7033:   nop     len=0
  Inst 7034:   nop     len=0
  Inst 7035:   nop     len=0
  Inst 7036:   nop     len=0
  Inst 7037:   jmp     label332
Block 332:
  (original IR block: block166)
  (successor: Block 333)
  (successor: Block 334)
  (instruction range: 7038 .. 7049)
  Inst 7038:   movq    rsp(2064 + virtual offset), %rsi
  Inst 7039:   movq    8(%rsi), %rdi
  Inst 7040:   movq    rsp(2048 + virtual offset), %rsi
  Inst 7041:   load_ext_name u0:2+0, %rax
  Inst 7042:   movq    %rsi, rsp(416 + virtual offset)
  Inst 7043:   movq    %rdi, rsp(432 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7044:   call    *%rax
  Inst 7045:   movq    %rax, %r15
  Inst 7046:   movq    %rdx, %r14
  Inst 7047:   testq   %r14, %r14
  Inst 7048:   jz      label333; j label334
Block 333:
  (successor: Block 336)
  (instruction range: 7049 .. 7092)
  Inst 7049:   movq    %r15, rsp(416 + virtual offset)
  Inst 7050:   nop     len=0
  Inst 7051:   nop     len=0
  Inst 7052:   nop     len=0
  Inst 7053:   nop     len=0
  Inst 7054:   nop     len=0
  Inst 7055:   nop     len=0
  Inst 7056:   nop     len=0
  Inst 7057:   nop     len=0
  Inst 7058:   nop     len=0
  Inst 7059:   nop     len=0
  Inst 7060:   nop     len=0
  Inst 7061:   nop     len=0
  Inst 7062:   nop     len=0
  Inst 7063:   nop     len=0
  Inst 7064:   nop     len=0
  Inst 7065:   nop     len=0
  Inst 7066:   nop     len=0
  Inst 7067:   nop     len=0
  Inst 7068:   nop     len=0
  Inst 7069:   nop     len=0
  Inst 7070:   nop     len=0
  Inst 7071:   nop     len=0
  Inst 7072:   nop     len=0
  Inst 7073:   nop     len=0
  Inst 7074:   nop     len=0
  Inst 7075:   nop     len=0
  Inst 7076:   nop     len=0
  Inst 7077:   nop     len=0
  Inst 7078:   nop     len=0
  Inst 7079:   nop     len=0
  Inst 7080:   nop     len=0
  Inst 7081:   nop     len=0
  Inst 7082:   nop     len=0
  Inst 7083:   nop     len=0
  Inst 7084:   nop     len=0
  Inst 7085:   nop     len=0
  Inst 7086:   nop     len=0
  Inst 7087:   nop     len=0
  Inst 7088:   nop     len=0
  Inst 7089:   nop     len=0
  Inst 7090:   nop     len=0
  Inst 7091:   jmp     label336
Block 334:
  (original IR block: block169)
  (successor: Block 335)
  (instruction range: 7092 .. 7121)
  Inst 7092:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7093:   movq    152(%rsi), %r13
  Inst 7094:   movq    %r14, %rbx
  Inst 7095:   addq    $-1, %rbx
  Inst 7096:   movq    %r14, %rdx
  Inst 7097:   shlq    $3, %rdx
  Inst 7098:   movq    %r13, %r12
  Inst 7099:   addq    %rdx, %r12
  Inst 7100:   movq    %r13, %rdi
  Inst 7101:   addq    $-24, %rdi
  Inst 7102:   movq    %r13, %rsi
  Inst 7103:   load_ext_name %Memmove+0, %rax
  Inst 7104:   movq    %r15, rsp(432 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S53, S54, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7105:   call    *%rax
  Inst 7106:   movq    rsp(432 + virtual offset), %r15
  Inst 7107:   load_ext_name u1:1+0, %rsi
  Inst 7108:   movl    $1, %edi
  Inst 7109:   movq    %rdi, -8(%r13,%r14,8)
  Inst 7110:   movl    $1, %edi
  Inst 7111:   movq    %rdi, -16(%r13,%r14,8)
  Inst 7112:   movq    %rsi, -24(%r13,%r14,8)
  Inst 7113:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7114:   movq    %r12, 152(%rsi)
  Inst 7115:   movq    %r15, %rdi
  Inst 7116:   movq    %rbx, %rsi
  Inst 7117:   load_ext_name u0:3+0, %rax
  Inst 7118:   movq    %rdi, rsp(416 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7119:   call    *%rax
  Inst 7120:   jmp     label335
Block 335:
  (successor: Block 336)
  (instruction range: 7121 .. 7164)
  Inst 7121:   movq    %rax, rsp(416 + virtual offset)
  Inst 7122:   nop     len=0
  Inst 7123:   nop     len=0
  Inst 7124:   nop     len=0
  Inst 7125:   nop     len=0
  Inst 7126:   nop     len=0
  Inst 7127:   nop     len=0
  Inst 7128:   nop     len=0
  Inst 7129:   nop     len=0
  Inst 7130:   nop     len=0
  Inst 7131:   nop     len=0
  Inst 7132:   nop     len=0
  Inst 7133:   nop     len=0
  Inst 7134:   nop     len=0
  Inst 7135:   nop     len=0
  Inst 7136:   nop     len=0
  Inst 7137:   nop     len=0
  Inst 7138:   nop     len=0
  Inst 7139:   nop     len=0
  Inst 7140:   nop     len=0
  Inst 7141:   nop     len=0
  Inst 7142:   nop     len=0
  Inst 7143:   nop     len=0
  Inst 7144:   nop     len=0
  Inst 7145:   nop     len=0
  Inst 7146:   nop     len=0
  Inst 7147:   nop     len=0
  Inst 7148:   nop     len=0
  Inst 7149:   nop     len=0
  Inst 7150:   nop     len=0
  Inst 7151:   nop     len=0
  Inst 7152:   nop     len=0
  Inst 7153:   nop     len=0
  Inst 7154:   nop     len=0
  Inst 7155:   nop     len=0
  Inst 7156:   nop     len=0
  Inst 7157:   nop     len=0
  Inst 7158:   nop     len=0
  Inst 7159:   nop     len=0
  Inst 7160:   nop     len=0
  Inst 7161:   nop     len=0
  Inst 7162:   nop     len=0
  Inst 7163:   jmp     label336
Block 336:
  (original IR block: block168)
  (successor: Block 337)
  (successor: Block 338)
  (instruction range: 7164 .. 7175)
  Inst 7164:   movq    rsp(2064 + virtual offset), %rsi
  Inst 7165:   movq    8(%rsi), %rdi
  Inst 7166:   movq    rsp(2048 + virtual offset), %rsi
  Inst 7167:   load_ext_name u0:2+0, %rax
  Inst 7168:   movq    %rsi, rsp(432 + virtual offset)
  Inst 7169:   movq    %rdi, rsp(448 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7170:   call    *%rax
  Inst 7171:   movq    %rax, %rbx
  Inst 7172:   movq    %rdx, %r14
  Inst 7173:   testq   %r14, %r14
  Inst 7174:   jz      label337; j label338
Block 337:
  (successor: Block 340)
  (instruction range: 7175 .. 7219)
  Inst 7175:   movq    %rbx, rsp(920 + virtual offset)
  Inst 7176:   nop     len=0
  Inst 7177:   nop     len=0
  Inst 7178:   nop     len=0
  Inst 7179:   nop     len=0
  Inst 7180:   nop     len=0
  Inst 7181:   nop     len=0
  Inst 7182:   nop     len=0
  Inst 7183:   nop     len=0
  Inst 7184:   nop     len=0
  Inst 7185:   nop     len=0
  Inst 7186:   nop     len=0
  Inst 7187:   nop     len=0
  Inst 7188:   nop     len=0
  Inst 7189:   nop     len=0
  Inst 7190:   nop     len=0
  Inst 7191:   nop     len=0
  Inst 7192:   nop     len=0
  Inst 7193:   nop     len=0
  Inst 7194:   nop     len=0
  Inst 7195:   nop     len=0
  Inst 7196:   nop     len=0
  Inst 7197:   nop     len=0
  Inst 7198:   nop     len=0
  Inst 7199:   nop     len=0
  Inst 7200:   nop     len=0
  Inst 7201:   nop     len=0
  Inst 7202:   nop     len=0
  Inst 7203:   nop     len=0
  Inst 7204:   nop     len=0
  Inst 7205:   nop     len=0
  Inst 7206:   nop     len=0
  Inst 7207:   nop     len=0
  Inst 7208:   nop     len=0
  Inst 7209:   nop     len=0
  Inst 7210:   nop     len=0
  Inst 7211:   nop     len=0
  Inst 7212:   nop     len=0
  Inst 7213:   nop     len=0
  Inst 7214:   nop     len=0
  Inst 7215:   nop     len=0
  Inst 7216:   nop     len=0
  Inst 7217:   nop     len=0
  Inst 7218:   jmp     label340
Block 338:
  (original IR block: block171)
  (successor: Block 339)
  (instruction range: 7219 .. 7248)
  Inst 7219:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7220:   movq    152(%rsi), %r13
  Inst 7221:   movq    %r14, %r15
  Inst 7222:   addq    $-1, %r15
  Inst 7223:   movq    %r14, %rdx
  Inst 7224:   shlq    $3, %rdx
  Inst 7225:   movq    %r13, %r12
  Inst 7226:   addq    %rdx, %r12
  Inst 7227:   movq    %r13, %rdi
  Inst 7228:   addq    $-24, %rdi
  Inst 7229:   movq    %r13, %rsi
  Inst 7230:   load_ext_name %Memmove+0, %rax
  Inst 7231:   movq    %rbx, rsp(432 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7232:   call    *%rax
  Inst 7233:   movq    rsp(432 + virtual offset), %rbx
  Inst 7234:   load_ext_name u1:1+0, %rsi
  Inst 7235:   movl    $1, %edi
  Inst 7236:   movq    %rdi, -8(%r13,%r14,8)
  Inst 7237:   movl    $1, %edi
  Inst 7238:   movq    %rdi, -16(%r13,%r14,8)
  Inst 7239:   movq    %rsi, -24(%r13,%r14,8)
  Inst 7240:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7241:   movq    %r12, 152(%rsi)
  Inst 7242:   movq    %rbx, %rdi
  Inst 7243:   movq    %r15, %rsi
  Inst 7244:   load_ext_name u0:3+0, %rax
  Inst 7245:   movq    %rdi, rsp(432 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7246:   call    *%rax
  Inst 7247:   jmp     label339
Block 339:
  (successor: Block 340)
  (instruction range: 7248 .. 7292)
  Inst 7248:   movq    %rax, rsp(920 + virtual offset)
  Inst 7249:   nop     len=0
  Inst 7250:   nop     len=0
  Inst 7251:   nop     len=0
  Inst 7252:   nop     len=0
  Inst 7253:   nop     len=0
  Inst 7254:   nop     len=0
  Inst 7255:   nop     len=0
  Inst 7256:   nop     len=0
  Inst 7257:   nop     len=0
  Inst 7258:   nop     len=0
  Inst 7259:   nop     len=0
  Inst 7260:   nop     len=0
  Inst 7261:   nop     len=0
  Inst 7262:   nop     len=0
  Inst 7263:   nop     len=0
  Inst 7264:   nop     len=0
  Inst 7265:   nop     len=0
  Inst 7266:   nop     len=0
  Inst 7267:   nop     len=0
  Inst 7268:   nop     len=0
  Inst 7269:   nop     len=0
  Inst 7270:   nop     len=0
  Inst 7271:   nop     len=0
  Inst 7272:   nop     len=0
  Inst 7273:   nop     len=0
  Inst 7274:   nop     len=0
  Inst 7275:   nop     len=0
  Inst 7276:   nop     len=0
  Inst 7277:   nop     len=0
  Inst 7278:   nop     len=0
  Inst 7279:   nop     len=0
  Inst 7280:   nop     len=0
  Inst 7281:   nop     len=0
  Inst 7282:   nop     len=0
  Inst 7283:   nop     len=0
  Inst 7284:   nop     len=0
  Inst 7285:   nop     len=0
  Inst 7286:   nop     len=0
  Inst 7287:   nop     len=0
  Inst 7288:   nop     len=0
  Inst 7289:   nop     len=0
  Inst 7290:   nop     len=0
  Inst 7291:   jmp     label340
Block 340:
  (original IR block: block170)
  (successor: Block 341)
  (successor: Block 342)
  (instruction range: 7292 .. 7303)
  Inst 7292:   movq    rsp(2064 + virtual offset), %rsi
  Inst 7293:   movq    8(%rsi), %rdi
  Inst 7294:   movq    rsp(2048 + virtual offset), %rsi
  Inst 7295:   load_ext_name u0:2+0, %rax
  Inst 7296:   movq    %rsi, rsp(432 + virtual offset)
  Inst 7297:   movq    %rdi, rsp(448 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7298:   call    *%rax
  Inst 7299:   movq    %rax, %rbx
  Inst 7300:   movq    %rdx, %r14
  Inst 7301:   testq   %r14, %r14
  Inst 7302:   jz      label341; j label342
Block 341:
  (successor: Block 344)
  (instruction range: 7303 .. 7347)
  Inst 7303:   movq    %rbx, rsp(432 + virtual offset)
  Inst 7304:   nop     len=0
  Inst 7305:   nop     len=0
  Inst 7306:   nop     len=0
  Inst 7307:   nop     len=0
  Inst 7308:   nop     len=0
  Inst 7309:   nop     len=0
  Inst 7310:   nop     len=0
  Inst 7311:   nop     len=0
  Inst 7312:   nop     len=0
  Inst 7313:   nop     len=0
  Inst 7314:   nop     len=0
  Inst 7315:   nop     len=0
  Inst 7316:   nop     len=0
  Inst 7317:   nop     len=0
  Inst 7318:   nop     len=0
  Inst 7319:   nop     len=0
  Inst 7320:   nop     len=0
  Inst 7321:   nop     len=0
  Inst 7322:   nop     len=0
  Inst 7323:   nop     len=0
  Inst 7324:   nop     len=0
  Inst 7325:   nop     len=0
  Inst 7326:   nop     len=0
  Inst 7327:   nop     len=0
  Inst 7328:   nop     len=0
  Inst 7329:   nop     len=0
  Inst 7330:   nop     len=0
  Inst 7331:   nop     len=0
  Inst 7332:   nop     len=0
  Inst 7333:   nop     len=0
  Inst 7334:   nop     len=0
  Inst 7335:   nop     len=0
  Inst 7336:   nop     len=0
  Inst 7337:   nop     len=0
  Inst 7338:   nop     len=0
  Inst 7339:   nop     len=0
  Inst 7340:   nop     len=0
  Inst 7341:   nop     len=0
  Inst 7342:   nop     len=0
  Inst 7343:   nop     len=0
  Inst 7344:   nop     len=0
  Inst 7345:   nop     len=0
  Inst 7346:   jmp     label344
Block 342:
  (original IR block: block173)
  (successor: Block 343)
  (instruction range: 7347 .. 7376)
  Inst 7347:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7348:   movq    152(%rsi), %r13
  Inst 7349:   movq    %r14, %r15
  Inst 7350:   addq    $-1, %r15
  Inst 7351:   movq    %r14, %rdx
  Inst 7352:   shlq    $3, %rdx
  Inst 7353:   movq    %r13, %r12
  Inst 7354:   addq    %rdx, %r12
  Inst 7355:   movq    %r13, %rdi
  Inst 7356:   addq    $-24, %rdi
  Inst 7357:   movq    %r13, %rsi
  Inst 7358:   load_ext_name %Memmove+0, %rax
  Inst 7359:   movq    %rbx, rsp(448 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S55, S56, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7360:   call    *%rax
  Inst 7361:   movq    rsp(448 + virtual offset), %rbx
  Inst 7362:   load_ext_name u1:1+0, %rsi
  Inst 7363:   movl    $1, %edi
  Inst 7364:   movq    %rdi, -8(%r13,%r14,8)
  Inst 7365:   movl    $1, %edi
  Inst 7366:   movq    %rdi, -16(%r13,%r14,8)
  Inst 7367:   movq    %rsi, -24(%r13,%r14,8)
  Inst 7368:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7369:   movq    %r12, 152(%rsi)
  Inst 7370:   movq    %rbx, %rdi
  Inst 7371:   movq    %r15, %rsi
  Inst 7372:   load_ext_name u0:3+0, %rax
  Inst 7373:   movq    %rdi, rsp(432 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7374:   call    *%rax
  Inst 7375:   jmp     label343
Block 343:
  (successor: Block 344)
  (instruction range: 7376 .. 7420)
  Inst 7376:   movq    %rax, rsp(432 + virtual offset)
  Inst 7377:   nop     len=0
  Inst 7378:   nop     len=0
  Inst 7379:   nop     len=0
  Inst 7380:   nop     len=0
  Inst 7381:   nop     len=0
  Inst 7382:   nop     len=0
  Inst 7383:   nop     len=0
  Inst 7384:   nop     len=0
  Inst 7385:   nop     len=0
  Inst 7386:   nop     len=0
  Inst 7387:   nop     len=0
  Inst 7388:   nop     len=0
  Inst 7389:   nop     len=0
  Inst 7390:   nop     len=0
  Inst 7391:   nop     len=0
  Inst 7392:   nop     len=0
  Inst 7393:   nop     len=0
  Inst 7394:   nop     len=0
  Inst 7395:   nop     len=0
  Inst 7396:   nop     len=0
  Inst 7397:   nop     len=0
  Inst 7398:   nop     len=0
  Inst 7399:   nop     len=0
  Inst 7400:   nop     len=0
  Inst 7401:   nop     len=0
  Inst 7402:   nop     len=0
  Inst 7403:   nop     len=0
  Inst 7404:   nop     len=0
  Inst 7405:   nop     len=0
  Inst 7406:   nop     len=0
  Inst 7407:   nop     len=0
  Inst 7408:   nop     len=0
  Inst 7409:   nop     len=0
  Inst 7410:   nop     len=0
  Inst 7411:   nop     len=0
  Inst 7412:   nop     len=0
  Inst 7413:   nop     len=0
  Inst 7414:   nop     len=0
  Inst 7415:   nop     len=0
  Inst 7416:   nop     len=0
  Inst 7417:   nop     len=0
  Inst 7418:   nop     len=0
  Inst 7419:   jmp     label344
Block 344:
  (original IR block: block172)
  (successor: Block 345)
  (successor: Block 346)
  (instruction range: 7420 .. 7431)
  Inst 7420:   movq    rsp(2064 + virtual offset), %rsi
  Inst 7421:   movq    8(%rsi), %rdi
  Inst 7422:   movq    rsp(2048 + virtual offset), %rsi
  Inst 7423:   load_ext_name u0:2+0, %rax
  Inst 7424:   movq    %rsi, rsp(448 + virtual offset)
  Inst 7425:   movq    %rdi, rsp(464 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7426:   call    *%rax
  Inst 7427:   movq    %rax, %r15
  Inst 7428:   movq    %rdx, %r14
  Inst 7429:   testq   %r14, %r14
  Inst 7430:   jz      label345; j label346
Block 345:
  (successor: Block 348)
  (instruction range: 7431 .. 7476)
  Inst 7431:   movq    %r15, rsp(936 + virtual offset)
  Inst 7432:   nop     len=0
  Inst 7433:   nop     len=0
  Inst 7434:   nop     len=0
  Inst 7435:   nop     len=0
  Inst 7436:   nop     len=0
  Inst 7437:   nop     len=0
  Inst 7438:   nop     len=0
  Inst 7439:   nop     len=0
  Inst 7440:   nop     len=0
  Inst 7441:   nop     len=0
  Inst 7442:   nop     len=0
  Inst 7443:   nop     len=0
  Inst 7444:   nop     len=0
  Inst 7445:   nop     len=0
  Inst 7446:   nop     len=0
  Inst 7447:   nop     len=0
  Inst 7448:   nop     len=0
  Inst 7449:   nop     len=0
  Inst 7450:   nop     len=0
  Inst 7451:   nop     len=0
  Inst 7452:   nop     len=0
  Inst 7453:   nop     len=0
  Inst 7454:   nop     len=0
  Inst 7455:   nop     len=0
  Inst 7456:   nop     len=0
  Inst 7457:   nop     len=0
  Inst 7458:   nop     len=0
  Inst 7459:   nop     len=0
  Inst 7460:   nop     len=0
  Inst 7461:   nop     len=0
  Inst 7462:   nop     len=0
  Inst 7463:   nop     len=0
  Inst 7464:   nop     len=0
  Inst 7465:   nop     len=0
  Inst 7466:   nop     len=0
  Inst 7467:   nop     len=0
  Inst 7468:   nop     len=0
  Inst 7469:   nop     len=0
  Inst 7470:   nop     len=0
  Inst 7471:   nop     len=0
  Inst 7472:   nop     len=0
  Inst 7473:   nop     len=0
  Inst 7474:   nop     len=0
  Inst 7475:   jmp     label348
Block 346:
  (original IR block: block175)
  (successor: Block 347)
  (instruction range: 7476 .. 7505)
  Inst 7476:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7477:   movq    152(%rsi), %r13
  Inst 7478:   movq    %r14, %rbx
  Inst 7479:   addq    $-1, %rbx
  Inst 7480:   movq    %r14, %rdx
  Inst 7481:   shlq    $3, %rdx
  Inst 7482:   movq    %r13, %r12
  Inst 7483:   addq    %rdx, %r12
  Inst 7484:   movq    %r13, %rdi
  Inst 7485:   addq    $-24, %rdi
  Inst 7486:   movq    %r13, %rsi
  Inst 7487:   load_ext_name %Memmove+0, %rax
  Inst 7488:   movq    %r15, rsp(448 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7489:   call    *%rax
  Inst 7490:   movq    rsp(448 + virtual offset), %r15
  Inst 7491:   load_ext_name u1:1+0, %rsi
  Inst 7492:   movl    $1, %edi
  Inst 7493:   movq    %rdi, -8(%r13,%r14,8)
  Inst 7494:   movl    $1, %edi
  Inst 7495:   movq    %rdi, -16(%r13,%r14,8)
  Inst 7496:   movq    %rsi, -24(%r13,%r14,8)
  Inst 7497:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7498:   movq    %r12, 152(%rsi)
  Inst 7499:   movq    %r15, %rdi
  Inst 7500:   movq    %rbx, %rsi
  Inst 7501:   load_ext_name u0:3+0, %rax
  Inst 7502:   movq    %rdi, rsp(448 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7503:   call    *%rax
  Inst 7504:   jmp     label347
Block 347:
  (successor: Block 348)
  (instruction range: 7505 .. 7550)
  Inst 7505:   movq    %rax, rsp(936 + virtual offset)
  Inst 7506:   nop     len=0
  Inst 7507:   nop     len=0
  Inst 7508:   nop     len=0
  Inst 7509:   nop     len=0
  Inst 7510:   nop     len=0
  Inst 7511:   nop     len=0
  Inst 7512:   nop     len=0
  Inst 7513:   nop     len=0
  Inst 7514:   nop     len=0
  Inst 7515:   nop     len=0
  Inst 7516:   nop     len=0
  Inst 7517:   nop     len=0
  Inst 7518:   nop     len=0
  Inst 7519:   nop     len=0
  Inst 7520:   nop     len=0
  Inst 7521:   nop     len=0
  Inst 7522:   nop     len=0
  Inst 7523:   nop     len=0
  Inst 7524:   nop     len=0
  Inst 7525:   nop     len=0
  Inst 7526:   nop     len=0
  Inst 7527:   nop     len=0
  Inst 7528:   nop     len=0
  Inst 7529:   nop     len=0
  Inst 7530:   nop     len=0
  Inst 7531:   nop     len=0
  Inst 7532:   nop     len=0
  Inst 7533:   nop     len=0
  Inst 7534:   nop     len=0
  Inst 7535:   nop     len=0
  Inst 7536:   nop     len=0
  Inst 7537:   nop     len=0
  Inst 7538:   nop     len=0
  Inst 7539:   nop     len=0
  Inst 7540:   nop     len=0
  Inst 7541:   nop     len=0
  Inst 7542:   nop     len=0
  Inst 7543:   nop     len=0
  Inst 7544:   nop     len=0
  Inst 7545:   nop     len=0
  Inst 7546:   nop     len=0
  Inst 7547:   nop     len=0
  Inst 7548:   nop     len=0
  Inst 7549:   jmp     label348
Block 348:
  (original IR block: block174)
  (successor: Block 349)
  (successor: Block 350)
  (instruction range: 7550 .. 7561)
  Inst 7550:   movq    rsp(2064 + virtual offset), %rsi
  Inst 7551:   movq    8(%rsi), %rdi
  Inst 7552:   movq    rsp(2048 + virtual offset), %rsi
  Inst 7553:   load_ext_name u0:2+0, %rax
  Inst 7554:   movq    %rsi, rsp(448 + virtual offset)
  Inst 7555:   movq    %rdi, rsp(464 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7556:   call    *%rax
  Inst 7557:   movq    %rax, %rbx
  Inst 7558:   movq    %rdx, %r14
  Inst 7559:   testq   %r14, %r14
  Inst 7560:   jz      label349; j label350
Block 349:
  (successor: Block 352)
  (instruction range: 7561 .. 7606)
  Inst 7561:   movq    %rbx, rsp(448 + virtual offset)
  Inst 7562:   nop     len=0
  Inst 7563:   nop     len=0
  Inst 7564:   nop     len=0
  Inst 7565:   nop     len=0
  Inst 7566:   nop     len=0
  Inst 7567:   nop     len=0
  Inst 7568:   nop     len=0
  Inst 7569:   nop     len=0
  Inst 7570:   nop     len=0
  Inst 7571:   nop     len=0
  Inst 7572:   nop     len=0
  Inst 7573:   nop     len=0
  Inst 7574:   nop     len=0
  Inst 7575:   nop     len=0
  Inst 7576:   nop     len=0
  Inst 7577:   nop     len=0
  Inst 7578:   nop     len=0
  Inst 7579:   nop     len=0
  Inst 7580:   nop     len=0
  Inst 7581:   nop     len=0
  Inst 7582:   nop     len=0
  Inst 7583:   nop     len=0
  Inst 7584:   nop     len=0
  Inst 7585:   nop     len=0
  Inst 7586:   nop     len=0
  Inst 7587:   nop     len=0
  Inst 7588:   nop     len=0
  Inst 7589:   nop     len=0
  Inst 7590:   nop     len=0
  Inst 7591:   nop     len=0
  Inst 7592:   nop     len=0
  Inst 7593:   nop     len=0
  Inst 7594:   nop     len=0
  Inst 7595:   nop     len=0
  Inst 7596:   nop     len=0
  Inst 7597:   nop     len=0
  Inst 7598:   nop     len=0
  Inst 7599:   nop     len=0
  Inst 7600:   nop     len=0
  Inst 7601:   nop     len=0
  Inst 7602:   nop     len=0
  Inst 7603:   nop     len=0
  Inst 7604:   nop     len=0
  Inst 7605:   jmp     label352
Block 350:
  (original IR block: block177)
  (successor: Block 351)
  (instruction range: 7606 .. 7635)
  Inst 7606:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7607:   movq    152(%rsi), %r13
  Inst 7608:   movq    %r14, %r15
  Inst 7609:   addq    $-1, %r15
  Inst 7610:   movq    %r14, %rdx
  Inst 7611:   shlq    $3, %rdx
  Inst 7612:   movq    %r13, %r12
  Inst 7613:   addq    %rdx, %r12
  Inst 7614:   movq    %r13, %rdi
  Inst 7615:   addq    $-24, %rdi
  Inst 7616:   movq    %r13, %rsi
  Inst 7617:   load_ext_name %Memmove+0, %rax
  Inst 7618:   movq    %rbx, rsp(464 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S57, S58, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7619:   call    *%rax
  Inst 7620:   movq    rsp(464 + virtual offset), %rbx
  Inst 7621:   load_ext_name u1:1+0, %rsi
  Inst 7622:   movl    $1, %edi
  Inst 7623:   movq    %rdi, -8(%r13,%r14,8)
  Inst 7624:   movl    $1, %edi
  Inst 7625:   movq    %rdi, -16(%r13,%r14,8)
  Inst 7626:   movq    %rsi, -24(%r13,%r14,8)
  Inst 7627:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7628:   movq    %r12, 152(%rsi)
  Inst 7629:   movq    %rbx, %rdi
  Inst 7630:   movq    %r15, %rsi
  Inst 7631:   load_ext_name u0:3+0, %rax
  Inst 7632:   movq    %rdi, rsp(448 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7633:   call    *%rax
  Inst 7634:   jmp     label351
Block 351:
  (successor: Block 352)
  (instruction range: 7635 .. 7680)
  Inst 7635:   movq    %rax, rsp(448 + virtual offset)
  Inst 7636:   nop     len=0
  Inst 7637:   nop     len=0
  Inst 7638:   nop     len=0
  Inst 7639:   nop     len=0
  Inst 7640:   nop     len=0
  Inst 7641:   nop     len=0
  Inst 7642:   nop     len=0
  Inst 7643:   nop     len=0
  Inst 7644:   nop     len=0
  Inst 7645:   nop     len=0
  Inst 7646:   nop     len=0
  Inst 7647:   nop     len=0
  Inst 7648:   nop     len=0
  Inst 7649:   nop     len=0
  Inst 7650:   nop     len=0
  Inst 7651:   nop     len=0
  Inst 7652:   nop     len=0
  Inst 7653:   nop     len=0
  Inst 7654:   nop     len=0
  Inst 7655:   nop     len=0
  Inst 7656:   nop     len=0
  Inst 7657:   nop     len=0
  Inst 7658:   nop     len=0
  Inst 7659:   nop     len=0
  Inst 7660:   nop     len=0
  Inst 7661:   nop     len=0
  Inst 7662:   nop     len=0
  Inst 7663:   nop     len=0
  Inst 7664:   nop     len=0
  Inst 7665:   nop     len=0
  Inst 7666:   nop     len=0
  Inst 7667:   nop     len=0
  Inst 7668:   nop     len=0
  Inst 7669:   nop     len=0
  Inst 7670:   nop     len=0
  Inst 7671:   nop     len=0
  Inst 7672:   nop     len=0
  Inst 7673:   nop     len=0
  Inst 7674:   nop     len=0
  Inst 7675:   nop     len=0
  Inst 7676:   nop     len=0
  Inst 7677:   nop     len=0
  Inst 7678:   nop     len=0
  Inst 7679:   jmp     label352
Block 352:
  (original IR block: block176)
  (successor: Block 353)
  (successor: Block 354)
  (instruction range: 7680 .. 7691)
  Inst 7680:   movq    rsp(2064 + virtual offset), %rsi
  Inst 7681:   movq    8(%rsi), %rdi
  Inst 7682:   movq    rsp(2048 + virtual offset), %rsi
  Inst 7683:   load_ext_name u0:2+0, %rax
  Inst 7684:   movq    %rsi, rsp(464 + virtual offset)
  Inst 7685:   movq    %rdi, rsp(480 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7686:   call    *%rax
  Inst 7687:   movq    %rax, %rbx
  Inst 7688:   movq    %rdx, %r14
  Inst 7689:   testq   %r14, %r14
  Inst 7690:   jz      label353; j label354
Block 353:
  (successor: Block 356)
  (instruction range: 7691 .. 7737)
  Inst 7691:   movq    %rbx, rsp(952 + virtual offset)
  Inst 7692:   nop     len=0
  Inst 7693:   nop     len=0
  Inst 7694:   nop     len=0
  Inst 7695:   nop     len=0
  Inst 7696:   nop     len=0
  Inst 7697:   nop     len=0
  Inst 7698:   nop     len=0
  Inst 7699:   nop     len=0
  Inst 7700:   nop     len=0
  Inst 7701:   nop     len=0
  Inst 7702:   nop     len=0
  Inst 7703:   nop     len=0
  Inst 7704:   nop     len=0
  Inst 7705:   nop     len=0
  Inst 7706:   nop     len=0
  Inst 7707:   nop     len=0
  Inst 7708:   nop     len=0
  Inst 7709:   nop     len=0
  Inst 7710:   nop     len=0
  Inst 7711:   nop     len=0
  Inst 7712:   nop     len=0
  Inst 7713:   nop     len=0
  Inst 7714:   nop     len=0
  Inst 7715:   nop     len=0
  Inst 7716:   nop     len=0
  Inst 7717:   nop     len=0
  Inst 7718:   nop     len=0
  Inst 7719:   nop     len=0
  Inst 7720:   nop     len=0
  Inst 7721:   nop     len=0
  Inst 7722:   nop     len=0
  Inst 7723:   nop     len=0
  Inst 7724:   nop     len=0
  Inst 7725:   nop     len=0
  Inst 7726:   nop     len=0
  Inst 7727:   nop     len=0
  Inst 7728:   nop     len=0
  Inst 7729:   nop     len=0
  Inst 7730:   nop     len=0
  Inst 7731:   nop     len=0
  Inst 7732:   nop     len=0
  Inst 7733:   nop     len=0
  Inst 7734:   nop     len=0
  Inst 7735:   nop     len=0
  Inst 7736:   jmp     label356
Block 354:
  (original IR block: block179)
  (successor: Block 355)
  (instruction range: 7737 .. 7766)
  Inst 7737:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7738:   movq    152(%rsi), %r13
  Inst 7739:   movq    %r14, %r15
  Inst 7740:   addq    $-1, %r15
  Inst 7741:   movq    %r14, %rdx
  Inst 7742:   shlq    $3, %rdx
  Inst 7743:   movq    %r13, %r12
  Inst 7744:   addq    %rdx, %r12
  Inst 7745:   movq    %r13, %rdi
  Inst 7746:   addq    $-24, %rdi
  Inst 7747:   movq    %r13, %rsi
  Inst 7748:   load_ext_name %Memmove+0, %rax
  Inst 7749:   movq    %rbx, rsp(464 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7750:   call    *%rax
  Inst 7751:   movq    rsp(464 + virtual offset), %rbx
  Inst 7752:   load_ext_name u1:1+0, %rsi
  Inst 7753:   movl    $1, %edi
  Inst 7754:   movq    %rdi, -8(%r13,%r14,8)
  Inst 7755:   movl    $1, %edi
  Inst 7756:   movq    %rdi, -16(%r13,%r14,8)
  Inst 7757:   movq    %rsi, -24(%r13,%r14,8)
  Inst 7758:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7759:   movq    %r12, 152(%rsi)
  Inst 7760:   movq    %rbx, %rdi
  Inst 7761:   movq    %r15, %rsi
  Inst 7762:   load_ext_name u0:3+0, %rax
  Inst 7763:   movq    %rdi, rsp(464 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7764:   call    *%rax
  Inst 7765:   jmp     label355
Block 355:
  (successor: Block 356)
  (instruction range: 7766 .. 7812)
  Inst 7766:   movq    %rax, rsp(952 + virtual offset)
  Inst 7767:   nop     len=0
  Inst 7768:   nop     len=0
  Inst 7769:   nop     len=0
  Inst 7770:   nop     len=0
  Inst 7771:   nop     len=0
  Inst 7772:   nop     len=0
  Inst 7773:   nop     len=0
  Inst 7774:   nop     len=0
  Inst 7775:   nop     len=0
  Inst 7776:   nop     len=0
  Inst 7777:   nop     len=0
  Inst 7778:   nop     len=0
  Inst 7779:   nop     len=0
  Inst 7780:   nop     len=0
  Inst 7781:   nop     len=0
  Inst 7782:   nop     len=0
  Inst 7783:   nop     len=0
  Inst 7784:   nop     len=0
  Inst 7785:   nop     len=0
  Inst 7786:   nop     len=0
  Inst 7787:   nop     len=0
  Inst 7788:   nop     len=0
  Inst 7789:   nop     len=0
  Inst 7790:   nop     len=0
  Inst 7791:   nop     len=0
  Inst 7792:   nop     len=0
  Inst 7793:   nop     len=0
  Inst 7794:   nop     len=0
  Inst 7795:   nop     len=0
  Inst 7796:   nop     len=0
  Inst 7797:   nop     len=0
  Inst 7798:   nop     len=0
  Inst 7799:   nop     len=0
  Inst 7800:   nop     len=0
  Inst 7801:   nop     len=0
  Inst 7802:   nop     len=0
  Inst 7803:   nop     len=0
  Inst 7804:   nop     len=0
  Inst 7805:   nop     len=0
  Inst 7806:   nop     len=0
  Inst 7807:   nop     len=0
  Inst 7808:   nop     len=0
  Inst 7809:   nop     len=0
  Inst 7810:   nop     len=0
  Inst 7811:   jmp     label356
Block 356:
  (original IR block: block178)
  (successor: Block 357)
  (successor: Block 358)
  (instruction range: 7812 .. 7823)
  Inst 7812:   movq    rsp(2064 + virtual offset), %rsi
  Inst 7813:   movq    8(%rsi), %rdi
  Inst 7814:   movq    rsp(2048 + virtual offset), %rsi
  Inst 7815:   load_ext_name u0:2+0, %rax
  Inst 7816:   movq    %rsi, rsp(464 + virtual offset)
  Inst 7817:   movq    %rdi, rsp(480 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7818:   call    *%rax
  Inst 7819:   movq    %rax, %r15
  Inst 7820:   movq    %rdx, %r14
  Inst 7821:   testq   %r14, %r14
  Inst 7822:   jz      label357; j label358
Block 357:
  (successor: Block 360)
  (instruction range: 7823 .. 7869)
  Inst 7823:   movq    %r15, rsp(464 + virtual offset)
  Inst 7824:   nop     len=0
  Inst 7825:   nop     len=0
  Inst 7826:   nop     len=0
  Inst 7827:   nop     len=0
  Inst 7828:   nop     len=0
  Inst 7829:   nop     len=0
  Inst 7830:   nop     len=0
  Inst 7831:   nop     len=0
  Inst 7832:   nop     len=0
  Inst 7833:   nop     len=0
  Inst 7834:   nop     len=0
  Inst 7835:   nop     len=0
  Inst 7836:   nop     len=0
  Inst 7837:   nop     len=0
  Inst 7838:   nop     len=0
  Inst 7839:   nop     len=0
  Inst 7840:   nop     len=0
  Inst 7841:   nop     len=0
  Inst 7842:   nop     len=0
  Inst 7843:   nop     len=0
  Inst 7844:   nop     len=0
  Inst 7845:   nop     len=0
  Inst 7846:   nop     len=0
  Inst 7847:   nop     len=0
  Inst 7848:   nop     len=0
  Inst 7849:   nop     len=0
  Inst 7850:   nop     len=0
  Inst 7851:   nop     len=0
  Inst 7852:   nop     len=0
  Inst 7853:   nop     len=0
  Inst 7854:   nop     len=0
  Inst 7855:   nop     len=0
  Inst 7856:   nop     len=0
  Inst 7857:   nop     len=0
  Inst 7858:   nop     len=0
  Inst 7859:   nop     len=0
  Inst 7860:   nop     len=0
  Inst 7861:   nop     len=0
  Inst 7862:   nop     len=0
  Inst 7863:   nop     len=0
  Inst 7864:   nop     len=0
  Inst 7865:   nop     len=0
  Inst 7866:   nop     len=0
  Inst 7867:   nop     len=0
  Inst 7868:   jmp     label360
Block 358:
  (original IR block: block181)
  (successor: Block 359)
  (instruction range: 7869 .. 7898)
  Inst 7869:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7870:   movq    152(%rsi), %r13
  Inst 7871:   movq    %r14, %rbx
  Inst 7872:   addq    $-1, %rbx
  Inst 7873:   movq    %r14, %rdx
  Inst 7874:   shlq    $3, %rdx
  Inst 7875:   movq    %r13, %r12
  Inst 7876:   addq    %rdx, %r12
  Inst 7877:   movq    %r13, %rdi
  Inst 7878:   addq    $-24, %rdi
  Inst 7879:   movq    %r13, %rsi
  Inst 7880:   load_ext_name %Memmove+0, %rax
  Inst 7881:   movq    %r15, rsp(480 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S59, S60, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7882:   call    *%rax
  Inst 7883:   movq    rsp(480 + virtual offset), %r15
  Inst 7884:   load_ext_name u1:1+0, %rsi
  Inst 7885:   movl    $1, %edi
  Inst 7886:   movq    %rdi, -8(%r13,%r14,8)
  Inst 7887:   movl    $1, %edi
  Inst 7888:   movq    %rdi, -16(%r13,%r14,8)
  Inst 7889:   movq    %rsi, -24(%r13,%r14,8)
  Inst 7890:   movq    rsp(2072 + virtual offset), %rsi
  Inst 7891:   movq    %r12, 152(%rsi)
  Inst 7892:   movq    %r15, %rdi
  Inst 7893:   movq    %rbx, %rsi
  Inst 7894:   load_ext_name u0:3+0, %rax
  Inst 7895:   movq    %rdi, rsp(464 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7896:   call    *%rax
  Inst 7897:   jmp     label359
Block 359:
  (successor: Block 360)
  (instruction range: 7898 .. 7944)
  Inst 7898:   movq    %rax, rsp(464 + virtual offset)
  Inst 7899:   nop     len=0
  Inst 7900:   nop     len=0
  Inst 7901:   nop     len=0
  Inst 7902:   nop     len=0
  Inst 7903:   nop     len=0
  Inst 7904:   nop     len=0
  Inst 7905:   nop     len=0
  Inst 7906:   nop     len=0
  Inst 7907:   nop     len=0
  Inst 7908:   nop     len=0
  Inst 7909:   nop     len=0
  Inst 7910:   nop     len=0
  Inst 7911:   nop     len=0
  Inst 7912:   nop     len=0
  Inst 7913:   nop     len=0
  Inst 7914:   nop     len=0
  Inst 7915:   nop     len=0
  Inst 7916:   nop     len=0
  Inst 7917:   nop     len=0
  Inst 7918:   nop     len=0
  Inst 7919:   nop     len=0
  Inst 7920:   nop     len=0
  Inst 7921:   nop     len=0
  Inst 7922:   nop     len=0
  Inst 7923:   nop     len=0
  Inst 7924:   nop     len=0
  Inst 7925:   nop     len=0
  Inst 7926:   nop     len=0
  Inst 7927:   nop     len=0
  Inst 7928:   nop     len=0
  Inst 7929:   nop     len=0
  Inst 7930:   nop     len=0
  Inst 7931:   nop     len=0
  Inst 7932:   nop     len=0
  Inst 7933:   nop     len=0
  Inst 7934:   nop     len=0
  Inst 7935:   nop     len=0
  Inst 7936:   nop     len=0
  Inst 7937:   nop     len=0
  Inst 7938:   nop     len=0
  Inst 7939:   nop     len=0
  Inst 7940:   nop     len=0
  Inst 7941:   nop     len=0
  Inst 7942:   nop     len=0
  Inst 7943:   jmp     label360
Block 360:
  (original IR block: block180)
  (successor: Block 361)
  (successor: Block 362)
  (instruction range: 7944 .. 7955)
  Inst 7944:   movq    rsp(2064 + virtual offset), %rsi
  Inst 7945:   movq    8(%rsi), %rdi
  Inst 7946:   movq    rsp(2048 + virtual offset), %rsi
  Inst 7947:   load_ext_name u0:2+0, %rax
  Inst 7948:   movq    %rsi, rsp(480 + virtual offset)
  Inst 7949:   movq    %rdi, rsp(496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 7950:   call    *%rax
  Inst 7951:   movq    %rax, %rbx
  Inst 7952:   movq    %rdx, %r14
  Inst 7953:   testq   %r14, %r14
  Inst 7954:   jz      label361; j label362
Block 361:
  (successor: Block 364)
  (instruction range: 7955 .. 8002)
  Inst 7955:   movq    %rbx, rsp(968 + virtual offset)
  Inst 7956:   nop     len=0
  Inst 7957:   nop     len=0
  Inst 7958:   nop     len=0
  Inst 7959:   nop     len=0
  Inst 7960:   nop     len=0
  Inst 7961:   nop     len=0
  Inst 7962:   nop     len=0
  Inst 7963:   nop     len=0
  Inst 7964:   nop     len=0
  Inst 7965:   nop     len=0
  Inst 7966:   nop     len=0
  Inst 7967:   nop     len=0
  Inst 7968:   nop     len=0
  Inst 7969:   nop     len=0
  Inst 7970:   nop     len=0
  Inst 7971:   nop     len=0
  Inst 7972:   nop     len=0
  Inst 7973:   nop     len=0
  Inst 7974:   nop     len=0
  Inst 7975:   nop     len=0
  Inst 7976:   nop     len=0
  Inst 7977:   nop     len=0
  Inst 7978:   nop     len=0
  Inst 7979:   nop     len=0
  Inst 7980:   nop     len=0
  Inst 7981:   nop     len=0
  Inst 7982:   nop     len=0
  Inst 7983:   nop     len=0
  Inst 7984:   nop     len=0
  Inst 7985:   nop     len=0
  Inst 7986:   nop     len=0
  Inst 7987:   nop     len=0
  Inst 7988:   nop     len=0
  Inst 7989:   nop     len=0
  Inst 7990:   nop     len=0
  Inst 7991:   nop     len=0
  Inst 7992:   nop     len=0
  Inst 7993:   nop     len=0
  Inst 7994:   nop     len=0
  Inst 7995:   nop     len=0
  Inst 7996:   nop     len=0
  Inst 7997:   nop     len=0
  Inst 7998:   nop     len=0
  Inst 7999:   nop     len=0
  Inst 8000:   nop     len=0
  Inst 8001:   jmp     label364
Block 362:
  (original IR block: block183)
  (successor: Block 363)
  (instruction range: 8002 .. 8031)
  Inst 8002:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8003:   movq    152(%rsi), %r13
  Inst 8004:   movq    %r14, %r15
  Inst 8005:   addq    $-1, %r15
  Inst 8006:   movq    %r14, %rdx
  Inst 8007:   shlq    $3, %rdx
  Inst 8008:   movq    %r13, %r12
  Inst 8009:   addq    %rdx, %r12
  Inst 8010:   movq    %r13, %rdi
  Inst 8011:   addq    $-24, %rdi
  Inst 8012:   movq    %r13, %rsi
  Inst 8013:   load_ext_name %Memmove+0, %rax
  Inst 8014:   movq    %rbx, rsp(480 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8015:   call    *%rax
  Inst 8016:   movq    rsp(480 + virtual offset), %rbx
  Inst 8017:   load_ext_name u1:1+0, %rsi
  Inst 8018:   movl    $1, %edi
  Inst 8019:   movq    %rdi, -8(%r13,%r14,8)
  Inst 8020:   movl    $1, %edi
  Inst 8021:   movq    %rdi, -16(%r13,%r14,8)
  Inst 8022:   movq    %rsi, -24(%r13,%r14,8)
  Inst 8023:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8024:   movq    %r12, 152(%rsi)
  Inst 8025:   movq    %rbx, %rdi
  Inst 8026:   movq    %r15, %rsi
  Inst 8027:   load_ext_name u0:3+0, %rax
  Inst 8028:   movq    %rdi, rsp(480 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8029:   call    *%rax
  Inst 8030:   jmp     label363
Block 363:
  (successor: Block 364)
  (instruction range: 8031 .. 8078)
  Inst 8031:   movq    %rax, rsp(968 + virtual offset)
  Inst 8032:   nop     len=0
  Inst 8033:   nop     len=0
  Inst 8034:   nop     len=0
  Inst 8035:   nop     len=0
  Inst 8036:   nop     len=0
  Inst 8037:   nop     len=0
  Inst 8038:   nop     len=0
  Inst 8039:   nop     len=0
  Inst 8040:   nop     len=0
  Inst 8041:   nop     len=0
  Inst 8042:   nop     len=0
  Inst 8043:   nop     len=0
  Inst 8044:   nop     len=0
  Inst 8045:   nop     len=0
  Inst 8046:   nop     len=0
  Inst 8047:   nop     len=0
  Inst 8048:   nop     len=0
  Inst 8049:   nop     len=0
  Inst 8050:   nop     len=0
  Inst 8051:   nop     len=0
  Inst 8052:   nop     len=0
  Inst 8053:   nop     len=0
  Inst 8054:   nop     len=0
  Inst 8055:   nop     len=0
  Inst 8056:   nop     len=0
  Inst 8057:   nop     len=0
  Inst 8058:   nop     len=0
  Inst 8059:   nop     len=0
  Inst 8060:   nop     len=0
  Inst 8061:   nop     len=0
  Inst 8062:   nop     len=0
  Inst 8063:   nop     len=0
  Inst 8064:   nop     len=0
  Inst 8065:   nop     len=0
  Inst 8066:   nop     len=0
  Inst 8067:   nop     len=0
  Inst 8068:   nop     len=0
  Inst 8069:   nop     len=0
  Inst 8070:   nop     len=0
  Inst 8071:   nop     len=0
  Inst 8072:   nop     len=0
  Inst 8073:   nop     len=0
  Inst 8074:   nop     len=0
  Inst 8075:   nop     len=0
  Inst 8076:   nop     len=0
  Inst 8077:   jmp     label364
Block 364:
  (original IR block: block182)
  (successor: Block 365)
  (successor: Block 366)
  (instruction range: 8078 .. 8089)
  Inst 8078:   movq    rsp(2064 + virtual offset), %rsi
  Inst 8079:   movq    8(%rsi), %rdi
  Inst 8080:   movq    rsp(2048 + virtual offset), %rsi
  Inst 8081:   load_ext_name u0:2+0, %rax
  Inst 8082:   movq    %rsi, rsp(480 + virtual offset)
  Inst 8083:   movq    %rdi, rsp(496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8084:   call    *%rax
  Inst 8085:   movq    %rax, %rbx
  Inst 8086:   movq    %rdx, %r14
  Inst 8087:   testq   %r14, %r14
  Inst 8088:   jz      label365; j label366
Block 365:
  (successor: Block 368)
  (instruction range: 8089 .. 8136)
  Inst 8089:   movq    %rbx, rsp(480 + virtual offset)
  Inst 8090:   nop     len=0
  Inst 8091:   nop     len=0
  Inst 8092:   nop     len=0
  Inst 8093:   nop     len=0
  Inst 8094:   nop     len=0
  Inst 8095:   nop     len=0
  Inst 8096:   nop     len=0
  Inst 8097:   nop     len=0
  Inst 8098:   nop     len=0
  Inst 8099:   nop     len=0
  Inst 8100:   nop     len=0
  Inst 8101:   nop     len=0
  Inst 8102:   nop     len=0
  Inst 8103:   nop     len=0
  Inst 8104:   nop     len=0
  Inst 8105:   nop     len=0
  Inst 8106:   nop     len=0
  Inst 8107:   nop     len=0
  Inst 8108:   nop     len=0
  Inst 8109:   nop     len=0
  Inst 8110:   nop     len=0
  Inst 8111:   nop     len=0
  Inst 8112:   nop     len=0
  Inst 8113:   nop     len=0
  Inst 8114:   nop     len=0
  Inst 8115:   nop     len=0
  Inst 8116:   nop     len=0
  Inst 8117:   nop     len=0
  Inst 8118:   nop     len=0
  Inst 8119:   nop     len=0
  Inst 8120:   nop     len=0
  Inst 8121:   nop     len=0
  Inst 8122:   nop     len=0
  Inst 8123:   nop     len=0
  Inst 8124:   nop     len=0
  Inst 8125:   nop     len=0
  Inst 8126:   nop     len=0
  Inst 8127:   nop     len=0
  Inst 8128:   nop     len=0
  Inst 8129:   nop     len=0
  Inst 8130:   nop     len=0
  Inst 8131:   nop     len=0
  Inst 8132:   nop     len=0
  Inst 8133:   nop     len=0
  Inst 8134:   nop     len=0
  Inst 8135:   jmp     label368
Block 366:
  (original IR block: block185)
  (successor: Block 367)
  (instruction range: 8136 .. 8165)
  Inst 8136:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8137:   movq    152(%rsi), %r13
  Inst 8138:   movq    %r14, %r15
  Inst 8139:   addq    $-1, %r15
  Inst 8140:   movq    %r14, %rdx
  Inst 8141:   shlq    $3, %rdx
  Inst 8142:   movq    %r13, %r12
  Inst 8143:   addq    %rdx, %r12
  Inst 8144:   movq    %r13, %rdi
  Inst 8145:   addq    $-24, %rdi
  Inst 8146:   movq    %r13, %rsi
  Inst 8147:   load_ext_name %Memmove+0, %rax
  Inst 8148:   movq    %rbx, rsp(496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S61, S62, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8149:   call    *%rax
  Inst 8150:   movq    rsp(496 + virtual offset), %rbx
  Inst 8151:   load_ext_name u1:1+0, %rsi
  Inst 8152:   movl    $1, %edi
  Inst 8153:   movq    %rdi, -8(%r13,%r14,8)
  Inst 8154:   movl    $1, %edi
  Inst 8155:   movq    %rdi, -16(%r13,%r14,8)
  Inst 8156:   movq    %rsi, -24(%r13,%r14,8)
  Inst 8157:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8158:   movq    %r12, 152(%rsi)
  Inst 8159:   movq    %rbx, %rdi
  Inst 8160:   movq    %r15, %rsi
  Inst 8161:   load_ext_name u0:3+0, %rax
  Inst 8162:   movq    %rdi, rsp(480 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8163:   call    *%rax
  Inst 8164:   jmp     label367
Block 367:
  (successor: Block 368)
  (instruction range: 8165 .. 8212)
  Inst 8165:   movq    %rax, rsp(480 + virtual offset)
  Inst 8166:   nop     len=0
  Inst 8167:   nop     len=0
  Inst 8168:   nop     len=0
  Inst 8169:   nop     len=0
  Inst 8170:   nop     len=0
  Inst 8171:   nop     len=0
  Inst 8172:   nop     len=0
  Inst 8173:   nop     len=0
  Inst 8174:   nop     len=0
  Inst 8175:   nop     len=0
  Inst 8176:   nop     len=0
  Inst 8177:   nop     len=0
  Inst 8178:   nop     len=0
  Inst 8179:   nop     len=0
  Inst 8180:   nop     len=0
  Inst 8181:   nop     len=0
  Inst 8182:   nop     len=0
  Inst 8183:   nop     len=0
  Inst 8184:   nop     len=0
  Inst 8185:   nop     len=0
  Inst 8186:   nop     len=0
  Inst 8187:   nop     len=0
  Inst 8188:   nop     len=0
  Inst 8189:   nop     len=0
  Inst 8190:   nop     len=0
  Inst 8191:   nop     len=0
  Inst 8192:   nop     len=0
  Inst 8193:   nop     len=0
  Inst 8194:   nop     len=0
  Inst 8195:   nop     len=0
  Inst 8196:   nop     len=0
  Inst 8197:   nop     len=0
  Inst 8198:   nop     len=0
  Inst 8199:   nop     len=0
  Inst 8200:   nop     len=0
  Inst 8201:   nop     len=0
  Inst 8202:   nop     len=0
  Inst 8203:   nop     len=0
  Inst 8204:   nop     len=0
  Inst 8205:   nop     len=0
  Inst 8206:   nop     len=0
  Inst 8207:   nop     len=0
  Inst 8208:   nop     len=0
  Inst 8209:   nop     len=0
  Inst 8210:   nop     len=0
  Inst 8211:   jmp     label368
Block 368:
  (original IR block: block184)
  (successor: Block 369)
  (successor: Block 370)
  (instruction range: 8212 .. 8223)
  Inst 8212:   movq    rsp(2064 + virtual offset), %rsi
  Inst 8213:   movq    8(%rsi), %rdi
  Inst 8214:   movq    rsp(2048 + virtual offset), %rsi
  Inst 8215:   load_ext_name u0:2+0, %rax
  Inst 8216:   movq    %rsi, rsp(496 + virtual offset)
  Inst 8217:   movq    %rdi, rsp(512 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8218:   call    *%rax
  Inst 8219:   movq    %rax, %r15
  Inst 8220:   movq    %rdx, %r14
  Inst 8221:   testq   %r14, %r14
  Inst 8222:   jz      label369; j label370
Block 369:
  (successor: Block 372)
  (instruction range: 8223 .. 8271)
  Inst 8223:   movq    %r15, rsp(984 + virtual offset)
  Inst 8224:   nop     len=0
  Inst 8225:   nop     len=0
  Inst 8226:   nop     len=0
  Inst 8227:   nop     len=0
  Inst 8228:   nop     len=0
  Inst 8229:   nop     len=0
  Inst 8230:   nop     len=0
  Inst 8231:   nop     len=0
  Inst 8232:   nop     len=0
  Inst 8233:   nop     len=0
  Inst 8234:   nop     len=0
  Inst 8235:   nop     len=0
  Inst 8236:   nop     len=0
  Inst 8237:   nop     len=0
  Inst 8238:   nop     len=0
  Inst 8239:   nop     len=0
  Inst 8240:   nop     len=0
  Inst 8241:   nop     len=0
  Inst 8242:   nop     len=0
  Inst 8243:   nop     len=0
  Inst 8244:   nop     len=0
  Inst 8245:   nop     len=0
  Inst 8246:   nop     len=0
  Inst 8247:   nop     len=0
  Inst 8248:   nop     len=0
  Inst 8249:   nop     len=0
  Inst 8250:   nop     len=0
  Inst 8251:   nop     len=0
  Inst 8252:   nop     len=0
  Inst 8253:   nop     len=0
  Inst 8254:   nop     len=0
  Inst 8255:   nop     len=0
  Inst 8256:   nop     len=0
  Inst 8257:   nop     len=0
  Inst 8258:   nop     len=0
  Inst 8259:   nop     len=0
  Inst 8260:   nop     len=0
  Inst 8261:   nop     len=0
  Inst 8262:   nop     len=0
  Inst 8263:   nop     len=0
  Inst 8264:   nop     len=0
  Inst 8265:   nop     len=0
  Inst 8266:   nop     len=0
  Inst 8267:   nop     len=0
  Inst 8268:   nop     len=0
  Inst 8269:   nop     len=0
  Inst 8270:   jmp     label372
Block 370:
  (original IR block: block187)
  (successor: Block 371)
  (instruction range: 8271 .. 8300)
  Inst 8271:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8272:   movq    152(%rsi), %r13
  Inst 8273:   movq    %r14, %rbx
  Inst 8274:   addq    $-1, %rbx
  Inst 8275:   movq    %r14, %rdx
  Inst 8276:   shlq    $3, %rdx
  Inst 8277:   movq    %r13, %r12
  Inst 8278:   addq    %rdx, %r12
  Inst 8279:   movq    %r13, %rdi
  Inst 8280:   addq    $-24, %rdi
  Inst 8281:   movq    %r13, %rsi
  Inst 8282:   load_ext_name %Memmove+0, %rax
  Inst 8283:   movq    %r15, rsp(496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8284:   call    *%rax
  Inst 8285:   movq    rsp(496 + virtual offset), %r15
  Inst 8286:   load_ext_name u1:1+0, %rsi
  Inst 8287:   movl    $1, %edi
  Inst 8288:   movq    %rdi, -8(%r13,%r14,8)
  Inst 8289:   movl    $1, %edi
  Inst 8290:   movq    %rdi, -16(%r13,%r14,8)
  Inst 8291:   movq    %rsi, -24(%r13,%r14,8)
  Inst 8292:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8293:   movq    %r12, 152(%rsi)
  Inst 8294:   movq    %r15, %rdi
  Inst 8295:   movq    %rbx, %rsi
  Inst 8296:   load_ext_name u0:3+0, %rax
  Inst 8297:   movq    %rdi, rsp(496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8298:   call    *%rax
  Inst 8299:   jmp     label371
Block 371:
  (successor: Block 372)
  (instruction range: 8300 .. 8348)
  Inst 8300:   movq    %rax, rsp(984 + virtual offset)
  Inst 8301:   nop     len=0
  Inst 8302:   nop     len=0
  Inst 8303:   nop     len=0
  Inst 8304:   nop     len=0
  Inst 8305:   nop     len=0
  Inst 8306:   nop     len=0
  Inst 8307:   nop     len=0
  Inst 8308:   nop     len=0
  Inst 8309:   nop     len=0
  Inst 8310:   nop     len=0
  Inst 8311:   nop     len=0
  Inst 8312:   nop     len=0
  Inst 8313:   nop     len=0
  Inst 8314:   nop     len=0
  Inst 8315:   nop     len=0
  Inst 8316:   nop     len=0
  Inst 8317:   nop     len=0
  Inst 8318:   nop     len=0
  Inst 8319:   nop     len=0
  Inst 8320:   nop     len=0
  Inst 8321:   nop     len=0
  Inst 8322:   nop     len=0
  Inst 8323:   nop     len=0
  Inst 8324:   nop     len=0
  Inst 8325:   nop     len=0
  Inst 8326:   nop     len=0
  Inst 8327:   nop     len=0
  Inst 8328:   nop     len=0
  Inst 8329:   nop     len=0
  Inst 8330:   nop     len=0
  Inst 8331:   nop     len=0
  Inst 8332:   nop     len=0
  Inst 8333:   nop     len=0
  Inst 8334:   nop     len=0
  Inst 8335:   nop     len=0
  Inst 8336:   nop     len=0
  Inst 8337:   nop     len=0
  Inst 8338:   nop     len=0
  Inst 8339:   nop     len=0
  Inst 8340:   nop     len=0
  Inst 8341:   nop     len=0
  Inst 8342:   nop     len=0
  Inst 8343:   nop     len=0
  Inst 8344:   nop     len=0
  Inst 8345:   nop     len=0
  Inst 8346:   nop     len=0
  Inst 8347:   jmp     label372
Block 372:
  (original IR block: block186)
  (successor: Block 373)
  (successor: Block 374)
  (instruction range: 8348 .. 8359)
  Inst 8348:   movq    rsp(2064 + virtual offset), %rsi
  Inst 8349:   movq    8(%rsi), %rdi
  Inst 8350:   movq    rsp(2048 + virtual offset), %rsi
  Inst 8351:   load_ext_name u0:2+0, %rax
  Inst 8352:   movq    %rsi, rsp(496 + virtual offset)
  Inst 8353:   movq    %rdi, rsp(512 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8354:   call    *%rax
  Inst 8355:   movq    %rax, %rbx
  Inst 8356:   movq    %rdx, %r14
  Inst 8357:   testq   %r14, %r14
  Inst 8358:   jz      label373; j label374
Block 373:
  (successor: Block 376)
  (instruction range: 8359 .. 8407)
  Inst 8359:   movq    %rbx, rsp(496 + virtual offset)
  Inst 8360:   nop     len=0
  Inst 8361:   nop     len=0
  Inst 8362:   nop     len=0
  Inst 8363:   nop     len=0
  Inst 8364:   nop     len=0
  Inst 8365:   nop     len=0
  Inst 8366:   nop     len=0
  Inst 8367:   nop     len=0
  Inst 8368:   nop     len=0
  Inst 8369:   nop     len=0
  Inst 8370:   nop     len=0
  Inst 8371:   nop     len=0
  Inst 8372:   nop     len=0
  Inst 8373:   nop     len=0
  Inst 8374:   nop     len=0
  Inst 8375:   nop     len=0
  Inst 8376:   nop     len=0
  Inst 8377:   nop     len=0
  Inst 8378:   nop     len=0
  Inst 8379:   nop     len=0
  Inst 8380:   nop     len=0
  Inst 8381:   nop     len=0
  Inst 8382:   nop     len=0
  Inst 8383:   nop     len=0
  Inst 8384:   nop     len=0
  Inst 8385:   nop     len=0
  Inst 8386:   nop     len=0
  Inst 8387:   nop     len=0
  Inst 8388:   nop     len=0
  Inst 8389:   nop     len=0
  Inst 8390:   nop     len=0
  Inst 8391:   nop     len=0
  Inst 8392:   nop     len=0
  Inst 8393:   nop     len=0
  Inst 8394:   nop     len=0
  Inst 8395:   nop     len=0
  Inst 8396:   nop     len=0
  Inst 8397:   nop     len=0
  Inst 8398:   nop     len=0
  Inst 8399:   nop     len=0
  Inst 8400:   nop     len=0
  Inst 8401:   nop     len=0
  Inst 8402:   nop     len=0
  Inst 8403:   nop     len=0
  Inst 8404:   nop     len=0
  Inst 8405:   nop     len=0
  Inst 8406:   jmp     label376
Block 374:
  (original IR block: block189)
  (successor: Block 375)
  (instruction range: 8407 .. 8436)
  Inst 8407:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8408:   movq    152(%rsi), %r13
  Inst 8409:   movq    %r14, %r15
  Inst 8410:   addq    $-1, %r15
  Inst 8411:   movq    %r14, %rdx
  Inst 8412:   shlq    $3, %rdx
  Inst 8413:   movq    %r13, %r12
  Inst 8414:   addq    %rdx, %r12
  Inst 8415:   movq    %r13, %rdi
  Inst 8416:   addq    $-24, %rdi
  Inst 8417:   movq    %r13, %rsi
  Inst 8418:   load_ext_name %Memmove+0, %rax
  Inst 8419:   movq    %rbx, rsp(512 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S63, S64, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8420:   call    *%rax
  Inst 8421:   movq    rsp(512 + virtual offset), %rbx
  Inst 8422:   load_ext_name u1:1+0, %rsi
  Inst 8423:   movl    $1, %edi
  Inst 8424:   movq    %rdi, -8(%r13,%r14,8)
  Inst 8425:   movl    $1, %edi
  Inst 8426:   movq    %rdi, -16(%r13,%r14,8)
  Inst 8427:   movq    %rsi, -24(%r13,%r14,8)
  Inst 8428:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8429:   movq    %r12, 152(%rsi)
  Inst 8430:   movq    %rbx, %rdi
  Inst 8431:   movq    %r15, %rsi
  Inst 8432:   load_ext_name u0:3+0, %rax
  Inst 8433:   movq    %rdi, rsp(496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8434:   call    *%rax
  Inst 8435:   jmp     label375
Block 375:
  (successor: Block 376)
  (instruction range: 8436 .. 8484)
  Inst 8436:   movq    %rax, rsp(496 + virtual offset)
  Inst 8437:   nop     len=0
  Inst 8438:   nop     len=0
  Inst 8439:   nop     len=0
  Inst 8440:   nop     len=0
  Inst 8441:   nop     len=0
  Inst 8442:   nop     len=0
  Inst 8443:   nop     len=0
  Inst 8444:   nop     len=0
  Inst 8445:   nop     len=0
  Inst 8446:   nop     len=0
  Inst 8447:   nop     len=0
  Inst 8448:   nop     len=0
  Inst 8449:   nop     len=0
  Inst 8450:   nop     len=0
  Inst 8451:   nop     len=0
  Inst 8452:   nop     len=0
  Inst 8453:   nop     len=0
  Inst 8454:   nop     len=0
  Inst 8455:   nop     len=0
  Inst 8456:   nop     len=0
  Inst 8457:   nop     len=0
  Inst 8458:   nop     len=0
  Inst 8459:   nop     len=0
  Inst 8460:   nop     len=0
  Inst 8461:   nop     len=0
  Inst 8462:   nop     len=0
  Inst 8463:   nop     len=0
  Inst 8464:   nop     len=0
  Inst 8465:   nop     len=0
  Inst 8466:   nop     len=0
  Inst 8467:   nop     len=0
  Inst 8468:   nop     len=0
  Inst 8469:   nop     len=0
  Inst 8470:   nop     len=0
  Inst 8471:   nop     len=0
  Inst 8472:   nop     len=0
  Inst 8473:   nop     len=0
  Inst 8474:   nop     len=0
  Inst 8475:   nop     len=0
  Inst 8476:   nop     len=0
  Inst 8477:   nop     len=0
  Inst 8478:   nop     len=0
  Inst 8479:   nop     len=0
  Inst 8480:   nop     len=0
  Inst 8481:   nop     len=0
  Inst 8482:   nop     len=0
  Inst 8483:   jmp     label376
Block 376:
  (original IR block: block188)
  (successor: Block 377)
  (successor: Block 378)
  (instruction range: 8484 .. 8495)
  Inst 8484:   movq    rsp(2064 + virtual offset), %rsi
  Inst 8485:   movq    8(%rsi), %rdi
  Inst 8486:   movq    rsp(2048 + virtual offset), %rsi
  Inst 8487:   load_ext_name u0:2+0, %rax
  Inst 8488:   movq    %rsi, rsp(512 + virtual offset)
  Inst 8489:   movq    %rdi, rsp(528 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8490:   call    *%rax
  Inst 8491:   movq    %rax, %rbx
  Inst 8492:   movq    %rdx, %r14
  Inst 8493:   testq   %r14, %r14
  Inst 8494:   jz      label377; j label378
Block 377:
  (successor: Block 380)
  (instruction range: 8495 .. 8544)
  Inst 8495:   movq    %rbx, rsp(1000 + virtual offset)
  Inst 8496:   nop     len=0
  Inst 8497:   nop     len=0
  Inst 8498:   nop     len=0
  Inst 8499:   nop     len=0
  Inst 8500:   nop     len=0
  Inst 8501:   nop     len=0
  Inst 8502:   nop     len=0
  Inst 8503:   nop     len=0
  Inst 8504:   nop     len=0
  Inst 8505:   nop     len=0
  Inst 8506:   nop     len=0
  Inst 8507:   nop     len=0
  Inst 8508:   nop     len=0
  Inst 8509:   nop     len=0
  Inst 8510:   nop     len=0
  Inst 8511:   nop     len=0
  Inst 8512:   nop     len=0
  Inst 8513:   nop     len=0
  Inst 8514:   nop     len=0
  Inst 8515:   nop     len=0
  Inst 8516:   nop     len=0
  Inst 8517:   nop     len=0
  Inst 8518:   nop     len=0
  Inst 8519:   nop     len=0
  Inst 8520:   nop     len=0
  Inst 8521:   nop     len=0
  Inst 8522:   nop     len=0
  Inst 8523:   nop     len=0
  Inst 8524:   nop     len=0
  Inst 8525:   nop     len=0
  Inst 8526:   nop     len=0
  Inst 8527:   nop     len=0
  Inst 8528:   nop     len=0
  Inst 8529:   nop     len=0
  Inst 8530:   nop     len=0
  Inst 8531:   nop     len=0
  Inst 8532:   nop     len=0
  Inst 8533:   nop     len=0
  Inst 8534:   nop     len=0
  Inst 8535:   nop     len=0
  Inst 8536:   nop     len=0
  Inst 8537:   nop     len=0
  Inst 8538:   nop     len=0
  Inst 8539:   nop     len=0
  Inst 8540:   nop     len=0
  Inst 8541:   nop     len=0
  Inst 8542:   nop     len=0
  Inst 8543:   jmp     label380
Block 378:
  (original IR block: block191)
  (successor: Block 379)
  (instruction range: 8544 .. 8573)
  Inst 8544:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8545:   movq    152(%rsi), %r13
  Inst 8546:   movq    %r14, %r15
  Inst 8547:   addq    $-1, %r15
  Inst 8548:   movq    %r14, %rdx
  Inst 8549:   shlq    $3, %rdx
  Inst 8550:   movq    %r13, %r12
  Inst 8551:   addq    %rdx, %r12
  Inst 8552:   movq    %r13, %rdi
  Inst 8553:   addq    $-24, %rdi
  Inst 8554:   movq    %r13, %rsi
  Inst 8555:   load_ext_name %Memmove+0, %rax
  Inst 8556:   movq    %rbx, rsp(512 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8557:   call    *%rax
  Inst 8558:   movq    rsp(512 + virtual offset), %rbx
  Inst 8559:   load_ext_name u1:1+0, %rsi
  Inst 8560:   movl    $1, %edi
  Inst 8561:   movq    %rdi, -8(%r13,%r14,8)
  Inst 8562:   movl    $1, %edi
  Inst 8563:   movq    %rdi, -16(%r13,%r14,8)
  Inst 8564:   movq    %rsi, -24(%r13,%r14,8)
  Inst 8565:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8566:   movq    %r12, 152(%rsi)
  Inst 8567:   movq    %rbx, %rdi
  Inst 8568:   movq    %r15, %rsi
  Inst 8569:   load_ext_name u0:3+0, %rax
  Inst 8570:   movq    %rdi, rsp(512 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8571:   call    *%rax
  Inst 8572:   jmp     label379
Block 379:
  (successor: Block 380)
  (instruction range: 8573 .. 8622)
  Inst 8573:   movq    %rax, rsp(1000 + virtual offset)
  Inst 8574:   nop     len=0
  Inst 8575:   nop     len=0
  Inst 8576:   nop     len=0
  Inst 8577:   nop     len=0
  Inst 8578:   nop     len=0
  Inst 8579:   nop     len=0
  Inst 8580:   nop     len=0
  Inst 8581:   nop     len=0
  Inst 8582:   nop     len=0
  Inst 8583:   nop     len=0
  Inst 8584:   nop     len=0
  Inst 8585:   nop     len=0
  Inst 8586:   nop     len=0
  Inst 8587:   nop     len=0
  Inst 8588:   nop     len=0
  Inst 8589:   nop     len=0
  Inst 8590:   nop     len=0
  Inst 8591:   nop     len=0
  Inst 8592:   nop     len=0
  Inst 8593:   nop     len=0
  Inst 8594:   nop     len=0
  Inst 8595:   nop     len=0
  Inst 8596:   nop     len=0
  Inst 8597:   nop     len=0
  Inst 8598:   nop     len=0
  Inst 8599:   nop     len=0
  Inst 8600:   nop     len=0
  Inst 8601:   nop     len=0
  Inst 8602:   nop     len=0
  Inst 8603:   nop     len=0
  Inst 8604:   nop     len=0
  Inst 8605:   nop     len=0
  Inst 8606:   nop     len=0
  Inst 8607:   nop     len=0
  Inst 8608:   nop     len=0
  Inst 8609:   nop     len=0
  Inst 8610:   nop     len=0
  Inst 8611:   nop     len=0
  Inst 8612:   nop     len=0
  Inst 8613:   nop     len=0
  Inst 8614:   nop     len=0
  Inst 8615:   nop     len=0
  Inst 8616:   nop     len=0
  Inst 8617:   nop     len=0
  Inst 8618:   nop     len=0
  Inst 8619:   nop     len=0
  Inst 8620:   nop     len=0
  Inst 8621:   jmp     label380
Block 380:
  (original IR block: block190)
  (successor: Block 381)
  (successor: Block 382)
  (instruction range: 8622 .. 8633)
  Inst 8622:   movq    rsp(2064 + virtual offset), %rsi
  Inst 8623:   movq    8(%rsi), %rdi
  Inst 8624:   movq    rsp(2048 + virtual offset), %rsi
  Inst 8625:   load_ext_name u0:2+0, %rax
  Inst 8626:   movq    %rsi, rsp(512 + virtual offset)
  Inst 8627:   movq    %rdi, rsp(528 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8628:   call    *%rax
  Inst 8629:   movq    %rax, %r15
  Inst 8630:   movq    %rdx, %r14
  Inst 8631:   testq   %r14, %r14
  Inst 8632:   jz      label381; j label382
Block 381:
  (successor: Block 384)
  (instruction range: 8633 .. 8682)
  Inst 8633:   movq    %r15, rsp(512 + virtual offset)
  Inst 8634:   nop     len=0
  Inst 8635:   nop     len=0
  Inst 8636:   nop     len=0
  Inst 8637:   nop     len=0
  Inst 8638:   nop     len=0
  Inst 8639:   nop     len=0
  Inst 8640:   nop     len=0
  Inst 8641:   nop     len=0
  Inst 8642:   nop     len=0
  Inst 8643:   nop     len=0
  Inst 8644:   nop     len=0
  Inst 8645:   nop     len=0
  Inst 8646:   nop     len=0
  Inst 8647:   nop     len=0
  Inst 8648:   nop     len=0
  Inst 8649:   nop     len=0
  Inst 8650:   nop     len=0
  Inst 8651:   nop     len=0
  Inst 8652:   nop     len=0
  Inst 8653:   nop     len=0
  Inst 8654:   nop     len=0
  Inst 8655:   nop     len=0
  Inst 8656:   nop     len=0
  Inst 8657:   nop     len=0
  Inst 8658:   nop     len=0
  Inst 8659:   nop     len=0
  Inst 8660:   nop     len=0
  Inst 8661:   nop     len=0
  Inst 8662:   nop     len=0
  Inst 8663:   nop     len=0
  Inst 8664:   nop     len=0
  Inst 8665:   nop     len=0
  Inst 8666:   nop     len=0
  Inst 8667:   nop     len=0
  Inst 8668:   nop     len=0
  Inst 8669:   nop     len=0
  Inst 8670:   nop     len=0
  Inst 8671:   nop     len=0
  Inst 8672:   nop     len=0
  Inst 8673:   nop     len=0
  Inst 8674:   nop     len=0
  Inst 8675:   nop     len=0
  Inst 8676:   nop     len=0
  Inst 8677:   nop     len=0
  Inst 8678:   nop     len=0
  Inst 8679:   nop     len=0
  Inst 8680:   nop     len=0
  Inst 8681:   jmp     label384
Block 382:
  (original IR block: block193)
  (successor: Block 383)
  (instruction range: 8682 .. 8711)
  Inst 8682:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8683:   movq    152(%rsi), %r13
  Inst 8684:   movq    %r14, %rbx
  Inst 8685:   addq    $-1, %rbx
  Inst 8686:   movq    %r14, %rdx
  Inst 8687:   shlq    $3, %rdx
  Inst 8688:   movq    %r13, %r12
  Inst 8689:   addq    %rdx, %r12
  Inst 8690:   movq    %r13, %rdi
  Inst 8691:   addq    $-24, %rdi
  Inst 8692:   movq    %r13, %rsi
  Inst 8693:   load_ext_name %Memmove+0, %rax
  Inst 8694:   movq    %r15, rsp(528 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S65, S66, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8695:   call    *%rax
  Inst 8696:   movq    rsp(528 + virtual offset), %r15
  Inst 8697:   load_ext_name u1:1+0, %rsi
  Inst 8698:   movl    $1, %edi
  Inst 8699:   movq    %rdi, -8(%r13,%r14,8)
  Inst 8700:   movl    $1, %edi
  Inst 8701:   movq    %rdi, -16(%r13,%r14,8)
  Inst 8702:   movq    %rsi, -24(%r13,%r14,8)
  Inst 8703:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8704:   movq    %r12, 152(%rsi)
  Inst 8705:   movq    %r15, %rdi
  Inst 8706:   movq    %rbx, %rsi
  Inst 8707:   load_ext_name u0:3+0, %rax
  Inst 8708:   movq    %rdi, rsp(512 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8709:   call    *%rax
  Inst 8710:   jmp     label383
Block 383:
  (successor: Block 384)
  (instruction range: 8711 .. 8760)
  Inst 8711:   movq    %rax, rsp(512 + virtual offset)
  Inst 8712:   nop     len=0
  Inst 8713:   nop     len=0
  Inst 8714:   nop     len=0
  Inst 8715:   nop     len=0
  Inst 8716:   nop     len=0
  Inst 8717:   nop     len=0
  Inst 8718:   nop     len=0
  Inst 8719:   nop     len=0
  Inst 8720:   nop     len=0
  Inst 8721:   nop     len=0
  Inst 8722:   nop     len=0
  Inst 8723:   nop     len=0
  Inst 8724:   nop     len=0
  Inst 8725:   nop     len=0
  Inst 8726:   nop     len=0
  Inst 8727:   nop     len=0
  Inst 8728:   nop     len=0
  Inst 8729:   nop     len=0
  Inst 8730:   nop     len=0
  Inst 8731:   nop     len=0
  Inst 8732:   nop     len=0
  Inst 8733:   nop     len=0
  Inst 8734:   nop     len=0
  Inst 8735:   nop     len=0
  Inst 8736:   nop     len=0
  Inst 8737:   nop     len=0
  Inst 8738:   nop     len=0
  Inst 8739:   nop     len=0
  Inst 8740:   nop     len=0
  Inst 8741:   nop     len=0
  Inst 8742:   nop     len=0
  Inst 8743:   nop     len=0
  Inst 8744:   nop     len=0
  Inst 8745:   nop     len=0
  Inst 8746:   nop     len=0
  Inst 8747:   nop     len=0
  Inst 8748:   nop     len=0
  Inst 8749:   nop     len=0
  Inst 8750:   nop     len=0
  Inst 8751:   nop     len=0
  Inst 8752:   nop     len=0
  Inst 8753:   nop     len=0
  Inst 8754:   nop     len=0
  Inst 8755:   nop     len=0
  Inst 8756:   nop     len=0
  Inst 8757:   nop     len=0
  Inst 8758:   nop     len=0
  Inst 8759:   jmp     label384
Block 384:
  (original IR block: block192)
  (successor: Block 385)
  (successor: Block 386)
  (instruction range: 8760 .. 8771)
  Inst 8760:   movq    rsp(2064 + virtual offset), %rsi
  Inst 8761:   movq    8(%rsi), %rdi
  Inst 8762:   movq    rsp(2048 + virtual offset), %rsi
  Inst 8763:   load_ext_name u0:2+0, %rax
  Inst 8764:   movq    %rsi, rsp(528 + virtual offset)
  Inst 8765:   movq    %rdi, rsp(544 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8766:   call    *%rax
  Inst 8767:   movq    %rax, %rbx
  Inst 8768:   movq    %rdx, %r14
  Inst 8769:   testq   %r14, %r14
  Inst 8770:   jz      label385; j label386
Block 385:
  (successor: Block 388)
  (instruction range: 8771 .. 8821)
  Inst 8771:   movq    %rbx, rsp(1016 + virtual offset)
  Inst 8772:   nop     len=0
  Inst 8773:   nop     len=0
  Inst 8774:   nop     len=0
  Inst 8775:   nop     len=0
  Inst 8776:   nop     len=0
  Inst 8777:   nop     len=0
  Inst 8778:   nop     len=0
  Inst 8779:   nop     len=0
  Inst 8780:   nop     len=0
  Inst 8781:   nop     len=0
  Inst 8782:   nop     len=0
  Inst 8783:   nop     len=0
  Inst 8784:   nop     len=0
  Inst 8785:   nop     len=0
  Inst 8786:   nop     len=0
  Inst 8787:   nop     len=0
  Inst 8788:   nop     len=0
  Inst 8789:   nop     len=0
  Inst 8790:   nop     len=0
  Inst 8791:   nop     len=0
  Inst 8792:   nop     len=0
  Inst 8793:   nop     len=0
  Inst 8794:   nop     len=0
  Inst 8795:   nop     len=0
  Inst 8796:   nop     len=0
  Inst 8797:   nop     len=0
  Inst 8798:   nop     len=0
  Inst 8799:   nop     len=0
  Inst 8800:   nop     len=0
  Inst 8801:   nop     len=0
  Inst 8802:   nop     len=0
  Inst 8803:   nop     len=0
  Inst 8804:   nop     len=0
  Inst 8805:   nop     len=0
  Inst 8806:   nop     len=0
  Inst 8807:   nop     len=0
  Inst 8808:   nop     len=0
  Inst 8809:   nop     len=0
  Inst 8810:   nop     len=0
  Inst 8811:   nop     len=0
  Inst 8812:   nop     len=0
  Inst 8813:   nop     len=0
  Inst 8814:   nop     len=0
  Inst 8815:   nop     len=0
  Inst 8816:   nop     len=0
  Inst 8817:   nop     len=0
  Inst 8818:   nop     len=0
  Inst 8819:   nop     len=0
  Inst 8820:   jmp     label388
Block 386:
  (original IR block: block195)
  (successor: Block 387)
  (instruction range: 8821 .. 8850)
  Inst 8821:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8822:   movq    152(%rsi), %r13
  Inst 8823:   movq    %r14, %r15
  Inst 8824:   addq    $-1, %r15
  Inst 8825:   movq    %r14, %rdx
  Inst 8826:   shlq    $3, %rdx
  Inst 8827:   movq    %r13, %r12
  Inst 8828:   addq    %rdx, %r12
  Inst 8829:   movq    %r13, %rdi
  Inst 8830:   addq    $-24, %rdi
  Inst 8831:   movq    %r13, %rsi
  Inst 8832:   load_ext_name %Memmove+0, %rax
  Inst 8833:   movq    %rbx, rsp(528 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8834:   call    *%rax
  Inst 8835:   movq    rsp(528 + virtual offset), %rbx
  Inst 8836:   load_ext_name u1:1+0, %rsi
  Inst 8837:   movl    $1, %edi
  Inst 8838:   movq    %rdi, -8(%r13,%r14,8)
  Inst 8839:   movl    $1, %edi
  Inst 8840:   movq    %rdi, -16(%r13,%r14,8)
  Inst 8841:   movq    %rsi, -24(%r13,%r14,8)
  Inst 8842:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8843:   movq    %r12, 152(%rsi)
  Inst 8844:   movq    %rbx, %rdi
  Inst 8845:   movq    %r15, %rsi
  Inst 8846:   load_ext_name u0:3+0, %rax
  Inst 8847:   movq    %rdi, rsp(528 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8848:   call    *%rax
  Inst 8849:   jmp     label387
Block 387:
  (successor: Block 388)
  (instruction range: 8850 .. 8900)
  Inst 8850:   movq    %rax, rsp(1016 + virtual offset)
  Inst 8851:   nop     len=0
  Inst 8852:   nop     len=0
  Inst 8853:   nop     len=0
  Inst 8854:   nop     len=0
  Inst 8855:   nop     len=0
  Inst 8856:   nop     len=0
  Inst 8857:   nop     len=0
  Inst 8858:   nop     len=0
  Inst 8859:   nop     len=0
  Inst 8860:   nop     len=0
  Inst 8861:   nop     len=0
  Inst 8862:   nop     len=0
  Inst 8863:   nop     len=0
  Inst 8864:   nop     len=0
  Inst 8865:   nop     len=0
  Inst 8866:   nop     len=0
  Inst 8867:   nop     len=0
  Inst 8868:   nop     len=0
  Inst 8869:   nop     len=0
  Inst 8870:   nop     len=0
  Inst 8871:   nop     len=0
  Inst 8872:   nop     len=0
  Inst 8873:   nop     len=0
  Inst 8874:   nop     len=0
  Inst 8875:   nop     len=0
  Inst 8876:   nop     len=0
  Inst 8877:   nop     len=0
  Inst 8878:   nop     len=0
  Inst 8879:   nop     len=0
  Inst 8880:   nop     len=0
  Inst 8881:   nop     len=0
  Inst 8882:   nop     len=0
  Inst 8883:   nop     len=0
  Inst 8884:   nop     len=0
  Inst 8885:   nop     len=0
  Inst 8886:   nop     len=0
  Inst 8887:   nop     len=0
  Inst 8888:   nop     len=0
  Inst 8889:   nop     len=0
  Inst 8890:   nop     len=0
  Inst 8891:   nop     len=0
  Inst 8892:   nop     len=0
  Inst 8893:   nop     len=0
  Inst 8894:   nop     len=0
  Inst 8895:   nop     len=0
  Inst 8896:   nop     len=0
  Inst 8897:   nop     len=0
  Inst 8898:   nop     len=0
  Inst 8899:   jmp     label388
Block 388:
  (original IR block: block194)
  (successor: Block 389)
  (successor: Block 390)
  (instruction range: 8900 .. 8911)
  Inst 8900:   movq    rsp(2064 + virtual offset), %rsi
  Inst 8901:   movq    8(%rsi), %rdi
  Inst 8902:   movq    rsp(2048 + virtual offset), %rsi
  Inst 8903:   load_ext_name u0:2+0, %rax
  Inst 8904:   movq    %rsi, rsp(528 + virtual offset)
  Inst 8905:   movq    %rdi, rsp(544 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8906:   call    *%rax
  Inst 8907:   movq    %rax, %rbx
  Inst 8908:   movq    %rdx, %r14
  Inst 8909:   testq   %r14, %r14
  Inst 8910:   jz      label389; j label390
Block 389:
  (successor: Block 392)
  (instruction range: 8911 .. 8961)
  Inst 8911:   movq    %rbx, rsp(528 + virtual offset)
  Inst 8912:   nop     len=0
  Inst 8913:   nop     len=0
  Inst 8914:   nop     len=0
  Inst 8915:   nop     len=0
  Inst 8916:   nop     len=0
  Inst 8917:   nop     len=0
  Inst 8918:   nop     len=0
  Inst 8919:   nop     len=0
  Inst 8920:   nop     len=0
  Inst 8921:   nop     len=0
  Inst 8922:   nop     len=0
  Inst 8923:   nop     len=0
  Inst 8924:   nop     len=0
  Inst 8925:   nop     len=0
  Inst 8926:   nop     len=0
  Inst 8927:   nop     len=0
  Inst 8928:   nop     len=0
  Inst 8929:   nop     len=0
  Inst 8930:   nop     len=0
  Inst 8931:   nop     len=0
  Inst 8932:   nop     len=0
  Inst 8933:   nop     len=0
  Inst 8934:   nop     len=0
  Inst 8935:   nop     len=0
  Inst 8936:   nop     len=0
  Inst 8937:   nop     len=0
  Inst 8938:   nop     len=0
  Inst 8939:   nop     len=0
  Inst 8940:   nop     len=0
  Inst 8941:   nop     len=0
  Inst 8942:   nop     len=0
  Inst 8943:   nop     len=0
  Inst 8944:   nop     len=0
  Inst 8945:   nop     len=0
  Inst 8946:   nop     len=0
  Inst 8947:   nop     len=0
  Inst 8948:   nop     len=0
  Inst 8949:   nop     len=0
  Inst 8950:   nop     len=0
  Inst 8951:   nop     len=0
  Inst 8952:   nop     len=0
  Inst 8953:   nop     len=0
  Inst 8954:   nop     len=0
  Inst 8955:   nop     len=0
  Inst 8956:   nop     len=0
  Inst 8957:   nop     len=0
  Inst 8958:   nop     len=0
  Inst 8959:   nop     len=0
  Inst 8960:   jmp     label392
Block 390:
  (original IR block: block197)
  (successor: Block 391)
  (instruction range: 8961 .. 8990)
  Inst 8961:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8962:   movq    152(%rsi), %r13
  Inst 8963:   movq    %r14, %r15
  Inst 8964:   addq    $-1, %r15
  Inst 8965:   movq    %r14, %rdx
  Inst 8966:   shlq    $3, %rdx
  Inst 8967:   movq    %r13, %r12
  Inst 8968:   addq    %rdx, %r12
  Inst 8969:   movq    %r13, %rdi
  Inst 8970:   addq    $-24, %rdi
  Inst 8971:   movq    %r13, %rsi
  Inst 8972:   load_ext_name %Memmove+0, %rax
  Inst 8973:   movq    %rbx, rsp(544 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S67, S68, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8974:   call    *%rax
  Inst 8975:   movq    rsp(544 + virtual offset), %rbx
  Inst 8976:   load_ext_name u1:1+0, %rsi
  Inst 8977:   movl    $1, %edi
  Inst 8978:   movq    %rdi, -8(%r13,%r14,8)
  Inst 8979:   movl    $1, %edi
  Inst 8980:   movq    %rdi, -16(%r13,%r14,8)
  Inst 8981:   movq    %rsi, -24(%r13,%r14,8)
  Inst 8982:   movq    rsp(2072 + virtual offset), %rsi
  Inst 8983:   movq    %r12, 152(%rsi)
  Inst 8984:   movq    %rbx, %rdi
  Inst 8985:   movq    %r15, %rsi
  Inst 8986:   load_ext_name u0:3+0, %rax
  Inst 8987:   movq    %rdi, rsp(528 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 8988:   call    *%rax
  Inst 8989:   jmp     label391
Block 391:
  (successor: Block 392)
  (instruction range: 8990 .. 9040)
  Inst 8990:   movq    %rax, rsp(528 + virtual offset)
  Inst 8991:   nop     len=0
  Inst 8992:   nop     len=0
  Inst 8993:   nop     len=0
  Inst 8994:   nop     len=0
  Inst 8995:   nop     len=0
  Inst 8996:   nop     len=0
  Inst 8997:   nop     len=0
  Inst 8998:   nop     len=0
  Inst 8999:   nop     len=0
  Inst 9000:   nop     len=0
  Inst 9001:   nop     len=0
  Inst 9002:   nop     len=0
  Inst 9003:   nop     len=0
  Inst 9004:   nop     len=0
  Inst 9005:   nop     len=0
  Inst 9006:   nop     len=0
  Inst 9007:   nop     len=0
  Inst 9008:   nop     len=0
  Inst 9009:   nop     len=0
  Inst 9010:   nop     len=0
  Inst 9011:   nop     len=0
  Inst 9012:   nop     len=0
  Inst 9013:   nop     len=0
  Inst 9014:   nop     len=0
  Inst 9015:   nop     len=0
  Inst 9016:   nop     len=0
  Inst 9017:   nop     len=0
  Inst 9018:   nop     len=0
  Inst 9019:   nop     len=0
  Inst 9020:   nop     len=0
  Inst 9021:   nop     len=0
  Inst 9022:   nop     len=0
  Inst 9023:   nop     len=0
  Inst 9024:   nop     len=0
  Inst 9025:   nop     len=0
  Inst 9026:   nop     len=0
  Inst 9027:   nop     len=0
  Inst 9028:   nop     len=0
  Inst 9029:   nop     len=0
  Inst 9030:   nop     len=0
  Inst 9031:   nop     len=0
  Inst 9032:   nop     len=0
  Inst 9033:   nop     len=0
  Inst 9034:   nop     len=0
  Inst 9035:   nop     len=0
  Inst 9036:   nop     len=0
  Inst 9037:   nop     len=0
  Inst 9038:   nop     len=0
  Inst 9039:   jmp     label392
Block 392:
  (original IR block: block196)
  (successor: Block 393)
  (successor: Block 394)
  (instruction range: 9040 .. 9051)
  Inst 9040:   movq    rsp(2064 + virtual offset), %rsi
  Inst 9041:   movq    8(%rsi), %rdi
  Inst 9042:   movq    rsp(2048 + virtual offset), %rsi
  Inst 9043:   load_ext_name u0:2+0, %rax
  Inst 9044:   movq    %rsi, rsp(544 + virtual offset)
  Inst 9045:   movq    %rdi, rsp(560 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9046:   call    *%rax
  Inst 9047:   movq    %rax, %r15
  Inst 9048:   movq    %rdx, %r14
  Inst 9049:   testq   %r14, %r14
  Inst 9050:   jz      label393; j label394
Block 393:
  (successor: Block 396)
  (instruction range: 9051 .. 9102)
  Inst 9051:   movq    %r15, rsp(1032 + virtual offset)
  Inst 9052:   nop     len=0
  Inst 9053:   nop     len=0
  Inst 9054:   nop     len=0
  Inst 9055:   nop     len=0
  Inst 9056:   nop     len=0
  Inst 9057:   nop     len=0
  Inst 9058:   nop     len=0
  Inst 9059:   nop     len=0
  Inst 9060:   nop     len=0
  Inst 9061:   nop     len=0
  Inst 9062:   nop     len=0
  Inst 9063:   nop     len=0
  Inst 9064:   nop     len=0
  Inst 9065:   nop     len=0
  Inst 9066:   nop     len=0
  Inst 9067:   nop     len=0
  Inst 9068:   nop     len=0
  Inst 9069:   nop     len=0
  Inst 9070:   nop     len=0
  Inst 9071:   nop     len=0
  Inst 9072:   nop     len=0
  Inst 9073:   nop     len=0
  Inst 9074:   nop     len=0
  Inst 9075:   nop     len=0
  Inst 9076:   nop     len=0
  Inst 9077:   nop     len=0
  Inst 9078:   nop     len=0
  Inst 9079:   nop     len=0
  Inst 9080:   nop     len=0
  Inst 9081:   nop     len=0
  Inst 9082:   nop     len=0
  Inst 9083:   nop     len=0
  Inst 9084:   nop     len=0
  Inst 9085:   nop     len=0
  Inst 9086:   nop     len=0
  Inst 9087:   nop     len=0
  Inst 9088:   nop     len=0
  Inst 9089:   nop     len=0
  Inst 9090:   nop     len=0
  Inst 9091:   nop     len=0
  Inst 9092:   nop     len=0
  Inst 9093:   nop     len=0
  Inst 9094:   nop     len=0
  Inst 9095:   nop     len=0
  Inst 9096:   nop     len=0
  Inst 9097:   nop     len=0
  Inst 9098:   nop     len=0
  Inst 9099:   nop     len=0
  Inst 9100:   nop     len=0
  Inst 9101:   jmp     label396
Block 394:
  (original IR block: block199)
  (successor: Block 395)
  (instruction range: 9102 .. 9131)
  Inst 9102:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9103:   movq    152(%rsi), %r13
  Inst 9104:   movq    %r14, %rbx
  Inst 9105:   addq    $-1, %rbx
  Inst 9106:   movq    %r14, %rdx
  Inst 9107:   shlq    $3, %rdx
  Inst 9108:   movq    %r13, %r12
  Inst 9109:   addq    %rdx, %r12
  Inst 9110:   movq    %r13, %rdi
  Inst 9111:   addq    $-24, %rdi
  Inst 9112:   movq    %r13, %rsi
  Inst 9113:   load_ext_name %Memmove+0, %rax
  Inst 9114:   movq    %r15, rsp(544 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9115:   call    *%rax
  Inst 9116:   movq    rsp(544 + virtual offset), %r15
  Inst 9117:   load_ext_name u1:1+0, %rsi
  Inst 9118:   movl    $1, %edi
  Inst 9119:   movq    %rdi, -8(%r13,%r14,8)
  Inst 9120:   movl    $1, %edi
  Inst 9121:   movq    %rdi, -16(%r13,%r14,8)
  Inst 9122:   movq    %rsi, -24(%r13,%r14,8)
  Inst 9123:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9124:   movq    %r12, 152(%rsi)
  Inst 9125:   movq    %r15, %rdi
  Inst 9126:   movq    %rbx, %rsi
  Inst 9127:   load_ext_name u0:3+0, %rax
  Inst 9128:   movq    %rdi, rsp(544 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9129:   call    *%rax
  Inst 9130:   jmp     label395
Block 395:
  (successor: Block 396)
  (instruction range: 9131 .. 9182)
  Inst 9131:   movq    %rax, rsp(1032 + virtual offset)
  Inst 9132:   nop     len=0
  Inst 9133:   nop     len=0
  Inst 9134:   nop     len=0
  Inst 9135:   nop     len=0
  Inst 9136:   nop     len=0
  Inst 9137:   nop     len=0
  Inst 9138:   nop     len=0
  Inst 9139:   nop     len=0
  Inst 9140:   nop     len=0
  Inst 9141:   nop     len=0
  Inst 9142:   nop     len=0
  Inst 9143:   nop     len=0
  Inst 9144:   nop     len=0
  Inst 9145:   nop     len=0
  Inst 9146:   nop     len=0
  Inst 9147:   nop     len=0
  Inst 9148:   nop     len=0
  Inst 9149:   nop     len=0
  Inst 9150:   nop     len=0
  Inst 9151:   nop     len=0
  Inst 9152:   nop     len=0
  Inst 9153:   nop     len=0
  Inst 9154:   nop     len=0
  Inst 9155:   nop     len=0
  Inst 9156:   nop     len=0
  Inst 9157:   nop     len=0
  Inst 9158:   nop     len=0
  Inst 9159:   nop     len=0
  Inst 9160:   nop     len=0
  Inst 9161:   nop     len=0
  Inst 9162:   nop     len=0
  Inst 9163:   nop     len=0
  Inst 9164:   nop     len=0
  Inst 9165:   nop     len=0
  Inst 9166:   nop     len=0
  Inst 9167:   nop     len=0
  Inst 9168:   nop     len=0
  Inst 9169:   nop     len=0
  Inst 9170:   nop     len=0
  Inst 9171:   nop     len=0
  Inst 9172:   nop     len=0
  Inst 9173:   nop     len=0
  Inst 9174:   nop     len=0
  Inst 9175:   nop     len=0
  Inst 9176:   nop     len=0
  Inst 9177:   nop     len=0
  Inst 9178:   nop     len=0
  Inst 9179:   nop     len=0
  Inst 9180:   nop     len=0
  Inst 9181:   jmp     label396
Block 396:
  (original IR block: block198)
  (successor: Block 397)
  (successor: Block 398)
  (instruction range: 9182 .. 9193)
  Inst 9182:   movq    rsp(2064 + virtual offset), %rsi
  Inst 9183:   movq    8(%rsi), %rdi
  Inst 9184:   movq    rsp(2048 + virtual offset), %rsi
  Inst 9185:   load_ext_name u0:2+0, %rax
  Inst 9186:   movq    %rsi, rsp(544 + virtual offset)
  Inst 9187:   movq    %rdi, rsp(560 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9188:   call    *%rax
  Inst 9189:   movq    %rax, %rbx
  Inst 9190:   movq    %rdx, %r14
  Inst 9191:   testq   %r14, %r14
  Inst 9192:   jz      label397; j label398
Block 397:
  (successor: Block 400)
  (instruction range: 9193 .. 9244)
  Inst 9193:   movq    %rbx, rsp(544 + virtual offset)
  Inst 9194:   nop     len=0
  Inst 9195:   nop     len=0
  Inst 9196:   nop     len=0
  Inst 9197:   nop     len=0
  Inst 9198:   nop     len=0
  Inst 9199:   nop     len=0
  Inst 9200:   nop     len=0
  Inst 9201:   nop     len=0
  Inst 9202:   nop     len=0
  Inst 9203:   nop     len=0
  Inst 9204:   nop     len=0
  Inst 9205:   nop     len=0
  Inst 9206:   nop     len=0
  Inst 9207:   nop     len=0
  Inst 9208:   nop     len=0
  Inst 9209:   nop     len=0
  Inst 9210:   nop     len=0
  Inst 9211:   nop     len=0
  Inst 9212:   nop     len=0
  Inst 9213:   nop     len=0
  Inst 9214:   nop     len=0
  Inst 9215:   nop     len=0
  Inst 9216:   nop     len=0
  Inst 9217:   nop     len=0
  Inst 9218:   nop     len=0
  Inst 9219:   nop     len=0
  Inst 9220:   nop     len=0
  Inst 9221:   nop     len=0
  Inst 9222:   nop     len=0
  Inst 9223:   nop     len=0
  Inst 9224:   nop     len=0
  Inst 9225:   nop     len=0
  Inst 9226:   nop     len=0
  Inst 9227:   nop     len=0
  Inst 9228:   nop     len=0
  Inst 9229:   nop     len=0
  Inst 9230:   nop     len=0
  Inst 9231:   nop     len=0
  Inst 9232:   nop     len=0
  Inst 9233:   nop     len=0
  Inst 9234:   nop     len=0
  Inst 9235:   nop     len=0
  Inst 9236:   nop     len=0
  Inst 9237:   nop     len=0
  Inst 9238:   nop     len=0
  Inst 9239:   nop     len=0
  Inst 9240:   nop     len=0
  Inst 9241:   nop     len=0
  Inst 9242:   nop     len=0
  Inst 9243:   jmp     label400
Block 398:
  (original IR block: block201)
  (successor: Block 399)
  (instruction range: 9244 .. 9273)
  Inst 9244:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9245:   movq    152(%rsi), %r13
  Inst 9246:   movq    %r14, %r15
  Inst 9247:   addq    $-1, %r15
  Inst 9248:   movq    %r14, %rdx
  Inst 9249:   shlq    $3, %rdx
  Inst 9250:   movq    %r13, %r12
  Inst 9251:   addq    %rdx, %r12
  Inst 9252:   movq    %r13, %rdi
  Inst 9253:   addq    $-24, %rdi
  Inst 9254:   movq    %r13, %rsi
  Inst 9255:   load_ext_name %Memmove+0, %rax
  Inst 9256:   movq    %rbx, rsp(560 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S69, S70, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9257:   call    *%rax
  Inst 9258:   movq    rsp(560 + virtual offset), %rbx
  Inst 9259:   load_ext_name u1:1+0, %rsi
  Inst 9260:   movl    $1, %edi
  Inst 9261:   movq    %rdi, -8(%r13,%r14,8)
  Inst 9262:   movl    $1, %edi
  Inst 9263:   movq    %rdi, -16(%r13,%r14,8)
  Inst 9264:   movq    %rsi, -24(%r13,%r14,8)
  Inst 9265:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9266:   movq    %r12, 152(%rsi)
  Inst 9267:   movq    %rbx, %rdi
  Inst 9268:   movq    %r15, %rsi
  Inst 9269:   load_ext_name u0:3+0, %rax
  Inst 9270:   movq    %rdi, rsp(544 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9271:   call    *%rax
  Inst 9272:   jmp     label399
Block 399:
  (successor: Block 400)
  (instruction range: 9273 .. 9324)
  Inst 9273:   movq    %rax, rsp(544 + virtual offset)
  Inst 9274:   nop     len=0
  Inst 9275:   nop     len=0
  Inst 9276:   nop     len=0
  Inst 9277:   nop     len=0
  Inst 9278:   nop     len=0
  Inst 9279:   nop     len=0
  Inst 9280:   nop     len=0
  Inst 9281:   nop     len=0
  Inst 9282:   nop     len=0
  Inst 9283:   nop     len=0
  Inst 9284:   nop     len=0
  Inst 9285:   nop     len=0
  Inst 9286:   nop     len=0
  Inst 9287:   nop     len=0
  Inst 9288:   nop     len=0
  Inst 9289:   nop     len=0
  Inst 9290:   nop     len=0
  Inst 9291:   nop     len=0
  Inst 9292:   nop     len=0
  Inst 9293:   nop     len=0
  Inst 9294:   nop     len=0
  Inst 9295:   nop     len=0
  Inst 9296:   nop     len=0
  Inst 9297:   nop     len=0
  Inst 9298:   nop     len=0
  Inst 9299:   nop     len=0
  Inst 9300:   nop     len=0
  Inst 9301:   nop     len=0
  Inst 9302:   nop     len=0
  Inst 9303:   nop     len=0
  Inst 9304:   nop     len=0
  Inst 9305:   nop     len=0
  Inst 9306:   nop     len=0
  Inst 9307:   nop     len=0
  Inst 9308:   nop     len=0
  Inst 9309:   nop     len=0
  Inst 9310:   nop     len=0
  Inst 9311:   nop     len=0
  Inst 9312:   nop     len=0
  Inst 9313:   nop     len=0
  Inst 9314:   nop     len=0
  Inst 9315:   nop     len=0
  Inst 9316:   nop     len=0
  Inst 9317:   nop     len=0
  Inst 9318:   nop     len=0
  Inst 9319:   nop     len=0
  Inst 9320:   nop     len=0
  Inst 9321:   nop     len=0
  Inst 9322:   nop     len=0
  Inst 9323:   jmp     label400
Block 400:
  (original IR block: block200)
  (successor: Block 401)
  (successor: Block 402)
  (instruction range: 9324 .. 9335)
  Inst 9324:   movq    rsp(2064 + virtual offset), %rsi
  Inst 9325:   movq    8(%rsi), %rdi
  Inst 9326:   movq    rsp(2048 + virtual offset), %rsi
  Inst 9327:   load_ext_name u0:2+0, %rax
  Inst 9328:   movq    %rsi, rsp(560 + virtual offset)
  Inst 9329:   movq    %rdi, rsp(576 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9330:   call    *%rax
  Inst 9331:   movq    %rax, %rbx
  Inst 9332:   movq    %rdx, %r14
  Inst 9333:   testq   %r14, %r14
  Inst 9334:   jz      label401; j label402
Block 401:
  (successor: Block 404)
  (instruction range: 9335 .. 9387)
  Inst 9335:   movq    %rbx, rsp(1048 + virtual offset)
  Inst 9336:   nop     len=0
  Inst 9337:   nop     len=0
  Inst 9338:   nop     len=0
  Inst 9339:   nop     len=0
  Inst 9340:   nop     len=0
  Inst 9341:   nop     len=0
  Inst 9342:   nop     len=0
  Inst 9343:   nop     len=0
  Inst 9344:   nop     len=0
  Inst 9345:   nop     len=0
  Inst 9346:   nop     len=0
  Inst 9347:   nop     len=0
  Inst 9348:   nop     len=0
  Inst 9349:   nop     len=0
  Inst 9350:   nop     len=0
  Inst 9351:   nop     len=0
  Inst 9352:   nop     len=0
  Inst 9353:   nop     len=0
  Inst 9354:   nop     len=0
  Inst 9355:   nop     len=0
  Inst 9356:   nop     len=0
  Inst 9357:   nop     len=0
  Inst 9358:   nop     len=0
  Inst 9359:   nop     len=0
  Inst 9360:   nop     len=0
  Inst 9361:   nop     len=0
  Inst 9362:   nop     len=0
  Inst 9363:   nop     len=0
  Inst 9364:   nop     len=0
  Inst 9365:   nop     len=0
  Inst 9366:   nop     len=0
  Inst 9367:   nop     len=0
  Inst 9368:   nop     len=0
  Inst 9369:   nop     len=0
  Inst 9370:   nop     len=0
  Inst 9371:   nop     len=0
  Inst 9372:   nop     len=0
  Inst 9373:   nop     len=0
  Inst 9374:   nop     len=0
  Inst 9375:   nop     len=0
  Inst 9376:   nop     len=0
  Inst 9377:   nop     len=0
  Inst 9378:   nop     len=0
  Inst 9379:   nop     len=0
  Inst 9380:   nop     len=0
  Inst 9381:   nop     len=0
  Inst 9382:   nop     len=0
  Inst 9383:   nop     len=0
  Inst 9384:   nop     len=0
  Inst 9385:   nop     len=0
  Inst 9386:   jmp     label404
Block 402:
  (original IR block: block203)
  (successor: Block 403)
  (instruction range: 9387 .. 9416)
  Inst 9387:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9388:   movq    152(%rsi), %r13
  Inst 9389:   movq    %r14, %r15
  Inst 9390:   addq    $-1, %r15
  Inst 9391:   movq    %r14, %rdx
  Inst 9392:   shlq    $3, %rdx
  Inst 9393:   movq    %r13, %r12
  Inst 9394:   addq    %rdx, %r12
  Inst 9395:   movq    %r13, %rdi
  Inst 9396:   addq    $-24, %rdi
  Inst 9397:   movq    %r13, %rsi
  Inst 9398:   load_ext_name %Memmove+0, %rax
  Inst 9399:   movq    %rbx, rsp(560 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9400:   call    *%rax
  Inst 9401:   movq    rsp(560 + virtual offset), %rbx
  Inst 9402:   load_ext_name u1:1+0, %rsi
  Inst 9403:   movl    $1, %edi
  Inst 9404:   movq    %rdi, -8(%r13,%r14,8)
  Inst 9405:   movl    $1, %edi
  Inst 9406:   movq    %rdi, -16(%r13,%r14,8)
  Inst 9407:   movq    %rsi, -24(%r13,%r14,8)
  Inst 9408:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9409:   movq    %r12, 152(%rsi)
  Inst 9410:   movq    %rbx, %rdi
  Inst 9411:   movq    %r15, %rsi
  Inst 9412:   load_ext_name u0:3+0, %rax
  Inst 9413:   movq    %rdi, rsp(560 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9414:   call    *%rax
  Inst 9415:   jmp     label403
Block 403:
  (successor: Block 404)
  (instruction range: 9416 .. 9468)
  Inst 9416:   movq    %rax, rsp(1048 + virtual offset)
  Inst 9417:   nop     len=0
  Inst 9418:   nop     len=0
  Inst 9419:   nop     len=0
  Inst 9420:   nop     len=0
  Inst 9421:   nop     len=0
  Inst 9422:   nop     len=0
  Inst 9423:   nop     len=0
  Inst 9424:   nop     len=0
  Inst 9425:   nop     len=0
  Inst 9426:   nop     len=0
  Inst 9427:   nop     len=0
  Inst 9428:   nop     len=0
  Inst 9429:   nop     len=0
  Inst 9430:   nop     len=0
  Inst 9431:   nop     len=0
  Inst 9432:   nop     len=0
  Inst 9433:   nop     len=0
  Inst 9434:   nop     len=0
  Inst 9435:   nop     len=0
  Inst 9436:   nop     len=0
  Inst 9437:   nop     len=0
  Inst 9438:   nop     len=0
  Inst 9439:   nop     len=0
  Inst 9440:   nop     len=0
  Inst 9441:   nop     len=0
  Inst 9442:   nop     len=0
  Inst 9443:   nop     len=0
  Inst 9444:   nop     len=0
  Inst 9445:   nop     len=0
  Inst 9446:   nop     len=0
  Inst 9447:   nop     len=0
  Inst 9448:   nop     len=0
  Inst 9449:   nop     len=0
  Inst 9450:   nop     len=0
  Inst 9451:   nop     len=0
  Inst 9452:   nop     len=0
  Inst 9453:   nop     len=0
  Inst 9454:   nop     len=0
  Inst 9455:   nop     len=0
  Inst 9456:   nop     len=0
  Inst 9457:   nop     len=0
  Inst 9458:   nop     len=0
  Inst 9459:   nop     len=0
  Inst 9460:   nop     len=0
  Inst 9461:   nop     len=0
  Inst 9462:   nop     len=0
  Inst 9463:   nop     len=0
  Inst 9464:   nop     len=0
  Inst 9465:   nop     len=0
  Inst 9466:   nop     len=0
  Inst 9467:   jmp     label404
Block 404:
  (original IR block: block202)
  (successor: Block 405)
  (successor: Block 406)
  (instruction range: 9468 .. 9479)
  Inst 9468:   movq    rsp(2064 + virtual offset), %rsi
  Inst 9469:   movq    8(%rsi), %rdi
  Inst 9470:   movq    rsp(2048 + virtual offset), %rsi
  Inst 9471:   load_ext_name u0:2+0, %rax
  Inst 9472:   movq    %rsi, rsp(560 + virtual offset)
  Inst 9473:   movq    %rdi, rsp(576 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9474:   call    *%rax
  Inst 9475:   movq    %rax, %r15
  Inst 9476:   movq    %rdx, %r14
  Inst 9477:   testq   %r14, %r14
  Inst 9478:   jz      label405; j label406
Block 405:
  (successor: Block 408)
  (instruction range: 9479 .. 9531)
  Inst 9479:   movq    %r15, rsp(560 + virtual offset)
  Inst 9480:   nop     len=0
  Inst 9481:   nop     len=0
  Inst 9482:   nop     len=0
  Inst 9483:   nop     len=0
  Inst 9484:   nop     len=0
  Inst 9485:   nop     len=0
  Inst 9486:   nop     len=0
  Inst 9487:   nop     len=0
  Inst 9488:   nop     len=0
  Inst 9489:   nop     len=0
  Inst 9490:   nop     len=0
  Inst 9491:   nop     len=0
  Inst 9492:   nop     len=0
  Inst 9493:   nop     len=0
  Inst 9494:   nop     len=0
  Inst 9495:   nop     len=0
  Inst 9496:   nop     len=0
  Inst 9497:   nop     len=0
  Inst 9498:   nop     len=0
  Inst 9499:   nop     len=0
  Inst 9500:   nop     len=0
  Inst 9501:   nop     len=0
  Inst 9502:   nop     len=0
  Inst 9503:   nop     len=0
  Inst 9504:   nop     len=0
  Inst 9505:   nop     len=0
  Inst 9506:   nop     len=0
  Inst 9507:   nop     len=0
  Inst 9508:   nop     len=0
  Inst 9509:   nop     len=0
  Inst 9510:   nop     len=0
  Inst 9511:   nop     len=0
  Inst 9512:   nop     len=0
  Inst 9513:   nop     len=0
  Inst 9514:   nop     len=0
  Inst 9515:   nop     len=0
  Inst 9516:   nop     len=0
  Inst 9517:   nop     len=0
  Inst 9518:   nop     len=0
  Inst 9519:   nop     len=0
  Inst 9520:   nop     len=0
  Inst 9521:   nop     len=0
  Inst 9522:   nop     len=0
  Inst 9523:   nop     len=0
  Inst 9524:   nop     len=0
  Inst 9525:   nop     len=0
  Inst 9526:   nop     len=0
  Inst 9527:   nop     len=0
  Inst 9528:   nop     len=0
  Inst 9529:   nop     len=0
  Inst 9530:   jmp     label408
Block 406:
  (original IR block: block205)
  (successor: Block 407)
  (instruction range: 9531 .. 9560)
  Inst 9531:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9532:   movq    152(%rsi), %r13
  Inst 9533:   movq    %r14, %rbx
  Inst 9534:   addq    $-1, %rbx
  Inst 9535:   movq    %r14, %rdx
  Inst 9536:   shlq    $3, %rdx
  Inst 9537:   movq    %r13, %r12
  Inst 9538:   addq    %rdx, %r12
  Inst 9539:   movq    %r13, %rdi
  Inst 9540:   addq    $-24, %rdi
  Inst 9541:   movq    %r13, %rsi
  Inst 9542:   load_ext_name %Memmove+0, %rax
  Inst 9543:   movq    %r15, rsp(576 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S71, S72, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9544:   call    *%rax
  Inst 9545:   movq    rsp(576 + virtual offset), %r15
  Inst 9546:   load_ext_name u1:1+0, %rsi
  Inst 9547:   movl    $1, %edi
  Inst 9548:   movq    %rdi, -8(%r13,%r14,8)
  Inst 9549:   movl    $1, %edi
  Inst 9550:   movq    %rdi, -16(%r13,%r14,8)
  Inst 9551:   movq    %rsi, -24(%r13,%r14,8)
  Inst 9552:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9553:   movq    %r12, 152(%rsi)
  Inst 9554:   movq    %r15, %rdi
  Inst 9555:   movq    %rbx, %rsi
  Inst 9556:   load_ext_name u0:3+0, %rax
  Inst 9557:   movq    %rdi, rsp(560 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9558:   call    *%rax
  Inst 9559:   jmp     label407
Block 407:
  (successor: Block 408)
  (instruction range: 9560 .. 9612)
  Inst 9560:   movq    %rax, rsp(560 + virtual offset)
  Inst 9561:   nop     len=0
  Inst 9562:   nop     len=0
  Inst 9563:   nop     len=0
  Inst 9564:   nop     len=0
  Inst 9565:   nop     len=0
  Inst 9566:   nop     len=0
  Inst 9567:   nop     len=0
  Inst 9568:   nop     len=0
  Inst 9569:   nop     len=0
  Inst 9570:   nop     len=0
  Inst 9571:   nop     len=0
  Inst 9572:   nop     len=0
  Inst 9573:   nop     len=0
  Inst 9574:   nop     len=0
  Inst 9575:   nop     len=0
  Inst 9576:   nop     len=0
  Inst 9577:   nop     len=0
  Inst 9578:   nop     len=0
  Inst 9579:   nop     len=0
  Inst 9580:   nop     len=0
  Inst 9581:   nop     len=0
  Inst 9582:   nop     len=0
  Inst 9583:   nop     len=0
  Inst 9584:   nop     len=0
  Inst 9585:   nop     len=0
  Inst 9586:   nop     len=0
  Inst 9587:   nop     len=0
  Inst 9588:   nop     len=0
  Inst 9589:   nop     len=0
  Inst 9590:   nop     len=0
  Inst 9591:   nop     len=0
  Inst 9592:   nop     len=0
  Inst 9593:   nop     len=0
  Inst 9594:   nop     len=0
  Inst 9595:   nop     len=0
  Inst 9596:   nop     len=0
  Inst 9597:   nop     len=0
  Inst 9598:   nop     len=0
  Inst 9599:   nop     len=0
  Inst 9600:   nop     len=0
  Inst 9601:   nop     len=0
  Inst 9602:   nop     len=0
  Inst 9603:   nop     len=0
  Inst 9604:   nop     len=0
  Inst 9605:   nop     len=0
  Inst 9606:   nop     len=0
  Inst 9607:   nop     len=0
  Inst 9608:   nop     len=0
  Inst 9609:   nop     len=0
  Inst 9610:   nop     len=0
  Inst 9611:   jmp     label408
Block 408:
  (original IR block: block204)
  (successor: Block 409)
  (successor: Block 410)
  (instruction range: 9612 .. 9623)
  Inst 9612:   movq    rsp(2064 + virtual offset), %rsi
  Inst 9613:   movq    8(%rsi), %rdi
  Inst 9614:   movq    rsp(2048 + virtual offset), %rsi
  Inst 9615:   load_ext_name u0:2+0, %rax
  Inst 9616:   movq    %rsi, rsp(576 + virtual offset)
  Inst 9617:   movq    %rdi, rsp(592 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9618:   call    *%rax
  Inst 9619:   movq    %rax, %rbx
  Inst 9620:   movq    %rdx, %r14
  Inst 9621:   testq   %r14, %r14
  Inst 9622:   jz      label409; j label410
Block 409:
  (successor: Block 412)
  (instruction range: 9623 .. 9676)
  Inst 9623:   movq    %rbx, rsp(1064 + virtual offset)
  Inst 9624:   nop     len=0
  Inst 9625:   nop     len=0
  Inst 9626:   nop     len=0
  Inst 9627:   nop     len=0
  Inst 9628:   nop     len=0
  Inst 9629:   nop     len=0
  Inst 9630:   nop     len=0
  Inst 9631:   nop     len=0
  Inst 9632:   nop     len=0
  Inst 9633:   nop     len=0
  Inst 9634:   nop     len=0
  Inst 9635:   nop     len=0
  Inst 9636:   nop     len=0
  Inst 9637:   nop     len=0
  Inst 9638:   nop     len=0
  Inst 9639:   nop     len=0
  Inst 9640:   nop     len=0
  Inst 9641:   nop     len=0
  Inst 9642:   nop     len=0
  Inst 9643:   nop     len=0
  Inst 9644:   nop     len=0
  Inst 9645:   nop     len=0
  Inst 9646:   nop     len=0
  Inst 9647:   nop     len=0
  Inst 9648:   nop     len=0
  Inst 9649:   nop     len=0
  Inst 9650:   nop     len=0
  Inst 9651:   nop     len=0
  Inst 9652:   nop     len=0
  Inst 9653:   nop     len=0
  Inst 9654:   nop     len=0
  Inst 9655:   nop     len=0
  Inst 9656:   nop     len=0
  Inst 9657:   nop     len=0
  Inst 9658:   nop     len=0
  Inst 9659:   nop     len=0
  Inst 9660:   nop     len=0
  Inst 9661:   nop     len=0
  Inst 9662:   nop     len=0
  Inst 9663:   nop     len=0
  Inst 9664:   nop     len=0
  Inst 9665:   nop     len=0
  Inst 9666:   nop     len=0
  Inst 9667:   nop     len=0
  Inst 9668:   nop     len=0
  Inst 9669:   nop     len=0
  Inst 9670:   nop     len=0
  Inst 9671:   nop     len=0
  Inst 9672:   nop     len=0
  Inst 9673:   nop     len=0
  Inst 9674:   nop     len=0
  Inst 9675:   jmp     label412
Block 410:
  (original IR block: block207)
  (successor: Block 411)
  (instruction range: 9676 .. 9705)
  Inst 9676:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9677:   movq    152(%rsi), %r13
  Inst 9678:   movq    %r14, %r15
  Inst 9679:   addq    $-1, %r15
  Inst 9680:   movq    %r14, %rdx
  Inst 9681:   shlq    $3, %rdx
  Inst 9682:   movq    %r13, %r12
  Inst 9683:   addq    %rdx, %r12
  Inst 9684:   movq    %r13, %rdi
  Inst 9685:   addq    $-24, %rdi
  Inst 9686:   movq    %r13, %rsi
  Inst 9687:   load_ext_name %Memmove+0, %rax
  Inst 9688:   movq    %rbx, rsp(576 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9689:   call    *%rax
  Inst 9690:   movq    rsp(576 + virtual offset), %rbx
  Inst 9691:   load_ext_name u1:1+0, %rsi
  Inst 9692:   movl    $1, %edi
  Inst 9693:   movq    %rdi, -8(%r13,%r14,8)
  Inst 9694:   movl    $1, %edi
  Inst 9695:   movq    %rdi, -16(%r13,%r14,8)
  Inst 9696:   movq    %rsi, -24(%r13,%r14,8)
  Inst 9697:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9698:   movq    %r12, 152(%rsi)
  Inst 9699:   movq    %rbx, %rdi
  Inst 9700:   movq    %r15, %rsi
  Inst 9701:   load_ext_name u0:3+0, %rax
  Inst 9702:   movq    %rdi, rsp(576 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9703:   call    *%rax
  Inst 9704:   jmp     label411
Block 411:
  (successor: Block 412)
  (instruction range: 9705 .. 9758)
  Inst 9705:   movq    %rax, rsp(1064 + virtual offset)
  Inst 9706:   nop     len=0
  Inst 9707:   nop     len=0
  Inst 9708:   nop     len=0
  Inst 9709:   nop     len=0
  Inst 9710:   nop     len=0
  Inst 9711:   nop     len=0
  Inst 9712:   nop     len=0
  Inst 9713:   nop     len=0
  Inst 9714:   nop     len=0
  Inst 9715:   nop     len=0
  Inst 9716:   nop     len=0
  Inst 9717:   nop     len=0
  Inst 9718:   nop     len=0
  Inst 9719:   nop     len=0
  Inst 9720:   nop     len=0
  Inst 9721:   nop     len=0
  Inst 9722:   nop     len=0
  Inst 9723:   nop     len=0
  Inst 9724:   nop     len=0
  Inst 9725:   nop     len=0
  Inst 9726:   nop     len=0
  Inst 9727:   nop     len=0
  Inst 9728:   nop     len=0
  Inst 9729:   nop     len=0
  Inst 9730:   nop     len=0
  Inst 9731:   nop     len=0
  Inst 9732:   nop     len=0
  Inst 9733:   nop     len=0
  Inst 9734:   nop     len=0
  Inst 9735:   nop     len=0
  Inst 9736:   nop     len=0
  Inst 9737:   nop     len=0
  Inst 9738:   nop     len=0
  Inst 9739:   nop     len=0
  Inst 9740:   nop     len=0
  Inst 9741:   nop     len=0
  Inst 9742:   nop     len=0
  Inst 9743:   nop     len=0
  Inst 9744:   nop     len=0
  Inst 9745:   nop     len=0
  Inst 9746:   nop     len=0
  Inst 9747:   nop     len=0
  Inst 9748:   nop     len=0
  Inst 9749:   nop     len=0
  Inst 9750:   nop     len=0
  Inst 9751:   nop     len=0
  Inst 9752:   nop     len=0
  Inst 9753:   nop     len=0
  Inst 9754:   nop     len=0
  Inst 9755:   nop     len=0
  Inst 9756:   nop     len=0
  Inst 9757:   jmp     label412
Block 412:
  (original IR block: block206)
  (successor: Block 413)
  (successor: Block 414)
  (instruction range: 9758 .. 9769)
  Inst 9758:   movq    rsp(2064 + virtual offset), %rsi
  Inst 9759:   movq    8(%rsi), %rdi
  Inst 9760:   movq    rsp(2048 + virtual offset), %rsi
  Inst 9761:   load_ext_name u0:2+0, %rax
  Inst 9762:   movq    %rsi, rsp(576 + virtual offset)
  Inst 9763:   movq    %rdi, rsp(592 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9764:   call    *%rax
  Inst 9765:   movq    %rax, %rbx
  Inst 9766:   movq    %rdx, %r14
  Inst 9767:   testq   %r14, %r14
  Inst 9768:   jz      label413; j label414
Block 413:
  (successor: Block 416)
  (instruction range: 9769 .. 9822)
  Inst 9769:   movq    %rbx, rsp(576 + virtual offset)
  Inst 9770:   nop     len=0
  Inst 9771:   nop     len=0
  Inst 9772:   nop     len=0
  Inst 9773:   nop     len=0
  Inst 9774:   nop     len=0
  Inst 9775:   nop     len=0
  Inst 9776:   nop     len=0
  Inst 9777:   nop     len=0
  Inst 9778:   nop     len=0
  Inst 9779:   nop     len=0
  Inst 9780:   nop     len=0
  Inst 9781:   nop     len=0
  Inst 9782:   nop     len=0
  Inst 9783:   nop     len=0
  Inst 9784:   nop     len=0
  Inst 9785:   nop     len=0
  Inst 9786:   nop     len=0
  Inst 9787:   nop     len=0
  Inst 9788:   nop     len=0
  Inst 9789:   nop     len=0
  Inst 9790:   nop     len=0
  Inst 9791:   nop     len=0
  Inst 9792:   nop     len=0
  Inst 9793:   nop     len=0
  Inst 9794:   nop     len=0
  Inst 9795:   nop     len=0
  Inst 9796:   nop     len=0
  Inst 9797:   nop     len=0
  Inst 9798:   nop     len=0
  Inst 9799:   nop     len=0
  Inst 9800:   nop     len=0
  Inst 9801:   nop     len=0
  Inst 9802:   nop     len=0
  Inst 9803:   nop     len=0
  Inst 9804:   nop     len=0
  Inst 9805:   nop     len=0
  Inst 9806:   nop     len=0
  Inst 9807:   nop     len=0
  Inst 9808:   nop     len=0
  Inst 9809:   nop     len=0
  Inst 9810:   nop     len=0
  Inst 9811:   nop     len=0
  Inst 9812:   nop     len=0
  Inst 9813:   nop     len=0
  Inst 9814:   nop     len=0
  Inst 9815:   nop     len=0
  Inst 9816:   nop     len=0
  Inst 9817:   nop     len=0
  Inst 9818:   nop     len=0
  Inst 9819:   nop     len=0
  Inst 9820:   nop     len=0
  Inst 9821:   jmp     label416
Block 414:
  (original IR block: block209)
  (successor: Block 415)
  (instruction range: 9822 .. 9851)
  Inst 9822:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9823:   movq    152(%rsi), %r13
  Inst 9824:   movq    %r14, %r15
  Inst 9825:   addq    $-1, %r15
  Inst 9826:   movq    %r14, %rdx
  Inst 9827:   shlq    $3, %rdx
  Inst 9828:   movq    %r13, %r12
  Inst 9829:   addq    %rdx, %r12
  Inst 9830:   movq    %r13, %rdi
  Inst 9831:   addq    $-24, %rdi
  Inst 9832:   movq    %r13, %rsi
  Inst 9833:   load_ext_name %Memmove+0, %rax
  Inst 9834:   movq    %rbx, rsp(592 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S73, S74, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9835:   call    *%rax
  Inst 9836:   movq    rsp(592 + virtual offset), %rbx
  Inst 9837:   load_ext_name u1:1+0, %rsi
  Inst 9838:   movl    $1, %edi
  Inst 9839:   movq    %rdi, -8(%r13,%r14,8)
  Inst 9840:   movl    $1, %edi
  Inst 9841:   movq    %rdi, -16(%r13,%r14,8)
  Inst 9842:   movq    %rsi, -24(%r13,%r14,8)
  Inst 9843:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9844:   movq    %r12, 152(%rsi)
  Inst 9845:   movq    %rbx, %rdi
  Inst 9846:   movq    %r15, %rsi
  Inst 9847:   load_ext_name u0:3+0, %rax
  Inst 9848:   movq    %rdi, rsp(576 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9849:   call    *%rax
  Inst 9850:   jmp     label415
Block 415:
  (successor: Block 416)
  (instruction range: 9851 .. 9904)
  Inst 9851:   movq    %rax, rsp(576 + virtual offset)
  Inst 9852:   nop     len=0
  Inst 9853:   nop     len=0
  Inst 9854:   nop     len=0
  Inst 9855:   nop     len=0
  Inst 9856:   nop     len=0
  Inst 9857:   nop     len=0
  Inst 9858:   nop     len=0
  Inst 9859:   nop     len=0
  Inst 9860:   nop     len=0
  Inst 9861:   nop     len=0
  Inst 9862:   nop     len=0
  Inst 9863:   nop     len=0
  Inst 9864:   nop     len=0
  Inst 9865:   nop     len=0
  Inst 9866:   nop     len=0
  Inst 9867:   nop     len=0
  Inst 9868:   nop     len=0
  Inst 9869:   nop     len=0
  Inst 9870:   nop     len=0
  Inst 9871:   nop     len=0
  Inst 9872:   nop     len=0
  Inst 9873:   nop     len=0
  Inst 9874:   nop     len=0
  Inst 9875:   nop     len=0
  Inst 9876:   nop     len=0
  Inst 9877:   nop     len=0
  Inst 9878:   nop     len=0
  Inst 9879:   nop     len=0
  Inst 9880:   nop     len=0
  Inst 9881:   nop     len=0
  Inst 9882:   nop     len=0
  Inst 9883:   nop     len=0
  Inst 9884:   nop     len=0
  Inst 9885:   nop     len=0
  Inst 9886:   nop     len=0
  Inst 9887:   nop     len=0
  Inst 9888:   nop     len=0
  Inst 9889:   nop     len=0
  Inst 9890:   nop     len=0
  Inst 9891:   nop     len=0
  Inst 9892:   nop     len=0
  Inst 9893:   nop     len=0
  Inst 9894:   nop     len=0
  Inst 9895:   nop     len=0
  Inst 9896:   nop     len=0
  Inst 9897:   nop     len=0
  Inst 9898:   nop     len=0
  Inst 9899:   nop     len=0
  Inst 9900:   nop     len=0
  Inst 9901:   nop     len=0
  Inst 9902:   nop     len=0
  Inst 9903:   jmp     label416
Block 416:
  (original IR block: block208)
  (successor: Block 417)
  (successor: Block 418)
  (instruction range: 9904 .. 9915)
  Inst 9904:   movq    rsp(2064 + virtual offset), %rsi
  Inst 9905:   movq    8(%rsi), %rdi
  Inst 9906:   movq    rsp(2048 + virtual offset), %rsi
  Inst 9907:   load_ext_name u0:2+0, %rax
  Inst 9908:   movq    %rsi, rsp(592 + virtual offset)
  Inst 9909:   movq    %rdi, rsp(608 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9910:   call    *%rax
  Inst 9911:   movq    %rax, %r15
  Inst 9912:   movq    %rdx, %r14
  Inst 9913:   testq   %r14, %r14
  Inst 9914:   jz      label417; j label418
Block 417:
  (successor: Block 420)
  (instruction range: 9915 .. 9969)
  Inst 9915:   movq    %r15, rsp(1080 + virtual offset)
  Inst 9916:   nop     len=0
  Inst 9917:   nop     len=0
  Inst 9918:   nop     len=0
  Inst 9919:   nop     len=0
  Inst 9920:   nop     len=0
  Inst 9921:   nop     len=0
  Inst 9922:   nop     len=0
  Inst 9923:   nop     len=0
  Inst 9924:   nop     len=0
  Inst 9925:   nop     len=0
  Inst 9926:   nop     len=0
  Inst 9927:   nop     len=0
  Inst 9928:   nop     len=0
  Inst 9929:   nop     len=0
  Inst 9930:   nop     len=0
  Inst 9931:   nop     len=0
  Inst 9932:   nop     len=0
  Inst 9933:   nop     len=0
  Inst 9934:   nop     len=0
  Inst 9935:   nop     len=0
  Inst 9936:   nop     len=0
  Inst 9937:   nop     len=0
  Inst 9938:   nop     len=0
  Inst 9939:   nop     len=0
  Inst 9940:   nop     len=0
  Inst 9941:   nop     len=0
  Inst 9942:   nop     len=0
  Inst 9943:   nop     len=0
  Inst 9944:   nop     len=0
  Inst 9945:   nop     len=0
  Inst 9946:   nop     len=0
  Inst 9947:   nop     len=0
  Inst 9948:   nop     len=0
  Inst 9949:   nop     len=0
  Inst 9950:   nop     len=0
  Inst 9951:   nop     len=0
  Inst 9952:   nop     len=0
  Inst 9953:   nop     len=0
  Inst 9954:   nop     len=0
  Inst 9955:   nop     len=0
  Inst 9956:   nop     len=0
  Inst 9957:   nop     len=0
  Inst 9958:   nop     len=0
  Inst 9959:   nop     len=0
  Inst 9960:   nop     len=0
  Inst 9961:   nop     len=0
  Inst 9962:   nop     len=0
  Inst 9963:   nop     len=0
  Inst 9964:   nop     len=0
  Inst 9965:   nop     len=0
  Inst 9966:   nop     len=0
  Inst 9967:   nop     len=0
  Inst 9968:   jmp     label420
Block 418:
  (original IR block: block211)
  (successor: Block 419)
  (instruction range: 9969 .. 9998)
  Inst 9969:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9970:   movq    152(%rsi), %r13
  Inst 9971:   movq    %r14, %rbx
  Inst 9972:   addq    $-1, %rbx
  Inst 9973:   movq    %r14, %rdx
  Inst 9974:   shlq    $3, %rdx
  Inst 9975:   movq    %r13, %r12
  Inst 9976:   addq    %rdx, %r12
  Inst 9977:   movq    %r13, %rdi
  Inst 9978:   addq    $-24, %rdi
  Inst 9979:   movq    %r13, %rsi
  Inst 9980:   load_ext_name %Memmove+0, %rax
  Inst 9981:   movq    %r15, rsp(592 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9982:   call    *%rax
  Inst 9983:   movq    rsp(592 + virtual offset), %r15
  Inst 9984:   load_ext_name u1:1+0, %rsi
  Inst 9985:   movl    $1, %edi
  Inst 9986:   movq    %rdi, -8(%r13,%r14,8)
  Inst 9987:   movl    $1, %edi
  Inst 9988:   movq    %rdi, -16(%r13,%r14,8)
  Inst 9989:   movq    %rsi, -24(%r13,%r14,8)
  Inst 9990:   movq    rsp(2072 + virtual offset), %rsi
  Inst 9991:   movq    %r12, 152(%rsi)
  Inst 9992:   movq    %r15, %rdi
  Inst 9993:   movq    %rbx, %rsi
  Inst 9994:   load_ext_name u0:3+0, %rax
  Inst 9995:   movq    %rdi, rsp(592 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 9996:   call    *%rax
  Inst 9997:   jmp     label419
Block 419:
  (successor: Block 420)
  (instruction range: 9998 .. 10052)
  Inst 9998:   movq    %rax, rsp(1080 + virtual offset)
  Inst 9999:   nop     len=0
  Inst 10000:   nop     len=0
  Inst 10001:   nop     len=0
  Inst 10002:   nop     len=0
  Inst 10003:   nop     len=0
  Inst 10004:   nop     len=0
  Inst 10005:   nop     len=0
  Inst 10006:   nop     len=0
  Inst 10007:   nop     len=0
  Inst 10008:   nop     len=0
  Inst 10009:   nop     len=0
  Inst 10010:   nop     len=0
  Inst 10011:   nop     len=0
  Inst 10012:   nop     len=0
  Inst 10013:   nop     len=0
  Inst 10014:   nop     len=0
  Inst 10015:   nop     len=0
  Inst 10016:   nop     len=0
  Inst 10017:   nop     len=0
  Inst 10018:   nop     len=0
  Inst 10019:   nop     len=0
  Inst 10020:   nop     len=0
  Inst 10021:   nop     len=0
  Inst 10022:   nop     len=0
  Inst 10023:   nop     len=0
  Inst 10024:   nop     len=0
  Inst 10025:   nop     len=0
  Inst 10026:   nop     len=0
  Inst 10027:   nop     len=0
  Inst 10028:   nop     len=0
  Inst 10029:   nop     len=0
  Inst 10030:   nop     len=0
  Inst 10031:   nop     len=0
  Inst 10032:   nop     len=0
  Inst 10033:   nop     len=0
  Inst 10034:   nop     len=0
  Inst 10035:   nop     len=0
  Inst 10036:   nop     len=0
  Inst 10037:   nop     len=0
  Inst 10038:   nop     len=0
  Inst 10039:   nop     len=0
  Inst 10040:   nop     len=0
  Inst 10041:   nop     len=0
  Inst 10042:   nop     len=0
  Inst 10043:   nop     len=0
  Inst 10044:   nop     len=0
  Inst 10045:   nop     len=0
  Inst 10046:   nop     len=0
  Inst 10047:   nop     len=0
  Inst 10048:   nop     len=0
  Inst 10049:   nop     len=0
  Inst 10050:   nop     len=0
  Inst 10051:   jmp     label420
Block 420:
  (original IR block: block210)
  (successor: Block 421)
  (successor: Block 422)
  (instruction range: 10052 .. 10063)
  Inst 10052:   movq    rsp(2064 + virtual offset), %rsi
  Inst 10053:   movq    8(%rsi), %rdi
  Inst 10054:   movq    rsp(2048 + virtual offset), %rsi
  Inst 10055:   load_ext_name u0:2+0, %rax
  Inst 10056:   movq    %rsi, rsp(592 + virtual offset)
  Inst 10057:   movq    %rdi, rsp(608 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10058:   call    *%rax
  Inst 10059:   movq    %rax, %rbx
  Inst 10060:   movq    %rdx, %r14
  Inst 10061:   testq   %r14, %r14
  Inst 10062:   jz      label421; j label422
Block 421:
  (successor: Block 424)
  (instruction range: 10063 .. 10117)
  Inst 10063:   movq    %rbx, rsp(592 + virtual offset)
  Inst 10064:   nop     len=0
  Inst 10065:   nop     len=0
  Inst 10066:   nop     len=0
  Inst 10067:   nop     len=0
  Inst 10068:   nop     len=0
  Inst 10069:   nop     len=0
  Inst 10070:   nop     len=0
  Inst 10071:   nop     len=0
  Inst 10072:   nop     len=0
  Inst 10073:   nop     len=0
  Inst 10074:   nop     len=0
  Inst 10075:   nop     len=0
  Inst 10076:   nop     len=0
  Inst 10077:   nop     len=0
  Inst 10078:   nop     len=0
  Inst 10079:   nop     len=0
  Inst 10080:   nop     len=0
  Inst 10081:   nop     len=0
  Inst 10082:   nop     len=0
  Inst 10083:   nop     len=0
  Inst 10084:   nop     len=0
  Inst 10085:   nop     len=0
  Inst 10086:   nop     len=0
  Inst 10087:   nop     len=0
  Inst 10088:   nop     len=0
  Inst 10089:   nop     len=0
  Inst 10090:   nop     len=0
  Inst 10091:   nop     len=0
  Inst 10092:   nop     len=0
  Inst 10093:   nop     len=0
  Inst 10094:   nop     len=0
  Inst 10095:   nop     len=0
  Inst 10096:   nop     len=0
  Inst 10097:   nop     len=0
  Inst 10098:   nop     len=0
  Inst 10099:   nop     len=0
  Inst 10100:   nop     len=0
  Inst 10101:   nop     len=0
  Inst 10102:   nop     len=0
  Inst 10103:   nop     len=0
  Inst 10104:   nop     len=0
  Inst 10105:   nop     len=0
  Inst 10106:   nop     len=0
  Inst 10107:   nop     len=0
  Inst 10108:   nop     len=0
  Inst 10109:   nop     len=0
  Inst 10110:   nop     len=0
  Inst 10111:   nop     len=0
  Inst 10112:   nop     len=0
  Inst 10113:   nop     len=0
  Inst 10114:   nop     len=0
  Inst 10115:   nop     len=0
  Inst 10116:   jmp     label424
Block 422:
  (original IR block: block213)
  (successor: Block 423)
  (instruction range: 10117 .. 10146)
  Inst 10117:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10118:   movq    152(%rsi), %r13
  Inst 10119:   movq    %r14, %r15
  Inst 10120:   addq    $-1, %r15
  Inst 10121:   movq    %r14, %rdx
  Inst 10122:   shlq    $3, %rdx
  Inst 10123:   movq    %r13, %r12
  Inst 10124:   addq    %rdx, %r12
  Inst 10125:   movq    %r13, %rdi
  Inst 10126:   addq    $-24, %rdi
  Inst 10127:   movq    %r13, %rsi
  Inst 10128:   load_ext_name %Memmove+0, %rax
  Inst 10129:   movq    %rbx, rsp(608 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S75, S76, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10130:   call    *%rax
  Inst 10131:   movq    rsp(608 + virtual offset), %rbx
  Inst 10132:   load_ext_name u1:1+0, %rsi
  Inst 10133:   movl    $1, %edi
  Inst 10134:   movq    %rdi, -8(%r13,%r14,8)
  Inst 10135:   movl    $1, %edi
  Inst 10136:   movq    %rdi, -16(%r13,%r14,8)
  Inst 10137:   movq    %rsi, -24(%r13,%r14,8)
  Inst 10138:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10139:   movq    %r12, 152(%rsi)
  Inst 10140:   movq    %rbx, %rdi
  Inst 10141:   movq    %r15, %rsi
  Inst 10142:   load_ext_name u0:3+0, %rax
  Inst 10143:   movq    %rdi, rsp(592 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10144:   call    *%rax
  Inst 10145:   jmp     label423
Block 423:
  (successor: Block 424)
  (instruction range: 10146 .. 10200)
  Inst 10146:   movq    %rax, rsp(592 + virtual offset)
  Inst 10147:   nop     len=0
  Inst 10148:   nop     len=0
  Inst 10149:   nop     len=0
  Inst 10150:   nop     len=0
  Inst 10151:   nop     len=0
  Inst 10152:   nop     len=0
  Inst 10153:   nop     len=0
  Inst 10154:   nop     len=0
  Inst 10155:   nop     len=0
  Inst 10156:   nop     len=0
  Inst 10157:   nop     len=0
  Inst 10158:   nop     len=0
  Inst 10159:   nop     len=0
  Inst 10160:   nop     len=0
  Inst 10161:   nop     len=0
  Inst 10162:   nop     len=0
  Inst 10163:   nop     len=0
  Inst 10164:   nop     len=0
  Inst 10165:   nop     len=0
  Inst 10166:   nop     len=0
  Inst 10167:   nop     len=0
  Inst 10168:   nop     len=0
  Inst 10169:   nop     len=0
  Inst 10170:   nop     len=0
  Inst 10171:   nop     len=0
  Inst 10172:   nop     len=0
  Inst 10173:   nop     len=0
  Inst 10174:   nop     len=0
  Inst 10175:   nop     len=0
  Inst 10176:   nop     len=0
  Inst 10177:   nop     len=0
  Inst 10178:   nop     len=0
  Inst 10179:   nop     len=0
  Inst 10180:   nop     len=0
  Inst 10181:   nop     len=0
  Inst 10182:   nop     len=0
  Inst 10183:   nop     len=0
  Inst 10184:   nop     len=0
  Inst 10185:   nop     len=0
  Inst 10186:   nop     len=0
  Inst 10187:   nop     len=0
  Inst 10188:   nop     len=0
  Inst 10189:   nop     len=0
  Inst 10190:   nop     len=0
  Inst 10191:   nop     len=0
  Inst 10192:   nop     len=0
  Inst 10193:   nop     len=0
  Inst 10194:   nop     len=0
  Inst 10195:   nop     len=0
  Inst 10196:   nop     len=0
  Inst 10197:   nop     len=0
  Inst 10198:   nop     len=0
  Inst 10199:   jmp     label424
Block 424:
  (original IR block: block212)
  (successor: Block 425)
  (successor: Block 426)
  (instruction range: 10200 .. 10211)
  Inst 10200:   movq    rsp(2064 + virtual offset), %rsi
  Inst 10201:   movq    8(%rsi), %rdi
  Inst 10202:   movq    rsp(2048 + virtual offset), %rsi
  Inst 10203:   load_ext_name u0:2+0, %rax
  Inst 10204:   movq    %rsi, rsp(608 + virtual offset)
  Inst 10205:   movq    %rdi, rsp(624 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10206:   call    *%rax
  Inst 10207:   movq    %rax, %rbx
  Inst 10208:   movq    %rdx, %r14
  Inst 10209:   testq   %r14, %r14
  Inst 10210:   jz      label425; j label426
Block 425:
  (successor: Block 428)
  (instruction range: 10211 .. 10266)
  Inst 10211:   movq    %rbx, rsp(1096 + virtual offset)
  Inst 10212:   nop     len=0
  Inst 10213:   nop     len=0
  Inst 10214:   nop     len=0
  Inst 10215:   nop     len=0
  Inst 10216:   nop     len=0
  Inst 10217:   nop     len=0
  Inst 10218:   nop     len=0
  Inst 10219:   nop     len=0
  Inst 10220:   nop     len=0
  Inst 10221:   nop     len=0
  Inst 10222:   nop     len=0
  Inst 10223:   nop     len=0
  Inst 10224:   nop     len=0
  Inst 10225:   nop     len=0
  Inst 10226:   nop     len=0
  Inst 10227:   nop     len=0
  Inst 10228:   nop     len=0
  Inst 10229:   nop     len=0
  Inst 10230:   nop     len=0
  Inst 10231:   nop     len=0
  Inst 10232:   nop     len=0
  Inst 10233:   nop     len=0
  Inst 10234:   nop     len=0
  Inst 10235:   nop     len=0
  Inst 10236:   nop     len=0
  Inst 10237:   nop     len=0
  Inst 10238:   nop     len=0
  Inst 10239:   nop     len=0
  Inst 10240:   nop     len=0
  Inst 10241:   nop     len=0
  Inst 10242:   nop     len=0
  Inst 10243:   nop     len=0
  Inst 10244:   nop     len=0
  Inst 10245:   nop     len=0
  Inst 10246:   nop     len=0
  Inst 10247:   nop     len=0
  Inst 10248:   nop     len=0
  Inst 10249:   nop     len=0
  Inst 10250:   nop     len=0
  Inst 10251:   nop     len=0
  Inst 10252:   nop     len=0
  Inst 10253:   nop     len=0
  Inst 10254:   nop     len=0
  Inst 10255:   nop     len=0
  Inst 10256:   nop     len=0
  Inst 10257:   nop     len=0
  Inst 10258:   nop     len=0
  Inst 10259:   nop     len=0
  Inst 10260:   nop     len=0
  Inst 10261:   nop     len=0
  Inst 10262:   nop     len=0
  Inst 10263:   nop     len=0
  Inst 10264:   nop     len=0
  Inst 10265:   jmp     label428
Block 426:
  (original IR block: block215)
  (successor: Block 427)
  (instruction range: 10266 .. 10295)
  Inst 10266:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10267:   movq    152(%rsi), %r13
  Inst 10268:   movq    %r14, %r15
  Inst 10269:   addq    $-1, %r15
  Inst 10270:   movq    %r14, %rdx
  Inst 10271:   shlq    $3, %rdx
  Inst 10272:   movq    %r13, %r12
  Inst 10273:   addq    %rdx, %r12
  Inst 10274:   movq    %r13, %rdi
  Inst 10275:   addq    $-24, %rdi
  Inst 10276:   movq    %r13, %rsi
  Inst 10277:   load_ext_name %Memmove+0, %rax
  Inst 10278:   movq    %rbx, rsp(608 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10279:   call    *%rax
  Inst 10280:   movq    rsp(608 + virtual offset), %rbx
  Inst 10281:   load_ext_name u1:1+0, %rsi
  Inst 10282:   movl    $1, %edi
  Inst 10283:   movq    %rdi, -8(%r13,%r14,8)
  Inst 10284:   movl    $1, %edi
  Inst 10285:   movq    %rdi, -16(%r13,%r14,8)
  Inst 10286:   movq    %rsi, -24(%r13,%r14,8)
  Inst 10287:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10288:   movq    %r12, 152(%rsi)
  Inst 10289:   movq    %rbx, %rdi
  Inst 10290:   movq    %r15, %rsi
  Inst 10291:   load_ext_name u0:3+0, %rax
  Inst 10292:   movq    %rdi, rsp(608 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10293:   call    *%rax
  Inst 10294:   jmp     label427
Block 427:
  (successor: Block 428)
  (instruction range: 10295 .. 10350)
  Inst 10295:   movq    %rax, rsp(1096 + virtual offset)
  Inst 10296:   nop     len=0
  Inst 10297:   nop     len=0
  Inst 10298:   nop     len=0
  Inst 10299:   nop     len=0
  Inst 10300:   nop     len=0
  Inst 10301:   nop     len=0
  Inst 10302:   nop     len=0
  Inst 10303:   nop     len=0
  Inst 10304:   nop     len=0
  Inst 10305:   nop     len=0
  Inst 10306:   nop     len=0
  Inst 10307:   nop     len=0
  Inst 10308:   nop     len=0
  Inst 10309:   nop     len=0
  Inst 10310:   nop     len=0
  Inst 10311:   nop     len=0
  Inst 10312:   nop     len=0
  Inst 10313:   nop     len=0
  Inst 10314:   nop     len=0
  Inst 10315:   nop     len=0
  Inst 10316:   nop     len=0
  Inst 10317:   nop     len=0
  Inst 10318:   nop     len=0
  Inst 10319:   nop     len=0
  Inst 10320:   nop     len=0
  Inst 10321:   nop     len=0
  Inst 10322:   nop     len=0
  Inst 10323:   nop     len=0
  Inst 10324:   nop     len=0
  Inst 10325:   nop     len=0
  Inst 10326:   nop     len=0
  Inst 10327:   nop     len=0
  Inst 10328:   nop     len=0
  Inst 10329:   nop     len=0
  Inst 10330:   nop     len=0
  Inst 10331:   nop     len=0
  Inst 10332:   nop     len=0
  Inst 10333:   nop     len=0
  Inst 10334:   nop     len=0
  Inst 10335:   nop     len=0
  Inst 10336:   nop     len=0
  Inst 10337:   nop     len=0
  Inst 10338:   nop     len=0
  Inst 10339:   nop     len=0
  Inst 10340:   nop     len=0
  Inst 10341:   nop     len=0
  Inst 10342:   nop     len=0
  Inst 10343:   nop     len=0
  Inst 10344:   nop     len=0
  Inst 10345:   nop     len=0
  Inst 10346:   nop     len=0
  Inst 10347:   nop     len=0
  Inst 10348:   nop     len=0
  Inst 10349:   jmp     label428
Block 428:
  (original IR block: block214)
  (successor: Block 429)
  (successor: Block 430)
  (instruction range: 10350 .. 10361)
  Inst 10350:   movq    rsp(2064 + virtual offset), %rsi
  Inst 10351:   movq    8(%rsi), %rdi
  Inst 10352:   movq    rsp(2048 + virtual offset), %rsi
  Inst 10353:   load_ext_name u0:2+0, %rax
  Inst 10354:   movq    %rsi, rsp(608 + virtual offset)
  Inst 10355:   movq    %rdi, rsp(624 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10356:   call    *%rax
  Inst 10357:   movq    %rax, %r15
  Inst 10358:   movq    %rdx, %r14
  Inst 10359:   testq   %r14, %r14
  Inst 10360:   jz      label429; j label430
Block 429:
  (successor: Block 432)
  (instruction range: 10361 .. 10416)
  Inst 10361:   movq    %r15, rsp(608 + virtual offset)
  Inst 10362:   nop     len=0
  Inst 10363:   nop     len=0
  Inst 10364:   nop     len=0
  Inst 10365:   nop     len=0
  Inst 10366:   nop     len=0
  Inst 10367:   nop     len=0
  Inst 10368:   nop     len=0
  Inst 10369:   nop     len=0
  Inst 10370:   nop     len=0
  Inst 10371:   nop     len=0
  Inst 10372:   nop     len=0
  Inst 10373:   nop     len=0
  Inst 10374:   nop     len=0
  Inst 10375:   nop     len=0
  Inst 10376:   nop     len=0
  Inst 10377:   nop     len=0
  Inst 10378:   nop     len=0
  Inst 10379:   nop     len=0
  Inst 10380:   nop     len=0
  Inst 10381:   nop     len=0
  Inst 10382:   nop     len=0
  Inst 10383:   nop     len=0
  Inst 10384:   nop     len=0
  Inst 10385:   nop     len=0
  Inst 10386:   nop     len=0
  Inst 10387:   nop     len=0
  Inst 10388:   nop     len=0
  Inst 10389:   nop     len=0
  Inst 10390:   nop     len=0
  Inst 10391:   nop     len=0
  Inst 10392:   nop     len=0
  Inst 10393:   nop     len=0
  Inst 10394:   nop     len=0
  Inst 10395:   nop     len=0
  Inst 10396:   nop     len=0
  Inst 10397:   nop     len=0
  Inst 10398:   nop     len=0
  Inst 10399:   nop     len=0
  Inst 10400:   nop     len=0
  Inst 10401:   nop     len=0
  Inst 10402:   nop     len=0
  Inst 10403:   nop     len=0
  Inst 10404:   nop     len=0
  Inst 10405:   nop     len=0
  Inst 10406:   nop     len=0
  Inst 10407:   nop     len=0
  Inst 10408:   nop     len=0
  Inst 10409:   nop     len=0
  Inst 10410:   nop     len=0
  Inst 10411:   nop     len=0
  Inst 10412:   nop     len=0
  Inst 10413:   nop     len=0
  Inst 10414:   nop     len=0
  Inst 10415:   jmp     label432
Block 430:
  (original IR block: block217)
  (successor: Block 431)
  (instruction range: 10416 .. 10445)
  Inst 10416:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10417:   movq    152(%rsi), %r13
  Inst 10418:   movq    %r14, %rbx
  Inst 10419:   addq    $-1, %rbx
  Inst 10420:   movq    %r14, %rdx
  Inst 10421:   shlq    $3, %rdx
  Inst 10422:   movq    %r13, %r12
  Inst 10423:   addq    %rdx, %r12
  Inst 10424:   movq    %r13, %rdi
  Inst 10425:   addq    $-24, %rdi
  Inst 10426:   movq    %r13, %rsi
  Inst 10427:   load_ext_name %Memmove+0, %rax
  Inst 10428:   movq    %r15, rsp(624 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S77, S78, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10429:   call    *%rax
  Inst 10430:   movq    rsp(624 + virtual offset), %r15
  Inst 10431:   load_ext_name u1:1+0, %rsi
  Inst 10432:   movl    $1, %edi
  Inst 10433:   movq    %rdi, -8(%r13,%r14,8)
  Inst 10434:   movl    $1, %edi
  Inst 10435:   movq    %rdi, -16(%r13,%r14,8)
  Inst 10436:   movq    %rsi, -24(%r13,%r14,8)
  Inst 10437:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10438:   movq    %r12, 152(%rsi)
  Inst 10439:   movq    %r15, %rdi
  Inst 10440:   movq    %rbx, %rsi
  Inst 10441:   load_ext_name u0:3+0, %rax
  Inst 10442:   movq    %rdi, rsp(608 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10443:   call    *%rax
  Inst 10444:   jmp     label431
Block 431:
  (successor: Block 432)
  (instruction range: 10445 .. 10500)
  Inst 10445:   movq    %rax, rsp(608 + virtual offset)
  Inst 10446:   nop     len=0
  Inst 10447:   nop     len=0
  Inst 10448:   nop     len=0
  Inst 10449:   nop     len=0
  Inst 10450:   nop     len=0
  Inst 10451:   nop     len=0
  Inst 10452:   nop     len=0
  Inst 10453:   nop     len=0
  Inst 10454:   nop     len=0
  Inst 10455:   nop     len=0
  Inst 10456:   nop     len=0
  Inst 10457:   nop     len=0
  Inst 10458:   nop     len=0
  Inst 10459:   nop     len=0
  Inst 10460:   nop     len=0
  Inst 10461:   nop     len=0
  Inst 10462:   nop     len=0
  Inst 10463:   nop     len=0
  Inst 10464:   nop     len=0
  Inst 10465:   nop     len=0
  Inst 10466:   nop     len=0
  Inst 10467:   nop     len=0
  Inst 10468:   nop     len=0
  Inst 10469:   nop     len=0
  Inst 10470:   nop     len=0
  Inst 10471:   nop     len=0
  Inst 10472:   nop     len=0
  Inst 10473:   nop     len=0
  Inst 10474:   nop     len=0
  Inst 10475:   nop     len=0
  Inst 10476:   nop     len=0
  Inst 10477:   nop     len=0
  Inst 10478:   nop     len=0
  Inst 10479:   nop     len=0
  Inst 10480:   nop     len=0
  Inst 10481:   nop     len=0
  Inst 10482:   nop     len=0
  Inst 10483:   nop     len=0
  Inst 10484:   nop     len=0
  Inst 10485:   nop     len=0
  Inst 10486:   nop     len=0
  Inst 10487:   nop     len=0
  Inst 10488:   nop     len=0
  Inst 10489:   nop     len=0
  Inst 10490:   nop     len=0
  Inst 10491:   nop     len=0
  Inst 10492:   nop     len=0
  Inst 10493:   nop     len=0
  Inst 10494:   nop     len=0
  Inst 10495:   nop     len=0
  Inst 10496:   nop     len=0
  Inst 10497:   nop     len=0
  Inst 10498:   nop     len=0
  Inst 10499:   jmp     label432
Block 432:
  (original IR block: block216)
  (successor: Block 433)
  (successor: Block 434)
  (instruction range: 10500 .. 10511)
  Inst 10500:   movq    rsp(2064 + virtual offset), %rsi
  Inst 10501:   movq    8(%rsi), %rdi
  Inst 10502:   movq    rsp(2048 + virtual offset), %rsi
  Inst 10503:   load_ext_name u0:2+0, %rax
  Inst 10504:   movq    %rsi, rsp(624 + virtual offset)
  Inst 10505:   movq    %rdi, rsp(640 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10506:   call    *%rax
  Inst 10507:   movq    %rax, %rbx
  Inst 10508:   movq    %rdx, %r14
  Inst 10509:   testq   %r14, %r14
  Inst 10510:   jz      label433; j label434
Block 433:
  (successor: Block 436)
  (instruction range: 10511 .. 10567)
  Inst 10511:   movq    %rbx, rsp(1112 + virtual offset)
  Inst 10512:   nop     len=0
  Inst 10513:   nop     len=0
  Inst 10514:   nop     len=0
  Inst 10515:   nop     len=0
  Inst 10516:   nop     len=0
  Inst 10517:   nop     len=0
  Inst 10518:   nop     len=0
  Inst 10519:   nop     len=0
  Inst 10520:   nop     len=0
  Inst 10521:   nop     len=0
  Inst 10522:   nop     len=0
  Inst 10523:   nop     len=0
  Inst 10524:   nop     len=0
  Inst 10525:   nop     len=0
  Inst 10526:   nop     len=0
  Inst 10527:   nop     len=0
  Inst 10528:   nop     len=0
  Inst 10529:   nop     len=0
  Inst 10530:   nop     len=0
  Inst 10531:   nop     len=0
  Inst 10532:   nop     len=0
  Inst 10533:   nop     len=0
  Inst 10534:   nop     len=0
  Inst 10535:   nop     len=0
  Inst 10536:   nop     len=0
  Inst 10537:   nop     len=0
  Inst 10538:   nop     len=0
  Inst 10539:   nop     len=0
  Inst 10540:   nop     len=0
  Inst 10541:   nop     len=0
  Inst 10542:   nop     len=0
  Inst 10543:   nop     len=0
  Inst 10544:   nop     len=0
  Inst 10545:   nop     len=0
  Inst 10546:   nop     len=0
  Inst 10547:   nop     len=0
  Inst 10548:   nop     len=0
  Inst 10549:   nop     len=0
  Inst 10550:   nop     len=0
  Inst 10551:   nop     len=0
  Inst 10552:   nop     len=0
  Inst 10553:   nop     len=0
  Inst 10554:   nop     len=0
  Inst 10555:   nop     len=0
  Inst 10556:   nop     len=0
  Inst 10557:   nop     len=0
  Inst 10558:   nop     len=0
  Inst 10559:   nop     len=0
  Inst 10560:   nop     len=0
  Inst 10561:   nop     len=0
  Inst 10562:   nop     len=0
  Inst 10563:   nop     len=0
  Inst 10564:   nop     len=0
  Inst 10565:   nop     len=0
  Inst 10566:   jmp     label436
Block 434:
  (original IR block: block219)
  (successor: Block 435)
  (instruction range: 10567 .. 10596)
  Inst 10567:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10568:   movq    152(%rsi), %r13
  Inst 10569:   movq    %r14, %r15
  Inst 10570:   addq    $-1, %r15
  Inst 10571:   movq    %r14, %rdx
  Inst 10572:   shlq    $3, %rdx
  Inst 10573:   movq    %r13, %r12
  Inst 10574:   addq    %rdx, %r12
  Inst 10575:   movq    %r13, %rdi
  Inst 10576:   addq    $-24, %rdi
  Inst 10577:   movq    %r13, %rsi
  Inst 10578:   load_ext_name %Memmove+0, %rax
  Inst 10579:   movq    %rbx, rsp(624 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10580:   call    *%rax
  Inst 10581:   movq    rsp(624 + virtual offset), %rbx
  Inst 10582:   load_ext_name u1:1+0, %rsi
  Inst 10583:   movl    $1, %edi
  Inst 10584:   movq    %rdi, -8(%r13,%r14,8)
  Inst 10585:   movl    $1, %edi
  Inst 10586:   movq    %rdi, -16(%r13,%r14,8)
  Inst 10587:   movq    %rsi, -24(%r13,%r14,8)
  Inst 10588:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10589:   movq    %r12, 152(%rsi)
  Inst 10590:   movq    %rbx, %rdi
  Inst 10591:   movq    %r15, %rsi
  Inst 10592:   load_ext_name u0:3+0, %rax
  Inst 10593:   movq    %rdi, rsp(624 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10594:   call    *%rax
  Inst 10595:   jmp     label435
Block 435:
  (successor: Block 436)
  (instruction range: 10596 .. 10652)
  Inst 10596:   movq    %rax, rsp(1112 + virtual offset)
  Inst 10597:   nop     len=0
  Inst 10598:   nop     len=0
  Inst 10599:   nop     len=0
  Inst 10600:   nop     len=0
  Inst 10601:   nop     len=0
  Inst 10602:   nop     len=0
  Inst 10603:   nop     len=0
  Inst 10604:   nop     len=0
  Inst 10605:   nop     len=0
  Inst 10606:   nop     len=0
  Inst 10607:   nop     len=0
  Inst 10608:   nop     len=0
  Inst 10609:   nop     len=0
  Inst 10610:   nop     len=0
  Inst 10611:   nop     len=0
  Inst 10612:   nop     len=0
  Inst 10613:   nop     len=0
  Inst 10614:   nop     len=0
  Inst 10615:   nop     len=0
  Inst 10616:   nop     len=0
  Inst 10617:   nop     len=0
  Inst 10618:   nop     len=0
  Inst 10619:   nop     len=0
  Inst 10620:   nop     len=0
  Inst 10621:   nop     len=0
  Inst 10622:   nop     len=0
  Inst 10623:   nop     len=0
  Inst 10624:   nop     len=0
  Inst 10625:   nop     len=0
  Inst 10626:   nop     len=0
  Inst 10627:   nop     len=0
  Inst 10628:   nop     len=0
  Inst 10629:   nop     len=0
  Inst 10630:   nop     len=0
  Inst 10631:   nop     len=0
  Inst 10632:   nop     len=0
  Inst 10633:   nop     len=0
  Inst 10634:   nop     len=0
  Inst 10635:   nop     len=0
  Inst 10636:   nop     len=0
  Inst 10637:   nop     len=0
  Inst 10638:   nop     len=0
  Inst 10639:   nop     len=0
  Inst 10640:   nop     len=0
  Inst 10641:   nop     len=0
  Inst 10642:   nop     len=0
  Inst 10643:   nop     len=0
  Inst 10644:   nop     len=0
  Inst 10645:   nop     len=0
  Inst 10646:   nop     len=0
  Inst 10647:   nop     len=0
  Inst 10648:   nop     len=0
  Inst 10649:   nop     len=0
  Inst 10650:   nop     len=0
  Inst 10651:   jmp     label436
Block 436:
  (original IR block: block218)
  (successor: Block 437)
  (successor: Block 438)
  (instruction range: 10652 .. 10663)
  Inst 10652:   movq    rsp(2064 + virtual offset), %rsi
  Inst 10653:   movq    8(%rsi), %rdi
  Inst 10654:   movq    rsp(2048 + virtual offset), %rsi
  Inst 10655:   load_ext_name u0:2+0, %rax
  Inst 10656:   movq    %rsi, rsp(624 + virtual offset)
  Inst 10657:   movq    %rdi, rsp(640 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10658:   call    *%rax
  Inst 10659:   movq    %rax, %rbx
  Inst 10660:   movq    %rdx, %r14
  Inst 10661:   testq   %r14, %r14
  Inst 10662:   jz      label437; j label438
Block 437:
  (successor: Block 440)
  (instruction range: 10663 .. 10719)
  Inst 10663:   movq    %rbx, rsp(624 + virtual offset)
  Inst 10664:   nop     len=0
  Inst 10665:   nop     len=0
  Inst 10666:   nop     len=0
  Inst 10667:   nop     len=0
  Inst 10668:   nop     len=0
  Inst 10669:   nop     len=0
  Inst 10670:   nop     len=0
  Inst 10671:   nop     len=0
  Inst 10672:   nop     len=0
  Inst 10673:   nop     len=0
  Inst 10674:   nop     len=0
  Inst 10675:   nop     len=0
  Inst 10676:   nop     len=0
  Inst 10677:   nop     len=0
  Inst 10678:   nop     len=0
  Inst 10679:   nop     len=0
  Inst 10680:   nop     len=0
  Inst 10681:   nop     len=0
  Inst 10682:   nop     len=0
  Inst 10683:   nop     len=0
  Inst 10684:   nop     len=0
  Inst 10685:   nop     len=0
  Inst 10686:   nop     len=0
  Inst 10687:   nop     len=0
  Inst 10688:   nop     len=0
  Inst 10689:   nop     len=0
  Inst 10690:   nop     len=0
  Inst 10691:   nop     len=0
  Inst 10692:   nop     len=0
  Inst 10693:   nop     len=0
  Inst 10694:   nop     len=0
  Inst 10695:   nop     len=0
  Inst 10696:   nop     len=0
  Inst 10697:   nop     len=0
  Inst 10698:   nop     len=0
  Inst 10699:   nop     len=0
  Inst 10700:   nop     len=0
  Inst 10701:   nop     len=0
  Inst 10702:   nop     len=0
  Inst 10703:   nop     len=0
  Inst 10704:   nop     len=0
  Inst 10705:   nop     len=0
  Inst 10706:   nop     len=0
  Inst 10707:   nop     len=0
  Inst 10708:   nop     len=0
  Inst 10709:   nop     len=0
  Inst 10710:   nop     len=0
  Inst 10711:   nop     len=0
  Inst 10712:   nop     len=0
  Inst 10713:   nop     len=0
  Inst 10714:   nop     len=0
  Inst 10715:   nop     len=0
  Inst 10716:   nop     len=0
  Inst 10717:   nop     len=0
  Inst 10718:   jmp     label440
Block 438:
  (original IR block: block221)
  (successor: Block 439)
  (instruction range: 10719 .. 10748)
  Inst 10719:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10720:   movq    152(%rsi), %r13
  Inst 10721:   movq    %r14, %r15
  Inst 10722:   addq    $-1, %r15
  Inst 10723:   movq    %r14, %rdx
  Inst 10724:   shlq    $3, %rdx
  Inst 10725:   movq    %r13, %r12
  Inst 10726:   addq    %rdx, %r12
  Inst 10727:   movq    %r13, %rdi
  Inst 10728:   addq    $-24, %rdi
  Inst 10729:   movq    %r13, %rsi
  Inst 10730:   load_ext_name %Memmove+0, %rax
  Inst 10731:   movq    %rbx, rsp(640 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S79, S80, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10732:   call    *%rax
  Inst 10733:   movq    rsp(640 + virtual offset), %rbx
  Inst 10734:   load_ext_name u1:1+0, %rsi
  Inst 10735:   movl    $1, %edi
  Inst 10736:   movq    %rdi, -8(%r13,%r14,8)
  Inst 10737:   movl    $1, %edi
  Inst 10738:   movq    %rdi, -16(%r13,%r14,8)
  Inst 10739:   movq    %rsi, -24(%r13,%r14,8)
  Inst 10740:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10741:   movq    %r12, 152(%rsi)
  Inst 10742:   movq    %rbx, %rdi
  Inst 10743:   movq    %r15, %rsi
  Inst 10744:   load_ext_name u0:3+0, %rax
  Inst 10745:   movq    %rdi, rsp(624 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10746:   call    *%rax
  Inst 10747:   jmp     label439
Block 439:
  (successor: Block 440)
  (instruction range: 10748 .. 10804)
  Inst 10748:   movq    %rax, rsp(624 + virtual offset)
  Inst 10749:   nop     len=0
  Inst 10750:   nop     len=0
  Inst 10751:   nop     len=0
  Inst 10752:   nop     len=0
  Inst 10753:   nop     len=0
  Inst 10754:   nop     len=0
  Inst 10755:   nop     len=0
  Inst 10756:   nop     len=0
  Inst 10757:   nop     len=0
  Inst 10758:   nop     len=0
  Inst 10759:   nop     len=0
  Inst 10760:   nop     len=0
  Inst 10761:   nop     len=0
  Inst 10762:   nop     len=0
  Inst 10763:   nop     len=0
  Inst 10764:   nop     len=0
  Inst 10765:   nop     len=0
  Inst 10766:   nop     len=0
  Inst 10767:   nop     len=0
  Inst 10768:   nop     len=0
  Inst 10769:   nop     len=0
  Inst 10770:   nop     len=0
  Inst 10771:   nop     len=0
  Inst 10772:   nop     len=0
  Inst 10773:   nop     len=0
  Inst 10774:   nop     len=0
  Inst 10775:   nop     len=0
  Inst 10776:   nop     len=0
  Inst 10777:   nop     len=0
  Inst 10778:   nop     len=0
  Inst 10779:   nop     len=0
  Inst 10780:   nop     len=0
  Inst 10781:   nop     len=0
  Inst 10782:   nop     len=0
  Inst 10783:   nop     len=0
  Inst 10784:   nop     len=0
  Inst 10785:   nop     len=0
  Inst 10786:   nop     len=0
  Inst 10787:   nop     len=0
  Inst 10788:   nop     len=0
  Inst 10789:   nop     len=0
  Inst 10790:   nop     len=0
  Inst 10791:   nop     len=0
  Inst 10792:   nop     len=0
  Inst 10793:   nop     len=0
  Inst 10794:   nop     len=0
  Inst 10795:   nop     len=0
  Inst 10796:   nop     len=0
  Inst 10797:   nop     len=0
  Inst 10798:   nop     len=0
  Inst 10799:   nop     len=0
  Inst 10800:   nop     len=0
  Inst 10801:   nop     len=0
  Inst 10802:   nop     len=0
  Inst 10803:   jmp     label440
Block 440:
  (original IR block: block220)
  (successor: Block 441)
  (successor: Block 442)
  (instruction range: 10804 .. 10815)
  Inst 10804:   movq    rsp(2064 + virtual offset), %rsi
  Inst 10805:   movq    8(%rsi), %rdi
  Inst 10806:   movq    rsp(2048 + virtual offset), %rsi
  Inst 10807:   load_ext_name u0:2+0, %rax
  Inst 10808:   movq    %rsi, rsp(640 + virtual offset)
  Inst 10809:   movq    %rdi, rsp(656 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10810:   call    *%rax
  Inst 10811:   movq    %rax, %r15
  Inst 10812:   movq    %rdx, %r14
  Inst 10813:   testq   %r14, %r14
  Inst 10814:   jz      label441; j label442
Block 441:
  (successor: Block 444)
  (instruction range: 10815 .. 10872)
  Inst 10815:   movq    %r15, rsp(1128 + virtual offset)
  Inst 10816:   nop     len=0
  Inst 10817:   nop     len=0
  Inst 10818:   nop     len=0
  Inst 10819:   nop     len=0
  Inst 10820:   nop     len=0
  Inst 10821:   nop     len=0
  Inst 10822:   nop     len=0
  Inst 10823:   nop     len=0
  Inst 10824:   nop     len=0
  Inst 10825:   nop     len=0
  Inst 10826:   nop     len=0
  Inst 10827:   nop     len=0
  Inst 10828:   nop     len=0
  Inst 10829:   nop     len=0
  Inst 10830:   nop     len=0
  Inst 10831:   nop     len=0
  Inst 10832:   nop     len=0
  Inst 10833:   nop     len=0
  Inst 10834:   nop     len=0
  Inst 10835:   nop     len=0
  Inst 10836:   nop     len=0
  Inst 10837:   nop     len=0
  Inst 10838:   nop     len=0
  Inst 10839:   nop     len=0
  Inst 10840:   nop     len=0
  Inst 10841:   nop     len=0
  Inst 10842:   nop     len=0
  Inst 10843:   nop     len=0
  Inst 10844:   nop     len=0
  Inst 10845:   nop     len=0
  Inst 10846:   nop     len=0
  Inst 10847:   nop     len=0
  Inst 10848:   nop     len=0
  Inst 10849:   nop     len=0
  Inst 10850:   nop     len=0
  Inst 10851:   nop     len=0
  Inst 10852:   nop     len=0
  Inst 10853:   nop     len=0
  Inst 10854:   nop     len=0
  Inst 10855:   nop     len=0
  Inst 10856:   nop     len=0
  Inst 10857:   nop     len=0
  Inst 10858:   nop     len=0
  Inst 10859:   nop     len=0
  Inst 10860:   nop     len=0
  Inst 10861:   nop     len=0
  Inst 10862:   nop     len=0
  Inst 10863:   nop     len=0
  Inst 10864:   nop     len=0
  Inst 10865:   nop     len=0
  Inst 10866:   nop     len=0
  Inst 10867:   nop     len=0
  Inst 10868:   nop     len=0
  Inst 10869:   nop     len=0
  Inst 10870:   nop     len=0
  Inst 10871:   jmp     label444
Block 442:
  (original IR block: block223)
  (successor: Block 443)
  (instruction range: 10872 .. 10901)
  Inst 10872:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10873:   movq    152(%rsi), %r13
  Inst 10874:   movq    %r14, %rbx
  Inst 10875:   addq    $-1, %rbx
  Inst 10876:   movq    %r14, %rdx
  Inst 10877:   shlq    $3, %rdx
  Inst 10878:   movq    %r13, %r12
  Inst 10879:   addq    %rdx, %r12
  Inst 10880:   movq    %r13, %rdi
  Inst 10881:   addq    $-24, %rdi
  Inst 10882:   movq    %r13, %rsi
  Inst 10883:   load_ext_name %Memmove+0, %rax
  Inst 10884:   movq    %r15, rsp(640 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10885:   call    *%rax
  Inst 10886:   movq    rsp(640 + virtual offset), %r15
  Inst 10887:   load_ext_name u1:1+0, %rsi
  Inst 10888:   movl    $1, %edi
  Inst 10889:   movq    %rdi, -8(%r13,%r14,8)
  Inst 10890:   movl    $1, %edi
  Inst 10891:   movq    %rdi, -16(%r13,%r14,8)
  Inst 10892:   movq    %rsi, -24(%r13,%r14,8)
  Inst 10893:   movq    rsp(2072 + virtual offset), %rsi
  Inst 10894:   movq    %r12, 152(%rsi)
  Inst 10895:   movq    %r15, %rdi
  Inst 10896:   movq    %rbx, %rsi
  Inst 10897:   load_ext_name u0:3+0, %rax
  Inst 10898:   movq    %rdi, rsp(640 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10899:   call    *%rax
  Inst 10900:   jmp     label443
Block 443:
  (successor: Block 444)
  (instruction range: 10901 .. 10958)
  Inst 10901:   movq    %rax, rsp(1128 + virtual offset)
  Inst 10902:   nop     len=0
  Inst 10903:   nop     len=0
  Inst 10904:   nop     len=0
  Inst 10905:   nop     len=0
  Inst 10906:   nop     len=0
  Inst 10907:   nop     len=0
  Inst 10908:   nop     len=0
  Inst 10909:   nop     len=0
  Inst 10910:   nop     len=0
  Inst 10911:   nop     len=0
  Inst 10912:   nop     len=0
  Inst 10913:   nop     len=0
  Inst 10914:   nop     len=0
  Inst 10915:   nop     len=0
  Inst 10916:   nop     len=0
  Inst 10917:   nop     len=0
  Inst 10918:   nop     len=0
  Inst 10919:   nop     len=0
  Inst 10920:   nop     len=0
  Inst 10921:   nop     len=0
  Inst 10922:   nop     len=0
  Inst 10923:   nop     len=0
  Inst 10924:   nop     len=0
  Inst 10925:   nop     len=0
  Inst 10926:   nop     len=0
  Inst 10927:   nop     len=0
  Inst 10928:   nop     len=0
  Inst 10929:   nop     len=0
  Inst 10930:   nop     len=0
  Inst 10931:   nop     len=0
  Inst 10932:   nop     len=0
  Inst 10933:   nop     len=0
  Inst 10934:   nop     len=0
  Inst 10935:   nop     len=0
  Inst 10936:   nop     len=0
  Inst 10937:   nop     len=0
  Inst 10938:   nop     len=0
  Inst 10939:   nop     len=0
  Inst 10940:   nop     len=0
  Inst 10941:   nop     len=0
  Inst 10942:   nop     len=0
  Inst 10943:   nop     len=0
  Inst 10944:   nop     len=0
  Inst 10945:   nop     len=0
  Inst 10946:   nop     len=0
  Inst 10947:   nop     len=0
  Inst 10948:   nop     len=0
  Inst 10949:   nop     len=0
  Inst 10950:   nop     len=0
  Inst 10951:   nop     len=0
  Inst 10952:   nop     len=0
  Inst 10953:   nop     len=0
  Inst 10954:   nop     len=0
  Inst 10955:   nop     len=0
  Inst 10956:   nop     len=0
  Inst 10957:   jmp     label444
Block 444:
  (original IR block: block222)
  (successor: Block 445)
  (successor: Block 446)
  (instruction range: 10958 .. 10969)
  Inst 10958:   movq    rsp(2064 + virtual offset), %rsi
  Inst 10959:   movq    8(%rsi), %rdi
  Inst 10960:   movq    rsp(2048 + virtual offset), %rsi
  Inst 10961:   load_ext_name u0:2+0, %rax
  Inst 10962:   movq    %rsi, rsp(640 + virtual offset)
  Inst 10963:   movq    %rdi, rsp(656 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 10964:   call    *%rax
  Inst 10965:   movq    %rax, %rbx
  Inst 10966:   movq    %rdx, %r14
  Inst 10967:   testq   %r14, %r14
  Inst 10968:   jz      label445; j label446
Block 445:
  (successor: Block 448)
  (instruction range: 10969 .. 11026)
  Inst 10969:   movq    %rbx, rsp(640 + virtual offset)
  Inst 10970:   nop     len=0
  Inst 10971:   nop     len=0
  Inst 10972:   nop     len=0
  Inst 10973:   nop     len=0
  Inst 10974:   nop     len=0
  Inst 10975:   nop     len=0
  Inst 10976:   nop     len=0
  Inst 10977:   nop     len=0
  Inst 10978:   nop     len=0
  Inst 10979:   nop     len=0
  Inst 10980:   nop     len=0
  Inst 10981:   nop     len=0
  Inst 10982:   nop     len=0
  Inst 10983:   nop     len=0
  Inst 10984:   nop     len=0
  Inst 10985:   nop     len=0
  Inst 10986:   nop     len=0
  Inst 10987:   nop     len=0
  Inst 10988:   nop     len=0
  Inst 10989:   nop     len=0
  Inst 10990:   nop     len=0
  Inst 10991:   nop     len=0
  Inst 10992:   nop     len=0
  Inst 10993:   nop     len=0
  Inst 10994:   nop     len=0
  Inst 10995:   nop     len=0
  Inst 10996:   nop     len=0
  Inst 10997:   nop     len=0
  Inst 10998:   nop     len=0
  Inst 10999:   nop     len=0
  Inst 11000:   nop     len=0
  Inst 11001:   nop     len=0
  Inst 11002:   nop     len=0
  Inst 11003:   nop     len=0
  Inst 11004:   nop     len=0
  Inst 11005:   nop     len=0
  Inst 11006:   nop     len=0
  Inst 11007:   nop     len=0
  Inst 11008:   nop     len=0
  Inst 11009:   nop     len=0
  Inst 11010:   nop     len=0
  Inst 11011:   nop     len=0
  Inst 11012:   nop     len=0
  Inst 11013:   nop     len=0
  Inst 11014:   nop     len=0
  Inst 11015:   nop     len=0
  Inst 11016:   nop     len=0
  Inst 11017:   nop     len=0
  Inst 11018:   nop     len=0
  Inst 11019:   nop     len=0
  Inst 11020:   nop     len=0
  Inst 11021:   nop     len=0
  Inst 11022:   nop     len=0
  Inst 11023:   nop     len=0
  Inst 11024:   nop     len=0
  Inst 11025:   jmp     label448
Block 446:
  (original IR block: block225)
  (successor: Block 447)
  (instruction range: 11026 .. 11055)
  Inst 11026:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11027:   movq    152(%rsi), %r13
  Inst 11028:   movq    %r14, %r15
  Inst 11029:   addq    $-1, %r15
  Inst 11030:   movq    %r14, %rdx
  Inst 11031:   shlq    $3, %rdx
  Inst 11032:   movq    %r13, %r12
  Inst 11033:   addq    %rdx, %r12
  Inst 11034:   movq    %r13, %rdi
  Inst 11035:   addq    $-24, %rdi
  Inst 11036:   movq    %r13, %rsi
  Inst 11037:   load_ext_name %Memmove+0, %rax
  Inst 11038:   movq    %rbx, rsp(656 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S81, S82, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11039:   call    *%rax
  Inst 11040:   movq    rsp(656 + virtual offset), %rbx
  Inst 11041:   load_ext_name u1:1+0, %rsi
  Inst 11042:   movl    $1, %edi
  Inst 11043:   movq    %rdi, -8(%r13,%r14,8)
  Inst 11044:   movl    $1, %edi
  Inst 11045:   movq    %rdi, -16(%r13,%r14,8)
  Inst 11046:   movq    %rsi, -24(%r13,%r14,8)
  Inst 11047:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11048:   movq    %r12, 152(%rsi)
  Inst 11049:   movq    %rbx, %rdi
  Inst 11050:   movq    %r15, %rsi
  Inst 11051:   load_ext_name u0:3+0, %rax
  Inst 11052:   movq    %rdi, rsp(640 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11053:   call    *%rax
  Inst 11054:   jmp     label447
Block 447:
  (successor: Block 448)
  (instruction range: 11055 .. 11112)
  Inst 11055:   movq    %rax, rsp(640 + virtual offset)
  Inst 11056:   nop     len=0
  Inst 11057:   nop     len=0
  Inst 11058:   nop     len=0
  Inst 11059:   nop     len=0
  Inst 11060:   nop     len=0
  Inst 11061:   nop     len=0
  Inst 11062:   nop     len=0
  Inst 11063:   nop     len=0
  Inst 11064:   nop     len=0
  Inst 11065:   nop     len=0
  Inst 11066:   nop     len=0
  Inst 11067:   nop     len=0
  Inst 11068:   nop     len=0
  Inst 11069:   nop     len=0
  Inst 11070:   nop     len=0
  Inst 11071:   nop     len=0
  Inst 11072:   nop     len=0
  Inst 11073:   nop     len=0
  Inst 11074:   nop     len=0
  Inst 11075:   nop     len=0
  Inst 11076:   nop     len=0
  Inst 11077:   nop     len=0
  Inst 11078:   nop     len=0
  Inst 11079:   nop     len=0
  Inst 11080:   nop     len=0
  Inst 11081:   nop     len=0
  Inst 11082:   nop     len=0
  Inst 11083:   nop     len=0
  Inst 11084:   nop     len=0
  Inst 11085:   nop     len=0
  Inst 11086:   nop     len=0
  Inst 11087:   nop     len=0
  Inst 11088:   nop     len=0
  Inst 11089:   nop     len=0
  Inst 11090:   nop     len=0
  Inst 11091:   nop     len=0
  Inst 11092:   nop     len=0
  Inst 11093:   nop     len=0
  Inst 11094:   nop     len=0
  Inst 11095:   nop     len=0
  Inst 11096:   nop     len=0
  Inst 11097:   nop     len=0
  Inst 11098:   nop     len=0
  Inst 11099:   nop     len=0
  Inst 11100:   nop     len=0
  Inst 11101:   nop     len=0
  Inst 11102:   nop     len=0
  Inst 11103:   nop     len=0
  Inst 11104:   nop     len=0
  Inst 11105:   nop     len=0
  Inst 11106:   nop     len=0
  Inst 11107:   nop     len=0
  Inst 11108:   nop     len=0
  Inst 11109:   nop     len=0
  Inst 11110:   nop     len=0
  Inst 11111:   jmp     label448
Block 448:
  (original IR block: block224)
  (successor: Block 449)
  (successor: Block 450)
  (instruction range: 11112 .. 11123)
  Inst 11112:   movq    rsp(2064 + virtual offset), %rsi
  Inst 11113:   movq    8(%rsi), %rdi
  Inst 11114:   movq    rsp(2048 + virtual offset), %rsi
  Inst 11115:   load_ext_name u0:2+0, %rax
  Inst 11116:   movq    %rsi, rsp(656 + virtual offset)
  Inst 11117:   movq    %rdi, rsp(672 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11118:   call    *%rax
  Inst 11119:   movq    %rax, %rbx
  Inst 11120:   movq    %rdx, %r14
  Inst 11121:   testq   %r14, %r14
  Inst 11122:   jz      label449; j label450
Block 449:
  (successor: Block 452)
  (instruction range: 11123 .. 11181)
  Inst 11123:   movq    %rbx, rsp(1144 + virtual offset)
  Inst 11124:   nop     len=0
  Inst 11125:   nop     len=0
  Inst 11126:   nop     len=0
  Inst 11127:   nop     len=0
  Inst 11128:   nop     len=0
  Inst 11129:   nop     len=0
  Inst 11130:   nop     len=0
  Inst 11131:   nop     len=0
  Inst 11132:   nop     len=0
  Inst 11133:   nop     len=0
  Inst 11134:   nop     len=0
  Inst 11135:   nop     len=0
  Inst 11136:   nop     len=0
  Inst 11137:   nop     len=0
  Inst 11138:   nop     len=0
  Inst 11139:   nop     len=0
  Inst 11140:   nop     len=0
  Inst 11141:   nop     len=0
  Inst 11142:   nop     len=0
  Inst 11143:   nop     len=0
  Inst 11144:   nop     len=0
  Inst 11145:   nop     len=0
  Inst 11146:   nop     len=0
  Inst 11147:   nop     len=0
  Inst 11148:   nop     len=0
  Inst 11149:   nop     len=0
  Inst 11150:   nop     len=0
  Inst 11151:   nop     len=0
  Inst 11152:   nop     len=0
  Inst 11153:   nop     len=0
  Inst 11154:   nop     len=0
  Inst 11155:   nop     len=0
  Inst 11156:   nop     len=0
  Inst 11157:   nop     len=0
  Inst 11158:   nop     len=0
  Inst 11159:   nop     len=0
  Inst 11160:   nop     len=0
  Inst 11161:   nop     len=0
  Inst 11162:   nop     len=0
  Inst 11163:   nop     len=0
  Inst 11164:   nop     len=0
  Inst 11165:   nop     len=0
  Inst 11166:   nop     len=0
  Inst 11167:   nop     len=0
  Inst 11168:   nop     len=0
  Inst 11169:   nop     len=0
  Inst 11170:   nop     len=0
  Inst 11171:   nop     len=0
  Inst 11172:   nop     len=0
  Inst 11173:   nop     len=0
  Inst 11174:   nop     len=0
  Inst 11175:   nop     len=0
  Inst 11176:   nop     len=0
  Inst 11177:   nop     len=0
  Inst 11178:   nop     len=0
  Inst 11179:   nop     len=0
  Inst 11180:   jmp     label452
Block 450:
  (original IR block: block227)
  (successor: Block 451)
  (instruction range: 11181 .. 11210)
  Inst 11181:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11182:   movq    152(%rsi), %r13
  Inst 11183:   movq    %r14, %r15
  Inst 11184:   addq    $-1, %r15
  Inst 11185:   movq    %r14, %rdx
  Inst 11186:   shlq    $3, %rdx
  Inst 11187:   movq    %r13, %r12
  Inst 11188:   addq    %rdx, %r12
  Inst 11189:   movq    %r13, %rdi
  Inst 11190:   addq    $-24, %rdi
  Inst 11191:   movq    %r13, %rsi
  Inst 11192:   load_ext_name %Memmove+0, %rax
  Inst 11193:   movq    %rbx, rsp(656 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11194:   call    *%rax
  Inst 11195:   movq    rsp(656 + virtual offset), %rbx
  Inst 11196:   load_ext_name u1:1+0, %rsi
  Inst 11197:   movl    $1, %edi
  Inst 11198:   movq    %rdi, -8(%r13,%r14,8)
  Inst 11199:   movl    $1, %edi
  Inst 11200:   movq    %rdi, -16(%r13,%r14,8)
  Inst 11201:   movq    %rsi, -24(%r13,%r14,8)
  Inst 11202:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11203:   movq    %r12, 152(%rsi)
  Inst 11204:   movq    %rbx, %rdi
  Inst 11205:   movq    %r15, %rsi
  Inst 11206:   load_ext_name u0:3+0, %rax
  Inst 11207:   movq    %rdi, rsp(656 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11208:   call    *%rax
  Inst 11209:   jmp     label451
Block 451:
  (successor: Block 452)
  (instruction range: 11210 .. 11268)
  Inst 11210:   movq    %rax, rsp(1144 + virtual offset)
  Inst 11211:   nop     len=0
  Inst 11212:   nop     len=0
  Inst 11213:   nop     len=0
  Inst 11214:   nop     len=0
  Inst 11215:   nop     len=0
  Inst 11216:   nop     len=0
  Inst 11217:   nop     len=0
  Inst 11218:   nop     len=0
  Inst 11219:   nop     len=0
  Inst 11220:   nop     len=0
  Inst 11221:   nop     len=0
  Inst 11222:   nop     len=0
  Inst 11223:   nop     len=0
  Inst 11224:   nop     len=0
  Inst 11225:   nop     len=0
  Inst 11226:   nop     len=0
  Inst 11227:   nop     len=0
  Inst 11228:   nop     len=0
  Inst 11229:   nop     len=0
  Inst 11230:   nop     len=0
  Inst 11231:   nop     len=0
  Inst 11232:   nop     len=0
  Inst 11233:   nop     len=0
  Inst 11234:   nop     len=0
  Inst 11235:   nop     len=0
  Inst 11236:   nop     len=0
  Inst 11237:   nop     len=0
  Inst 11238:   nop     len=0
  Inst 11239:   nop     len=0
  Inst 11240:   nop     len=0
  Inst 11241:   nop     len=0
  Inst 11242:   nop     len=0
  Inst 11243:   nop     len=0
  Inst 11244:   nop     len=0
  Inst 11245:   nop     len=0
  Inst 11246:   nop     len=0
  Inst 11247:   nop     len=0
  Inst 11248:   nop     len=0
  Inst 11249:   nop     len=0
  Inst 11250:   nop     len=0
  Inst 11251:   nop     len=0
  Inst 11252:   nop     len=0
  Inst 11253:   nop     len=0
  Inst 11254:   nop     len=0
  Inst 11255:   nop     len=0
  Inst 11256:   nop     len=0
  Inst 11257:   nop     len=0
  Inst 11258:   nop     len=0
  Inst 11259:   nop     len=0
  Inst 11260:   nop     len=0
  Inst 11261:   nop     len=0
  Inst 11262:   nop     len=0
  Inst 11263:   nop     len=0
  Inst 11264:   nop     len=0
  Inst 11265:   nop     len=0
  Inst 11266:   nop     len=0
  Inst 11267:   jmp     label452
Block 452:
  (original IR block: block226)
  (successor: Block 453)
  (successor: Block 454)
  (instruction range: 11268 .. 11279)
  Inst 11268:   movq    rsp(2064 + virtual offset), %rsi
  Inst 11269:   movq    8(%rsi), %rdi
  Inst 11270:   movq    rsp(2048 + virtual offset), %rsi
  Inst 11271:   load_ext_name u0:2+0, %rax
  Inst 11272:   movq    %rsi, rsp(656 + virtual offset)
  Inst 11273:   movq    %rdi, rsp(672 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11274:   call    *%rax
  Inst 11275:   movq    %rax, %r15
  Inst 11276:   movq    %rdx, %r14
  Inst 11277:   testq   %r14, %r14
  Inst 11278:   jz      label453; j label454
Block 453:
  (successor: Block 456)
  (instruction range: 11279 .. 11337)
  Inst 11279:   movq    %r15, rsp(656 + virtual offset)
  Inst 11280:   nop     len=0
  Inst 11281:   nop     len=0
  Inst 11282:   nop     len=0
  Inst 11283:   nop     len=0
  Inst 11284:   nop     len=0
  Inst 11285:   nop     len=0
  Inst 11286:   nop     len=0
  Inst 11287:   nop     len=0
  Inst 11288:   nop     len=0
  Inst 11289:   nop     len=0
  Inst 11290:   nop     len=0
  Inst 11291:   nop     len=0
  Inst 11292:   nop     len=0
  Inst 11293:   nop     len=0
  Inst 11294:   nop     len=0
  Inst 11295:   nop     len=0
  Inst 11296:   nop     len=0
  Inst 11297:   nop     len=0
  Inst 11298:   nop     len=0
  Inst 11299:   nop     len=0
  Inst 11300:   nop     len=0
  Inst 11301:   nop     len=0
  Inst 11302:   nop     len=0
  Inst 11303:   nop     len=0
  Inst 11304:   nop     len=0
  Inst 11305:   nop     len=0
  Inst 11306:   nop     len=0
  Inst 11307:   nop     len=0
  Inst 11308:   nop     len=0
  Inst 11309:   nop     len=0
  Inst 11310:   nop     len=0
  Inst 11311:   nop     len=0
  Inst 11312:   nop     len=0
  Inst 11313:   nop     len=0
  Inst 11314:   nop     len=0
  Inst 11315:   nop     len=0
  Inst 11316:   nop     len=0
  Inst 11317:   nop     len=0
  Inst 11318:   nop     len=0
  Inst 11319:   nop     len=0
  Inst 11320:   nop     len=0
  Inst 11321:   nop     len=0
  Inst 11322:   nop     len=0
  Inst 11323:   nop     len=0
  Inst 11324:   nop     len=0
  Inst 11325:   nop     len=0
  Inst 11326:   nop     len=0
  Inst 11327:   nop     len=0
  Inst 11328:   nop     len=0
  Inst 11329:   nop     len=0
  Inst 11330:   nop     len=0
  Inst 11331:   nop     len=0
  Inst 11332:   nop     len=0
  Inst 11333:   nop     len=0
  Inst 11334:   nop     len=0
  Inst 11335:   nop     len=0
  Inst 11336:   jmp     label456
Block 454:
  (original IR block: block229)
  (successor: Block 455)
  (instruction range: 11337 .. 11366)
  Inst 11337:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11338:   movq    152(%rsi), %r13
  Inst 11339:   movq    %r14, %rbx
  Inst 11340:   addq    $-1, %rbx
  Inst 11341:   movq    %r14, %rdx
  Inst 11342:   shlq    $3, %rdx
  Inst 11343:   movq    %r13, %r12
  Inst 11344:   addq    %rdx, %r12
  Inst 11345:   movq    %r13, %rdi
  Inst 11346:   addq    $-24, %rdi
  Inst 11347:   movq    %r13, %rsi
  Inst 11348:   load_ext_name %Memmove+0, %rax
  Inst 11349:   movq    %r15, rsp(672 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S83, S84, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11350:   call    *%rax
  Inst 11351:   movq    rsp(672 + virtual offset), %r15
  Inst 11352:   load_ext_name u1:1+0, %rsi
  Inst 11353:   movl    $1, %edi
  Inst 11354:   movq    %rdi, -8(%r13,%r14,8)
  Inst 11355:   movl    $1, %edi
  Inst 11356:   movq    %rdi, -16(%r13,%r14,8)
  Inst 11357:   movq    %rsi, -24(%r13,%r14,8)
  Inst 11358:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11359:   movq    %r12, 152(%rsi)
  Inst 11360:   movq    %r15, %rdi
  Inst 11361:   movq    %rbx, %rsi
  Inst 11362:   load_ext_name u0:3+0, %rax
  Inst 11363:   movq    %rdi, rsp(656 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11364:   call    *%rax
  Inst 11365:   jmp     label455
Block 455:
  (successor: Block 456)
  (instruction range: 11366 .. 11424)
  Inst 11366:   movq    %rax, rsp(656 + virtual offset)
  Inst 11367:   nop     len=0
  Inst 11368:   nop     len=0
  Inst 11369:   nop     len=0
  Inst 11370:   nop     len=0
  Inst 11371:   nop     len=0
  Inst 11372:   nop     len=0
  Inst 11373:   nop     len=0
  Inst 11374:   nop     len=0
  Inst 11375:   nop     len=0
  Inst 11376:   nop     len=0
  Inst 11377:   nop     len=0
  Inst 11378:   nop     len=0
  Inst 11379:   nop     len=0
  Inst 11380:   nop     len=0
  Inst 11381:   nop     len=0
  Inst 11382:   nop     len=0
  Inst 11383:   nop     len=0
  Inst 11384:   nop     len=0
  Inst 11385:   nop     len=0
  Inst 11386:   nop     len=0
  Inst 11387:   nop     len=0
  Inst 11388:   nop     len=0
  Inst 11389:   nop     len=0
  Inst 11390:   nop     len=0
  Inst 11391:   nop     len=0
  Inst 11392:   nop     len=0
  Inst 11393:   nop     len=0
  Inst 11394:   nop     len=0
  Inst 11395:   nop     len=0
  Inst 11396:   nop     len=0
  Inst 11397:   nop     len=0
  Inst 11398:   nop     len=0
  Inst 11399:   nop     len=0
  Inst 11400:   nop     len=0
  Inst 11401:   nop     len=0
  Inst 11402:   nop     len=0
  Inst 11403:   nop     len=0
  Inst 11404:   nop     len=0
  Inst 11405:   nop     len=0
  Inst 11406:   nop     len=0
  Inst 11407:   nop     len=0
  Inst 11408:   nop     len=0
  Inst 11409:   nop     len=0
  Inst 11410:   nop     len=0
  Inst 11411:   nop     len=0
  Inst 11412:   nop     len=0
  Inst 11413:   nop     len=0
  Inst 11414:   nop     len=0
  Inst 11415:   nop     len=0
  Inst 11416:   nop     len=0
  Inst 11417:   nop     len=0
  Inst 11418:   nop     len=0
  Inst 11419:   nop     len=0
  Inst 11420:   nop     len=0
  Inst 11421:   nop     len=0
  Inst 11422:   nop     len=0
  Inst 11423:   jmp     label456
Block 456:
  (original IR block: block228)
  (successor: Block 457)
  (successor: Block 458)
  (instruction range: 11424 .. 11435)
  Inst 11424:   movq    rsp(2064 + virtual offset), %rsi
  Inst 11425:   movq    8(%rsi), %rdi
  Inst 11426:   movq    rsp(2048 + virtual offset), %rsi
  Inst 11427:   load_ext_name u0:2+0, %rax
  Inst 11428:   movq    %rsi, rsp(672 + virtual offset)
  Inst 11429:   movq    %rdi, rsp(688 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11430:   call    *%rax
  Inst 11431:   movq    %rax, %rbx
  Inst 11432:   movq    %rdx, %r14
  Inst 11433:   testq   %r14, %r14
  Inst 11434:   jz      label457; j label458
Block 457:
  (successor: Block 460)
  (instruction range: 11435 .. 11494)
  Inst 11435:   movq    %rbx, rsp(1160 + virtual offset)
  Inst 11436:   nop     len=0
  Inst 11437:   nop     len=0
  Inst 11438:   nop     len=0
  Inst 11439:   nop     len=0
  Inst 11440:   nop     len=0
  Inst 11441:   nop     len=0
  Inst 11442:   nop     len=0
  Inst 11443:   nop     len=0
  Inst 11444:   nop     len=0
  Inst 11445:   nop     len=0
  Inst 11446:   nop     len=0
  Inst 11447:   nop     len=0
  Inst 11448:   nop     len=0
  Inst 11449:   nop     len=0
  Inst 11450:   nop     len=0
  Inst 11451:   nop     len=0
  Inst 11452:   nop     len=0
  Inst 11453:   nop     len=0
  Inst 11454:   nop     len=0
  Inst 11455:   nop     len=0
  Inst 11456:   nop     len=0
  Inst 11457:   nop     len=0
  Inst 11458:   nop     len=0
  Inst 11459:   nop     len=0
  Inst 11460:   nop     len=0
  Inst 11461:   nop     len=0
  Inst 11462:   nop     len=0
  Inst 11463:   nop     len=0
  Inst 11464:   nop     len=0
  Inst 11465:   nop     len=0
  Inst 11466:   nop     len=0
  Inst 11467:   nop     len=0
  Inst 11468:   nop     len=0
  Inst 11469:   nop     len=0
  Inst 11470:   nop     len=0
  Inst 11471:   nop     len=0
  Inst 11472:   nop     len=0
  Inst 11473:   nop     len=0
  Inst 11474:   nop     len=0
  Inst 11475:   nop     len=0
  Inst 11476:   nop     len=0
  Inst 11477:   nop     len=0
  Inst 11478:   nop     len=0
  Inst 11479:   nop     len=0
  Inst 11480:   nop     len=0
  Inst 11481:   nop     len=0
  Inst 11482:   nop     len=0
  Inst 11483:   nop     len=0
  Inst 11484:   nop     len=0
  Inst 11485:   nop     len=0
  Inst 11486:   nop     len=0
  Inst 11487:   nop     len=0
  Inst 11488:   nop     len=0
  Inst 11489:   nop     len=0
  Inst 11490:   nop     len=0
  Inst 11491:   nop     len=0
  Inst 11492:   nop     len=0
  Inst 11493:   jmp     label460
Block 458:
  (original IR block: block231)
  (successor: Block 459)
  (instruction range: 11494 .. 11523)
  Inst 11494:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11495:   movq    152(%rsi), %r13
  Inst 11496:   movq    %r14, %r15
  Inst 11497:   addq    $-1, %r15
  Inst 11498:   movq    %r14, %rdx
  Inst 11499:   shlq    $3, %rdx
  Inst 11500:   movq    %r13, %r12
  Inst 11501:   addq    %rdx, %r12
  Inst 11502:   movq    %r13, %rdi
  Inst 11503:   addq    $-24, %rdi
  Inst 11504:   movq    %r13, %rsi
  Inst 11505:   load_ext_name %Memmove+0, %rax
  Inst 11506:   movq    %rbx, rsp(672 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11507:   call    *%rax
  Inst 11508:   movq    rsp(672 + virtual offset), %rbx
  Inst 11509:   load_ext_name u1:1+0, %rsi
  Inst 11510:   movl    $1, %edi
  Inst 11511:   movq    %rdi, -8(%r13,%r14,8)
  Inst 11512:   movl    $1, %edi
  Inst 11513:   movq    %rdi, -16(%r13,%r14,8)
  Inst 11514:   movq    %rsi, -24(%r13,%r14,8)
  Inst 11515:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11516:   movq    %r12, 152(%rsi)
  Inst 11517:   movq    %rbx, %rdi
  Inst 11518:   movq    %r15, %rsi
  Inst 11519:   load_ext_name u0:3+0, %rax
  Inst 11520:   movq    %rdi, rsp(672 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11521:   call    *%rax
  Inst 11522:   jmp     label459
Block 459:
  (successor: Block 460)
  (instruction range: 11523 .. 11582)
  Inst 11523:   movq    %rax, rsp(1160 + virtual offset)
  Inst 11524:   nop     len=0
  Inst 11525:   nop     len=0
  Inst 11526:   nop     len=0
  Inst 11527:   nop     len=0
  Inst 11528:   nop     len=0
  Inst 11529:   nop     len=0
  Inst 11530:   nop     len=0
  Inst 11531:   nop     len=0
  Inst 11532:   nop     len=0
  Inst 11533:   nop     len=0
  Inst 11534:   nop     len=0
  Inst 11535:   nop     len=0
  Inst 11536:   nop     len=0
  Inst 11537:   nop     len=0
  Inst 11538:   nop     len=0
  Inst 11539:   nop     len=0
  Inst 11540:   nop     len=0
  Inst 11541:   nop     len=0
  Inst 11542:   nop     len=0
  Inst 11543:   nop     len=0
  Inst 11544:   nop     len=0
  Inst 11545:   nop     len=0
  Inst 11546:   nop     len=0
  Inst 11547:   nop     len=0
  Inst 11548:   nop     len=0
  Inst 11549:   nop     len=0
  Inst 11550:   nop     len=0
  Inst 11551:   nop     len=0
  Inst 11552:   nop     len=0
  Inst 11553:   nop     len=0
  Inst 11554:   nop     len=0
  Inst 11555:   nop     len=0
  Inst 11556:   nop     len=0
  Inst 11557:   nop     len=0
  Inst 11558:   nop     len=0
  Inst 11559:   nop     len=0
  Inst 11560:   nop     len=0
  Inst 11561:   nop     len=0
  Inst 11562:   nop     len=0
  Inst 11563:   nop     len=0
  Inst 11564:   nop     len=0
  Inst 11565:   nop     len=0
  Inst 11566:   nop     len=0
  Inst 11567:   nop     len=0
  Inst 11568:   nop     len=0
  Inst 11569:   nop     len=0
  Inst 11570:   nop     len=0
  Inst 11571:   nop     len=0
  Inst 11572:   nop     len=0
  Inst 11573:   nop     len=0
  Inst 11574:   nop     len=0
  Inst 11575:   nop     len=0
  Inst 11576:   nop     len=0
  Inst 11577:   nop     len=0
  Inst 11578:   nop     len=0
  Inst 11579:   nop     len=0
  Inst 11580:   nop     len=0
  Inst 11581:   jmp     label460
Block 460:
  (original IR block: block230)
  (successor: Block 461)
  (successor: Block 462)
  (instruction range: 11582 .. 11593)
  Inst 11582:   movq    rsp(2064 + virtual offset), %rsi
  Inst 11583:   movq    8(%rsi), %rdi
  Inst 11584:   movq    rsp(2048 + virtual offset), %rsi
  Inst 11585:   load_ext_name u0:2+0, %rax
  Inst 11586:   movq    %rsi, rsp(672 + virtual offset)
  Inst 11587:   movq    %rdi, rsp(688 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11588:   call    *%rax
  Inst 11589:   movq    %rax, %rbx
  Inst 11590:   movq    %rdx, %r14
  Inst 11591:   testq   %r14, %r14
  Inst 11592:   jz      label461; j label462
Block 461:
  (successor: Block 464)
  (instruction range: 11593 .. 11652)
  Inst 11593:   movq    %rbx, rsp(672 + virtual offset)
  Inst 11594:   nop     len=0
  Inst 11595:   nop     len=0
  Inst 11596:   nop     len=0
  Inst 11597:   nop     len=0
  Inst 11598:   nop     len=0
  Inst 11599:   nop     len=0
  Inst 11600:   nop     len=0
  Inst 11601:   nop     len=0
  Inst 11602:   nop     len=0
  Inst 11603:   nop     len=0
  Inst 11604:   nop     len=0
  Inst 11605:   nop     len=0
  Inst 11606:   nop     len=0
  Inst 11607:   nop     len=0
  Inst 11608:   nop     len=0
  Inst 11609:   nop     len=0
  Inst 11610:   nop     len=0
  Inst 11611:   nop     len=0
  Inst 11612:   nop     len=0
  Inst 11613:   nop     len=0
  Inst 11614:   nop     len=0
  Inst 11615:   nop     len=0
  Inst 11616:   nop     len=0
  Inst 11617:   nop     len=0
  Inst 11618:   nop     len=0
  Inst 11619:   nop     len=0
  Inst 11620:   nop     len=0
  Inst 11621:   nop     len=0
  Inst 11622:   nop     len=0
  Inst 11623:   nop     len=0
  Inst 11624:   nop     len=0
  Inst 11625:   nop     len=0
  Inst 11626:   nop     len=0
  Inst 11627:   nop     len=0
  Inst 11628:   nop     len=0
  Inst 11629:   nop     len=0
  Inst 11630:   nop     len=0
  Inst 11631:   nop     len=0
  Inst 11632:   nop     len=0
  Inst 11633:   nop     len=0
  Inst 11634:   nop     len=0
  Inst 11635:   nop     len=0
  Inst 11636:   nop     len=0
  Inst 11637:   nop     len=0
  Inst 11638:   nop     len=0
  Inst 11639:   nop     len=0
  Inst 11640:   nop     len=0
  Inst 11641:   nop     len=0
  Inst 11642:   nop     len=0
  Inst 11643:   nop     len=0
  Inst 11644:   nop     len=0
  Inst 11645:   nop     len=0
  Inst 11646:   nop     len=0
  Inst 11647:   nop     len=0
  Inst 11648:   nop     len=0
  Inst 11649:   nop     len=0
  Inst 11650:   nop     len=0
  Inst 11651:   jmp     label464
Block 462:
  (original IR block: block233)
  (successor: Block 463)
  (instruction range: 11652 .. 11681)
  Inst 11652:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11653:   movq    152(%rsi), %r13
  Inst 11654:   movq    %r14, %r15
  Inst 11655:   addq    $-1, %r15
  Inst 11656:   movq    %r14, %rdx
  Inst 11657:   shlq    $3, %rdx
  Inst 11658:   movq    %r13, %r12
  Inst 11659:   addq    %rdx, %r12
  Inst 11660:   movq    %r13, %rdi
  Inst 11661:   addq    $-24, %rdi
  Inst 11662:   movq    %r13, %rsi
  Inst 11663:   load_ext_name %Memmove+0, %rax
  Inst 11664:   movq    %rbx, rsp(688 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S85, S86, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11665:   call    *%rax
  Inst 11666:   movq    rsp(688 + virtual offset), %rbx
  Inst 11667:   load_ext_name u1:1+0, %rsi
  Inst 11668:   movl    $1, %edi
  Inst 11669:   movq    %rdi, -8(%r13,%r14,8)
  Inst 11670:   movl    $1, %edi
  Inst 11671:   movq    %rdi, -16(%r13,%r14,8)
  Inst 11672:   movq    %rsi, -24(%r13,%r14,8)
  Inst 11673:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11674:   movq    %r12, 152(%rsi)
  Inst 11675:   movq    %rbx, %rdi
  Inst 11676:   movq    %r15, %rsi
  Inst 11677:   load_ext_name u0:3+0, %rax
  Inst 11678:   movq    %rdi, rsp(672 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11679:   call    *%rax
  Inst 11680:   jmp     label463
Block 463:
  (successor: Block 464)
  (instruction range: 11681 .. 11740)
  Inst 11681:   movq    %rax, rsp(672 + virtual offset)
  Inst 11682:   nop     len=0
  Inst 11683:   nop     len=0
  Inst 11684:   nop     len=0
  Inst 11685:   nop     len=0
  Inst 11686:   nop     len=0
  Inst 11687:   nop     len=0
  Inst 11688:   nop     len=0
  Inst 11689:   nop     len=0
  Inst 11690:   nop     len=0
  Inst 11691:   nop     len=0
  Inst 11692:   nop     len=0
  Inst 11693:   nop     len=0
  Inst 11694:   nop     len=0
  Inst 11695:   nop     len=0
  Inst 11696:   nop     len=0
  Inst 11697:   nop     len=0
  Inst 11698:   nop     len=0
  Inst 11699:   nop     len=0
  Inst 11700:   nop     len=0
  Inst 11701:   nop     len=0
  Inst 11702:   nop     len=0
  Inst 11703:   nop     len=0
  Inst 11704:   nop     len=0
  Inst 11705:   nop     len=0
  Inst 11706:   nop     len=0
  Inst 11707:   nop     len=0
  Inst 11708:   nop     len=0
  Inst 11709:   nop     len=0
  Inst 11710:   nop     len=0
  Inst 11711:   nop     len=0
  Inst 11712:   nop     len=0
  Inst 11713:   nop     len=0
  Inst 11714:   nop     len=0
  Inst 11715:   nop     len=0
  Inst 11716:   nop     len=0
  Inst 11717:   nop     len=0
  Inst 11718:   nop     len=0
  Inst 11719:   nop     len=0
  Inst 11720:   nop     len=0
  Inst 11721:   nop     len=0
  Inst 11722:   nop     len=0
  Inst 11723:   nop     len=0
  Inst 11724:   nop     len=0
  Inst 11725:   nop     len=0
  Inst 11726:   nop     len=0
  Inst 11727:   nop     len=0
  Inst 11728:   nop     len=0
  Inst 11729:   nop     len=0
  Inst 11730:   nop     len=0
  Inst 11731:   nop     len=0
  Inst 11732:   nop     len=0
  Inst 11733:   nop     len=0
  Inst 11734:   nop     len=0
  Inst 11735:   nop     len=0
  Inst 11736:   nop     len=0
  Inst 11737:   nop     len=0
  Inst 11738:   nop     len=0
  Inst 11739:   jmp     label464
Block 464:
  (original IR block: block232)
  (successor: Block 465)
  (successor: Block 466)
  (instruction range: 11740 .. 11751)
  Inst 11740:   movq    rsp(2064 + virtual offset), %rsi
  Inst 11741:   movq    8(%rsi), %rdi
  Inst 11742:   movq    rsp(2048 + virtual offset), %rsi
  Inst 11743:   load_ext_name u0:2+0, %rax
  Inst 11744:   movq    %rsi, rsp(688 + virtual offset)
  Inst 11745:   movq    %rdi, rsp(704 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11746:   call    *%rax
  Inst 11747:   movq    %rax, %r15
  Inst 11748:   movq    %rdx, %r14
  Inst 11749:   testq   %r14, %r14
  Inst 11750:   jz      label465; j label466
Block 465:
  (successor: Block 468)
  (instruction range: 11751 .. 11811)
  Inst 11751:   movq    %r15, rsp(1176 + virtual offset)
  Inst 11752:   nop     len=0
  Inst 11753:   nop     len=0
  Inst 11754:   nop     len=0
  Inst 11755:   nop     len=0
  Inst 11756:   nop     len=0
  Inst 11757:   nop     len=0
  Inst 11758:   nop     len=0
  Inst 11759:   nop     len=0
  Inst 11760:   nop     len=0
  Inst 11761:   nop     len=0
  Inst 11762:   nop     len=0
  Inst 11763:   nop     len=0
  Inst 11764:   nop     len=0
  Inst 11765:   nop     len=0
  Inst 11766:   nop     len=0
  Inst 11767:   nop     len=0
  Inst 11768:   nop     len=0
  Inst 11769:   nop     len=0
  Inst 11770:   nop     len=0
  Inst 11771:   nop     len=0
  Inst 11772:   nop     len=0
  Inst 11773:   nop     len=0
  Inst 11774:   nop     len=0
  Inst 11775:   nop     len=0
  Inst 11776:   nop     len=0
  Inst 11777:   nop     len=0
  Inst 11778:   nop     len=0
  Inst 11779:   nop     len=0
  Inst 11780:   nop     len=0
  Inst 11781:   nop     len=0
  Inst 11782:   nop     len=0
  Inst 11783:   nop     len=0
  Inst 11784:   nop     len=0
  Inst 11785:   nop     len=0
  Inst 11786:   nop     len=0
  Inst 11787:   nop     len=0
  Inst 11788:   nop     len=0
  Inst 11789:   nop     len=0
  Inst 11790:   nop     len=0
  Inst 11791:   nop     len=0
  Inst 11792:   nop     len=0
  Inst 11793:   nop     len=0
  Inst 11794:   nop     len=0
  Inst 11795:   nop     len=0
  Inst 11796:   nop     len=0
  Inst 11797:   nop     len=0
  Inst 11798:   nop     len=0
  Inst 11799:   nop     len=0
  Inst 11800:   nop     len=0
  Inst 11801:   nop     len=0
  Inst 11802:   nop     len=0
  Inst 11803:   nop     len=0
  Inst 11804:   nop     len=0
  Inst 11805:   nop     len=0
  Inst 11806:   nop     len=0
  Inst 11807:   nop     len=0
  Inst 11808:   nop     len=0
  Inst 11809:   nop     len=0
  Inst 11810:   jmp     label468
Block 466:
  (original IR block: block235)
  (successor: Block 467)
  (instruction range: 11811 .. 11840)
  Inst 11811:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11812:   movq    152(%rsi), %r13
  Inst 11813:   movq    %r14, %rbx
  Inst 11814:   addq    $-1, %rbx
  Inst 11815:   movq    %r14, %rdx
  Inst 11816:   shlq    $3, %rdx
  Inst 11817:   movq    %r13, %r12
  Inst 11818:   addq    %rdx, %r12
  Inst 11819:   movq    %r13, %rdi
  Inst 11820:   addq    $-24, %rdi
  Inst 11821:   movq    %r13, %rsi
  Inst 11822:   load_ext_name %Memmove+0, %rax
  Inst 11823:   movq    %r15, rsp(688 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11824:   call    *%rax
  Inst 11825:   movq    rsp(688 + virtual offset), %r15
  Inst 11826:   load_ext_name u1:1+0, %rsi
  Inst 11827:   movl    $1, %edi
  Inst 11828:   movq    %rdi, -8(%r13,%r14,8)
  Inst 11829:   movl    $1, %edi
  Inst 11830:   movq    %rdi, -16(%r13,%r14,8)
  Inst 11831:   movq    %rsi, -24(%r13,%r14,8)
  Inst 11832:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11833:   movq    %r12, 152(%rsi)
  Inst 11834:   movq    %r15, %rdi
  Inst 11835:   movq    %rbx, %rsi
  Inst 11836:   load_ext_name u0:3+0, %rax
  Inst 11837:   movq    %rdi, rsp(688 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11838:   call    *%rax
  Inst 11839:   jmp     label467
Block 467:
  (successor: Block 468)
  (instruction range: 11840 .. 11900)
  Inst 11840:   movq    %rax, rsp(1176 + virtual offset)
  Inst 11841:   nop     len=0
  Inst 11842:   nop     len=0
  Inst 11843:   nop     len=0
  Inst 11844:   nop     len=0
  Inst 11845:   nop     len=0
  Inst 11846:   nop     len=0
  Inst 11847:   nop     len=0
  Inst 11848:   nop     len=0
  Inst 11849:   nop     len=0
  Inst 11850:   nop     len=0
  Inst 11851:   nop     len=0
  Inst 11852:   nop     len=0
  Inst 11853:   nop     len=0
  Inst 11854:   nop     len=0
  Inst 11855:   nop     len=0
  Inst 11856:   nop     len=0
  Inst 11857:   nop     len=0
  Inst 11858:   nop     len=0
  Inst 11859:   nop     len=0
  Inst 11860:   nop     len=0
  Inst 11861:   nop     len=0
  Inst 11862:   nop     len=0
  Inst 11863:   nop     len=0
  Inst 11864:   nop     len=0
  Inst 11865:   nop     len=0
  Inst 11866:   nop     len=0
  Inst 11867:   nop     len=0
  Inst 11868:   nop     len=0
  Inst 11869:   nop     len=0
  Inst 11870:   nop     len=0
  Inst 11871:   nop     len=0
  Inst 11872:   nop     len=0
  Inst 11873:   nop     len=0
  Inst 11874:   nop     len=0
  Inst 11875:   nop     len=0
  Inst 11876:   nop     len=0
  Inst 11877:   nop     len=0
  Inst 11878:   nop     len=0
  Inst 11879:   nop     len=0
  Inst 11880:   nop     len=0
  Inst 11881:   nop     len=0
  Inst 11882:   nop     len=0
  Inst 11883:   nop     len=0
  Inst 11884:   nop     len=0
  Inst 11885:   nop     len=0
  Inst 11886:   nop     len=0
  Inst 11887:   nop     len=0
  Inst 11888:   nop     len=0
  Inst 11889:   nop     len=0
  Inst 11890:   nop     len=0
  Inst 11891:   nop     len=0
  Inst 11892:   nop     len=0
  Inst 11893:   nop     len=0
  Inst 11894:   nop     len=0
  Inst 11895:   nop     len=0
  Inst 11896:   nop     len=0
  Inst 11897:   nop     len=0
  Inst 11898:   nop     len=0
  Inst 11899:   jmp     label468
Block 468:
  (original IR block: block234)
  (successor: Block 469)
  (successor: Block 470)
  (instruction range: 11900 .. 11911)
  Inst 11900:   movq    rsp(2064 + virtual offset), %rsi
  Inst 11901:   movq    8(%rsi), %rdi
  Inst 11902:   movq    rsp(2048 + virtual offset), %rsi
  Inst 11903:   load_ext_name u0:2+0, %rax
  Inst 11904:   movq    %rsi, rsp(688 + virtual offset)
  Inst 11905:   movq    %rdi, rsp(704 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11906:   call    *%rax
  Inst 11907:   movq    %rax, %rbx
  Inst 11908:   movq    %rdx, %r14
  Inst 11909:   testq   %r14, %r14
  Inst 11910:   jz      label469; j label470
Block 469:
  (successor: Block 472)
  (instruction range: 11911 .. 11971)
  Inst 11911:   movq    %rbx, rsp(688 + virtual offset)
  Inst 11912:   nop     len=0
  Inst 11913:   nop     len=0
  Inst 11914:   nop     len=0
  Inst 11915:   nop     len=0
  Inst 11916:   nop     len=0
  Inst 11917:   nop     len=0
  Inst 11918:   nop     len=0
  Inst 11919:   nop     len=0
  Inst 11920:   nop     len=0
  Inst 11921:   nop     len=0
  Inst 11922:   nop     len=0
  Inst 11923:   nop     len=0
  Inst 11924:   nop     len=0
  Inst 11925:   nop     len=0
  Inst 11926:   nop     len=0
  Inst 11927:   nop     len=0
  Inst 11928:   nop     len=0
  Inst 11929:   nop     len=0
  Inst 11930:   nop     len=0
  Inst 11931:   nop     len=0
  Inst 11932:   nop     len=0
  Inst 11933:   nop     len=0
  Inst 11934:   nop     len=0
  Inst 11935:   nop     len=0
  Inst 11936:   nop     len=0
  Inst 11937:   nop     len=0
  Inst 11938:   nop     len=0
  Inst 11939:   nop     len=0
  Inst 11940:   nop     len=0
  Inst 11941:   nop     len=0
  Inst 11942:   nop     len=0
  Inst 11943:   nop     len=0
  Inst 11944:   nop     len=0
  Inst 11945:   nop     len=0
  Inst 11946:   nop     len=0
  Inst 11947:   nop     len=0
  Inst 11948:   nop     len=0
  Inst 11949:   nop     len=0
  Inst 11950:   nop     len=0
  Inst 11951:   nop     len=0
  Inst 11952:   nop     len=0
  Inst 11953:   nop     len=0
  Inst 11954:   nop     len=0
  Inst 11955:   nop     len=0
  Inst 11956:   nop     len=0
  Inst 11957:   nop     len=0
  Inst 11958:   nop     len=0
  Inst 11959:   nop     len=0
  Inst 11960:   nop     len=0
  Inst 11961:   nop     len=0
  Inst 11962:   nop     len=0
  Inst 11963:   nop     len=0
  Inst 11964:   nop     len=0
  Inst 11965:   nop     len=0
  Inst 11966:   nop     len=0
  Inst 11967:   nop     len=0
  Inst 11968:   nop     len=0
  Inst 11969:   nop     len=0
  Inst 11970:   jmp     label472
Block 470:
  (original IR block: block237)
  (successor: Block 471)
  (instruction range: 11971 .. 12000)
  Inst 11971:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11972:   movq    152(%rsi), %r13
  Inst 11973:   movq    %r14, %r15
  Inst 11974:   addq    $-1, %r15
  Inst 11975:   movq    %r14, %rdx
  Inst 11976:   shlq    $3, %rdx
  Inst 11977:   movq    %r13, %r12
  Inst 11978:   addq    %rdx, %r12
  Inst 11979:   movq    %r13, %rdi
  Inst 11980:   addq    $-24, %rdi
  Inst 11981:   movq    %r13, %rsi
  Inst 11982:   load_ext_name %Memmove+0, %rax
  Inst 11983:   movq    %rbx, rsp(704 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S87, S88, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11984:   call    *%rax
  Inst 11985:   movq    rsp(704 + virtual offset), %rbx
  Inst 11986:   load_ext_name u1:1+0, %rsi
  Inst 11987:   movl    $1, %edi
  Inst 11988:   movq    %rdi, -8(%r13,%r14,8)
  Inst 11989:   movl    $1, %edi
  Inst 11990:   movq    %rdi, -16(%r13,%r14,8)
  Inst 11991:   movq    %rsi, -24(%r13,%r14,8)
  Inst 11992:   movq    rsp(2072 + virtual offset), %rsi
  Inst 11993:   movq    %r12, 152(%rsi)
  Inst 11994:   movq    %rbx, %rdi
  Inst 11995:   movq    %r15, %rsi
  Inst 11996:   load_ext_name u0:3+0, %rax
  Inst 11997:   movq    %rdi, rsp(688 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 11998:   call    *%rax
  Inst 11999:   jmp     label471
Block 471:
  (successor: Block 472)
  (instruction range: 12000 .. 12060)
  Inst 12000:   movq    %rax, rsp(688 + virtual offset)
  Inst 12001:   nop     len=0
  Inst 12002:   nop     len=0
  Inst 12003:   nop     len=0
  Inst 12004:   nop     len=0
  Inst 12005:   nop     len=0
  Inst 12006:   nop     len=0
  Inst 12007:   nop     len=0
  Inst 12008:   nop     len=0
  Inst 12009:   nop     len=0
  Inst 12010:   nop     len=0
  Inst 12011:   nop     len=0
  Inst 12012:   nop     len=0
  Inst 12013:   nop     len=0
  Inst 12014:   nop     len=0
  Inst 12015:   nop     len=0
  Inst 12016:   nop     len=0
  Inst 12017:   nop     len=0
  Inst 12018:   nop     len=0
  Inst 12019:   nop     len=0
  Inst 12020:   nop     len=0
  Inst 12021:   nop     len=0
  Inst 12022:   nop     len=0
  Inst 12023:   nop     len=0
  Inst 12024:   nop     len=0
  Inst 12025:   nop     len=0
  Inst 12026:   nop     len=0
  Inst 12027:   nop     len=0
  Inst 12028:   nop     len=0
  Inst 12029:   nop     len=0
  Inst 12030:   nop     len=0
  Inst 12031:   nop     len=0
  Inst 12032:   nop     len=0
  Inst 12033:   nop     len=0
  Inst 12034:   nop     len=0
  Inst 12035:   nop     len=0
  Inst 12036:   nop     len=0
  Inst 12037:   nop     len=0
  Inst 12038:   nop     len=0
  Inst 12039:   nop     len=0
  Inst 12040:   nop     len=0
  Inst 12041:   nop     len=0
  Inst 12042:   nop     len=0
  Inst 12043:   nop     len=0
  Inst 12044:   nop     len=0
  Inst 12045:   nop     len=0
  Inst 12046:   nop     len=0
  Inst 12047:   nop     len=0
  Inst 12048:   nop     len=0
  Inst 12049:   nop     len=0
  Inst 12050:   nop     len=0
  Inst 12051:   nop     len=0
  Inst 12052:   nop     len=0
  Inst 12053:   nop     len=0
  Inst 12054:   nop     len=0
  Inst 12055:   nop     len=0
  Inst 12056:   nop     len=0
  Inst 12057:   nop     len=0
  Inst 12058:   nop     len=0
  Inst 12059:   jmp     label472
Block 472:
  (original IR block: block236)
  (successor: Block 473)
  (successor: Block 474)
  (instruction range: 12060 .. 12071)
  Inst 12060:   movq    rsp(2064 + virtual offset), %rsi
  Inst 12061:   movq    8(%rsi), %rdi
  Inst 12062:   movq    rsp(2048 + virtual offset), %rsi
  Inst 12063:   load_ext_name u0:2+0, %rax
  Inst 12064:   movq    %rsi, rsp(704 + virtual offset)
  Inst 12065:   movq    %rdi, rsp(720 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12066:   call    *%rax
  Inst 12067:   movq    %rax, %rbx
  Inst 12068:   movq    %rdx, %r14
  Inst 12069:   testq   %r14, %r14
  Inst 12070:   jz      label473; j label474
Block 473:
  (successor: Block 476)
  (instruction range: 12071 .. 12132)
  Inst 12071:   movq    %rbx, rsp(1192 + virtual offset)
  Inst 12072:   nop     len=0
  Inst 12073:   nop     len=0
  Inst 12074:   nop     len=0
  Inst 12075:   nop     len=0
  Inst 12076:   nop     len=0
  Inst 12077:   nop     len=0
  Inst 12078:   nop     len=0
  Inst 12079:   nop     len=0
  Inst 12080:   nop     len=0
  Inst 12081:   nop     len=0
  Inst 12082:   nop     len=0
  Inst 12083:   nop     len=0
  Inst 12084:   nop     len=0
  Inst 12085:   nop     len=0
  Inst 12086:   nop     len=0
  Inst 12087:   nop     len=0
  Inst 12088:   nop     len=0
  Inst 12089:   nop     len=0
  Inst 12090:   nop     len=0
  Inst 12091:   nop     len=0
  Inst 12092:   nop     len=0
  Inst 12093:   nop     len=0
  Inst 12094:   nop     len=0
  Inst 12095:   nop     len=0
  Inst 12096:   nop     len=0
  Inst 12097:   nop     len=0
  Inst 12098:   nop     len=0
  Inst 12099:   nop     len=0
  Inst 12100:   nop     len=0
  Inst 12101:   nop     len=0
  Inst 12102:   nop     len=0
  Inst 12103:   nop     len=0
  Inst 12104:   nop     len=0
  Inst 12105:   nop     len=0
  Inst 12106:   nop     len=0
  Inst 12107:   nop     len=0
  Inst 12108:   nop     len=0
  Inst 12109:   nop     len=0
  Inst 12110:   nop     len=0
  Inst 12111:   nop     len=0
  Inst 12112:   nop     len=0
  Inst 12113:   nop     len=0
  Inst 12114:   nop     len=0
  Inst 12115:   nop     len=0
  Inst 12116:   nop     len=0
  Inst 12117:   nop     len=0
  Inst 12118:   nop     len=0
  Inst 12119:   nop     len=0
  Inst 12120:   nop     len=0
  Inst 12121:   nop     len=0
  Inst 12122:   nop     len=0
  Inst 12123:   nop     len=0
  Inst 12124:   nop     len=0
  Inst 12125:   nop     len=0
  Inst 12126:   nop     len=0
  Inst 12127:   nop     len=0
  Inst 12128:   nop     len=0
  Inst 12129:   nop     len=0
  Inst 12130:   nop     len=0
  Inst 12131:   jmp     label476
Block 474:
  (original IR block: block239)
  (successor: Block 475)
  (instruction range: 12132 .. 12161)
  Inst 12132:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12133:   movq    152(%rsi), %r13
  Inst 12134:   movq    %r14, %r15
  Inst 12135:   addq    $-1, %r15
  Inst 12136:   movq    %r14, %rdx
  Inst 12137:   shlq    $3, %rdx
  Inst 12138:   movq    %r13, %r12
  Inst 12139:   addq    %rdx, %r12
  Inst 12140:   movq    %r13, %rdi
  Inst 12141:   addq    $-24, %rdi
  Inst 12142:   movq    %r13, %rsi
  Inst 12143:   load_ext_name %Memmove+0, %rax
  Inst 12144:   movq    %rbx, rsp(704 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12145:   call    *%rax
  Inst 12146:   movq    rsp(704 + virtual offset), %rbx
  Inst 12147:   load_ext_name u1:1+0, %rsi
  Inst 12148:   movl    $1, %edi
  Inst 12149:   movq    %rdi, -8(%r13,%r14,8)
  Inst 12150:   movl    $1, %edi
  Inst 12151:   movq    %rdi, -16(%r13,%r14,8)
  Inst 12152:   movq    %rsi, -24(%r13,%r14,8)
  Inst 12153:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12154:   movq    %r12, 152(%rsi)
  Inst 12155:   movq    %rbx, %rdi
  Inst 12156:   movq    %r15, %rsi
  Inst 12157:   load_ext_name u0:3+0, %rax
  Inst 12158:   movq    %rdi, rsp(704 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12159:   call    *%rax
  Inst 12160:   jmp     label475
Block 475:
  (successor: Block 476)
  (instruction range: 12161 .. 12222)
  Inst 12161:   movq    %rax, rsp(1192 + virtual offset)
  Inst 12162:   nop     len=0
  Inst 12163:   nop     len=0
  Inst 12164:   nop     len=0
  Inst 12165:   nop     len=0
  Inst 12166:   nop     len=0
  Inst 12167:   nop     len=0
  Inst 12168:   nop     len=0
  Inst 12169:   nop     len=0
  Inst 12170:   nop     len=0
  Inst 12171:   nop     len=0
  Inst 12172:   nop     len=0
  Inst 12173:   nop     len=0
  Inst 12174:   nop     len=0
  Inst 12175:   nop     len=0
  Inst 12176:   nop     len=0
  Inst 12177:   nop     len=0
  Inst 12178:   nop     len=0
  Inst 12179:   nop     len=0
  Inst 12180:   nop     len=0
  Inst 12181:   nop     len=0
  Inst 12182:   nop     len=0
  Inst 12183:   nop     len=0
  Inst 12184:   nop     len=0
  Inst 12185:   nop     len=0
  Inst 12186:   nop     len=0
  Inst 12187:   nop     len=0
  Inst 12188:   nop     len=0
  Inst 12189:   nop     len=0
  Inst 12190:   nop     len=0
  Inst 12191:   nop     len=0
  Inst 12192:   nop     len=0
  Inst 12193:   nop     len=0
  Inst 12194:   nop     len=0
  Inst 12195:   nop     len=0
  Inst 12196:   nop     len=0
  Inst 12197:   nop     len=0
  Inst 12198:   nop     len=0
  Inst 12199:   nop     len=0
  Inst 12200:   nop     len=0
  Inst 12201:   nop     len=0
  Inst 12202:   nop     len=0
  Inst 12203:   nop     len=0
  Inst 12204:   nop     len=0
  Inst 12205:   nop     len=0
  Inst 12206:   nop     len=0
  Inst 12207:   nop     len=0
  Inst 12208:   nop     len=0
  Inst 12209:   nop     len=0
  Inst 12210:   nop     len=0
  Inst 12211:   nop     len=0
  Inst 12212:   nop     len=0
  Inst 12213:   nop     len=0
  Inst 12214:   nop     len=0
  Inst 12215:   nop     len=0
  Inst 12216:   nop     len=0
  Inst 12217:   nop     len=0
  Inst 12218:   nop     len=0
  Inst 12219:   nop     len=0
  Inst 12220:   nop     len=0
  Inst 12221:   jmp     label476
Block 476:
  (original IR block: block238)
  (successor: Block 477)
  (successor: Block 478)
  (instruction range: 12222 .. 12233)
  Inst 12222:   movq    rsp(2064 + virtual offset), %rsi
  Inst 12223:   movq    8(%rsi), %rdi
  Inst 12224:   movq    rsp(2048 + virtual offset), %rsi
  Inst 12225:   load_ext_name u0:2+0, %rax
  Inst 12226:   movq    %rsi, rsp(704 + virtual offset)
  Inst 12227:   movq    %rdi, rsp(720 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12228:   call    *%rax
  Inst 12229:   movq    %rax, %r15
  Inst 12230:   movq    %rdx, %r14
  Inst 12231:   testq   %r14, %r14
  Inst 12232:   jz      label477; j label478
Block 477:
  (successor: Block 480)
  (instruction range: 12233 .. 12294)
  Inst 12233:   movq    %r15, rsp(704 + virtual offset)
  Inst 12234:   nop     len=0
  Inst 12235:   nop     len=0
  Inst 12236:   nop     len=0
  Inst 12237:   nop     len=0
  Inst 12238:   nop     len=0
  Inst 12239:   nop     len=0
  Inst 12240:   nop     len=0
  Inst 12241:   nop     len=0
  Inst 12242:   nop     len=0
  Inst 12243:   nop     len=0
  Inst 12244:   nop     len=0
  Inst 12245:   nop     len=0
  Inst 12246:   nop     len=0
  Inst 12247:   nop     len=0
  Inst 12248:   nop     len=0
  Inst 12249:   nop     len=0
  Inst 12250:   nop     len=0
  Inst 12251:   nop     len=0
  Inst 12252:   nop     len=0
  Inst 12253:   nop     len=0
  Inst 12254:   nop     len=0
  Inst 12255:   nop     len=0
  Inst 12256:   nop     len=0
  Inst 12257:   nop     len=0
  Inst 12258:   nop     len=0
  Inst 12259:   nop     len=0
  Inst 12260:   nop     len=0
  Inst 12261:   nop     len=0
  Inst 12262:   nop     len=0
  Inst 12263:   nop     len=0
  Inst 12264:   nop     len=0
  Inst 12265:   nop     len=0
  Inst 12266:   nop     len=0
  Inst 12267:   nop     len=0
  Inst 12268:   nop     len=0
  Inst 12269:   nop     len=0
  Inst 12270:   nop     len=0
  Inst 12271:   nop     len=0
  Inst 12272:   nop     len=0
  Inst 12273:   nop     len=0
  Inst 12274:   nop     len=0
  Inst 12275:   nop     len=0
  Inst 12276:   nop     len=0
  Inst 12277:   nop     len=0
  Inst 12278:   nop     len=0
  Inst 12279:   nop     len=0
  Inst 12280:   nop     len=0
  Inst 12281:   nop     len=0
  Inst 12282:   nop     len=0
  Inst 12283:   nop     len=0
  Inst 12284:   nop     len=0
  Inst 12285:   nop     len=0
  Inst 12286:   nop     len=0
  Inst 12287:   nop     len=0
  Inst 12288:   nop     len=0
  Inst 12289:   nop     len=0
  Inst 12290:   nop     len=0
  Inst 12291:   nop     len=0
  Inst 12292:   nop     len=0
  Inst 12293:   jmp     label480
Block 478:
  (original IR block: block241)
  (successor: Block 479)
  (instruction range: 12294 .. 12323)
  Inst 12294:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12295:   movq    152(%rsi), %r13
  Inst 12296:   movq    %r14, %rbx
  Inst 12297:   addq    $-1, %rbx
  Inst 12298:   movq    %r14, %rdx
  Inst 12299:   shlq    $3, %rdx
  Inst 12300:   movq    %r13, %r12
  Inst 12301:   addq    %rdx, %r12
  Inst 12302:   movq    %r13, %rdi
  Inst 12303:   addq    $-24, %rdi
  Inst 12304:   movq    %r13, %rsi
  Inst 12305:   load_ext_name %Memmove+0, %rax
  Inst 12306:   movq    %r15, rsp(720 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S89, S90, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12307:   call    *%rax
  Inst 12308:   movq    rsp(720 + virtual offset), %r15
  Inst 12309:   load_ext_name u1:1+0, %rsi
  Inst 12310:   movl    $1, %edi
  Inst 12311:   movq    %rdi, -8(%r13,%r14,8)
  Inst 12312:   movl    $1, %edi
  Inst 12313:   movq    %rdi, -16(%r13,%r14,8)
  Inst 12314:   movq    %rsi, -24(%r13,%r14,8)
  Inst 12315:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12316:   movq    %r12, 152(%rsi)
  Inst 12317:   movq    %r15, %rdi
  Inst 12318:   movq    %rbx, %rsi
  Inst 12319:   load_ext_name u0:3+0, %rax
  Inst 12320:   movq    %rdi, rsp(704 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12321:   call    *%rax
  Inst 12322:   jmp     label479
Block 479:
  (successor: Block 480)
  (instruction range: 12323 .. 12384)
  Inst 12323:   movq    %rax, rsp(704 + virtual offset)
  Inst 12324:   nop     len=0
  Inst 12325:   nop     len=0
  Inst 12326:   nop     len=0
  Inst 12327:   nop     len=0
  Inst 12328:   nop     len=0
  Inst 12329:   nop     len=0
  Inst 12330:   nop     len=0
  Inst 12331:   nop     len=0
  Inst 12332:   nop     len=0
  Inst 12333:   nop     len=0
  Inst 12334:   nop     len=0
  Inst 12335:   nop     len=0
  Inst 12336:   nop     len=0
  Inst 12337:   nop     len=0
  Inst 12338:   nop     len=0
  Inst 12339:   nop     len=0
  Inst 12340:   nop     len=0
  Inst 12341:   nop     len=0
  Inst 12342:   nop     len=0
  Inst 12343:   nop     len=0
  Inst 12344:   nop     len=0
  Inst 12345:   nop     len=0
  Inst 12346:   nop     len=0
  Inst 12347:   nop     len=0
  Inst 12348:   nop     len=0
  Inst 12349:   nop     len=0
  Inst 12350:   nop     len=0
  Inst 12351:   nop     len=0
  Inst 12352:   nop     len=0
  Inst 12353:   nop     len=0
  Inst 12354:   nop     len=0
  Inst 12355:   nop     len=0
  Inst 12356:   nop     len=0
  Inst 12357:   nop     len=0
  Inst 12358:   nop     len=0
  Inst 12359:   nop     len=0
  Inst 12360:   nop     len=0
  Inst 12361:   nop     len=0
  Inst 12362:   nop     len=0
  Inst 12363:   nop     len=0
  Inst 12364:   nop     len=0
  Inst 12365:   nop     len=0
  Inst 12366:   nop     len=0
  Inst 12367:   nop     len=0
  Inst 12368:   nop     len=0
  Inst 12369:   nop     len=0
  Inst 12370:   nop     len=0
  Inst 12371:   nop     len=0
  Inst 12372:   nop     len=0
  Inst 12373:   nop     len=0
  Inst 12374:   nop     len=0
  Inst 12375:   nop     len=0
  Inst 12376:   nop     len=0
  Inst 12377:   nop     len=0
  Inst 12378:   nop     len=0
  Inst 12379:   nop     len=0
  Inst 12380:   nop     len=0
  Inst 12381:   nop     len=0
  Inst 12382:   nop     len=0
  Inst 12383:   jmp     label480
Block 480:
  (original IR block: block240)
  (successor: Block 481)
  (successor: Block 482)
  (instruction range: 12384 .. 12395)
  Inst 12384:   movq    rsp(2064 + virtual offset), %rsi
  Inst 12385:   movq    8(%rsi), %rdi
  Inst 12386:   movq    rsp(2048 + virtual offset), %rsi
  Inst 12387:   load_ext_name u0:2+0, %rax
  Inst 12388:   movq    %rsi, rsp(720 + virtual offset)
  Inst 12389:   movq    %rdi, rsp(736 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12390:   call    *%rax
  Inst 12391:   movq    %rax, %rbx
  Inst 12392:   movq    %rdx, %r14
  Inst 12393:   testq   %r14, %r14
  Inst 12394:   jz      label481; j label482
Block 481:
  (successor: Block 484)
  (instruction range: 12395 .. 12457)
  Inst 12395:   movq    %rbx, rsp(1208 + virtual offset)
  Inst 12396:   nop     len=0
  Inst 12397:   nop     len=0
  Inst 12398:   nop     len=0
  Inst 12399:   nop     len=0
  Inst 12400:   nop     len=0
  Inst 12401:   nop     len=0
  Inst 12402:   nop     len=0
  Inst 12403:   nop     len=0
  Inst 12404:   nop     len=0
  Inst 12405:   nop     len=0
  Inst 12406:   nop     len=0
  Inst 12407:   nop     len=0
  Inst 12408:   nop     len=0
  Inst 12409:   nop     len=0
  Inst 12410:   nop     len=0
  Inst 12411:   nop     len=0
  Inst 12412:   nop     len=0
  Inst 12413:   nop     len=0
  Inst 12414:   nop     len=0
  Inst 12415:   nop     len=0
  Inst 12416:   nop     len=0
  Inst 12417:   nop     len=0
  Inst 12418:   nop     len=0
  Inst 12419:   nop     len=0
  Inst 12420:   nop     len=0
  Inst 12421:   nop     len=0
  Inst 12422:   nop     len=0
  Inst 12423:   nop     len=0
  Inst 12424:   nop     len=0
  Inst 12425:   nop     len=0
  Inst 12426:   nop     len=0
  Inst 12427:   nop     len=0
  Inst 12428:   nop     len=0
  Inst 12429:   nop     len=0
  Inst 12430:   nop     len=0
  Inst 12431:   nop     len=0
  Inst 12432:   nop     len=0
  Inst 12433:   nop     len=0
  Inst 12434:   nop     len=0
  Inst 12435:   nop     len=0
  Inst 12436:   nop     len=0
  Inst 12437:   nop     len=0
  Inst 12438:   nop     len=0
  Inst 12439:   nop     len=0
  Inst 12440:   nop     len=0
  Inst 12441:   nop     len=0
  Inst 12442:   nop     len=0
  Inst 12443:   nop     len=0
  Inst 12444:   nop     len=0
  Inst 12445:   nop     len=0
  Inst 12446:   nop     len=0
  Inst 12447:   nop     len=0
  Inst 12448:   nop     len=0
  Inst 12449:   nop     len=0
  Inst 12450:   nop     len=0
  Inst 12451:   nop     len=0
  Inst 12452:   nop     len=0
  Inst 12453:   nop     len=0
  Inst 12454:   nop     len=0
  Inst 12455:   nop     len=0
  Inst 12456:   jmp     label484
Block 482:
  (original IR block: block243)
  (successor: Block 483)
  (instruction range: 12457 .. 12486)
  Inst 12457:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12458:   movq    152(%rsi), %r13
  Inst 12459:   movq    %r14, %r15
  Inst 12460:   addq    $-1, %r15
  Inst 12461:   movq    %r14, %rdx
  Inst 12462:   shlq    $3, %rdx
  Inst 12463:   movq    %r13, %r12
  Inst 12464:   addq    %rdx, %r12
  Inst 12465:   movq    %r13, %rdi
  Inst 12466:   addq    $-24, %rdi
  Inst 12467:   movq    %r13, %rsi
  Inst 12468:   load_ext_name %Memmove+0, %rax
  Inst 12469:   movq    %rbx, rsp(720 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12470:   call    *%rax
  Inst 12471:   movq    rsp(720 + virtual offset), %rbx
  Inst 12472:   load_ext_name u1:1+0, %rsi
  Inst 12473:   movl    $1, %edi
  Inst 12474:   movq    %rdi, -8(%r13,%r14,8)
  Inst 12475:   movl    $1, %edi
  Inst 12476:   movq    %rdi, -16(%r13,%r14,8)
  Inst 12477:   movq    %rsi, -24(%r13,%r14,8)
  Inst 12478:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12479:   movq    %r12, 152(%rsi)
  Inst 12480:   movq    %rbx, %rdi
  Inst 12481:   movq    %r15, %rsi
  Inst 12482:   load_ext_name u0:3+0, %rax
  Inst 12483:   movq    %rdi, rsp(720 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12484:   call    *%rax
  Inst 12485:   jmp     label483
Block 483:
  (successor: Block 484)
  (instruction range: 12486 .. 12548)
  Inst 12486:   movq    %rax, rsp(1208 + virtual offset)
  Inst 12487:   nop     len=0
  Inst 12488:   nop     len=0
  Inst 12489:   nop     len=0
  Inst 12490:   nop     len=0
  Inst 12491:   nop     len=0
  Inst 12492:   nop     len=0
  Inst 12493:   nop     len=0
  Inst 12494:   nop     len=0
  Inst 12495:   nop     len=0
  Inst 12496:   nop     len=0
  Inst 12497:   nop     len=0
  Inst 12498:   nop     len=0
  Inst 12499:   nop     len=0
  Inst 12500:   nop     len=0
  Inst 12501:   nop     len=0
  Inst 12502:   nop     len=0
  Inst 12503:   nop     len=0
  Inst 12504:   nop     len=0
  Inst 12505:   nop     len=0
  Inst 12506:   nop     len=0
  Inst 12507:   nop     len=0
  Inst 12508:   nop     len=0
  Inst 12509:   nop     len=0
  Inst 12510:   nop     len=0
  Inst 12511:   nop     len=0
  Inst 12512:   nop     len=0
  Inst 12513:   nop     len=0
  Inst 12514:   nop     len=0
  Inst 12515:   nop     len=0
  Inst 12516:   nop     len=0
  Inst 12517:   nop     len=0
  Inst 12518:   nop     len=0
  Inst 12519:   nop     len=0
  Inst 12520:   nop     len=0
  Inst 12521:   nop     len=0
  Inst 12522:   nop     len=0
  Inst 12523:   nop     len=0
  Inst 12524:   nop     len=0
  Inst 12525:   nop     len=0
  Inst 12526:   nop     len=0
  Inst 12527:   nop     len=0
  Inst 12528:   nop     len=0
  Inst 12529:   nop     len=0
  Inst 12530:   nop     len=0
  Inst 12531:   nop     len=0
  Inst 12532:   nop     len=0
  Inst 12533:   nop     len=0
  Inst 12534:   nop     len=0
  Inst 12535:   nop     len=0
  Inst 12536:   nop     len=0
  Inst 12537:   nop     len=0
  Inst 12538:   nop     len=0
  Inst 12539:   nop     len=0
  Inst 12540:   nop     len=0
  Inst 12541:   nop     len=0
  Inst 12542:   nop     len=0
  Inst 12543:   nop     len=0
  Inst 12544:   nop     len=0
  Inst 12545:   nop     len=0
  Inst 12546:   nop     len=0
  Inst 12547:   jmp     label484
Block 484:
  (original IR block: block242)
  (successor: Block 485)
  (successor: Block 486)
  (instruction range: 12548 .. 12559)
  Inst 12548:   movq    rsp(2064 + virtual offset), %rsi
  Inst 12549:   movq    8(%rsi), %rdi
  Inst 12550:   movq    rsp(2048 + virtual offset), %rsi
  Inst 12551:   load_ext_name u0:2+0, %rax
  Inst 12552:   movq    %rsi, rsp(720 + virtual offset)
  Inst 12553:   movq    %rdi, rsp(736 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12554:   call    *%rax
  Inst 12555:   movq    %rax, %rbx
  Inst 12556:   movq    %rdx, %r14
  Inst 12557:   testq   %r14, %r14
  Inst 12558:   jz      label485; j label486
Block 485:
  (successor: Block 488)
  (instruction range: 12559 .. 12621)
  Inst 12559:   movq    %rbx, rsp(720 + virtual offset)
  Inst 12560:   nop     len=0
  Inst 12561:   nop     len=0
  Inst 12562:   nop     len=0
  Inst 12563:   nop     len=0
  Inst 12564:   nop     len=0
  Inst 12565:   nop     len=0
  Inst 12566:   nop     len=0
  Inst 12567:   nop     len=0
  Inst 12568:   nop     len=0
  Inst 12569:   nop     len=0
  Inst 12570:   nop     len=0
  Inst 12571:   nop     len=0
  Inst 12572:   nop     len=0
  Inst 12573:   nop     len=0
  Inst 12574:   nop     len=0
  Inst 12575:   nop     len=0
  Inst 12576:   nop     len=0
  Inst 12577:   nop     len=0
  Inst 12578:   nop     len=0
  Inst 12579:   nop     len=0
  Inst 12580:   nop     len=0
  Inst 12581:   nop     len=0
  Inst 12582:   nop     len=0
  Inst 12583:   nop     len=0
  Inst 12584:   nop     len=0
  Inst 12585:   nop     len=0
  Inst 12586:   nop     len=0
  Inst 12587:   nop     len=0
  Inst 12588:   nop     len=0
  Inst 12589:   nop     len=0
  Inst 12590:   nop     len=0
  Inst 12591:   nop     len=0
  Inst 12592:   nop     len=0
  Inst 12593:   nop     len=0
  Inst 12594:   nop     len=0
  Inst 12595:   nop     len=0
  Inst 12596:   nop     len=0
  Inst 12597:   nop     len=0
  Inst 12598:   nop     len=0
  Inst 12599:   nop     len=0
  Inst 12600:   nop     len=0
  Inst 12601:   nop     len=0
  Inst 12602:   nop     len=0
  Inst 12603:   nop     len=0
  Inst 12604:   nop     len=0
  Inst 12605:   nop     len=0
  Inst 12606:   nop     len=0
  Inst 12607:   nop     len=0
  Inst 12608:   nop     len=0
  Inst 12609:   nop     len=0
  Inst 12610:   nop     len=0
  Inst 12611:   nop     len=0
  Inst 12612:   nop     len=0
  Inst 12613:   nop     len=0
  Inst 12614:   nop     len=0
  Inst 12615:   nop     len=0
  Inst 12616:   nop     len=0
  Inst 12617:   nop     len=0
  Inst 12618:   nop     len=0
  Inst 12619:   nop     len=0
  Inst 12620:   jmp     label488
Block 486:
  (original IR block: block245)
  (successor: Block 487)
  (instruction range: 12621 .. 12650)
  Inst 12621:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12622:   movq    152(%rsi), %r13
  Inst 12623:   movq    %r14, %r15
  Inst 12624:   addq    $-1, %r15
  Inst 12625:   movq    %r14, %rdx
  Inst 12626:   shlq    $3, %rdx
  Inst 12627:   movq    %r13, %r12
  Inst 12628:   addq    %rdx, %r12
  Inst 12629:   movq    %r13, %rdi
  Inst 12630:   addq    $-24, %rdi
  Inst 12631:   movq    %r13, %rsi
  Inst 12632:   load_ext_name %Memmove+0, %rax
  Inst 12633:   movq    %rbx, rsp(736 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S91, S92, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12634:   call    *%rax
  Inst 12635:   movq    rsp(736 + virtual offset), %rbx
  Inst 12636:   load_ext_name u1:1+0, %rsi
  Inst 12637:   movl    $1, %edi
  Inst 12638:   movq    %rdi, -8(%r13,%r14,8)
  Inst 12639:   movl    $1, %edi
  Inst 12640:   movq    %rdi, -16(%r13,%r14,8)
  Inst 12641:   movq    %rsi, -24(%r13,%r14,8)
  Inst 12642:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12643:   movq    %r12, 152(%rsi)
  Inst 12644:   movq    %rbx, %rdi
  Inst 12645:   movq    %r15, %rsi
  Inst 12646:   load_ext_name u0:3+0, %rax
  Inst 12647:   movq    %rdi, rsp(720 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12648:   call    *%rax
  Inst 12649:   jmp     label487
Block 487:
  (successor: Block 488)
  (instruction range: 12650 .. 12712)
  Inst 12650:   movq    %rax, rsp(720 + virtual offset)
  Inst 12651:   nop     len=0
  Inst 12652:   nop     len=0
  Inst 12653:   nop     len=0
  Inst 12654:   nop     len=0
  Inst 12655:   nop     len=0
  Inst 12656:   nop     len=0
  Inst 12657:   nop     len=0
  Inst 12658:   nop     len=0
  Inst 12659:   nop     len=0
  Inst 12660:   nop     len=0
  Inst 12661:   nop     len=0
  Inst 12662:   nop     len=0
  Inst 12663:   nop     len=0
  Inst 12664:   nop     len=0
  Inst 12665:   nop     len=0
  Inst 12666:   nop     len=0
  Inst 12667:   nop     len=0
  Inst 12668:   nop     len=0
  Inst 12669:   nop     len=0
  Inst 12670:   nop     len=0
  Inst 12671:   nop     len=0
  Inst 12672:   nop     len=0
  Inst 12673:   nop     len=0
  Inst 12674:   nop     len=0
  Inst 12675:   nop     len=0
  Inst 12676:   nop     len=0
  Inst 12677:   nop     len=0
  Inst 12678:   nop     len=0
  Inst 12679:   nop     len=0
  Inst 12680:   nop     len=0
  Inst 12681:   nop     len=0
  Inst 12682:   nop     len=0
  Inst 12683:   nop     len=0
  Inst 12684:   nop     len=0
  Inst 12685:   nop     len=0
  Inst 12686:   nop     len=0
  Inst 12687:   nop     len=0
  Inst 12688:   nop     len=0
  Inst 12689:   nop     len=0
  Inst 12690:   nop     len=0
  Inst 12691:   nop     len=0
  Inst 12692:   nop     len=0
  Inst 12693:   nop     len=0
  Inst 12694:   nop     len=0
  Inst 12695:   nop     len=0
  Inst 12696:   nop     len=0
  Inst 12697:   nop     len=0
  Inst 12698:   nop     len=0
  Inst 12699:   nop     len=0
  Inst 12700:   nop     len=0
  Inst 12701:   nop     len=0
  Inst 12702:   nop     len=0
  Inst 12703:   nop     len=0
  Inst 12704:   nop     len=0
  Inst 12705:   nop     len=0
  Inst 12706:   nop     len=0
  Inst 12707:   nop     len=0
  Inst 12708:   nop     len=0
  Inst 12709:   nop     len=0
  Inst 12710:   nop     len=0
  Inst 12711:   jmp     label488
Block 488:
  (original IR block: block244)
  (successor: Block 489)
  (successor: Block 490)
  (instruction range: 12712 .. 12723)
  Inst 12712:   movq    rsp(2064 + virtual offset), %rsi
  Inst 12713:   movq    8(%rsi), %rdi
  Inst 12714:   movq    rsp(2048 + virtual offset), %rsi
  Inst 12715:   load_ext_name u0:2+0, %rax
  Inst 12716:   movq    %rsi, rsp(736 + virtual offset)
  Inst 12717:   movq    %rdi, rsp(752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12718:   call    *%rax
  Inst 12719:   movq    %rax, %r15
  Inst 12720:   movq    %rdx, %r14
  Inst 12721:   testq   %r14, %r14
  Inst 12722:   jz      label489; j label490
Block 489:
  (successor: Block 492)
  (instruction range: 12723 .. 12786)
  Inst 12723:   movq    %r15, rsp(1224 + virtual offset)
  Inst 12724:   nop     len=0
  Inst 12725:   nop     len=0
  Inst 12726:   nop     len=0
  Inst 12727:   nop     len=0
  Inst 12728:   nop     len=0
  Inst 12729:   nop     len=0
  Inst 12730:   nop     len=0
  Inst 12731:   nop     len=0
  Inst 12732:   nop     len=0
  Inst 12733:   nop     len=0
  Inst 12734:   nop     len=0
  Inst 12735:   nop     len=0
  Inst 12736:   nop     len=0
  Inst 12737:   nop     len=0
  Inst 12738:   nop     len=0
  Inst 12739:   nop     len=0
  Inst 12740:   nop     len=0
  Inst 12741:   nop     len=0
  Inst 12742:   nop     len=0
  Inst 12743:   nop     len=0
  Inst 12744:   nop     len=0
  Inst 12745:   nop     len=0
  Inst 12746:   nop     len=0
  Inst 12747:   nop     len=0
  Inst 12748:   nop     len=0
  Inst 12749:   nop     len=0
  Inst 12750:   nop     len=0
  Inst 12751:   nop     len=0
  Inst 12752:   nop     len=0
  Inst 12753:   nop     len=0
  Inst 12754:   nop     len=0
  Inst 12755:   nop     len=0
  Inst 12756:   nop     len=0
  Inst 12757:   nop     len=0
  Inst 12758:   nop     len=0
  Inst 12759:   nop     len=0
  Inst 12760:   nop     len=0
  Inst 12761:   nop     len=0
  Inst 12762:   nop     len=0
  Inst 12763:   nop     len=0
  Inst 12764:   nop     len=0
  Inst 12765:   nop     len=0
  Inst 12766:   nop     len=0
  Inst 12767:   nop     len=0
  Inst 12768:   nop     len=0
  Inst 12769:   nop     len=0
  Inst 12770:   nop     len=0
  Inst 12771:   nop     len=0
  Inst 12772:   nop     len=0
  Inst 12773:   nop     len=0
  Inst 12774:   nop     len=0
  Inst 12775:   nop     len=0
  Inst 12776:   nop     len=0
  Inst 12777:   nop     len=0
  Inst 12778:   nop     len=0
  Inst 12779:   nop     len=0
  Inst 12780:   nop     len=0
  Inst 12781:   nop     len=0
  Inst 12782:   nop     len=0
  Inst 12783:   nop     len=0
  Inst 12784:   nop     len=0
  Inst 12785:   jmp     label492
Block 490:
  (original IR block: block247)
  (successor: Block 491)
  (instruction range: 12786 .. 12815)
  Inst 12786:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12787:   movq    152(%rsi), %r13
  Inst 12788:   movq    %r14, %rbx
  Inst 12789:   addq    $-1, %rbx
  Inst 12790:   movq    %r14, %rdx
  Inst 12791:   shlq    $3, %rdx
  Inst 12792:   movq    %r13, %r12
  Inst 12793:   addq    %rdx, %r12
  Inst 12794:   movq    %r13, %rdi
  Inst 12795:   addq    $-24, %rdi
  Inst 12796:   movq    %r13, %rsi
  Inst 12797:   load_ext_name %Memmove+0, %rax
  Inst 12798:   movq    %r15, rsp(736 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12799:   call    *%rax
  Inst 12800:   movq    rsp(736 + virtual offset), %r15
  Inst 12801:   load_ext_name u1:1+0, %rsi
  Inst 12802:   movl    $1, %edi
  Inst 12803:   movq    %rdi, -8(%r13,%r14,8)
  Inst 12804:   movl    $1, %edi
  Inst 12805:   movq    %rdi, -16(%r13,%r14,8)
  Inst 12806:   movq    %rsi, -24(%r13,%r14,8)
  Inst 12807:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12808:   movq    %r12, 152(%rsi)
  Inst 12809:   movq    %r15, %rdi
  Inst 12810:   movq    %rbx, %rsi
  Inst 12811:   load_ext_name u0:3+0, %rax
  Inst 12812:   movq    %rdi, rsp(736 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12813:   call    *%rax
  Inst 12814:   jmp     label491
Block 491:
  (successor: Block 492)
  (instruction range: 12815 .. 12878)
  Inst 12815:   movq    %rax, rsp(1224 + virtual offset)
  Inst 12816:   nop     len=0
  Inst 12817:   nop     len=0
  Inst 12818:   nop     len=0
  Inst 12819:   nop     len=0
  Inst 12820:   nop     len=0
  Inst 12821:   nop     len=0
  Inst 12822:   nop     len=0
  Inst 12823:   nop     len=0
  Inst 12824:   nop     len=0
  Inst 12825:   nop     len=0
  Inst 12826:   nop     len=0
  Inst 12827:   nop     len=0
  Inst 12828:   nop     len=0
  Inst 12829:   nop     len=0
  Inst 12830:   nop     len=0
  Inst 12831:   nop     len=0
  Inst 12832:   nop     len=0
  Inst 12833:   nop     len=0
  Inst 12834:   nop     len=0
  Inst 12835:   nop     len=0
  Inst 12836:   nop     len=0
  Inst 12837:   nop     len=0
  Inst 12838:   nop     len=0
  Inst 12839:   nop     len=0
  Inst 12840:   nop     len=0
  Inst 12841:   nop     len=0
  Inst 12842:   nop     len=0
  Inst 12843:   nop     len=0
  Inst 12844:   nop     len=0
  Inst 12845:   nop     len=0
  Inst 12846:   nop     len=0
  Inst 12847:   nop     len=0
  Inst 12848:   nop     len=0
  Inst 12849:   nop     len=0
  Inst 12850:   nop     len=0
  Inst 12851:   nop     len=0
  Inst 12852:   nop     len=0
  Inst 12853:   nop     len=0
  Inst 12854:   nop     len=0
  Inst 12855:   nop     len=0
  Inst 12856:   nop     len=0
  Inst 12857:   nop     len=0
  Inst 12858:   nop     len=0
  Inst 12859:   nop     len=0
  Inst 12860:   nop     len=0
  Inst 12861:   nop     len=0
  Inst 12862:   nop     len=0
  Inst 12863:   nop     len=0
  Inst 12864:   nop     len=0
  Inst 12865:   nop     len=0
  Inst 12866:   nop     len=0
  Inst 12867:   nop     len=0
  Inst 12868:   nop     len=0
  Inst 12869:   nop     len=0
  Inst 12870:   nop     len=0
  Inst 12871:   nop     len=0
  Inst 12872:   nop     len=0
  Inst 12873:   nop     len=0
  Inst 12874:   nop     len=0
  Inst 12875:   nop     len=0
  Inst 12876:   nop     len=0
  Inst 12877:   jmp     label492
Block 492:
  (original IR block: block246)
  (successor: Block 493)
  (successor: Block 494)
  (instruction range: 12878 .. 12889)
  Inst 12878:   movq    rsp(2064 + virtual offset), %rsi
  Inst 12879:   movq    8(%rsi), %rdi
  Inst 12880:   movq    rsp(2048 + virtual offset), %rsi
  Inst 12881:   load_ext_name u0:2+0, %rax
  Inst 12882:   movq    %rsi, rsp(736 + virtual offset)
  Inst 12883:   movq    %rdi, rsp(752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12884:   call    *%rax
  Inst 12885:   movq    %rax, %rbx
  Inst 12886:   movq    %rdx, %r14
  Inst 12887:   testq   %r14, %r14
  Inst 12888:   jz      label493; j label494
Block 493:
  (successor: Block 496)
  (instruction range: 12889 .. 12952)
  Inst 12889:   movq    %rbx, rsp(736 + virtual offset)
  Inst 12890:   nop     len=0
  Inst 12891:   nop     len=0
  Inst 12892:   nop     len=0
  Inst 12893:   nop     len=0
  Inst 12894:   nop     len=0
  Inst 12895:   nop     len=0
  Inst 12896:   nop     len=0
  Inst 12897:   nop     len=0
  Inst 12898:   nop     len=0
  Inst 12899:   nop     len=0
  Inst 12900:   nop     len=0
  Inst 12901:   nop     len=0
  Inst 12902:   nop     len=0
  Inst 12903:   nop     len=0
  Inst 12904:   nop     len=0
  Inst 12905:   nop     len=0
  Inst 12906:   nop     len=0
  Inst 12907:   nop     len=0
  Inst 12908:   nop     len=0
  Inst 12909:   nop     len=0
  Inst 12910:   nop     len=0
  Inst 12911:   nop     len=0
  Inst 12912:   nop     len=0
  Inst 12913:   nop     len=0
  Inst 12914:   nop     len=0
  Inst 12915:   nop     len=0
  Inst 12916:   nop     len=0
  Inst 12917:   nop     len=0
  Inst 12918:   nop     len=0
  Inst 12919:   nop     len=0
  Inst 12920:   nop     len=0
  Inst 12921:   nop     len=0
  Inst 12922:   nop     len=0
  Inst 12923:   nop     len=0
  Inst 12924:   nop     len=0
  Inst 12925:   nop     len=0
  Inst 12926:   nop     len=0
  Inst 12927:   nop     len=0
  Inst 12928:   nop     len=0
  Inst 12929:   nop     len=0
  Inst 12930:   nop     len=0
  Inst 12931:   nop     len=0
  Inst 12932:   nop     len=0
  Inst 12933:   nop     len=0
  Inst 12934:   nop     len=0
  Inst 12935:   nop     len=0
  Inst 12936:   nop     len=0
  Inst 12937:   nop     len=0
  Inst 12938:   nop     len=0
  Inst 12939:   nop     len=0
  Inst 12940:   nop     len=0
  Inst 12941:   nop     len=0
  Inst 12942:   nop     len=0
  Inst 12943:   nop     len=0
  Inst 12944:   nop     len=0
  Inst 12945:   nop     len=0
  Inst 12946:   nop     len=0
  Inst 12947:   nop     len=0
  Inst 12948:   nop     len=0
  Inst 12949:   nop     len=0
  Inst 12950:   nop     len=0
  Inst 12951:   jmp     label496
Block 494:
  (original IR block: block249)
  (successor: Block 495)
  (instruction range: 12952 .. 12981)
  Inst 12952:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12953:   movq    152(%rsi), %r13
  Inst 12954:   movq    %r14, %r15
  Inst 12955:   addq    $-1, %r15
  Inst 12956:   movq    %r14, %rdx
  Inst 12957:   shlq    $3, %rdx
  Inst 12958:   movq    %r13, %r12
  Inst 12959:   addq    %rdx, %r12
  Inst 12960:   movq    %r13, %rdi
  Inst 12961:   addq    $-24, %rdi
  Inst 12962:   movq    %r13, %rsi
  Inst 12963:   load_ext_name %Memmove+0, %rax
  Inst 12964:   movq    %rbx, rsp(752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S93, S94, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12965:   call    *%rax
  Inst 12966:   movq    rsp(752 + virtual offset), %rbx
  Inst 12967:   load_ext_name u1:1+0, %rsi
  Inst 12968:   movl    $1, %edi
  Inst 12969:   movq    %rdi, -8(%r13,%r14,8)
  Inst 12970:   movl    $1, %edi
  Inst 12971:   movq    %rdi, -16(%r13,%r14,8)
  Inst 12972:   movq    %rsi, -24(%r13,%r14,8)
  Inst 12973:   movq    rsp(2072 + virtual offset), %rsi
  Inst 12974:   movq    %r12, 152(%rsi)
  Inst 12975:   movq    %rbx, %rdi
  Inst 12976:   movq    %r15, %rsi
  Inst 12977:   load_ext_name u0:3+0, %rax
  Inst 12978:   movq    %rdi, rsp(736 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 12979:   call    *%rax
  Inst 12980:   jmp     label495
Block 495:
  (successor: Block 496)
  (instruction range: 12981 .. 13044)
  Inst 12981:   movq    %rax, rsp(736 + virtual offset)
  Inst 12982:   nop     len=0
  Inst 12983:   nop     len=0
  Inst 12984:   nop     len=0
  Inst 12985:   nop     len=0
  Inst 12986:   nop     len=0
  Inst 12987:   nop     len=0
  Inst 12988:   nop     len=0
  Inst 12989:   nop     len=0
  Inst 12990:   nop     len=0
  Inst 12991:   nop     len=0
  Inst 12992:   nop     len=0
  Inst 12993:   nop     len=0
  Inst 12994:   nop     len=0
  Inst 12995:   nop     len=0
  Inst 12996:   nop     len=0
  Inst 12997:   nop     len=0
  Inst 12998:   nop     len=0
  Inst 12999:   nop     len=0
  Inst 13000:   nop     len=0
  Inst 13001:   nop     len=0
  Inst 13002:   nop     len=0
  Inst 13003:   nop     len=0
  Inst 13004:   nop     len=0
  Inst 13005:   nop     len=0
  Inst 13006:   nop     len=0
  Inst 13007:   nop     len=0
  Inst 13008:   nop     len=0
  Inst 13009:   nop     len=0
  Inst 13010:   nop     len=0
  Inst 13011:   nop     len=0
  Inst 13012:   nop     len=0
  Inst 13013:   nop     len=0
  Inst 13014:   nop     len=0
  Inst 13015:   nop     len=0
  Inst 13016:   nop     len=0
  Inst 13017:   nop     len=0
  Inst 13018:   nop     len=0
  Inst 13019:   nop     len=0
  Inst 13020:   nop     len=0
  Inst 13021:   nop     len=0
  Inst 13022:   nop     len=0
  Inst 13023:   nop     len=0
  Inst 13024:   nop     len=0
  Inst 13025:   nop     len=0
  Inst 13026:   nop     len=0
  Inst 13027:   nop     len=0
  Inst 13028:   nop     len=0
  Inst 13029:   nop     len=0
  Inst 13030:   nop     len=0
  Inst 13031:   nop     len=0
  Inst 13032:   nop     len=0
  Inst 13033:   nop     len=0
  Inst 13034:   nop     len=0
  Inst 13035:   nop     len=0
  Inst 13036:   nop     len=0
  Inst 13037:   nop     len=0
  Inst 13038:   nop     len=0
  Inst 13039:   nop     len=0
  Inst 13040:   nop     len=0
  Inst 13041:   nop     len=0
  Inst 13042:   nop     len=0
  Inst 13043:   jmp     label496
Block 496:
  (original IR block: block248)
  (successor: Block 497)
  (successor: Block 498)
  (instruction range: 13044 .. 13055)
  Inst 13044:   movq    rsp(2064 + virtual offset), %rsi
  Inst 13045:   movq    8(%rsi), %rdi
  Inst 13046:   movq    rsp(2048 + virtual offset), %rsi
  Inst 13047:   load_ext_name u0:2+0, %rax
  Inst 13048:   movq    %rsi, rsp(752 + virtual offset)
  Inst 13049:   movq    %rdi, rsp(768 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13050:   call    *%rax
  Inst 13051:   movq    %rax, %rbx
  Inst 13052:   movq    %rdx, %r14
  Inst 13053:   testq   %r14, %r14
  Inst 13054:   jz      label497; j label498
Block 497:
  (successor: Block 500)
  (instruction range: 13055 .. 13119)
  Inst 13055:   movq    %rbx, rsp(1240 + virtual offset)
  Inst 13056:   nop     len=0
  Inst 13057:   nop     len=0
  Inst 13058:   nop     len=0
  Inst 13059:   nop     len=0
  Inst 13060:   nop     len=0
  Inst 13061:   nop     len=0
  Inst 13062:   nop     len=0
  Inst 13063:   nop     len=0
  Inst 13064:   nop     len=0
  Inst 13065:   nop     len=0
  Inst 13066:   nop     len=0
  Inst 13067:   nop     len=0
  Inst 13068:   nop     len=0
  Inst 13069:   nop     len=0
  Inst 13070:   nop     len=0
  Inst 13071:   nop     len=0
  Inst 13072:   nop     len=0
  Inst 13073:   nop     len=0
  Inst 13074:   nop     len=0
  Inst 13075:   nop     len=0
  Inst 13076:   nop     len=0
  Inst 13077:   nop     len=0
  Inst 13078:   nop     len=0
  Inst 13079:   nop     len=0
  Inst 13080:   nop     len=0
  Inst 13081:   nop     len=0
  Inst 13082:   nop     len=0
  Inst 13083:   nop     len=0
  Inst 13084:   nop     len=0
  Inst 13085:   nop     len=0
  Inst 13086:   nop     len=0
  Inst 13087:   nop     len=0
  Inst 13088:   nop     len=0
  Inst 13089:   nop     len=0
  Inst 13090:   nop     len=0
  Inst 13091:   nop     len=0
  Inst 13092:   nop     len=0
  Inst 13093:   nop     len=0
  Inst 13094:   nop     len=0
  Inst 13095:   nop     len=0
  Inst 13096:   nop     len=0
  Inst 13097:   nop     len=0
  Inst 13098:   nop     len=0
  Inst 13099:   nop     len=0
  Inst 13100:   nop     len=0
  Inst 13101:   nop     len=0
  Inst 13102:   nop     len=0
  Inst 13103:   nop     len=0
  Inst 13104:   nop     len=0
  Inst 13105:   nop     len=0
  Inst 13106:   nop     len=0
  Inst 13107:   nop     len=0
  Inst 13108:   nop     len=0
  Inst 13109:   nop     len=0
  Inst 13110:   nop     len=0
  Inst 13111:   nop     len=0
  Inst 13112:   nop     len=0
  Inst 13113:   nop     len=0
  Inst 13114:   nop     len=0
  Inst 13115:   nop     len=0
  Inst 13116:   nop     len=0
  Inst 13117:   nop     len=0
  Inst 13118:   jmp     label500
Block 498:
  (original IR block: block251)
  (successor: Block 499)
  (instruction range: 13119 .. 13148)
  Inst 13119:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13120:   movq    152(%rsi), %r13
  Inst 13121:   movq    %r14, %r15
  Inst 13122:   addq    $-1, %r15
  Inst 13123:   movq    %r14, %rdx
  Inst 13124:   shlq    $3, %rdx
  Inst 13125:   movq    %r13, %r12
  Inst 13126:   addq    %rdx, %r12
  Inst 13127:   movq    %r13, %rdi
  Inst 13128:   addq    $-24, %rdi
  Inst 13129:   movq    %r13, %rsi
  Inst 13130:   load_ext_name %Memmove+0, %rax
  Inst 13131:   movq    %rbx, rsp(752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13132:   call    *%rax
  Inst 13133:   movq    rsp(752 + virtual offset), %rbx
  Inst 13134:   load_ext_name u1:1+0, %rsi
  Inst 13135:   movl    $1, %edi
  Inst 13136:   movq    %rdi, -8(%r13,%r14,8)
  Inst 13137:   movl    $1, %edi
  Inst 13138:   movq    %rdi, -16(%r13,%r14,8)
  Inst 13139:   movq    %rsi, -24(%r13,%r14,8)
  Inst 13140:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13141:   movq    %r12, 152(%rsi)
  Inst 13142:   movq    %rbx, %rdi
  Inst 13143:   movq    %r15, %rsi
  Inst 13144:   load_ext_name u0:3+0, %rax
  Inst 13145:   movq    %rdi, rsp(752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13146:   call    *%rax
  Inst 13147:   jmp     label499
Block 499:
  (successor: Block 500)
  (instruction range: 13148 .. 13212)
  Inst 13148:   movq    %rax, rsp(1240 + virtual offset)
  Inst 13149:   nop     len=0
  Inst 13150:   nop     len=0
  Inst 13151:   nop     len=0
  Inst 13152:   nop     len=0
  Inst 13153:   nop     len=0
  Inst 13154:   nop     len=0
  Inst 13155:   nop     len=0
  Inst 13156:   nop     len=0
  Inst 13157:   nop     len=0
  Inst 13158:   nop     len=0
  Inst 13159:   nop     len=0
  Inst 13160:   nop     len=0
  Inst 13161:   nop     len=0
  Inst 13162:   nop     len=0
  Inst 13163:   nop     len=0
  Inst 13164:   nop     len=0
  Inst 13165:   nop     len=0
  Inst 13166:   nop     len=0
  Inst 13167:   nop     len=0
  Inst 13168:   nop     len=0
  Inst 13169:   nop     len=0
  Inst 13170:   nop     len=0
  Inst 13171:   nop     len=0
  Inst 13172:   nop     len=0
  Inst 13173:   nop     len=0
  Inst 13174:   nop     len=0
  Inst 13175:   nop     len=0
  Inst 13176:   nop     len=0
  Inst 13177:   nop     len=0
  Inst 13178:   nop     len=0
  Inst 13179:   nop     len=0
  Inst 13180:   nop     len=0
  Inst 13181:   nop     len=0
  Inst 13182:   nop     len=0
  Inst 13183:   nop     len=0
  Inst 13184:   nop     len=0
  Inst 13185:   nop     len=0
  Inst 13186:   nop     len=0
  Inst 13187:   nop     len=0
  Inst 13188:   nop     len=0
  Inst 13189:   nop     len=0
  Inst 13190:   nop     len=0
  Inst 13191:   nop     len=0
  Inst 13192:   nop     len=0
  Inst 13193:   nop     len=0
  Inst 13194:   nop     len=0
  Inst 13195:   nop     len=0
  Inst 13196:   nop     len=0
  Inst 13197:   nop     len=0
  Inst 13198:   nop     len=0
  Inst 13199:   nop     len=0
  Inst 13200:   nop     len=0
  Inst 13201:   nop     len=0
  Inst 13202:   nop     len=0
  Inst 13203:   nop     len=0
  Inst 13204:   nop     len=0
  Inst 13205:   nop     len=0
  Inst 13206:   nop     len=0
  Inst 13207:   nop     len=0
  Inst 13208:   nop     len=0
  Inst 13209:   nop     len=0
  Inst 13210:   nop     len=0
  Inst 13211:   jmp     label500
Block 500:
  (original IR block: block250)
  (successor: Block 501)
  (successor: Block 502)
  (instruction range: 13212 .. 13223)
  Inst 13212:   movq    rsp(2064 + virtual offset), %rsi
  Inst 13213:   movq    8(%rsi), %rdi
  Inst 13214:   movq    rsp(2048 + virtual offset), %rsi
  Inst 13215:   load_ext_name u0:2+0, %rax
  Inst 13216:   movq    %rsi, rsp(752 + virtual offset)
  Inst 13217:   movq    %rdi, rsp(768 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13218:   call    *%rax
  Inst 13219:   movq    %rax, %r15
  Inst 13220:   movq    %rdx, %r14
  Inst 13221:   testq   %r14, %r14
  Inst 13222:   jz      label501; j label502
Block 501:
  (successor: Block 504)
  (instruction range: 13223 .. 13287)
  Inst 13223:   movq    %r15, rsp(752 + virtual offset)
  Inst 13224:   nop     len=0
  Inst 13225:   nop     len=0
  Inst 13226:   nop     len=0
  Inst 13227:   nop     len=0
  Inst 13228:   nop     len=0
  Inst 13229:   nop     len=0
  Inst 13230:   nop     len=0
  Inst 13231:   nop     len=0
  Inst 13232:   nop     len=0
  Inst 13233:   nop     len=0
  Inst 13234:   nop     len=0
  Inst 13235:   nop     len=0
  Inst 13236:   nop     len=0
  Inst 13237:   nop     len=0
  Inst 13238:   nop     len=0
  Inst 13239:   nop     len=0
  Inst 13240:   nop     len=0
  Inst 13241:   nop     len=0
  Inst 13242:   nop     len=0
  Inst 13243:   nop     len=0
  Inst 13244:   nop     len=0
  Inst 13245:   nop     len=0
  Inst 13246:   nop     len=0
  Inst 13247:   nop     len=0
  Inst 13248:   nop     len=0
  Inst 13249:   nop     len=0
  Inst 13250:   nop     len=0
  Inst 13251:   nop     len=0
  Inst 13252:   nop     len=0
  Inst 13253:   nop     len=0
  Inst 13254:   nop     len=0
  Inst 13255:   nop     len=0
  Inst 13256:   nop     len=0
  Inst 13257:   nop     len=0
  Inst 13258:   nop     len=0
  Inst 13259:   nop     len=0
  Inst 13260:   nop     len=0
  Inst 13261:   nop     len=0
  Inst 13262:   nop     len=0
  Inst 13263:   nop     len=0
  Inst 13264:   nop     len=0
  Inst 13265:   nop     len=0
  Inst 13266:   nop     len=0
  Inst 13267:   nop     len=0
  Inst 13268:   nop     len=0
  Inst 13269:   nop     len=0
  Inst 13270:   nop     len=0
  Inst 13271:   nop     len=0
  Inst 13272:   nop     len=0
  Inst 13273:   nop     len=0
  Inst 13274:   nop     len=0
  Inst 13275:   nop     len=0
  Inst 13276:   nop     len=0
  Inst 13277:   nop     len=0
  Inst 13278:   nop     len=0
  Inst 13279:   nop     len=0
  Inst 13280:   nop     len=0
  Inst 13281:   nop     len=0
  Inst 13282:   nop     len=0
  Inst 13283:   nop     len=0
  Inst 13284:   nop     len=0
  Inst 13285:   nop     len=0
  Inst 13286:   jmp     label504
Block 502:
  (original IR block: block253)
  (successor: Block 503)
  (instruction range: 13287 .. 13316)
  Inst 13287:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13288:   movq    152(%rsi), %r13
  Inst 13289:   movq    %r14, %rbx
  Inst 13290:   addq    $-1, %rbx
  Inst 13291:   movq    %r14, %rdx
  Inst 13292:   shlq    $3, %rdx
  Inst 13293:   movq    %r13, %r12
  Inst 13294:   addq    %rdx, %r12
  Inst 13295:   movq    %r13, %rdi
  Inst 13296:   addq    $-24, %rdi
  Inst 13297:   movq    %r13, %rsi
  Inst 13298:   load_ext_name %Memmove+0, %rax
  Inst 13299:   movq    %r15, rsp(768 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S95, S96, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13300:   call    *%rax
  Inst 13301:   movq    rsp(768 + virtual offset), %r15
  Inst 13302:   load_ext_name u1:1+0, %rsi
  Inst 13303:   movl    $1, %edi
  Inst 13304:   movq    %rdi, -8(%r13,%r14,8)
  Inst 13305:   movl    $1, %edi
  Inst 13306:   movq    %rdi, -16(%r13,%r14,8)
  Inst 13307:   movq    %rsi, -24(%r13,%r14,8)
  Inst 13308:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13309:   movq    %r12, 152(%rsi)
  Inst 13310:   movq    %r15, %rdi
  Inst 13311:   movq    %rbx, %rsi
  Inst 13312:   load_ext_name u0:3+0, %rax
  Inst 13313:   movq    %rdi, rsp(752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13314:   call    *%rax
  Inst 13315:   jmp     label503
Block 503:
  (successor: Block 504)
  (instruction range: 13316 .. 13380)
  Inst 13316:   movq    %rax, rsp(752 + virtual offset)
  Inst 13317:   nop     len=0
  Inst 13318:   nop     len=0
  Inst 13319:   nop     len=0
  Inst 13320:   nop     len=0
  Inst 13321:   nop     len=0
  Inst 13322:   nop     len=0
  Inst 13323:   nop     len=0
  Inst 13324:   nop     len=0
  Inst 13325:   nop     len=0
  Inst 13326:   nop     len=0
  Inst 13327:   nop     len=0
  Inst 13328:   nop     len=0
  Inst 13329:   nop     len=0
  Inst 13330:   nop     len=0
  Inst 13331:   nop     len=0
  Inst 13332:   nop     len=0
  Inst 13333:   nop     len=0
  Inst 13334:   nop     len=0
  Inst 13335:   nop     len=0
  Inst 13336:   nop     len=0
  Inst 13337:   nop     len=0
  Inst 13338:   nop     len=0
  Inst 13339:   nop     len=0
  Inst 13340:   nop     len=0
  Inst 13341:   nop     len=0
  Inst 13342:   nop     len=0
  Inst 13343:   nop     len=0
  Inst 13344:   nop     len=0
  Inst 13345:   nop     len=0
  Inst 13346:   nop     len=0
  Inst 13347:   nop     len=0
  Inst 13348:   nop     len=0
  Inst 13349:   nop     len=0
  Inst 13350:   nop     len=0
  Inst 13351:   nop     len=0
  Inst 13352:   nop     len=0
  Inst 13353:   nop     len=0
  Inst 13354:   nop     len=0
  Inst 13355:   nop     len=0
  Inst 13356:   nop     len=0
  Inst 13357:   nop     len=0
  Inst 13358:   nop     len=0
  Inst 13359:   nop     len=0
  Inst 13360:   nop     len=0
  Inst 13361:   nop     len=0
  Inst 13362:   nop     len=0
  Inst 13363:   nop     len=0
  Inst 13364:   nop     len=0
  Inst 13365:   nop     len=0
  Inst 13366:   nop     len=0
  Inst 13367:   nop     len=0
  Inst 13368:   nop     len=0
  Inst 13369:   nop     len=0
  Inst 13370:   nop     len=0
  Inst 13371:   nop     len=0
  Inst 13372:   nop     len=0
  Inst 13373:   nop     len=0
  Inst 13374:   nop     len=0
  Inst 13375:   nop     len=0
  Inst 13376:   nop     len=0
  Inst 13377:   nop     len=0
  Inst 13378:   nop     len=0
  Inst 13379:   jmp     label504
Block 504:
  (original IR block: block252)
  (successor: Block 505)
  (successor: Block 506)
  (instruction range: 13380 .. 13391)
  Inst 13380:   movq    rsp(2064 + virtual offset), %rsi
  Inst 13381:   movq    8(%rsi), %rdi
  Inst 13382:   movq    rsp(2048 + virtual offset), %rsi
  Inst 13383:   load_ext_name u0:2+0, %rax
  Inst 13384:   movq    %rsi, rsp(768 + virtual offset)
  Inst 13385:   movq    %rdi, rsp(784 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13386:   call    *%rax
  Inst 13387:   movq    %rax, %rbx
  Inst 13388:   movq    %rdx, %r14
  Inst 13389:   testq   %r14, %r14
  Inst 13390:   jz      label505; j label506
Block 505:
  (successor: Block 508)
  (instruction range: 13391 .. 13456)
  Inst 13391:   movq    %rbx, rsp(1256 + virtual offset)
  Inst 13392:   nop     len=0
  Inst 13393:   nop     len=0
  Inst 13394:   nop     len=0
  Inst 13395:   nop     len=0
  Inst 13396:   nop     len=0
  Inst 13397:   nop     len=0
  Inst 13398:   nop     len=0
  Inst 13399:   nop     len=0
  Inst 13400:   nop     len=0
  Inst 13401:   nop     len=0
  Inst 13402:   nop     len=0
  Inst 13403:   nop     len=0
  Inst 13404:   nop     len=0
  Inst 13405:   nop     len=0
  Inst 13406:   nop     len=0
  Inst 13407:   nop     len=0
  Inst 13408:   nop     len=0
  Inst 13409:   nop     len=0
  Inst 13410:   nop     len=0
  Inst 13411:   nop     len=0
  Inst 13412:   nop     len=0
  Inst 13413:   nop     len=0
  Inst 13414:   nop     len=0
  Inst 13415:   nop     len=0
  Inst 13416:   nop     len=0
  Inst 13417:   nop     len=0
  Inst 13418:   nop     len=0
  Inst 13419:   nop     len=0
  Inst 13420:   nop     len=0
  Inst 13421:   nop     len=0
  Inst 13422:   nop     len=0
  Inst 13423:   nop     len=0
  Inst 13424:   nop     len=0
  Inst 13425:   nop     len=0
  Inst 13426:   nop     len=0
  Inst 13427:   nop     len=0
  Inst 13428:   nop     len=0
  Inst 13429:   nop     len=0
  Inst 13430:   nop     len=0
  Inst 13431:   nop     len=0
  Inst 13432:   nop     len=0
  Inst 13433:   nop     len=0
  Inst 13434:   nop     len=0
  Inst 13435:   nop     len=0
  Inst 13436:   nop     len=0
  Inst 13437:   nop     len=0
  Inst 13438:   nop     len=0
  Inst 13439:   nop     len=0
  Inst 13440:   nop     len=0
  Inst 13441:   nop     len=0
  Inst 13442:   nop     len=0
  Inst 13443:   nop     len=0
  Inst 13444:   nop     len=0
  Inst 13445:   nop     len=0
  Inst 13446:   nop     len=0
  Inst 13447:   nop     len=0
  Inst 13448:   nop     len=0
  Inst 13449:   nop     len=0
  Inst 13450:   nop     len=0
  Inst 13451:   nop     len=0
  Inst 13452:   nop     len=0
  Inst 13453:   nop     len=0
  Inst 13454:   nop     len=0
  Inst 13455:   jmp     label508
Block 506:
  (original IR block: block255)
  (successor: Block 507)
  (instruction range: 13456 .. 13485)
  Inst 13456:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13457:   movq    152(%rsi), %r13
  Inst 13458:   movq    %r14, %r15
  Inst 13459:   addq    $-1, %r15
  Inst 13460:   movq    %r14, %rdx
  Inst 13461:   shlq    $3, %rdx
  Inst 13462:   movq    %r13, %r12
  Inst 13463:   addq    %rdx, %r12
  Inst 13464:   movq    %r13, %rdi
  Inst 13465:   addq    $-24, %rdi
  Inst 13466:   movq    %r13, %rsi
  Inst 13467:   load_ext_name %Memmove+0, %rax
  Inst 13468:   movq    %rbx, rsp(768 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13469:   call    *%rax
  Inst 13470:   movq    rsp(768 + virtual offset), %rbx
  Inst 13471:   load_ext_name u1:1+0, %rsi
  Inst 13472:   movl    $1, %edi
  Inst 13473:   movq    %rdi, -8(%r13,%r14,8)
  Inst 13474:   movl    $1, %edi
  Inst 13475:   movq    %rdi, -16(%r13,%r14,8)
  Inst 13476:   movq    %rsi, -24(%r13,%r14,8)
  Inst 13477:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13478:   movq    %r12, 152(%rsi)
  Inst 13479:   movq    %rbx, %rdi
  Inst 13480:   movq    %r15, %rsi
  Inst 13481:   load_ext_name u0:3+0, %rax
  Inst 13482:   movq    %rdi, rsp(768 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13483:   call    *%rax
  Inst 13484:   jmp     label507
Block 507:
  (successor: Block 508)
  (instruction range: 13485 .. 13550)
  Inst 13485:   movq    %rax, rsp(1256 + virtual offset)
  Inst 13486:   nop     len=0
  Inst 13487:   nop     len=0
  Inst 13488:   nop     len=0
  Inst 13489:   nop     len=0
  Inst 13490:   nop     len=0
  Inst 13491:   nop     len=0
  Inst 13492:   nop     len=0
  Inst 13493:   nop     len=0
  Inst 13494:   nop     len=0
  Inst 13495:   nop     len=0
  Inst 13496:   nop     len=0
  Inst 13497:   nop     len=0
  Inst 13498:   nop     len=0
  Inst 13499:   nop     len=0
  Inst 13500:   nop     len=0
  Inst 13501:   nop     len=0
  Inst 13502:   nop     len=0
  Inst 13503:   nop     len=0
  Inst 13504:   nop     len=0
  Inst 13505:   nop     len=0
  Inst 13506:   nop     len=0
  Inst 13507:   nop     len=0
  Inst 13508:   nop     len=0
  Inst 13509:   nop     len=0
  Inst 13510:   nop     len=0
  Inst 13511:   nop     len=0
  Inst 13512:   nop     len=0
  Inst 13513:   nop     len=0
  Inst 13514:   nop     len=0
  Inst 13515:   nop     len=0
  Inst 13516:   nop     len=0
  Inst 13517:   nop     len=0
  Inst 13518:   nop     len=0
  Inst 13519:   nop     len=0
  Inst 13520:   nop     len=0
  Inst 13521:   nop     len=0
  Inst 13522:   nop     len=0
  Inst 13523:   nop     len=0
  Inst 13524:   nop     len=0
  Inst 13525:   nop     len=0
  Inst 13526:   nop     len=0
  Inst 13527:   nop     len=0
  Inst 13528:   nop     len=0
  Inst 13529:   nop     len=0
  Inst 13530:   nop     len=0
  Inst 13531:   nop     len=0
  Inst 13532:   nop     len=0
  Inst 13533:   nop     len=0
  Inst 13534:   nop     len=0
  Inst 13535:   nop     len=0
  Inst 13536:   nop     len=0
  Inst 13537:   nop     len=0
  Inst 13538:   nop     len=0
  Inst 13539:   nop     len=0
  Inst 13540:   nop     len=0
  Inst 13541:   nop     len=0
  Inst 13542:   nop     len=0
  Inst 13543:   nop     len=0
  Inst 13544:   nop     len=0
  Inst 13545:   nop     len=0
  Inst 13546:   nop     len=0
  Inst 13547:   nop     len=0
  Inst 13548:   nop     len=0
  Inst 13549:   jmp     label508
Block 508:
  (original IR block: block254)
  (successor: Block 509)
  (successor: Block 510)
  (instruction range: 13550 .. 13561)
  Inst 13550:   movq    rsp(2064 + virtual offset), %rsi
  Inst 13551:   movq    8(%rsi), %rdi
  Inst 13552:   movq    rsp(2048 + virtual offset), %rsi
  Inst 13553:   load_ext_name u0:2+0, %rax
  Inst 13554:   movq    %rsi, rsp(768 + virtual offset)
  Inst 13555:   movq    %rdi, rsp(784 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13556:   call    *%rax
  Inst 13557:   movq    %rax, %rbx
  Inst 13558:   movq    %rdx, %r14
  Inst 13559:   testq   %r14, %r14
  Inst 13560:   jz      label509; j label510
Block 509:
  (successor: Block 512)
  (instruction range: 13561 .. 13626)
  Inst 13561:   movq    %rbx, rsp(768 + virtual offset)
  Inst 13562:   nop     len=0
  Inst 13563:   nop     len=0
  Inst 13564:   nop     len=0
  Inst 13565:   nop     len=0
  Inst 13566:   nop     len=0
  Inst 13567:   nop     len=0
  Inst 13568:   nop     len=0
  Inst 13569:   nop     len=0
  Inst 13570:   nop     len=0
  Inst 13571:   nop     len=0
  Inst 13572:   nop     len=0
  Inst 13573:   nop     len=0
  Inst 13574:   nop     len=0
  Inst 13575:   nop     len=0
  Inst 13576:   nop     len=0
  Inst 13577:   nop     len=0
  Inst 13578:   nop     len=0
  Inst 13579:   nop     len=0
  Inst 13580:   nop     len=0
  Inst 13581:   nop     len=0
  Inst 13582:   nop     len=0
  Inst 13583:   nop     len=0
  Inst 13584:   nop     len=0
  Inst 13585:   nop     len=0
  Inst 13586:   nop     len=0
  Inst 13587:   nop     len=0
  Inst 13588:   nop     len=0
  Inst 13589:   nop     len=0
  Inst 13590:   nop     len=0
  Inst 13591:   nop     len=0
  Inst 13592:   nop     len=0
  Inst 13593:   nop     len=0
  Inst 13594:   nop     len=0
  Inst 13595:   nop     len=0
  Inst 13596:   nop     len=0
  Inst 13597:   nop     len=0
  Inst 13598:   nop     len=0
  Inst 13599:   nop     len=0
  Inst 13600:   nop     len=0
  Inst 13601:   nop     len=0
  Inst 13602:   nop     len=0
  Inst 13603:   nop     len=0
  Inst 13604:   nop     len=0
  Inst 13605:   nop     len=0
  Inst 13606:   nop     len=0
  Inst 13607:   nop     len=0
  Inst 13608:   nop     len=0
  Inst 13609:   nop     len=0
  Inst 13610:   nop     len=0
  Inst 13611:   nop     len=0
  Inst 13612:   nop     len=0
  Inst 13613:   nop     len=0
  Inst 13614:   nop     len=0
  Inst 13615:   nop     len=0
  Inst 13616:   nop     len=0
  Inst 13617:   nop     len=0
  Inst 13618:   nop     len=0
  Inst 13619:   nop     len=0
  Inst 13620:   nop     len=0
  Inst 13621:   nop     len=0
  Inst 13622:   nop     len=0
  Inst 13623:   nop     len=0
  Inst 13624:   nop     len=0
  Inst 13625:   jmp     label512
Block 510:
  (original IR block: block257)
  (successor: Block 511)
  (instruction range: 13626 .. 13655)
  Inst 13626:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13627:   movq    152(%rsi), %r13
  Inst 13628:   movq    %r14, %r15
  Inst 13629:   addq    $-1, %r15
  Inst 13630:   movq    %r14, %rdx
  Inst 13631:   shlq    $3, %rdx
  Inst 13632:   movq    %r13, %r12
  Inst 13633:   addq    %rdx, %r12
  Inst 13634:   movq    %r13, %rdi
  Inst 13635:   addq    $-24, %rdi
  Inst 13636:   movq    %r13, %rsi
  Inst 13637:   load_ext_name %Memmove+0, %rax
  Inst 13638:   movq    %rbx, rsp(784 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S97, S98, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13639:   call    *%rax
  Inst 13640:   movq    rsp(784 + virtual offset), %rbx
  Inst 13641:   load_ext_name u1:1+0, %rsi
  Inst 13642:   movl    $1, %edi
  Inst 13643:   movq    %rdi, -8(%r13,%r14,8)
  Inst 13644:   movl    $1, %edi
  Inst 13645:   movq    %rdi, -16(%r13,%r14,8)
  Inst 13646:   movq    %rsi, -24(%r13,%r14,8)
  Inst 13647:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13648:   movq    %r12, 152(%rsi)
  Inst 13649:   movq    %rbx, %rdi
  Inst 13650:   movq    %r15, %rsi
  Inst 13651:   load_ext_name u0:3+0, %rax
  Inst 13652:   movq    %rdi, rsp(768 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13653:   call    *%rax
  Inst 13654:   jmp     label511
Block 511:
  (successor: Block 512)
  (instruction range: 13655 .. 13720)
  Inst 13655:   movq    %rax, rsp(768 + virtual offset)
  Inst 13656:   nop     len=0
  Inst 13657:   nop     len=0
  Inst 13658:   nop     len=0
  Inst 13659:   nop     len=0
  Inst 13660:   nop     len=0
  Inst 13661:   nop     len=0
  Inst 13662:   nop     len=0
  Inst 13663:   nop     len=0
  Inst 13664:   nop     len=0
  Inst 13665:   nop     len=0
  Inst 13666:   nop     len=0
  Inst 13667:   nop     len=0
  Inst 13668:   nop     len=0
  Inst 13669:   nop     len=0
  Inst 13670:   nop     len=0
  Inst 13671:   nop     len=0
  Inst 13672:   nop     len=0
  Inst 13673:   nop     len=0
  Inst 13674:   nop     len=0
  Inst 13675:   nop     len=0
  Inst 13676:   nop     len=0
  Inst 13677:   nop     len=0
  Inst 13678:   nop     len=0
  Inst 13679:   nop     len=0
  Inst 13680:   nop     len=0
  Inst 13681:   nop     len=0
  Inst 13682:   nop     len=0
  Inst 13683:   nop     len=0
  Inst 13684:   nop     len=0
  Inst 13685:   nop     len=0
  Inst 13686:   nop     len=0
  Inst 13687:   nop     len=0
  Inst 13688:   nop     len=0
  Inst 13689:   nop     len=0
  Inst 13690:   nop     len=0
  Inst 13691:   nop     len=0
  Inst 13692:   nop     len=0
  Inst 13693:   nop     len=0
  Inst 13694:   nop     len=0
  Inst 13695:   nop     len=0
  Inst 13696:   nop     len=0
  Inst 13697:   nop     len=0
  Inst 13698:   nop     len=0
  Inst 13699:   nop     len=0
  Inst 13700:   nop     len=0
  Inst 13701:   nop     len=0
  Inst 13702:   nop     len=0
  Inst 13703:   nop     len=0
  Inst 13704:   nop     len=0
  Inst 13705:   nop     len=0
  Inst 13706:   nop     len=0
  Inst 13707:   nop     len=0
  Inst 13708:   nop     len=0
  Inst 13709:   nop     len=0
  Inst 13710:   nop     len=0
  Inst 13711:   nop     len=0
  Inst 13712:   nop     len=0
  Inst 13713:   nop     len=0
  Inst 13714:   nop     len=0
  Inst 13715:   nop     len=0
  Inst 13716:   nop     len=0
  Inst 13717:   nop     len=0
  Inst 13718:   nop     len=0
  Inst 13719:   jmp     label512
Block 512:
  (original IR block: block256)
  (successor: Block 513)
  (successor: Block 514)
  (instruction range: 13720 .. 13731)
  Inst 13720:   movq    rsp(2064 + virtual offset), %rsi
  Inst 13721:   movq    8(%rsi), %rdi
  Inst 13722:   movq    rsp(2048 + virtual offset), %rsi
  Inst 13723:   load_ext_name u0:2+0, %rax
  Inst 13724:   movq    %rsi, rsp(784 + virtual offset)
  Inst 13725:   movq    %rdi, rsp(800 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13726:   call    *%rax
  Inst 13727:   movq    %rax, %r15
  Inst 13728:   movq    %rdx, %r14
  Inst 13729:   testq   %r14, %r14
  Inst 13730:   jz      label513; j label514
Block 513:
  (successor: Block 516)
  (instruction range: 13731 .. 13797)
  Inst 13731:   movq    %r15, rsp(1272 + virtual offset)
  Inst 13732:   nop     len=0
  Inst 13733:   nop     len=0
  Inst 13734:   nop     len=0
  Inst 13735:   nop     len=0
  Inst 13736:   nop     len=0
  Inst 13737:   nop     len=0
  Inst 13738:   nop     len=0
  Inst 13739:   nop     len=0
  Inst 13740:   nop     len=0
  Inst 13741:   nop     len=0
  Inst 13742:   nop     len=0
  Inst 13743:   nop     len=0
  Inst 13744:   nop     len=0
  Inst 13745:   nop     len=0
  Inst 13746:   nop     len=0
  Inst 13747:   nop     len=0
  Inst 13748:   nop     len=0
  Inst 13749:   nop     len=0
  Inst 13750:   nop     len=0
  Inst 13751:   nop     len=0
  Inst 13752:   nop     len=0
  Inst 13753:   nop     len=0
  Inst 13754:   nop     len=0
  Inst 13755:   nop     len=0
  Inst 13756:   nop     len=0
  Inst 13757:   nop     len=0
  Inst 13758:   nop     len=0
  Inst 13759:   nop     len=0
  Inst 13760:   nop     len=0
  Inst 13761:   nop     len=0
  Inst 13762:   nop     len=0
  Inst 13763:   nop     len=0
  Inst 13764:   nop     len=0
  Inst 13765:   nop     len=0
  Inst 13766:   nop     len=0
  Inst 13767:   nop     len=0
  Inst 13768:   nop     len=0
  Inst 13769:   nop     len=0
  Inst 13770:   nop     len=0
  Inst 13771:   nop     len=0
  Inst 13772:   nop     len=0
  Inst 13773:   nop     len=0
  Inst 13774:   nop     len=0
  Inst 13775:   nop     len=0
  Inst 13776:   nop     len=0
  Inst 13777:   nop     len=0
  Inst 13778:   nop     len=0
  Inst 13779:   nop     len=0
  Inst 13780:   nop     len=0
  Inst 13781:   nop     len=0
  Inst 13782:   nop     len=0
  Inst 13783:   nop     len=0
  Inst 13784:   nop     len=0
  Inst 13785:   nop     len=0
  Inst 13786:   nop     len=0
  Inst 13787:   nop     len=0
  Inst 13788:   nop     len=0
  Inst 13789:   nop     len=0
  Inst 13790:   nop     len=0
  Inst 13791:   nop     len=0
  Inst 13792:   nop     len=0
  Inst 13793:   nop     len=0
  Inst 13794:   nop     len=0
  Inst 13795:   nop     len=0
  Inst 13796:   jmp     label516
Block 514:
  (original IR block: block259)
  (successor: Block 515)
  (instruction range: 13797 .. 13826)
  Inst 13797:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13798:   movq    152(%rsi), %r13
  Inst 13799:   movq    %r14, %rbx
  Inst 13800:   addq    $-1, %rbx
  Inst 13801:   movq    %r14, %rdx
  Inst 13802:   shlq    $3, %rdx
  Inst 13803:   movq    %r13, %r12
  Inst 13804:   addq    %rdx, %r12
  Inst 13805:   movq    %r13, %rdi
  Inst 13806:   addq    $-24, %rdi
  Inst 13807:   movq    %r13, %rsi
  Inst 13808:   load_ext_name %Memmove+0, %rax
  Inst 13809:   movq    %r15, rsp(784 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13810:   call    *%rax
  Inst 13811:   movq    rsp(784 + virtual offset), %r15
  Inst 13812:   load_ext_name u1:1+0, %rsi
  Inst 13813:   movl    $1, %edi
  Inst 13814:   movq    %rdi, -8(%r13,%r14,8)
  Inst 13815:   movl    $1, %edi
  Inst 13816:   movq    %rdi, -16(%r13,%r14,8)
  Inst 13817:   movq    %rsi, -24(%r13,%r14,8)
  Inst 13818:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13819:   movq    %r12, 152(%rsi)
  Inst 13820:   movq    %r15, %rdi
  Inst 13821:   movq    %rbx, %rsi
  Inst 13822:   load_ext_name u0:3+0, %rax
  Inst 13823:   movq    %rdi, rsp(784 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13824:   call    *%rax
  Inst 13825:   jmp     label515
Block 515:
  (successor: Block 516)
  (instruction range: 13826 .. 13892)
  Inst 13826:   movq    %rax, rsp(1272 + virtual offset)
  Inst 13827:   nop     len=0
  Inst 13828:   nop     len=0
  Inst 13829:   nop     len=0
  Inst 13830:   nop     len=0
  Inst 13831:   nop     len=0
  Inst 13832:   nop     len=0
  Inst 13833:   nop     len=0
  Inst 13834:   nop     len=0
  Inst 13835:   nop     len=0
  Inst 13836:   nop     len=0
  Inst 13837:   nop     len=0
  Inst 13838:   nop     len=0
  Inst 13839:   nop     len=0
  Inst 13840:   nop     len=0
  Inst 13841:   nop     len=0
  Inst 13842:   nop     len=0
  Inst 13843:   nop     len=0
  Inst 13844:   nop     len=0
  Inst 13845:   nop     len=0
  Inst 13846:   nop     len=0
  Inst 13847:   nop     len=0
  Inst 13848:   nop     len=0
  Inst 13849:   nop     len=0
  Inst 13850:   nop     len=0
  Inst 13851:   nop     len=0
  Inst 13852:   nop     len=0
  Inst 13853:   nop     len=0
  Inst 13854:   nop     len=0
  Inst 13855:   nop     len=0
  Inst 13856:   nop     len=0
  Inst 13857:   nop     len=0
  Inst 13858:   nop     len=0
  Inst 13859:   nop     len=0
  Inst 13860:   nop     len=0
  Inst 13861:   nop     len=0
  Inst 13862:   nop     len=0
  Inst 13863:   nop     len=0
  Inst 13864:   nop     len=0
  Inst 13865:   nop     len=0
  Inst 13866:   nop     len=0
  Inst 13867:   nop     len=0
  Inst 13868:   nop     len=0
  Inst 13869:   nop     len=0
  Inst 13870:   nop     len=0
  Inst 13871:   nop     len=0
  Inst 13872:   nop     len=0
  Inst 13873:   nop     len=0
  Inst 13874:   nop     len=0
  Inst 13875:   nop     len=0
  Inst 13876:   nop     len=0
  Inst 13877:   nop     len=0
  Inst 13878:   nop     len=0
  Inst 13879:   nop     len=0
  Inst 13880:   nop     len=0
  Inst 13881:   nop     len=0
  Inst 13882:   nop     len=0
  Inst 13883:   nop     len=0
  Inst 13884:   nop     len=0
  Inst 13885:   nop     len=0
  Inst 13886:   nop     len=0
  Inst 13887:   nop     len=0
  Inst 13888:   nop     len=0
  Inst 13889:   nop     len=0
  Inst 13890:   nop     len=0
  Inst 13891:   jmp     label516
Block 516:
  (original IR block: block258)
  (successor: Block 517)
  (successor: Block 518)
  (instruction range: 13892 .. 13903)
  Inst 13892:   movq    rsp(2064 + virtual offset), %rsi
  Inst 13893:   movq    8(%rsi), %rdi
  Inst 13894:   movq    rsp(2048 + virtual offset), %rsi
  Inst 13895:   load_ext_name u0:2+0, %rax
  Inst 13896:   movq    %rsi, rsp(784 + virtual offset)
  Inst 13897:   movq    %rdi, rsp(800 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13898:   call    *%rax
  Inst 13899:   movq    %rax, %rbx
  Inst 13900:   movq    %rdx, %r14
  Inst 13901:   testq   %r14, %r14
  Inst 13902:   jz      label517; j label518
Block 517:
  (successor: Block 520)
  (instruction range: 13903 .. 13969)
  Inst 13903:   movq    %rbx, rsp(784 + virtual offset)
  Inst 13904:   nop     len=0
  Inst 13905:   nop     len=0
  Inst 13906:   nop     len=0
  Inst 13907:   nop     len=0
  Inst 13908:   nop     len=0
  Inst 13909:   nop     len=0
  Inst 13910:   nop     len=0
  Inst 13911:   nop     len=0
  Inst 13912:   nop     len=0
  Inst 13913:   nop     len=0
  Inst 13914:   nop     len=0
  Inst 13915:   nop     len=0
  Inst 13916:   nop     len=0
  Inst 13917:   nop     len=0
  Inst 13918:   nop     len=0
  Inst 13919:   nop     len=0
  Inst 13920:   nop     len=0
  Inst 13921:   nop     len=0
  Inst 13922:   nop     len=0
  Inst 13923:   nop     len=0
  Inst 13924:   nop     len=0
  Inst 13925:   nop     len=0
  Inst 13926:   nop     len=0
  Inst 13927:   nop     len=0
  Inst 13928:   nop     len=0
  Inst 13929:   nop     len=0
  Inst 13930:   nop     len=0
  Inst 13931:   nop     len=0
  Inst 13932:   nop     len=0
  Inst 13933:   nop     len=0
  Inst 13934:   nop     len=0
  Inst 13935:   nop     len=0
  Inst 13936:   nop     len=0
  Inst 13937:   nop     len=0
  Inst 13938:   nop     len=0
  Inst 13939:   nop     len=0
  Inst 13940:   nop     len=0
  Inst 13941:   nop     len=0
  Inst 13942:   nop     len=0
  Inst 13943:   nop     len=0
  Inst 13944:   nop     len=0
  Inst 13945:   nop     len=0
  Inst 13946:   nop     len=0
  Inst 13947:   nop     len=0
  Inst 13948:   nop     len=0
  Inst 13949:   nop     len=0
  Inst 13950:   nop     len=0
  Inst 13951:   nop     len=0
  Inst 13952:   nop     len=0
  Inst 13953:   nop     len=0
  Inst 13954:   nop     len=0
  Inst 13955:   nop     len=0
  Inst 13956:   nop     len=0
  Inst 13957:   nop     len=0
  Inst 13958:   nop     len=0
  Inst 13959:   nop     len=0
  Inst 13960:   nop     len=0
  Inst 13961:   nop     len=0
  Inst 13962:   nop     len=0
  Inst 13963:   nop     len=0
  Inst 13964:   nop     len=0
  Inst 13965:   nop     len=0
  Inst 13966:   nop     len=0
  Inst 13967:   nop     len=0
  Inst 13968:   jmp     label520
Block 518:
  (original IR block: block261)
  (successor: Block 519)
  (instruction range: 13969 .. 13998)
  Inst 13969:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13970:   movq    152(%rsi), %r13
  Inst 13971:   movq    %r14, %r15
  Inst 13972:   addq    $-1, %r15
  Inst 13973:   movq    %r14, %rdx
  Inst 13974:   shlq    $3, %rdx
  Inst 13975:   movq    %r13, %r12
  Inst 13976:   addq    %rdx, %r12
  Inst 13977:   movq    %r13, %rdi
  Inst 13978:   addq    $-24, %rdi
  Inst 13979:   movq    %r13, %rsi
  Inst 13980:   load_ext_name %Memmove+0, %rax
  Inst 13981:   movq    %rbx, rsp(800 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S99, S100, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13982:   call    *%rax
  Inst 13983:   movq    rsp(800 + virtual offset), %rbx
  Inst 13984:   load_ext_name u1:1+0, %rsi
  Inst 13985:   movl    $1, %edi
  Inst 13986:   movq    %rdi, -8(%r13,%r14,8)
  Inst 13987:   movl    $1, %edi
  Inst 13988:   movq    %rdi, -16(%r13,%r14,8)
  Inst 13989:   movq    %rsi, -24(%r13,%r14,8)
  Inst 13990:   movq    rsp(2072 + virtual offset), %rsi
  Inst 13991:   movq    %r12, 152(%rsi)
  Inst 13992:   movq    %rbx, %rdi
  Inst 13993:   movq    %r15, %rsi
  Inst 13994:   load_ext_name u0:3+0, %rax
  Inst 13995:   movq    %rdi, rsp(784 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 13996:   call    *%rax
  Inst 13997:   jmp     label519
Block 519:
  (successor: Block 520)
  (instruction range: 13998 .. 14064)
  Inst 13998:   movq    %rax, rsp(784 + virtual offset)
  Inst 13999:   nop     len=0
  Inst 14000:   nop     len=0
  Inst 14001:   nop     len=0
  Inst 14002:   nop     len=0
  Inst 14003:   nop     len=0
  Inst 14004:   nop     len=0
  Inst 14005:   nop     len=0
  Inst 14006:   nop     len=0
  Inst 14007:   nop     len=0
  Inst 14008:   nop     len=0
  Inst 14009:   nop     len=0
  Inst 14010:   nop     len=0
  Inst 14011:   nop     len=0
  Inst 14012:   nop     len=0
  Inst 14013:   nop     len=0
  Inst 14014:   nop     len=0
  Inst 14015:   nop     len=0
  Inst 14016:   nop     len=0
  Inst 14017:   nop     len=0
  Inst 14018:   nop     len=0
  Inst 14019:   nop     len=0
  Inst 14020:   nop     len=0
  Inst 14021:   nop     len=0
  Inst 14022:   nop     len=0
  Inst 14023:   nop     len=0
  Inst 14024:   nop     len=0
  Inst 14025:   nop     len=0
  Inst 14026:   nop     len=0
  Inst 14027:   nop     len=0
  Inst 14028:   nop     len=0
  Inst 14029:   nop     len=0
  Inst 14030:   nop     len=0
  Inst 14031:   nop     len=0
  Inst 14032:   nop     len=0
  Inst 14033:   nop     len=0
  Inst 14034:   nop     len=0
  Inst 14035:   nop     len=0
  Inst 14036:   nop     len=0
  Inst 14037:   nop     len=0
  Inst 14038:   nop     len=0
  Inst 14039:   nop     len=0
  Inst 14040:   nop     len=0
  Inst 14041:   nop     len=0
  Inst 14042:   nop     len=0
  Inst 14043:   nop     len=0
  Inst 14044:   nop     len=0
  Inst 14045:   nop     len=0
  Inst 14046:   nop     len=0
  Inst 14047:   nop     len=0
  Inst 14048:   nop     len=0
  Inst 14049:   nop     len=0
  Inst 14050:   nop     len=0
  Inst 14051:   nop     len=0
  Inst 14052:   nop     len=0
  Inst 14053:   nop     len=0
  Inst 14054:   nop     len=0
  Inst 14055:   nop     len=0
  Inst 14056:   nop     len=0
  Inst 14057:   nop     len=0
  Inst 14058:   nop     len=0
  Inst 14059:   nop     len=0
  Inst 14060:   nop     len=0
  Inst 14061:   nop     len=0
  Inst 14062:   nop     len=0
  Inst 14063:   jmp     label520
Block 520:
  (original IR block: block260)
  (successor: Block 521)
  (successor: Block 522)
  (instruction range: 14064 .. 14075)
  Inst 14064:   movq    rsp(2064 + virtual offset), %rsi
  Inst 14065:   movq    8(%rsi), %rdi
  Inst 14066:   movq    rsp(2048 + virtual offset), %rsi
  Inst 14067:   load_ext_name u0:2+0, %rax
  Inst 14068:   movq    %rsi, rsp(800 + virtual offset)
  Inst 14069:   movq    %rdi, rsp(816 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14070:   call    *%rax
  Inst 14071:   movq    %rax, %rbx
  Inst 14072:   movq    %rdx, %r14
  Inst 14073:   testq   %r14, %r14
  Inst 14074:   jz      label521; j label522
Block 521:
  (successor: Block 524)
  (instruction range: 14075 .. 14142)
  Inst 14075:   movq    %rbx, rsp(1288 + virtual offset)
  Inst 14076:   nop     len=0
  Inst 14077:   nop     len=0
  Inst 14078:   nop     len=0
  Inst 14079:   nop     len=0
  Inst 14080:   nop     len=0
  Inst 14081:   nop     len=0
  Inst 14082:   nop     len=0
  Inst 14083:   nop     len=0
  Inst 14084:   nop     len=0
  Inst 14085:   nop     len=0
  Inst 14086:   nop     len=0
  Inst 14087:   nop     len=0
  Inst 14088:   nop     len=0
  Inst 14089:   nop     len=0
  Inst 14090:   nop     len=0
  Inst 14091:   nop     len=0
  Inst 14092:   nop     len=0
  Inst 14093:   nop     len=0
  Inst 14094:   nop     len=0
  Inst 14095:   nop     len=0
  Inst 14096:   nop     len=0
  Inst 14097:   nop     len=0
  Inst 14098:   nop     len=0
  Inst 14099:   nop     len=0
  Inst 14100:   nop     len=0
  Inst 14101:   nop     len=0
  Inst 14102:   nop     len=0
  Inst 14103:   nop     len=0
  Inst 14104:   nop     len=0
  Inst 14105:   nop     len=0
  Inst 14106:   nop     len=0
  Inst 14107:   nop     len=0
  Inst 14108:   nop     len=0
  Inst 14109:   nop     len=0
  Inst 14110:   nop     len=0
  Inst 14111:   nop     len=0
  Inst 14112:   nop     len=0
  Inst 14113:   nop     len=0
  Inst 14114:   nop     len=0
  Inst 14115:   nop     len=0
  Inst 14116:   nop     len=0
  Inst 14117:   nop     len=0
  Inst 14118:   nop     len=0
  Inst 14119:   nop     len=0
  Inst 14120:   nop     len=0
  Inst 14121:   nop     len=0
  Inst 14122:   nop     len=0
  Inst 14123:   nop     len=0
  Inst 14124:   nop     len=0
  Inst 14125:   nop     len=0
  Inst 14126:   nop     len=0
  Inst 14127:   nop     len=0
  Inst 14128:   nop     len=0
  Inst 14129:   nop     len=0
  Inst 14130:   nop     len=0
  Inst 14131:   nop     len=0
  Inst 14132:   nop     len=0
  Inst 14133:   nop     len=0
  Inst 14134:   nop     len=0
  Inst 14135:   nop     len=0
  Inst 14136:   nop     len=0
  Inst 14137:   nop     len=0
  Inst 14138:   nop     len=0
  Inst 14139:   nop     len=0
  Inst 14140:   nop     len=0
  Inst 14141:   jmp     label524
Block 522:
  (original IR block: block263)
  (successor: Block 523)
  (instruction range: 14142 .. 14171)
  Inst 14142:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14143:   movq    152(%rsi), %r13
  Inst 14144:   movq    %r14, %r15
  Inst 14145:   addq    $-1, %r15
  Inst 14146:   movq    %r14, %rdx
  Inst 14147:   shlq    $3, %rdx
  Inst 14148:   movq    %r13, %r12
  Inst 14149:   addq    %rdx, %r12
  Inst 14150:   movq    %r13, %rdi
  Inst 14151:   addq    $-24, %rdi
  Inst 14152:   movq    %r13, %rsi
  Inst 14153:   load_ext_name %Memmove+0, %rax
  Inst 14154:   movq    %rbx, rsp(800 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14155:   call    *%rax
  Inst 14156:   movq    rsp(800 + virtual offset), %rbx
  Inst 14157:   load_ext_name u1:1+0, %rsi
  Inst 14158:   movl    $1, %edi
  Inst 14159:   movq    %rdi, -8(%r13,%r14,8)
  Inst 14160:   movl    $1, %edi
  Inst 14161:   movq    %rdi, -16(%r13,%r14,8)
  Inst 14162:   movq    %rsi, -24(%r13,%r14,8)
  Inst 14163:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14164:   movq    %r12, 152(%rsi)
  Inst 14165:   movq    %rbx, %rdi
  Inst 14166:   movq    %r15, %rsi
  Inst 14167:   load_ext_name u0:3+0, %rax
  Inst 14168:   movq    %rdi, rsp(800 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14169:   call    *%rax
  Inst 14170:   jmp     label523
Block 523:
  (successor: Block 524)
  (instruction range: 14171 .. 14238)
  Inst 14171:   movq    %rax, rsp(1288 + virtual offset)
  Inst 14172:   nop     len=0
  Inst 14173:   nop     len=0
  Inst 14174:   nop     len=0
  Inst 14175:   nop     len=0
  Inst 14176:   nop     len=0
  Inst 14177:   nop     len=0
  Inst 14178:   nop     len=0
  Inst 14179:   nop     len=0
  Inst 14180:   nop     len=0
  Inst 14181:   nop     len=0
  Inst 14182:   nop     len=0
  Inst 14183:   nop     len=0
  Inst 14184:   nop     len=0
  Inst 14185:   nop     len=0
  Inst 14186:   nop     len=0
  Inst 14187:   nop     len=0
  Inst 14188:   nop     len=0
  Inst 14189:   nop     len=0
  Inst 14190:   nop     len=0
  Inst 14191:   nop     len=0
  Inst 14192:   nop     len=0
  Inst 14193:   nop     len=0
  Inst 14194:   nop     len=0
  Inst 14195:   nop     len=0
  Inst 14196:   nop     len=0
  Inst 14197:   nop     len=0
  Inst 14198:   nop     len=0
  Inst 14199:   nop     len=0
  Inst 14200:   nop     len=0
  Inst 14201:   nop     len=0
  Inst 14202:   nop     len=0
  Inst 14203:   nop     len=0
  Inst 14204:   nop     len=0
  Inst 14205:   nop     len=0
  Inst 14206:   nop     len=0
  Inst 14207:   nop     len=0
  Inst 14208:   nop     len=0
  Inst 14209:   nop     len=0
  Inst 14210:   nop     len=0
  Inst 14211:   nop     len=0
  Inst 14212:   nop     len=0
  Inst 14213:   nop     len=0
  Inst 14214:   nop     len=0
  Inst 14215:   nop     len=0
  Inst 14216:   nop     len=0
  Inst 14217:   nop     len=0
  Inst 14218:   nop     len=0
  Inst 14219:   nop     len=0
  Inst 14220:   nop     len=0
  Inst 14221:   nop     len=0
  Inst 14222:   nop     len=0
  Inst 14223:   nop     len=0
  Inst 14224:   nop     len=0
  Inst 14225:   nop     len=0
  Inst 14226:   nop     len=0
  Inst 14227:   nop     len=0
  Inst 14228:   nop     len=0
  Inst 14229:   nop     len=0
  Inst 14230:   nop     len=0
  Inst 14231:   nop     len=0
  Inst 14232:   nop     len=0
  Inst 14233:   nop     len=0
  Inst 14234:   nop     len=0
  Inst 14235:   nop     len=0
  Inst 14236:   nop     len=0
  Inst 14237:   jmp     label524
Block 524:
  (original IR block: block262)
  (successor: Block 525)
  (successor: Block 526)
  (instruction range: 14238 .. 14249)
  Inst 14238:   movq    rsp(2064 + virtual offset), %rsi
  Inst 14239:   movq    8(%rsi), %rdi
  Inst 14240:   movq    rsp(2048 + virtual offset), %rsi
  Inst 14241:   load_ext_name u0:2+0, %rax
  Inst 14242:   movq    %rsi, rsp(800 + virtual offset)
  Inst 14243:   movq    %rdi, rsp(816 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14244:   call    *%rax
  Inst 14245:   movq    %rax, %r15
  Inst 14246:   movq    %rdx, %r14
  Inst 14247:   testq   %r14, %r14
  Inst 14248:   jz      label525; j label526
Block 525:
  (successor: Block 528)
  (instruction range: 14249 .. 14316)
  Inst 14249:   movq    %r15, rsp(800 + virtual offset)
  Inst 14250:   nop     len=0
  Inst 14251:   nop     len=0
  Inst 14252:   nop     len=0
  Inst 14253:   nop     len=0
  Inst 14254:   nop     len=0
  Inst 14255:   nop     len=0
  Inst 14256:   nop     len=0
  Inst 14257:   nop     len=0
  Inst 14258:   nop     len=0
  Inst 14259:   nop     len=0
  Inst 14260:   nop     len=0
  Inst 14261:   nop     len=0
  Inst 14262:   nop     len=0
  Inst 14263:   nop     len=0
  Inst 14264:   nop     len=0
  Inst 14265:   nop     len=0
  Inst 14266:   nop     len=0
  Inst 14267:   nop     len=0
  Inst 14268:   nop     len=0
  Inst 14269:   nop     len=0
  Inst 14270:   nop     len=0
  Inst 14271:   nop     len=0
  Inst 14272:   nop     len=0
  Inst 14273:   nop     len=0
  Inst 14274:   nop     len=0
  Inst 14275:   nop     len=0
  Inst 14276:   nop     len=0
  Inst 14277:   nop     len=0
  Inst 14278:   nop     len=0
  Inst 14279:   nop     len=0
  Inst 14280:   nop     len=0
  Inst 14281:   nop     len=0
  Inst 14282:   nop     len=0
  Inst 14283:   nop     len=0
  Inst 14284:   nop     len=0
  Inst 14285:   nop     len=0
  Inst 14286:   nop     len=0
  Inst 14287:   nop     len=0
  Inst 14288:   nop     len=0
  Inst 14289:   nop     len=0
  Inst 14290:   nop     len=0
  Inst 14291:   nop     len=0
  Inst 14292:   nop     len=0
  Inst 14293:   nop     len=0
  Inst 14294:   nop     len=0
  Inst 14295:   nop     len=0
  Inst 14296:   nop     len=0
  Inst 14297:   nop     len=0
  Inst 14298:   nop     len=0
  Inst 14299:   nop     len=0
  Inst 14300:   nop     len=0
  Inst 14301:   nop     len=0
  Inst 14302:   nop     len=0
  Inst 14303:   nop     len=0
  Inst 14304:   nop     len=0
  Inst 14305:   nop     len=0
  Inst 14306:   nop     len=0
  Inst 14307:   nop     len=0
  Inst 14308:   nop     len=0
  Inst 14309:   nop     len=0
  Inst 14310:   nop     len=0
  Inst 14311:   nop     len=0
  Inst 14312:   nop     len=0
  Inst 14313:   nop     len=0
  Inst 14314:   nop     len=0
  Inst 14315:   jmp     label528
Block 526:
  (original IR block: block265)
  (successor: Block 527)
  (instruction range: 14316 .. 14345)
  Inst 14316:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14317:   movq    152(%rsi), %r13
  Inst 14318:   movq    %r14, %rbx
  Inst 14319:   addq    $-1, %rbx
  Inst 14320:   movq    %r14, %rdx
  Inst 14321:   shlq    $3, %rdx
  Inst 14322:   movq    %r13, %r12
  Inst 14323:   addq    %rdx, %r12
  Inst 14324:   movq    %r13, %rdi
  Inst 14325:   addq    $-24, %rdi
  Inst 14326:   movq    %r13, %rsi
  Inst 14327:   load_ext_name %Memmove+0, %rax
  Inst 14328:   movq    %r15, rsp(816 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S101, S102, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14329:   call    *%rax
  Inst 14330:   movq    rsp(816 + virtual offset), %r15
  Inst 14331:   load_ext_name u1:1+0, %rsi
  Inst 14332:   movl    $1, %edi
  Inst 14333:   movq    %rdi, -8(%r13,%r14,8)
  Inst 14334:   movl    $1, %edi
  Inst 14335:   movq    %rdi, -16(%r13,%r14,8)
  Inst 14336:   movq    %rsi, -24(%r13,%r14,8)
  Inst 14337:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14338:   movq    %r12, 152(%rsi)
  Inst 14339:   movq    %r15, %rdi
  Inst 14340:   movq    %rbx, %rsi
  Inst 14341:   load_ext_name u0:3+0, %rax
  Inst 14342:   movq    %rdi, rsp(800 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14343:   call    *%rax
  Inst 14344:   jmp     label527
Block 527:
  (successor: Block 528)
  (instruction range: 14345 .. 14412)
  Inst 14345:   movq    %rax, rsp(800 + virtual offset)
  Inst 14346:   nop     len=0
  Inst 14347:   nop     len=0
  Inst 14348:   nop     len=0
  Inst 14349:   nop     len=0
  Inst 14350:   nop     len=0
  Inst 14351:   nop     len=0
  Inst 14352:   nop     len=0
  Inst 14353:   nop     len=0
  Inst 14354:   nop     len=0
  Inst 14355:   nop     len=0
  Inst 14356:   nop     len=0
  Inst 14357:   nop     len=0
  Inst 14358:   nop     len=0
  Inst 14359:   nop     len=0
  Inst 14360:   nop     len=0
  Inst 14361:   nop     len=0
  Inst 14362:   nop     len=0
  Inst 14363:   nop     len=0
  Inst 14364:   nop     len=0
  Inst 14365:   nop     len=0
  Inst 14366:   nop     len=0
  Inst 14367:   nop     len=0
  Inst 14368:   nop     len=0
  Inst 14369:   nop     len=0
  Inst 14370:   nop     len=0
  Inst 14371:   nop     len=0
  Inst 14372:   nop     len=0
  Inst 14373:   nop     len=0
  Inst 14374:   nop     len=0
  Inst 14375:   nop     len=0
  Inst 14376:   nop     len=0
  Inst 14377:   nop     len=0
  Inst 14378:   nop     len=0
  Inst 14379:   nop     len=0
  Inst 14380:   nop     len=0
  Inst 14381:   nop     len=0
  Inst 14382:   nop     len=0
  Inst 14383:   nop     len=0
  Inst 14384:   nop     len=0
  Inst 14385:   nop     len=0
  Inst 14386:   nop     len=0
  Inst 14387:   nop     len=0
  Inst 14388:   nop     len=0
  Inst 14389:   nop     len=0
  Inst 14390:   nop     len=0
  Inst 14391:   nop     len=0
  Inst 14392:   nop     len=0
  Inst 14393:   nop     len=0
  Inst 14394:   nop     len=0
  Inst 14395:   nop     len=0
  Inst 14396:   nop     len=0
  Inst 14397:   nop     len=0
  Inst 14398:   nop     len=0
  Inst 14399:   nop     len=0
  Inst 14400:   nop     len=0
  Inst 14401:   nop     len=0
  Inst 14402:   nop     len=0
  Inst 14403:   nop     len=0
  Inst 14404:   nop     len=0
  Inst 14405:   nop     len=0
  Inst 14406:   nop     len=0
  Inst 14407:   nop     len=0
  Inst 14408:   nop     len=0
  Inst 14409:   nop     len=0
  Inst 14410:   nop     len=0
  Inst 14411:   jmp     label528
Block 528:
  (original IR block: block264)
  (successor: Block 529)
  (successor: Block 530)
  (instruction range: 14412 .. 14423)
  Inst 14412:   movq    rsp(2064 + virtual offset), %rsi
  Inst 14413:   movq    8(%rsi), %rdi
  Inst 14414:   movq    rsp(2048 + virtual offset), %rsi
  Inst 14415:   load_ext_name u0:2+0, %rax
  Inst 14416:   movq    %rsi, rsp(816 + virtual offset)
  Inst 14417:   movq    %rdi, rsp(832 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14418:   call    *%rax
  Inst 14419:   movq    %rax, %rbx
  Inst 14420:   movq    %rdx, %r14
  Inst 14421:   testq   %r14, %r14
  Inst 14422:   jz      label529; j label530
Block 529:
  (successor: Block 532)
  (instruction range: 14423 .. 14491)
  Inst 14423:   movq    %rbx, rsp(1304 + virtual offset)
  Inst 14424:   nop     len=0
  Inst 14425:   nop     len=0
  Inst 14426:   nop     len=0
  Inst 14427:   nop     len=0
  Inst 14428:   nop     len=0
  Inst 14429:   nop     len=0
  Inst 14430:   nop     len=0
  Inst 14431:   nop     len=0
  Inst 14432:   nop     len=0
  Inst 14433:   nop     len=0
  Inst 14434:   nop     len=0
  Inst 14435:   nop     len=0
  Inst 14436:   nop     len=0
  Inst 14437:   nop     len=0
  Inst 14438:   nop     len=0
  Inst 14439:   nop     len=0
  Inst 14440:   nop     len=0
  Inst 14441:   nop     len=0
  Inst 14442:   nop     len=0
  Inst 14443:   nop     len=0
  Inst 14444:   nop     len=0
  Inst 14445:   nop     len=0
  Inst 14446:   nop     len=0
  Inst 14447:   nop     len=0
  Inst 14448:   nop     len=0
  Inst 14449:   nop     len=0
  Inst 14450:   nop     len=0
  Inst 14451:   nop     len=0
  Inst 14452:   nop     len=0
  Inst 14453:   nop     len=0
  Inst 14454:   nop     len=0
  Inst 14455:   nop     len=0
  Inst 14456:   nop     len=0
  Inst 14457:   nop     len=0
  Inst 14458:   nop     len=0
  Inst 14459:   nop     len=0
  Inst 14460:   nop     len=0
  Inst 14461:   nop     len=0
  Inst 14462:   nop     len=0
  Inst 14463:   nop     len=0
  Inst 14464:   nop     len=0
  Inst 14465:   nop     len=0
  Inst 14466:   nop     len=0
  Inst 14467:   nop     len=0
  Inst 14468:   nop     len=0
  Inst 14469:   nop     len=0
  Inst 14470:   nop     len=0
  Inst 14471:   nop     len=0
  Inst 14472:   nop     len=0
  Inst 14473:   nop     len=0
  Inst 14474:   nop     len=0
  Inst 14475:   nop     len=0
  Inst 14476:   nop     len=0
  Inst 14477:   nop     len=0
  Inst 14478:   nop     len=0
  Inst 14479:   nop     len=0
  Inst 14480:   nop     len=0
  Inst 14481:   nop     len=0
  Inst 14482:   nop     len=0
  Inst 14483:   nop     len=0
  Inst 14484:   nop     len=0
  Inst 14485:   nop     len=0
  Inst 14486:   nop     len=0
  Inst 14487:   nop     len=0
  Inst 14488:   nop     len=0
  Inst 14489:   nop     len=0
  Inst 14490:   jmp     label532
Block 530:
  (original IR block: block267)
  (successor: Block 531)
  (instruction range: 14491 .. 14520)
  Inst 14491:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14492:   movq    152(%rsi), %r13
  Inst 14493:   movq    %r14, %r15
  Inst 14494:   addq    $-1, %r15
  Inst 14495:   movq    %r14, %rdx
  Inst 14496:   shlq    $3, %rdx
  Inst 14497:   movq    %r13, %r12
  Inst 14498:   addq    %rdx, %r12
  Inst 14499:   movq    %r13, %rdi
  Inst 14500:   addq    $-24, %rdi
  Inst 14501:   movq    %r13, %rsi
  Inst 14502:   load_ext_name %Memmove+0, %rax
  Inst 14503:   movq    %rbx, rsp(816 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14504:   call    *%rax
  Inst 14505:   movq    rsp(816 + virtual offset), %rbx
  Inst 14506:   load_ext_name u1:1+0, %rsi
  Inst 14507:   movl    $1, %edi
  Inst 14508:   movq    %rdi, -8(%r13,%r14,8)
  Inst 14509:   movl    $1, %edi
  Inst 14510:   movq    %rdi, -16(%r13,%r14,8)
  Inst 14511:   movq    %rsi, -24(%r13,%r14,8)
  Inst 14512:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14513:   movq    %r12, 152(%rsi)
  Inst 14514:   movq    %rbx, %rdi
  Inst 14515:   movq    %r15, %rsi
  Inst 14516:   load_ext_name u0:3+0, %rax
  Inst 14517:   movq    %rdi, rsp(816 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14518:   call    *%rax
  Inst 14519:   jmp     label531
Block 531:
  (successor: Block 532)
  (instruction range: 14520 .. 14588)
  Inst 14520:   movq    %rax, rsp(1304 + virtual offset)
  Inst 14521:   nop     len=0
  Inst 14522:   nop     len=0
  Inst 14523:   nop     len=0
  Inst 14524:   nop     len=0
  Inst 14525:   nop     len=0
  Inst 14526:   nop     len=0
  Inst 14527:   nop     len=0
  Inst 14528:   nop     len=0
  Inst 14529:   nop     len=0
  Inst 14530:   nop     len=0
  Inst 14531:   nop     len=0
  Inst 14532:   nop     len=0
  Inst 14533:   nop     len=0
  Inst 14534:   nop     len=0
  Inst 14535:   nop     len=0
  Inst 14536:   nop     len=0
  Inst 14537:   nop     len=0
  Inst 14538:   nop     len=0
  Inst 14539:   nop     len=0
  Inst 14540:   nop     len=0
  Inst 14541:   nop     len=0
  Inst 14542:   nop     len=0
  Inst 14543:   nop     len=0
  Inst 14544:   nop     len=0
  Inst 14545:   nop     len=0
  Inst 14546:   nop     len=0
  Inst 14547:   nop     len=0
  Inst 14548:   nop     len=0
  Inst 14549:   nop     len=0
  Inst 14550:   nop     len=0
  Inst 14551:   nop     len=0
  Inst 14552:   nop     len=0
  Inst 14553:   nop     len=0
  Inst 14554:   nop     len=0
  Inst 14555:   nop     len=0
  Inst 14556:   nop     len=0
  Inst 14557:   nop     len=0
  Inst 14558:   nop     len=0
  Inst 14559:   nop     len=0
  Inst 14560:   nop     len=0
  Inst 14561:   nop     len=0
  Inst 14562:   nop     len=0
  Inst 14563:   nop     len=0
  Inst 14564:   nop     len=0
  Inst 14565:   nop     len=0
  Inst 14566:   nop     len=0
  Inst 14567:   nop     len=0
  Inst 14568:   nop     len=0
  Inst 14569:   nop     len=0
  Inst 14570:   nop     len=0
  Inst 14571:   nop     len=0
  Inst 14572:   nop     len=0
  Inst 14573:   nop     len=0
  Inst 14574:   nop     len=0
  Inst 14575:   nop     len=0
  Inst 14576:   nop     len=0
  Inst 14577:   nop     len=0
  Inst 14578:   nop     len=0
  Inst 14579:   nop     len=0
  Inst 14580:   nop     len=0
  Inst 14581:   nop     len=0
  Inst 14582:   nop     len=0
  Inst 14583:   nop     len=0
  Inst 14584:   nop     len=0
  Inst 14585:   nop     len=0
  Inst 14586:   nop     len=0
  Inst 14587:   jmp     label532
Block 532:
  (original IR block: block266)
  (successor: Block 533)
  (successor: Block 534)
  (instruction range: 14588 .. 14599)
  Inst 14588:   movq    rsp(2064 + virtual offset), %rsi
  Inst 14589:   movq    8(%rsi), %rdi
  Inst 14590:   movq    rsp(2048 + virtual offset), %rsi
  Inst 14591:   load_ext_name u0:2+0, %rax
  Inst 14592:   movq    %rsi, rsp(816 + virtual offset)
  Inst 14593:   movq    %rdi, rsp(832 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14594:   call    *%rax
  Inst 14595:   movq    %rax, %rbx
  Inst 14596:   movq    %rdx, %r14
  Inst 14597:   testq   %r14, %r14
  Inst 14598:   jz      label533; j label534
Block 533:
  (successor: Block 536)
  (instruction range: 14599 .. 14667)
  Inst 14599:   movq    %rbx, rsp(816 + virtual offset)
  Inst 14600:   nop     len=0
  Inst 14601:   nop     len=0
  Inst 14602:   nop     len=0
  Inst 14603:   nop     len=0
  Inst 14604:   nop     len=0
  Inst 14605:   nop     len=0
  Inst 14606:   nop     len=0
  Inst 14607:   nop     len=0
  Inst 14608:   nop     len=0
  Inst 14609:   nop     len=0
  Inst 14610:   nop     len=0
  Inst 14611:   nop     len=0
  Inst 14612:   nop     len=0
  Inst 14613:   nop     len=0
  Inst 14614:   nop     len=0
  Inst 14615:   nop     len=0
  Inst 14616:   nop     len=0
  Inst 14617:   nop     len=0
  Inst 14618:   nop     len=0
  Inst 14619:   nop     len=0
  Inst 14620:   nop     len=0
  Inst 14621:   nop     len=0
  Inst 14622:   nop     len=0
  Inst 14623:   nop     len=0
  Inst 14624:   nop     len=0
  Inst 14625:   nop     len=0
  Inst 14626:   nop     len=0
  Inst 14627:   nop     len=0
  Inst 14628:   nop     len=0
  Inst 14629:   nop     len=0
  Inst 14630:   nop     len=0
  Inst 14631:   nop     len=0
  Inst 14632:   nop     len=0
  Inst 14633:   nop     len=0
  Inst 14634:   nop     len=0
  Inst 14635:   nop     len=0
  Inst 14636:   nop     len=0
  Inst 14637:   nop     len=0
  Inst 14638:   nop     len=0
  Inst 14639:   nop     len=0
  Inst 14640:   nop     len=0
  Inst 14641:   nop     len=0
  Inst 14642:   nop     len=0
  Inst 14643:   nop     len=0
  Inst 14644:   nop     len=0
  Inst 14645:   nop     len=0
  Inst 14646:   nop     len=0
  Inst 14647:   nop     len=0
  Inst 14648:   nop     len=0
  Inst 14649:   nop     len=0
  Inst 14650:   nop     len=0
  Inst 14651:   nop     len=0
  Inst 14652:   nop     len=0
  Inst 14653:   nop     len=0
  Inst 14654:   nop     len=0
  Inst 14655:   nop     len=0
  Inst 14656:   nop     len=0
  Inst 14657:   nop     len=0
  Inst 14658:   nop     len=0
  Inst 14659:   nop     len=0
  Inst 14660:   nop     len=0
  Inst 14661:   nop     len=0
  Inst 14662:   nop     len=0
  Inst 14663:   nop     len=0
  Inst 14664:   nop     len=0
  Inst 14665:   nop     len=0
  Inst 14666:   jmp     label536
Block 534:
  (original IR block: block269)
  (successor: Block 535)
  (instruction range: 14667 .. 14696)
  Inst 14667:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14668:   movq    152(%rsi), %r13
  Inst 14669:   movq    %r14, %r15
  Inst 14670:   addq    $-1, %r15
  Inst 14671:   movq    %r14, %rdx
  Inst 14672:   shlq    $3, %rdx
  Inst 14673:   movq    %r13, %r12
  Inst 14674:   addq    %rdx, %r12
  Inst 14675:   movq    %r13, %rdi
  Inst 14676:   addq    $-24, %rdi
  Inst 14677:   movq    %r13, %rsi
  Inst 14678:   load_ext_name %Memmove+0, %rax
  Inst 14679:   movq    %rbx, rsp(832 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S103, S104, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14680:   call    *%rax
  Inst 14681:   movq    rsp(832 + virtual offset), %rbx
  Inst 14682:   load_ext_name u1:1+0, %rsi
  Inst 14683:   movl    $1, %edi
  Inst 14684:   movq    %rdi, -8(%r13,%r14,8)
  Inst 14685:   movl    $1, %edi
  Inst 14686:   movq    %rdi, -16(%r13,%r14,8)
  Inst 14687:   movq    %rsi, -24(%r13,%r14,8)
  Inst 14688:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14689:   movq    %r12, 152(%rsi)
  Inst 14690:   movq    %rbx, %rdi
  Inst 14691:   movq    %r15, %rsi
  Inst 14692:   load_ext_name u0:3+0, %rax
  Inst 14693:   movq    %rdi, rsp(816 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14694:   call    *%rax
  Inst 14695:   jmp     label535
Block 535:
  (successor: Block 536)
  (instruction range: 14696 .. 14764)
  Inst 14696:   movq    %rax, rsp(816 + virtual offset)
  Inst 14697:   nop     len=0
  Inst 14698:   nop     len=0
  Inst 14699:   nop     len=0
  Inst 14700:   nop     len=0
  Inst 14701:   nop     len=0
  Inst 14702:   nop     len=0
  Inst 14703:   nop     len=0
  Inst 14704:   nop     len=0
  Inst 14705:   nop     len=0
  Inst 14706:   nop     len=0
  Inst 14707:   nop     len=0
  Inst 14708:   nop     len=0
  Inst 14709:   nop     len=0
  Inst 14710:   nop     len=0
  Inst 14711:   nop     len=0
  Inst 14712:   nop     len=0
  Inst 14713:   nop     len=0
  Inst 14714:   nop     len=0
  Inst 14715:   nop     len=0
  Inst 14716:   nop     len=0
  Inst 14717:   nop     len=0
  Inst 14718:   nop     len=0
  Inst 14719:   nop     len=0
  Inst 14720:   nop     len=0
  Inst 14721:   nop     len=0
  Inst 14722:   nop     len=0
  Inst 14723:   nop     len=0
  Inst 14724:   nop     len=0
  Inst 14725:   nop     len=0
  Inst 14726:   nop     len=0
  Inst 14727:   nop     len=0
  Inst 14728:   nop     len=0
  Inst 14729:   nop     len=0
  Inst 14730:   nop     len=0
  Inst 14731:   nop     len=0
  Inst 14732:   nop     len=0
  Inst 14733:   nop     len=0
  Inst 14734:   nop     len=0
  Inst 14735:   nop     len=0
  Inst 14736:   nop     len=0
  Inst 14737:   nop     len=0
  Inst 14738:   nop     len=0
  Inst 14739:   nop     len=0
  Inst 14740:   nop     len=0
  Inst 14741:   nop     len=0
  Inst 14742:   nop     len=0
  Inst 14743:   nop     len=0
  Inst 14744:   nop     len=0
  Inst 14745:   nop     len=0
  Inst 14746:   nop     len=0
  Inst 14747:   nop     len=0
  Inst 14748:   nop     len=0
  Inst 14749:   nop     len=0
  Inst 14750:   nop     len=0
  Inst 14751:   nop     len=0
  Inst 14752:   nop     len=0
  Inst 14753:   nop     len=0
  Inst 14754:   nop     len=0
  Inst 14755:   nop     len=0
  Inst 14756:   nop     len=0
  Inst 14757:   nop     len=0
  Inst 14758:   nop     len=0
  Inst 14759:   nop     len=0
  Inst 14760:   nop     len=0
  Inst 14761:   nop     len=0
  Inst 14762:   nop     len=0
  Inst 14763:   jmp     label536
Block 536:
  (original IR block: block268)
  (successor: Block 537)
  (successor: Block 538)
  (instruction range: 14764 .. 14775)
  Inst 14764:   movq    rsp(2064 + virtual offset), %rsi
  Inst 14765:   movq    8(%rsi), %rdi
  Inst 14766:   movq    rsp(2048 + virtual offset), %rsi
  Inst 14767:   load_ext_name u0:2+0, %rax
  Inst 14768:   movq    %rsi, rsp(832 + virtual offset)
  Inst 14769:   movq    %rdi, rsp(848 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14770:   call    *%rax
  Inst 14771:   movq    %rax, %r15
  Inst 14772:   movq    %rdx, %r14
  Inst 14773:   testq   %r14, %r14
  Inst 14774:   jz      label537; j label538
Block 537:
  (successor: Block 540)
  (instruction range: 14775 .. 14844)
  Inst 14775:   movq    %r15, rsp(1320 + virtual offset)
  Inst 14776:   nop     len=0
  Inst 14777:   nop     len=0
  Inst 14778:   nop     len=0
  Inst 14779:   nop     len=0
  Inst 14780:   nop     len=0
  Inst 14781:   nop     len=0
  Inst 14782:   nop     len=0
  Inst 14783:   nop     len=0
  Inst 14784:   nop     len=0
  Inst 14785:   nop     len=0
  Inst 14786:   nop     len=0
  Inst 14787:   nop     len=0
  Inst 14788:   nop     len=0
  Inst 14789:   nop     len=0
  Inst 14790:   nop     len=0
  Inst 14791:   nop     len=0
  Inst 14792:   nop     len=0
  Inst 14793:   nop     len=0
  Inst 14794:   nop     len=0
  Inst 14795:   nop     len=0
  Inst 14796:   nop     len=0
  Inst 14797:   nop     len=0
  Inst 14798:   nop     len=0
  Inst 14799:   nop     len=0
  Inst 14800:   nop     len=0
  Inst 14801:   nop     len=0
  Inst 14802:   nop     len=0
  Inst 14803:   nop     len=0
  Inst 14804:   nop     len=0
  Inst 14805:   nop     len=0
  Inst 14806:   nop     len=0
  Inst 14807:   nop     len=0
  Inst 14808:   nop     len=0
  Inst 14809:   nop     len=0
  Inst 14810:   nop     len=0
  Inst 14811:   nop     len=0
  Inst 14812:   nop     len=0
  Inst 14813:   nop     len=0
  Inst 14814:   nop     len=0
  Inst 14815:   nop     len=0
  Inst 14816:   nop     len=0
  Inst 14817:   nop     len=0
  Inst 14818:   nop     len=0
  Inst 14819:   nop     len=0
  Inst 14820:   nop     len=0
  Inst 14821:   nop     len=0
  Inst 14822:   nop     len=0
  Inst 14823:   nop     len=0
  Inst 14824:   nop     len=0
  Inst 14825:   nop     len=0
  Inst 14826:   nop     len=0
  Inst 14827:   nop     len=0
  Inst 14828:   nop     len=0
  Inst 14829:   nop     len=0
  Inst 14830:   nop     len=0
  Inst 14831:   nop     len=0
  Inst 14832:   nop     len=0
  Inst 14833:   nop     len=0
  Inst 14834:   nop     len=0
  Inst 14835:   nop     len=0
  Inst 14836:   nop     len=0
  Inst 14837:   nop     len=0
  Inst 14838:   nop     len=0
  Inst 14839:   nop     len=0
  Inst 14840:   nop     len=0
  Inst 14841:   nop     len=0
  Inst 14842:   nop     len=0
  Inst 14843:   jmp     label540
Block 538:
  (original IR block: block271)
  (successor: Block 539)
  (instruction range: 14844 .. 14873)
  Inst 14844:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14845:   movq    152(%rsi), %r13
  Inst 14846:   movq    %r14, %rbx
  Inst 14847:   addq    $-1, %rbx
  Inst 14848:   movq    %r14, %rdx
  Inst 14849:   shlq    $3, %rdx
  Inst 14850:   movq    %r13, %r12
  Inst 14851:   addq    %rdx, %r12
  Inst 14852:   movq    %r13, %rdi
  Inst 14853:   addq    $-24, %rdi
  Inst 14854:   movq    %r13, %rsi
  Inst 14855:   load_ext_name %Memmove+0, %rax
  Inst 14856:   movq    %r15, rsp(832 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14857:   call    *%rax
  Inst 14858:   movq    rsp(832 + virtual offset), %r15
  Inst 14859:   load_ext_name u1:1+0, %rsi
  Inst 14860:   movl    $1, %edi
  Inst 14861:   movq    %rdi, -8(%r13,%r14,8)
  Inst 14862:   movl    $1, %edi
  Inst 14863:   movq    %rdi, -16(%r13,%r14,8)
  Inst 14864:   movq    %rsi, -24(%r13,%r14,8)
  Inst 14865:   movq    rsp(2072 + virtual offset), %rsi
  Inst 14866:   movq    %r12, 152(%rsi)
  Inst 14867:   movq    %r15, %rdi
  Inst 14868:   movq    %rbx, %rsi
  Inst 14869:   load_ext_name u0:3+0, %rax
  Inst 14870:   movq    %rdi, rsp(832 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14871:   call    *%rax
  Inst 14872:   jmp     label539
Block 539:
  (successor: Block 540)
  (instruction range: 14873 .. 14942)
  Inst 14873:   movq    %rax, rsp(1320 + virtual offset)
  Inst 14874:   nop     len=0
  Inst 14875:   nop     len=0
  Inst 14876:   nop     len=0
  Inst 14877:   nop     len=0
  Inst 14878:   nop     len=0
  Inst 14879:   nop     len=0
  Inst 14880:   nop     len=0
  Inst 14881:   nop     len=0
  Inst 14882:   nop     len=0
  Inst 14883:   nop     len=0
  Inst 14884:   nop     len=0
  Inst 14885:   nop     len=0
  Inst 14886:   nop     len=0
  Inst 14887:   nop     len=0
  Inst 14888:   nop     len=0
  Inst 14889:   nop     len=0
  Inst 14890:   nop     len=0
  Inst 14891:   nop     len=0
  Inst 14892:   nop     len=0
  Inst 14893:   nop     len=0
  Inst 14894:   nop     len=0
  Inst 14895:   nop     len=0
  Inst 14896:   nop     len=0
  Inst 14897:   nop     len=0
  Inst 14898:   nop     len=0
  Inst 14899:   nop     len=0
  Inst 14900:   nop     len=0
  Inst 14901:   nop     len=0
  Inst 14902:   nop     len=0
  Inst 14903:   nop     len=0
  Inst 14904:   nop     len=0
  Inst 14905:   nop     len=0
  Inst 14906:   nop     len=0
  Inst 14907:   nop     len=0
  Inst 14908:   nop     len=0
  Inst 14909:   nop     len=0
  Inst 14910:   nop     len=0
  Inst 14911:   nop     len=0
  Inst 14912:   nop     len=0
  Inst 14913:   nop     len=0
  Inst 14914:   nop     len=0
  Inst 14915:   nop     len=0
  Inst 14916:   nop     len=0
  Inst 14917:   nop     len=0
  Inst 14918:   nop     len=0
  Inst 14919:   nop     len=0
  Inst 14920:   nop     len=0
  Inst 14921:   nop     len=0
  Inst 14922:   nop     len=0
  Inst 14923:   nop     len=0
  Inst 14924:   nop     len=0
  Inst 14925:   nop     len=0
  Inst 14926:   nop     len=0
  Inst 14927:   nop     len=0
  Inst 14928:   nop     len=0
  Inst 14929:   nop     len=0
  Inst 14930:   nop     len=0
  Inst 14931:   nop     len=0
  Inst 14932:   nop     len=0
  Inst 14933:   nop     len=0
  Inst 14934:   nop     len=0
  Inst 14935:   nop     len=0
  Inst 14936:   nop     len=0
  Inst 14937:   nop     len=0
  Inst 14938:   nop     len=0
  Inst 14939:   nop     len=0
  Inst 14940:   nop     len=0
  Inst 14941:   jmp     label540
Block 540:
  (original IR block: block270)
  (successor: Block 541)
  (successor: Block 542)
  (instruction range: 14942 .. 14953)
  Inst 14942:   movq    rsp(2064 + virtual offset), %rsi
  Inst 14943:   movq    8(%rsi), %rdi
  Inst 14944:   movq    rsp(2048 + virtual offset), %rsi
  Inst 14945:   load_ext_name u0:2+0, %rax
  Inst 14946:   movq    %rsi, rsp(832 + virtual offset)
  Inst 14947:   movq    %rdi, rsp(848 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 14948:   call    *%rax
  Inst 14949:   movq    %rax, %rbx
  Inst 14950:   movq    %rdx, %r14
  Inst 14951:   testq   %r14, %r14
  Inst 14952:   jz      label541; j label542
Block 541:
  (successor: Block 544)
  (instruction range: 14953 .. 15022)
  Inst 14953:   movq    %rbx, rsp(832 + virtual offset)
  Inst 14954:   nop     len=0
  Inst 14955:   nop     len=0
  Inst 14956:   nop     len=0
  Inst 14957:   nop     len=0
  Inst 14958:   nop     len=0
  Inst 14959:   nop     len=0
  Inst 14960:   nop     len=0
  Inst 14961:   nop     len=0
  Inst 14962:   nop     len=0
  Inst 14963:   nop     len=0
  Inst 14964:   nop     len=0
  Inst 14965:   nop     len=0
  Inst 14966:   nop     len=0
  Inst 14967:   nop     len=0
  Inst 14968:   nop     len=0
  Inst 14969:   nop     len=0
  Inst 14970:   nop     len=0
  Inst 14971:   nop     len=0
  Inst 14972:   nop     len=0
  Inst 14973:   nop     len=0
  Inst 14974:   nop     len=0
  Inst 14975:   nop     len=0
  Inst 14976:   nop     len=0
  Inst 14977:   nop     len=0
  Inst 14978:   nop     len=0
  Inst 14979:   nop     len=0
  Inst 14980:   nop     len=0
  Inst 14981:   nop     len=0
  Inst 14982:   nop     len=0
  Inst 14983:   nop     len=0
  Inst 14984:   nop     len=0
  Inst 14985:   nop     len=0
  Inst 14986:   nop     len=0
  Inst 14987:   nop     len=0
  Inst 14988:   nop     len=0
  Inst 14989:   nop     len=0
  Inst 14990:   nop     len=0
  Inst 14991:   nop     len=0
  Inst 14992:   nop     len=0
  Inst 14993:   nop     len=0
  Inst 14994:   nop     len=0
  Inst 14995:   nop     len=0
  Inst 14996:   nop     len=0
  Inst 14997:   nop     len=0
  Inst 14998:   nop     len=0
  Inst 14999:   nop     len=0
  Inst 15000:   nop     len=0
  Inst 15001:   nop     len=0
  Inst 15002:   nop     len=0
  Inst 15003:   nop     len=0
  Inst 15004:   nop     len=0
  Inst 15005:   nop     len=0
  Inst 15006:   nop     len=0
  Inst 15007:   nop     len=0
  Inst 15008:   nop     len=0
  Inst 15009:   nop     len=0
  Inst 15010:   nop     len=0
  Inst 15011:   nop     len=0
  Inst 15012:   nop     len=0
  Inst 15013:   nop     len=0
  Inst 15014:   nop     len=0
  Inst 15015:   nop     len=0
  Inst 15016:   nop     len=0
  Inst 15017:   nop     len=0
  Inst 15018:   nop     len=0
  Inst 15019:   nop     len=0
  Inst 15020:   nop     len=0
  Inst 15021:   jmp     label544
Block 542:
  (original IR block: block273)
  (successor: Block 543)
  (instruction range: 15022 .. 15051)
  Inst 15022:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15023:   movq    152(%rsi), %r13
  Inst 15024:   movq    %r14, %r15
  Inst 15025:   addq    $-1, %r15
  Inst 15026:   movq    %r14, %rdx
  Inst 15027:   shlq    $3, %rdx
  Inst 15028:   movq    %r13, %r12
  Inst 15029:   addq    %rdx, %r12
  Inst 15030:   movq    %r13, %rdi
  Inst 15031:   addq    $-24, %rdi
  Inst 15032:   movq    %r13, %rsi
  Inst 15033:   load_ext_name %Memmove+0, %rax
  Inst 15034:   movq    %rbx, rsp(848 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S105, S106, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15035:   call    *%rax
  Inst 15036:   movq    rsp(848 + virtual offset), %rbx
  Inst 15037:   load_ext_name u1:1+0, %rsi
  Inst 15038:   movl    $1, %edi
  Inst 15039:   movq    %rdi, -8(%r13,%r14,8)
  Inst 15040:   movl    $1, %edi
  Inst 15041:   movq    %rdi, -16(%r13,%r14,8)
  Inst 15042:   movq    %rsi, -24(%r13,%r14,8)
  Inst 15043:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15044:   movq    %r12, 152(%rsi)
  Inst 15045:   movq    %rbx, %rdi
  Inst 15046:   movq    %r15, %rsi
  Inst 15047:   load_ext_name u0:3+0, %rax
  Inst 15048:   movq    %rdi, rsp(832 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15049:   call    *%rax
  Inst 15050:   jmp     label543
Block 543:
  (successor: Block 544)
  (instruction range: 15051 .. 15120)
  Inst 15051:   movq    %rax, rsp(832 + virtual offset)
  Inst 15052:   nop     len=0
  Inst 15053:   nop     len=0
  Inst 15054:   nop     len=0
  Inst 15055:   nop     len=0
  Inst 15056:   nop     len=0
  Inst 15057:   nop     len=0
  Inst 15058:   nop     len=0
  Inst 15059:   nop     len=0
  Inst 15060:   nop     len=0
  Inst 15061:   nop     len=0
  Inst 15062:   nop     len=0
  Inst 15063:   nop     len=0
  Inst 15064:   nop     len=0
  Inst 15065:   nop     len=0
  Inst 15066:   nop     len=0
  Inst 15067:   nop     len=0
  Inst 15068:   nop     len=0
  Inst 15069:   nop     len=0
  Inst 15070:   nop     len=0
  Inst 15071:   nop     len=0
  Inst 15072:   nop     len=0
  Inst 15073:   nop     len=0
  Inst 15074:   nop     len=0
  Inst 15075:   nop     len=0
  Inst 15076:   nop     len=0
  Inst 15077:   nop     len=0
  Inst 15078:   nop     len=0
  Inst 15079:   nop     len=0
  Inst 15080:   nop     len=0
  Inst 15081:   nop     len=0
  Inst 15082:   nop     len=0
  Inst 15083:   nop     len=0
  Inst 15084:   nop     len=0
  Inst 15085:   nop     len=0
  Inst 15086:   nop     len=0
  Inst 15087:   nop     len=0
  Inst 15088:   nop     len=0
  Inst 15089:   nop     len=0
  Inst 15090:   nop     len=0
  Inst 15091:   nop     len=0
  Inst 15092:   nop     len=0
  Inst 15093:   nop     len=0
  Inst 15094:   nop     len=0
  Inst 15095:   nop     len=0
  Inst 15096:   nop     len=0
  Inst 15097:   nop     len=0
  Inst 15098:   nop     len=0
  Inst 15099:   nop     len=0
  Inst 15100:   nop     len=0
  Inst 15101:   nop     len=0
  Inst 15102:   nop     len=0
  Inst 15103:   nop     len=0
  Inst 15104:   nop     len=0
  Inst 15105:   nop     len=0
  Inst 15106:   nop     len=0
  Inst 15107:   nop     len=0
  Inst 15108:   nop     len=0
  Inst 15109:   nop     len=0
  Inst 15110:   nop     len=0
  Inst 15111:   nop     len=0
  Inst 15112:   nop     len=0
  Inst 15113:   nop     len=0
  Inst 15114:   nop     len=0
  Inst 15115:   nop     len=0
  Inst 15116:   nop     len=0
  Inst 15117:   nop     len=0
  Inst 15118:   nop     len=0
  Inst 15119:   jmp     label544
Block 544:
  (original IR block: block272)
  (successor: Block 545)
  (successor: Block 546)
  (instruction range: 15120 .. 15131)
  Inst 15120:   movq    rsp(2064 + virtual offset), %rsi
  Inst 15121:   movq    8(%rsi), %rdi
  Inst 15122:   movq    rsp(2048 + virtual offset), %rsi
  Inst 15123:   load_ext_name u0:2+0, %rax
  Inst 15124:   movq    %rsi, rsp(848 + virtual offset)
  Inst 15125:   movq    %rdi, rsp(864 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15126:   call    *%rax
  Inst 15127:   movq    %rax, %rbx
  Inst 15128:   movq    %rdx, %r14
  Inst 15129:   testq   %r14, %r14
  Inst 15130:   jz      label545; j label546
Block 545:
  (successor: Block 548)
  (instruction range: 15131 .. 15201)
  Inst 15131:   movq    %rbx, rsp(1336 + virtual offset)
  Inst 15132:   nop     len=0
  Inst 15133:   nop     len=0
  Inst 15134:   nop     len=0
  Inst 15135:   nop     len=0
  Inst 15136:   nop     len=0
  Inst 15137:   nop     len=0
  Inst 15138:   nop     len=0
  Inst 15139:   nop     len=0
  Inst 15140:   nop     len=0
  Inst 15141:   nop     len=0
  Inst 15142:   nop     len=0
  Inst 15143:   nop     len=0
  Inst 15144:   nop     len=0
  Inst 15145:   nop     len=0
  Inst 15146:   nop     len=0
  Inst 15147:   nop     len=0
  Inst 15148:   nop     len=0
  Inst 15149:   nop     len=0
  Inst 15150:   nop     len=0
  Inst 15151:   nop     len=0
  Inst 15152:   nop     len=0
  Inst 15153:   nop     len=0
  Inst 15154:   nop     len=0
  Inst 15155:   nop     len=0
  Inst 15156:   nop     len=0
  Inst 15157:   nop     len=0
  Inst 15158:   nop     len=0
  Inst 15159:   nop     len=0
  Inst 15160:   nop     len=0
  Inst 15161:   nop     len=0
  Inst 15162:   nop     len=0
  Inst 15163:   nop     len=0
  Inst 15164:   nop     len=0
  Inst 15165:   nop     len=0
  Inst 15166:   nop     len=0
  Inst 15167:   nop     len=0
  Inst 15168:   nop     len=0
  Inst 15169:   nop     len=0
  Inst 15170:   nop     len=0
  Inst 15171:   nop     len=0
  Inst 15172:   nop     len=0
  Inst 15173:   nop     len=0
  Inst 15174:   nop     len=0
  Inst 15175:   nop     len=0
  Inst 15176:   nop     len=0
  Inst 15177:   nop     len=0
  Inst 15178:   nop     len=0
  Inst 15179:   nop     len=0
  Inst 15180:   nop     len=0
  Inst 15181:   nop     len=0
  Inst 15182:   nop     len=0
  Inst 15183:   nop     len=0
  Inst 15184:   nop     len=0
  Inst 15185:   nop     len=0
  Inst 15186:   nop     len=0
  Inst 15187:   nop     len=0
  Inst 15188:   nop     len=0
  Inst 15189:   nop     len=0
  Inst 15190:   nop     len=0
  Inst 15191:   nop     len=0
  Inst 15192:   nop     len=0
  Inst 15193:   nop     len=0
  Inst 15194:   nop     len=0
  Inst 15195:   nop     len=0
  Inst 15196:   nop     len=0
  Inst 15197:   nop     len=0
  Inst 15198:   nop     len=0
  Inst 15199:   nop     len=0
  Inst 15200:   jmp     label548
Block 546:
  (original IR block: block275)
  (successor: Block 547)
  (instruction range: 15201 .. 15230)
  Inst 15201:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15202:   movq    152(%rsi), %r13
  Inst 15203:   movq    %r14, %r15
  Inst 15204:   addq    $-1, %r15
  Inst 15205:   movq    %r14, %rdx
  Inst 15206:   shlq    $3, %rdx
  Inst 15207:   movq    %r13, %r12
  Inst 15208:   addq    %rdx, %r12
  Inst 15209:   movq    %r13, %rdi
  Inst 15210:   addq    $-24, %rdi
  Inst 15211:   movq    %r13, %rsi
  Inst 15212:   load_ext_name %Memmove+0, %rax
  Inst 15213:   movq    %rbx, rsp(848 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15214:   call    *%rax
  Inst 15215:   movq    rsp(848 + virtual offset), %rbx
  Inst 15216:   load_ext_name u1:1+0, %rsi
  Inst 15217:   movl    $1, %edi
  Inst 15218:   movq    %rdi, -8(%r13,%r14,8)
  Inst 15219:   movl    $1, %edi
  Inst 15220:   movq    %rdi, -16(%r13,%r14,8)
  Inst 15221:   movq    %rsi, -24(%r13,%r14,8)
  Inst 15222:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15223:   movq    %r12, 152(%rsi)
  Inst 15224:   movq    %rbx, %rdi
  Inst 15225:   movq    %r15, %rsi
  Inst 15226:   load_ext_name u0:3+0, %rax
  Inst 15227:   movq    %rdi, rsp(848 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15228:   call    *%rax
  Inst 15229:   jmp     label547
Block 547:
  (successor: Block 548)
  (instruction range: 15230 .. 15300)
  Inst 15230:   movq    %rax, rsp(1336 + virtual offset)
  Inst 15231:   nop     len=0
  Inst 15232:   nop     len=0
  Inst 15233:   nop     len=0
  Inst 15234:   nop     len=0
  Inst 15235:   nop     len=0
  Inst 15236:   nop     len=0
  Inst 15237:   nop     len=0
  Inst 15238:   nop     len=0
  Inst 15239:   nop     len=0
  Inst 15240:   nop     len=0
  Inst 15241:   nop     len=0
  Inst 15242:   nop     len=0
  Inst 15243:   nop     len=0
  Inst 15244:   nop     len=0
  Inst 15245:   nop     len=0
  Inst 15246:   nop     len=0
  Inst 15247:   nop     len=0
  Inst 15248:   nop     len=0
  Inst 15249:   nop     len=0
  Inst 15250:   nop     len=0
  Inst 15251:   nop     len=0
  Inst 15252:   nop     len=0
  Inst 15253:   nop     len=0
  Inst 15254:   nop     len=0
  Inst 15255:   nop     len=0
  Inst 15256:   nop     len=0
  Inst 15257:   nop     len=0
  Inst 15258:   nop     len=0
  Inst 15259:   nop     len=0
  Inst 15260:   nop     len=0
  Inst 15261:   nop     len=0
  Inst 15262:   nop     len=0
  Inst 15263:   nop     len=0
  Inst 15264:   nop     len=0
  Inst 15265:   nop     len=0
  Inst 15266:   nop     len=0
  Inst 15267:   nop     len=0
  Inst 15268:   nop     len=0
  Inst 15269:   nop     len=0
  Inst 15270:   nop     len=0
  Inst 15271:   nop     len=0
  Inst 15272:   nop     len=0
  Inst 15273:   nop     len=0
  Inst 15274:   nop     len=0
  Inst 15275:   nop     len=0
  Inst 15276:   nop     len=0
  Inst 15277:   nop     len=0
  Inst 15278:   nop     len=0
  Inst 15279:   nop     len=0
  Inst 15280:   nop     len=0
  Inst 15281:   nop     len=0
  Inst 15282:   nop     len=0
  Inst 15283:   nop     len=0
  Inst 15284:   nop     len=0
  Inst 15285:   nop     len=0
  Inst 15286:   nop     len=0
  Inst 15287:   nop     len=0
  Inst 15288:   nop     len=0
  Inst 15289:   nop     len=0
  Inst 15290:   nop     len=0
  Inst 15291:   nop     len=0
  Inst 15292:   nop     len=0
  Inst 15293:   nop     len=0
  Inst 15294:   nop     len=0
  Inst 15295:   nop     len=0
  Inst 15296:   nop     len=0
  Inst 15297:   nop     len=0
  Inst 15298:   nop     len=0
  Inst 15299:   jmp     label548
Block 548:
  (original IR block: block274)
  (successor: Block 549)
  (successor: Block 550)
  (instruction range: 15300 .. 15311)
  Inst 15300:   movq    rsp(2064 + virtual offset), %rsi
  Inst 15301:   movq    8(%rsi), %rdi
  Inst 15302:   movq    rsp(2048 + virtual offset), %rsi
  Inst 15303:   load_ext_name u0:2+0, %rax
  Inst 15304:   movq    %rsi, rsp(848 + virtual offset)
  Inst 15305:   movq    %rdi, rsp(864 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15306:   call    *%rax
  Inst 15307:   movq    %rax, %r15
  Inst 15308:   movq    %rdx, %r14
  Inst 15309:   testq   %r14, %r14
  Inst 15310:   jz      label549; j label550
Block 549:
  (successor: Block 552)
  (instruction range: 15311 .. 15381)
  Inst 15311:   movq    %r15, rsp(848 + virtual offset)
  Inst 15312:   nop     len=0
  Inst 15313:   nop     len=0
  Inst 15314:   nop     len=0
  Inst 15315:   nop     len=0
  Inst 15316:   nop     len=0
  Inst 15317:   nop     len=0
  Inst 15318:   nop     len=0
  Inst 15319:   nop     len=0
  Inst 15320:   nop     len=0
  Inst 15321:   nop     len=0
  Inst 15322:   nop     len=0
  Inst 15323:   nop     len=0
  Inst 15324:   nop     len=0
  Inst 15325:   nop     len=0
  Inst 15326:   nop     len=0
  Inst 15327:   nop     len=0
  Inst 15328:   nop     len=0
  Inst 15329:   nop     len=0
  Inst 15330:   nop     len=0
  Inst 15331:   nop     len=0
  Inst 15332:   nop     len=0
  Inst 15333:   nop     len=0
  Inst 15334:   nop     len=0
  Inst 15335:   nop     len=0
  Inst 15336:   nop     len=0
  Inst 15337:   nop     len=0
  Inst 15338:   nop     len=0
  Inst 15339:   nop     len=0
  Inst 15340:   nop     len=0
  Inst 15341:   nop     len=0
  Inst 15342:   nop     len=0
  Inst 15343:   nop     len=0
  Inst 15344:   nop     len=0
  Inst 15345:   nop     len=0
  Inst 15346:   nop     len=0
  Inst 15347:   nop     len=0
  Inst 15348:   nop     len=0
  Inst 15349:   nop     len=0
  Inst 15350:   nop     len=0
  Inst 15351:   nop     len=0
  Inst 15352:   nop     len=0
  Inst 15353:   nop     len=0
  Inst 15354:   nop     len=0
  Inst 15355:   nop     len=0
  Inst 15356:   nop     len=0
  Inst 15357:   nop     len=0
  Inst 15358:   nop     len=0
  Inst 15359:   nop     len=0
  Inst 15360:   nop     len=0
  Inst 15361:   nop     len=0
  Inst 15362:   nop     len=0
  Inst 15363:   nop     len=0
  Inst 15364:   nop     len=0
  Inst 15365:   nop     len=0
  Inst 15366:   nop     len=0
  Inst 15367:   nop     len=0
  Inst 15368:   nop     len=0
  Inst 15369:   nop     len=0
  Inst 15370:   nop     len=0
  Inst 15371:   nop     len=0
  Inst 15372:   nop     len=0
  Inst 15373:   nop     len=0
  Inst 15374:   nop     len=0
  Inst 15375:   nop     len=0
  Inst 15376:   nop     len=0
  Inst 15377:   nop     len=0
  Inst 15378:   nop     len=0
  Inst 15379:   nop     len=0
  Inst 15380:   jmp     label552
Block 550:
  (original IR block: block277)
  (successor: Block 551)
  (instruction range: 15381 .. 15410)
  Inst 15381:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15382:   movq    152(%rsi), %r13
  Inst 15383:   movq    %r14, %rbx
  Inst 15384:   addq    $-1, %rbx
  Inst 15385:   movq    %r14, %rdx
  Inst 15386:   shlq    $3, %rdx
  Inst 15387:   movq    %r13, %r12
  Inst 15388:   addq    %rdx, %r12
  Inst 15389:   movq    %r13, %rdi
  Inst 15390:   addq    $-24, %rdi
  Inst 15391:   movq    %r13, %rsi
  Inst 15392:   load_ext_name %Memmove+0, %rax
  Inst 15393:   movq    %r15, rsp(864 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S107, S108, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15394:   call    *%rax
  Inst 15395:   movq    rsp(864 + virtual offset), %r15
  Inst 15396:   load_ext_name u1:1+0, %rsi
  Inst 15397:   movl    $1, %edi
  Inst 15398:   movq    %rdi, -8(%r13,%r14,8)
  Inst 15399:   movl    $1, %edi
  Inst 15400:   movq    %rdi, -16(%r13,%r14,8)
  Inst 15401:   movq    %rsi, -24(%r13,%r14,8)
  Inst 15402:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15403:   movq    %r12, 152(%rsi)
  Inst 15404:   movq    %r15, %rdi
  Inst 15405:   movq    %rbx, %rsi
  Inst 15406:   load_ext_name u0:3+0, %rax
  Inst 15407:   movq    %rdi, rsp(848 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15408:   call    *%rax
  Inst 15409:   jmp     label551
Block 551:
  (successor: Block 552)
  (instruction range: 15410 .. 15480)
  Inst 15410:   movq    %rax, rsp(848 + virtual offset)
  Inst 15411:   nop     len=0
  Inst 15412:   nop     len=0
  Inst 15413:   nop     len=0
  Inst 15414:   nop     len=0
  Inst 15415:   nop     len=0
  Inst 15416:   nop     len=0
  Inst 15417:   nop     len=0
  Inst 15418:   nop     len=0
  Inst 15419:   nop     len=0
  Inst 15420:   nop     len=0
  Inst 15421:   nop     len=0
  Inst 15422:   nop     len=0
  Inst 15423:   nop     len=0
  Inst 15424:   nop     len=0
  Inst 15425:   nop     len=0
  Inst 15426:   nop     len=0
  Inst 15427:   nop     len=0
  Inst 15428:   nop     len=0
  Inst 15429:   nop     len=0
  Inst 15430:   nop     len=0
  Inst 15431:   nop     len=0
  Inst 15432:   nop     len=0
  Inst 15433:   nop     len=0
  Inst 15434:   nop     len=0
  Inst 15435:   nop     len=0
  Inst 15436:   nop     len=0
  Inst 15437:   nop     len=0
  Inst 15438:   nop     len=0
  Inst 15439:   nop     len=0
  Inst 15440:   nop     len=0
  Inst 15441:   nop     len=0
  Inst 15442:   nop     len=0
  Inst 15443:   nop     len=0
  Inst 15444:   nop     len=0
  Inst 15445:   nop     len=0
  Inst 15446:   nop     len=0
  Inst 15447:   nop     len=0
  Inst 15448:   nop     len=0
  Inst 15449:   nop     len=0
  Inst 15450:   nop     len=0
  Inst 15451:   nop     len=0
  Inst 15452:   nop     len=0
  Inst 15453:   nop     len=0
  Inst 15454:   nop     len=0
  Inst 15455:   nop     len=0
  Inst 15456:   nop     len=0
  Inst 15457:   nop     len=0
  Inst 15458:   nop     len=0
  Inst 15459:   nop     len=0
  Inst 15460:   nop     len=0
  Inst 15461:   nop     len=0
  Inst 15462:   nop     len=0
  Inst 15463:   nop     len=0
  Inst 15464:   nop     len=0
  Inst 15465:   nop     len=0
  Inst 15466:   nop     len=0
  Inst 15467:   nop     len=0
  Inst 15468:   nop     len=0
  Inst 15469:   nop     len=0
  Inst 15470:   nop     len=0
  Inst 15471:   nop     len=0
  Inst 15472:   nop     len=0
  Inst 15473:   nop     len=0
  Inst 15474:   nop     len=0
  Inst 15475:   nop     len=0
  Inst 15476:   nop     len=0
  Inst 15477:   nop     len=0
  Inst 15478:   nop     len=0
  Inst 15479:   jmp     label552
Block 552:
  (original IR block: block276)
  (successor: Block 553)
  (successor: Block 554)
  (instruction range: 15480 .. 15491)
  Inst 15480:   movq    rsp(2064 + virtual offset), %rsi
  Inst 15481:   movq    8(%rsi), %rdi
  Inst 15482:   movq    rsp(2048 + virtual offset), %rsi
  Inst 15483:   load_ext_name u0:2+0, %rax
  Inst 15484:   movq    %rsi, rsp(864 + virtual offset)
  Inst 15485:   movq    %rdi, rsp(880 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15486:   call    *%rax
  Inst 15487:   movq    %rax, %rbx
  Inst 15488:   movq    %rdx, %r14
  Inst 15489:   testq   %r14, %r14
  Inst 15490:   jz      label553; j label554
Block 553:
  (successor: Block 556)
  (instruction range: 15491 .. 15562)
  Inst 15491:   movq    %rbx, rsp(1352 + virtual offset)
  Inst 15492:   nop     len=0
  Inst 15493:   nop     len=0
  Inst 15494:   nop     len=0
  Inst 15495:   nop     len=0
  Inst 15496:   nop     len=0
  Inst 15497:   nop     len=0
  Inst 15498:   nop     len=0
  Inst 15499:   nop     len=0
  Inst 15500:   nop     len=0
  Inst 15501:   nop     len=0
  Inst 15502:   nop     len=0
  Inst 15503:   nop     len=0
  Inst 15504:   nop     len=0
  Inst 15505:   nop     len=0
  Inst 15506:   nop     len=0
  Inst 15507:   nop     len=0
  Inst 15508:   nop     len=0
  Inst 15509:   nop     len=0
  Inst 15510:   nop     len=0
  Inst 15511:   nop     len=0
  Inst 15512:   nop     len=0
  Inst 15513:   nop     len=0
  Inst 15514:   nop     len=0
  Inst 15515:   nop     len=0
  Inst 15516:   nop     len=0
  Inst 15517:   nop     len=0
  Inst 15518:   nop     len=0
  Inst 15519:   nop     len=0
  Inst 15520:   nop     len=0
  Inst 15521:   nop     len=0
  Inst 15522:   nop     len=0
  Inst 15523:   nop     len=0
  Inst 15524:   nop     len=0
  Inst 15525:   nop     len=0
  Inst 15526:   nop     len=0
  Inst 15527:   nop     len=0
  Inst 15528:   nop     len=0
  Inst 15529:   nop     len=0
  Inst 15530:   nop     len=0
  Inst 15531:   nop     len=0
  Inst 15532:   nop     len=0
  Inst 15533:   nop     len=0
  Inst 15534:   nop     len=0
  Inst 15535:   nop     len=0
  Inst 15536:   nop     len=0
  Inst 15537:   nop     len=0
  Inst 15538:   nop     len=0
  Inst 15539:   nop     len=0
  Inst 15540:   nop     len=0
  Inst 15541:   nop     len=0
  Inst 15542:   nop     len=0
  Inst 15543:   nop     len=0
  Inst 15544:   nop     len=0
  Inst 15545:   nop     len=0
  Inst 15546:   nop     len=0
  Inst 15547:   nop     len=0
  Inst 15548:   nop     len=0
  Inst 15549:   nop     len=0
  Inst 15550:   nop     len=0
  Inst 15551:   nop     len=0
  Inst 15552:   nop     len=0
  Inst 15553:   nop     len=0
  Inst 15554:   nop     len=0
  Inst 15555:   nop     len=0
  Inst 15556:   nop     len=0
  Inst 15557:   nop     len=0
  Inst 15558:   nop     len=0
  Inst 15559:   nop     len=0
  Inst 15560:   nop     len=0
  Inst 15561:   jmp     label556
Block 554:
  (original IR block: block279)
  (successor: Block 555)
  (instruction range: 15562 .. 15591)
  Inst 15562:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15563:   movq    152(%rsi), %r13
  Inst 15564:   movq    %r14, %r15
  Inst 15565:   addq    $-1, %r15
  Inst 15566:   movq    %r14, %rdx
  Inst 15567:   shlq    $3, %rdx
  Inst 15568:   movq    %r13, %r12
  Inst 15569:   addq    %rdx, %r12
  Inst 15570:   movq    %r13, %rdi
  Inst 15571:   addq    $-24, %rdi
  Inst 15572:   movq    %r13, %rsi
  Inst 15573:   load_ext_name %Memmove+0, %rax
  Inst 15574:   movq    %rbx, rsp(864 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15575:   call    *%rax
  Inst 15576:   movq    rsp(864 + virtual offset), %rbx
  Inst 15577:   load_ext_name u1:1+0, %rsi
  Inst 15578:   movl    $1, %edi
  Inst 15579:   movq    %rdi, -8(%r13,%r14,8)
  Inst 15580:   movl    $1, %edi
  Inst 15581:   movq    %rdi, -16(%r13,%r14,8)
  Inst 15582:   movq    %rsi, -24(%r13,%r14,8)
  Inst 15583:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15584:   movq    %r12, 152(%rsi)
  Inst 15585:   movq    %rbx, %rdi
  Inst 15586:   movq    %r15, %rsi
  Inst 15587:   load_ext_name u0:3+0, %rax
  Inst 15588:   movq    %rdi, rsp(864 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15589:   call    *%rax
  Inst 15590:   jmp     label555
Block 555:
  (successor: Block 556)
  (instruction range: 15591 .. 15662)
  Inst 15591:   movq    %rax, rsp(1352 + virtual offset)
  Inst 15592:   nop     len=0
  Inst 15593:   nop     len=0
  Inst 15594:   nop     len=0
  Inst 15595:   nop     len=0
  Inst 15596:   nop     len=0
  Inst 15597:   nop     len=0
  Inst 15598:   nop     len=0
  Inst 15599:   nop     len=0
  Inst 15600:   nop     len=0
  Inst 15601:   nop     len=0
  Inst 15602:   nop     len=0
  Inst 15603:   nop     len=0
  Inst 15604:   nop     len=0
  Inst 15605:   nop     len=0
  Inst 15606:   nop     len=0
  Inst 15607:   nop     len=0
  Inst 15608:   nop     len=0
  Inst 15609:   nop     len=0
  Inst 15610:   nop     len=0
  Inst 15611:   nop     len=0
  Inst 15612:   nop     len=0
  Inst 15613:   nop     len=0
  Inst 15614:   nop     len=0
  Inst 15615:   nop     len=0
  Inst 15616:   nop     len=0
  Inst 15617:   nop     len=0
  Inst 15618:   nop     len=0
  Inst 15619:   nop     len=0
  Inst 15620:   nop     len=0
  Inst 15621:   nop     len=0
  Inst 15622:   nop     len=0
  Inst 15623:   nop     len=0
  Inst 15624:   nop     len=0
  Inst 15625:   nop     len=0
  Inst 15626:   nop     len=0
  Inst 15627:   nop     len=0
  Inst 15628:   nop     len=0
  Inst 15629:   nop     len=0
  Inst 15630:   nop     len=0
  Inst 15631:   nop     len=0
  Inst 15632:   nop     len=0
  Inst 15633:   nop     len=0
  Inst 15634:   nop     len=0
  Inst 15635:   nop     len=0
  Inst 15636:   nop     len=0
  Inst 15637:   nop     len=0
  Inst 15638:   nop     len=0
  Inst 15639:   nop     len=0
  Inst 15640:   nop     len=0
  Inst 15641:   nop     len=0
  Inst 15642:   nop     len=0
  Inst 15643:   nop     len=0
  Inst 15644:   nop     len=0
  Inst 15645:   nop     len=0
  Inst 15646:   nop     len=0
  Inst 15647:   nop     len=0
  Inst 15648:   nop     len=0
  Inst 15649:   nop     len=0
  Inst 15650:   nop     len=0
  Inst 15651:   nop     len=0
  Inst 15652:   nop     len=0
  Inst 15653:   nop     len=0
  Inst 15654:   nop     len=0
  Inst 15655:   nop     len=0
  Inst 15656:   nop     len=0
  Inst 15657:   nop     len=0
  Inst 15658:   nop     len=0
  Inst 15659:   nop     len=0
  Inst 15660:   nop     len=0
  Inst 15661:   jmp     label556
Block 556:
  (original IR block: block278)
  (successor: Block 557)
  (successor: Block 558)
  (instruction range: 15662 .. 15673)
  Inst 15662:   movq    rsp(2064 + virtual offset), %rsi
  Inst 15663:   movq    8(%rsi), %rdi
  Inst 15664:   movq    rsp(2048 + virtual offset), %rsi
  Inst 15665:   load_ext_name u0:2+0, %rax
  Inst 15666:   movq    %rsi, rsp(864 + virtual offset)
  Inst 15667:   movq    %rdi, rsp(880 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15668:   call    *%rax
  Inst 15669:   movq    %rax, %rbx
  Inst 15670:   movq    %rdx, %r14
  Inst 15671:   testq   %r14, %r14
  Inst 15672:   jz      label557; j label558
Block 557:
  (successor: Block 560)
  (instruction range: 15673 .. 15744)
  Inst 15673:   movq    %rbx, rsp(864 + virtual offset)
  Inst 15674:   nop     len=0
  Inst 15675:   nop     len=0
  Inst 15676:   nop     len=0
  Inst 15677:   nop     len=0
  Inst 15678:   nop     len=0
  Inst 15679:   nop     len=0
  Inst 15680:   nop     len=0
  Inst 15681:   nop     len=0
  Inst 15682:   nop     len=0
  Inst 15683:   nop     len=0
  Inst 15684:   nop     len=0
  Inst 15685:   nop     len=0
  Inst 15686:   nop     len=0
  Inst 15687:   nop     len=0
  Inst 15688:   nop     len=0
  Inst 15689:   nop     len=0
  Inst 15690:   nop     len=0
  Inst 15691:   nop     len=0
  Inst 15692:   nop     len=0
  Inst 15693:   nop     len=0
  Inst 15694:   nop     len=0
  Inst 15695:   nop     len=0
  Inst 15696:   nop     len=0
  Inst 15697:   nop     len=0
  Inst 15698:   nop     len=0
  Inst 15699:   nop     len=0
  Inst 15700:   nop     len=0
  Inst 15701:   nop     len=0
  Inst 15702:   nop     len=0
  Inst 15703:   nop     len=0
  Inst 15704:   nop     len=0
  Inst 15705:   nop     len=0
  Inst 15706:   nop     len=0
  Inst 15707:   nop     len=0
  Inst 15708:   nop     len=0
  Inst 15709:   nop     len=0
  Inst 15710:   nop     len=0
  Inst 15711:   nop     len=0
  Inst 15712:   nop     len=0
  Inst 15713:   nop     len=0
  Inst 15714:   nop     len=0
  Inst 15715:   nop     len=0
  Inst 15716:   nop     len=0
  Inst 15717:   nop     len=0
  Inst 15718:   nop     len=0
  Inst 15719:   nop     len=0
  Inst 15720:   nop     len=0
  Inst 15721:   nop     len=0
  Inst 15722:   nop     len=0
  Inst 15723:   nop     len=0
  Inst 15724:   nop     len=0
  Inst 15725:   nop     len=0
  Inst 15726:   nop     len=0
  Inst 15727:   nop     len=0
  Inst 15728:   nop     len=0
  Inst 15729:   nop     len=0
  Inst 15730:   nop     len=0
  Inst 15731:   nop     len=0
  Inst 15732:   nop     len=0
  Inst 15733:   nop     len=0
  Inst 15734:   nop     len=0
  Inst 15735:   nop     len=0
  Inst 15736:   nop     len=0
  Inst 15737:   nop     len=0
  Inst 15738:   nop     len=0
  Inst 15739:   nop     len=0
  Inst 15740:   nop     len=0
  Inst 15741:   nop     len=0
  Inst 15742:   nop     len=0
  Inst 15743:   jmp     label560
Block 558:
  (original IR block: block281)
  (successor: Block 559)
  (instruction range: 15744 .. 15773)
  Inst 15744:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15745:   movq    152(%rsi), %r13
  Inst 15746:   movq    %r14, %r15
  Inst 15747:   addq    $-1, %r15
  Inst 15748:   movq    %r14, %rdx
  Inst 15749:   shlq    $3, %rdx
  Inst 15750:   movq    %r13, %r12
  Inst 15751:   addq    %rdx, %r12
  Inst 15752:   movq    %r13, %rdi
  Inst 15753:   addq    $-24, %rdi
  Inst 15754:   movq    %r13, %rsi
  Inst 15755:   load_ext_name %Memmove+0, %rax
  Inst 15756:   movq    %rbx, rsp(880 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S109, S110, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15757:   call    *%rax
  Inst 15758:   movq    rsp(880 + virtual offset), %rbx
  Inst 15759:   load_ext_name u1:1+0, %rsi
  Inst 15760:   movl    $1, %edi
  Inst 15761:   movq    %rdi, -8(%r13,%r14,8)
  Inst 15762:   movl    $1, %edi
  Inst 15763:   movq    %rdi, -16(%r13,%r14,8)
  Inst 15764:   movq    %rsi, -24(%r13,%r14,8)
  Inst 15765:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15766:   movq    %r12, 152(%rsi)
  Inst 15767:   movq    %rbx, %rdi
  Inst 15768:   movq    %r15, %rsi
  Inst 15769:   load_ext_name u0:3+0, %rax
  Inst 15770:   movq    %rdi, rsp(864 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15771:   call    *%rax
  Inst 15772:   jmp     label559
Block 559:
  (successor: Block 560)
  (instruction range: 15773 .. 15844)
  Inst 15773:   movq    %rax, rsp(864 + virtual offset)
  Inst 15774:   nop     len=0
  Inst 15775:   nop     len=0
  Inst 15776:   nop     len=0
  Inst 15777:   nop     len=0
  Inst 15778:   nop     len=0
  Inst 15779:   nop     len=0
  Inst 15780:   nop     len=0
  Inst 15781:   nop     len=0
  Inst 15782:   nop     len=0
  Inst 15783:   nop     len=0
  Inst 15784:   nop     len=0
  Inst 15785:   nop     len=0
  Inst 15786:   nop     len=0
  Inst 15787:   nop     len=0
  Inst 15788:   nop     len=0
  Inst 15789:   nop     len=0
  Inst 15790:   nop     len=0
  Inst 15791:   nop     len=0
  Inst 15792:   nop     len=0
  Inst 15793:   nop     len=0
  Inst 15794:   nop     len=0
  Inst 15795:   nop     len=0
  Inst 15796:   nop     len=0
  Inst 15797:   nop     len=0
  Inst 15798:   nop     len=0
  Inst 15799:   nop     len=0
  Inst 15800:   nop     len=0
  Inst 15801:   nop     len=0
  Inst 15802:   nop     len=0
  Inst 15803:   nop     len=0
  Inst 15804:   nop     len=0
  Inst 15805:   nop     len=0
  Inst 15806:   nop     len=0
  Inst 15807:   nop     len=0
  Inst 15808:   nop     len=0
  Inst 15809:   nop     len=0
  Inst 15810:   nop     len=0
  Inst 15811:   nop     len=0
  Inst 15812:   nop     len=0
  Inst 15813:   nop     len=0
  Inst 15814:   nop     len=0
  Inst 15815:   nop     len=0
  Inst 15816:   nop     len=0
  Inst 15817:   nop     len=0
  Inst 15818:   nop     len=0
  Inst 15819:   nop     len=0
  Inst 15820:   nop     len=0
  Inst 15821:   nop     len=0
  Inst 15822:   nop     len=0
  Inst 15823:   nop     len=0
  Inst 15824:   nop     len=0
  Inst 15825:   nop     len=0
  Inst 15826:   nop     len=0
  Inst 15827:   nop     len=0
  Inst 15828:   nop     len=0
  Inst 15829:   nop     len=0
  Inst 15830:   nop     len=0
  Inst 15831:   nop     len=0
  Inst 15832:   nop     len=0
  Inst 15833:   nop     len=0
  Inst 15834:   nop     len=0
  Inst 15835:   nop     len=0
  Inst 15836:   nop     len=0
  Inst 15837:   nop     len=0
  Inst 15838:   nop     len=0
  Inst 15839:   nop     len=0
  Inst 15840:   nop     len=0
  Inst 15841:   nop     len=0
  Inst 15842:   nop     len=0
  Inst 15843:   jmp     label560
Block 560:
  (original IR block: block280)
  (successor: Block 561)
  (successor: Block 562)
  (instruction range: 15844 .. 15855)
  Inst 15844:   movq    rsp(2064 + virtual offset), %rsi
  Inst 15845:   movq    8(%rsi), %rdi
  Inst 15846:   movq    rsp(2048 + virtual offset), %rsi
  Inst 15847:   load_ext_name u0:2+0, %rax
  Inst 15848:   movq    %rsi, rsp(880 + virtual offset)
  Inst 15849:   movq    %rdi, rsp(896 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15850:   call    *%rax
  Inst 15851:   movq    %rax, %r15
  Inst 15852:   movq    %rdx, %r14
  Inst 15853:   testq   %r14, %r14
  Inst 15854:   jz      label561; j label562
Block 561:
  (successor: Block 564)
  (instruction range: 15855 .. 15927)
  Inst 15855:   movq    %r15, rsp(1368 + virtual offset)
  Inst 15856:   nop     len=0
  Inst 15857:   nop     len=0
  Inst 15858:   nop     len=0
  Inst 15859:   nop     len=0
  Inst 15860:   nop     len=0
  Inst 15861:   nop     len=0
  Inst 15862:   nop     len=0
  Inst 15863:   nop     len=0
  Inst 15864:   nop     len=0
  Inst 15865:   nop     len=0
  Inst 15866:   nop     len=0
  Inst 15867:   nop     len=0
  Inst 15868:   nop     len=0
  Inst 15869:   nop     len=0
  Inst 15870:   nop     len=0
  Inst 15871:   nop     len=0
  Inst 15872:   nop     len=0
  Inst 15873:   nop     len=0
  Inst 15874:   nop     len=0
  Inst 15875:   nop     len=0
  Inst 15876:   nop     len=0
  Inst 15877:   nop     len=0
  Inst 15878:   nop     len=0
  Inst 15879:   nop     len=0
  Inst 15880:   nop     len=0
  Inst 15881:   nop     len=0
  Inst 15882:   nop     len=0
  Inst 15883:   nop     len=0
  Inst 15884:   nop     len=0
  Inst 15885:   nop     len=0
  Inst 15886:   nop     len=0
  Inst 15887:   nop     len=0
  Inst 15888:   nop     len=0
  Inst 15889:   nop     len=0
  Inst 15890:   nop     len=0
  Inst 15891:   nop     len=0
  Inst 15892:   nop     len=0
  Inst 15893:   nop     len=0
  Inst 15894:   nop     len=0
  Inst 15895:   nop     len=0
  Inst 15896:   nop     len=0
  Inst 15897:   nop     len=0
  Inst 15898:   nop     len=0
  Inst 15899:   nop     len=0
  Inst 15900:   nop     len=0
  Inst 15901:   nop     len=0
  Inst 15902:   nop     len=0
  Inst 15903:   nop     len=0
  Inst 15904:   nop     len=0
  Inst 15905:   nop     len=0
  Inst 15906:   nop     len=0
  Inst 15907:   nop     len=0
  Inst 15908:   nop     len=0
  Inst 15909:   nop     len=0
  Inst 15910:   nop     len=0
  Inst 15911:   nop     len=0
  Inst 15912:   nop     len=0
  Inst 15913:   nop     len=0
  Inst 15914:   nop     len=0
  Inst 15915:   nop     len=0
  Inst 15916:   nop     len=0
  Inst 15917:   nop     len=0
  Inst 15918:   nop     len=0
  Inst 15919:   nop     len=0
  Inst 15920:   nop     len=0
  Inst 15921:   nop     len=0
  Inst 15922:   nop     len=0
  Inst 15923:   nop     len=0
  Inst 15924:   nop     len=0
  Inst 15925:   nop     len=0
  Inst 15926:   jmp     label564
Block 562:
  (original IR block: block283)
  (successor: Block 563)
  (instruction range: 15927 .. 15956)
  Inst 15927:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15928:   movq    152(%rsi), %r13
  Inst 15929:   movq    %r14, %rbx
  Inst 15930:   addq    $-1, %rbx
  Inst 15931:   movq    %r14, %rdx
  Inst 15932:   shlq    $3, %rdx
  Inst 15933:   movq    %r13, %r12
  Inst 15934:   addq    %rdx, %r12
  Inst 15935:   movq    %r13, %rdi
  Inst 15936:   addq    $-24, %rdi
  Inst 15937:   movq    %r13, %rsi
  Inst 15938:   load_ext_name %Memmove+0, %rax
  Inst 15939:   movq    %r15, rsp(880 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15940:   call    *%rax
  Inst 15941:   movq    rsp(880 + virtual offset), %r15
  Inst 15942:   load_ext_name u1:1+0, %rsi
  Inst 15943:   movl    $1, %edi
  Inst 15944:   movq    %rdi, -8(%r13,%r14,8)
  Inst 15945:   movl    $1, %edi
  Inst 15946:   movq    %rdi, -16(%r13,%r14,8)
  Inst 15947:   movq    %rsi, -24(%r13,%r14,8)
  Inst 15948:   movq    rsp(2072 + virtual offset), %rsi
  Inst 15949:   movq    %r12, 152(%rsi)
  Inst 15950:   movq    %r15, %rdi
  Inst 15951:   movq    %rbx, %rsi
  Inst 15952:   load_ext_name u0:3+0, %rax
  Inst 15953:   movq    %rdi, rsp(880 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 15954:   call    *%rax
  Inst 15955:   jmp     label563
Block 563:
  (successor: Block 564)
  (instruction range: 15956 .. 16028)
  Inst 15956:   movq    %rax, rsp(1368 + virtual offset)
  Inst 15957:   nop     len=0
  Inst 15958:   nop     len=0
  Inst 15959:   nop     len=0
  Inst 15960:   nop     len=0
  Inst 15961:   nop     len=0
  Inst 15962:   nop     len=0
  Inst 15963:   nop     len=0
  Inst 15964:   nop     len=0
  Inst 15965:   nop     len=0
  Inst 15966:   nop     len=0
  Inst 15967:   nop     len=0
  Inst 15968:   nop     len=0
  Inst 15969:   nop     len=0
  Inst 15970:   nop     len=0
  Inst 15971:   nop     len=0
  Inst 15972:   nop     len=0
  Inst 15973:   nop     len=0
  Inst 15974:   nop     len=0
  Inst 15975:   nop     len=0
  Inst 15976:   nop     len=0
  Inst 15977:   nop     len=0
  Inst 15978:   nop     len=0
  Inst 15979:   nop     len=0
  Inst 15980:   nop     len=0
  Inst 15981:   nop     len=0
  Inst 15982:   nop     len=0
  Inst 15983:   nop     len=0
  Inst 15984:   nop     len=0
  Inst 15985:   nop     len=0
  Inst 15986:   nop     len=0
  Inst 15987:   nop     len=0
  Inst 15988:   nop     len=0
  Inst 15989:   nop     len=0
  Inst 15990:   nop     len=0
  Inst 15991:   nop     len=0
  Inst 15992:   nop     len=0
  Inst 15993:   nop     len=0
  Inst 15994:   nop     len=0
  Inst 15995:   nop     len=0
  Inst 15996:   nop     len=0
  Inst 15997:   nop     len=0
  Inst 15998:   nop     len=0
  Inst 15999:   nop     len=0
  Inst 16000:   nop     len=0
  Inst 16001:   nop     len=0
  Inst 16002:   nop     len=0
  Inst 16003:   nop     len=0
  Inst 16004:   nop     len=0
  Inst 16005:   nop     len=0
  Inst 16006:   nop     len=0
  Inst 16007:   nop     len=0
  Inst 16008:   nop     len=0
  Inst 16009:   nop     len=0
  Inst 16010:   nop     len=0
  Inst 16011:   nop     len=0
  Inst 16012:   nop     len=0
  Inst 16013:   nop     len=0
  Inst 16014:   nop     len=0
  Inst 16015:   nop     len=0
  Inst 16016:   nop     len=0
  Inst 16017:   nop     len=0
  Inst 16018:   nop     len=0
  Inst 16019:   nop     len=0
  Inst 16020:   nop     len=0
  Inst 16021:   nop     len=0
  Inst 16022:   nop     len=0
  Inst 16023:   nop     len=0
  Inst 16024:   nop     len=0
  Inst 16025:   nop     len=0
  Inst 16026:   nop     len=0
  Inst 16027:   jmp     label564
Block 564:
  (original IR block: block282)
  (successor: Block 565)
  (successor: Block 566)
  (instruction range: 16028 .. 16039)
  Inst 16028:   movq    rsp(2064 + virtual offset), %rsi
  Inst 16029:   movq    8(%rsi), %rdi
  Inst 16030:   movq    rsp(2048 + virtual offset), %rsi
  Inst 16031:   load_ext_name u0:2+0, %rax
  Inst 16032:   movq    %rsi, rsp(880 + virtual offset)
  Inst 16033:   movq    %rdi, rsp(896 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16034:   call    *%rax
  Inst 16035:   movq    %rax, %rbx
  Inst 16036:   movq    %rdx, %r14
  Inst 16037:   testq   %r14, %r14
  Inst 16038:   jz      label565; j label566
Block 565:
  (successor: Block 568)
  (instruction range: 16039 .. 16111)
  Inst 16039:   movq    %rbx, rsp(880 + virtual offset)
  Inst 16040:   nop     len=0
  Inst 16041:   nop     len=0
  Inst 16042:   nop     len=0
  Inst 16043:   nop     len=0
  Inst 16044:   nop     len=0
  Inst 16045:   nop     len=0
  Inst 16046:   nop     len=0
  Inst 16047:   nop     len=0
  Inst 16048:   nop     len=0
  Inst 16049:   nop     len=0
  Inst 16050:   nop     len=0
  Inst 16051:   nop     len=0
  Inst 16052:   nop     len=0
  Inst 16053:   nop     len=0
  Inst 16054:   nop     len=0
  Inst 16055:   nop     len=0
  Inst 16056:   nop     len=0
  Inst 16057:   nop     len=0
  Inst 16058:   nop     len=0
  Inst 16059:   nop     len=0
  Inst 16060:   nop     len=0
  Inst 16061:   nop     len=0
  Inst 16062:   nop     len=0
  Inst 16063:   nop     len=0
  Inst 16064:   nop     len=0
  Inst 16065:   nop     len=0
  Inst 16066:   nop     len=0
  Inst 16067:   nop     len=0
  Inst 16068:   nop     len=0
  Inst 16069:   nop     len=0
  Inst 16070:   nop     len=0
  Inst 16071:   nop     len=0
  Inst 16072:   nop     len=0
  Inst 16073:   nop     len=0
  Inst 16074:   nop     len=0
  Inst 16075:   nop     len=0
  Inst 16076:   nop     len=0
  Inst 16077:   nop     len=0
  Inst 16078:   nop     len=0
  Inst 16079:   nop     len=0
  Inst 16080:   nop     len=0
  Inst 16081:   nop     len=0
  Inst 16082:   nop     len=0
  Inst 16083:   nop     len=0
  Inst 16084:   nop     len=0
  Inst 16085:   nop     len=0
  Inst 16086:   nop     len=0
  Inst 16087:   nop     len=0
  Inst 16088:   nop     len=0
  Inst 16089:   nop     len=0
  Inst 16090:   nop     len=0
  Inst 16091:   nop     len=0
  Inst 16092:   nop     len=0
  Inst 16093:   nop     len=0
  Inst 16094:   nop     len=0
  Inst 16095:   nop     len=0
  Inst 16096:   nop     len=0
  Inst 16097:   nop     len=0
  Inst 16098:   nop     len=0
  Inst 16099:   nop     len=0
  Inst 16100:   nop     len=0
  Inst 16101:   nop     len=0
  Inst 16102:   nop     len=0
  Inst 16103:   nop     len=0
  Inst 16104:   nop     len=0
  Inst 16105:   nop     len=0
  Inst 16106:   nop     len=0
  Inst 16107:   nop     len=0
  Inst 16108:   nop     len=0
  Inst 16109:   nop     len=0
  Inst 16110:   jmp     label568
Block 566:
  (original IR block: block285)
  (successor: Block 567)
  (instruction range: 16111 .. 16140)
  Inst 16111:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16112:   movq    152(%rsi), %r13
  Inst 16113:   movq    %r14, %r15
  Inst 16114:   addq    $-1, %r15
  Inst 16115:   movq    %r14, %rdx
  Inst 16116:   shlq    $3, %rdx
  Inst 16117:   movq    %r13, %r12
  Inst 16118:   addq    %rdx, %r12
  Inst 16119:   movq    %r13, %rdi
  Inst 16120:   addq    $-24, %rdi
  Inst 16121:   movq    %r13, %rsi
  Inst 16122:   load_ext_name %Memmove+0, %rax
  Inst 16123:   movq    %rbx, rsp(896 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S111, S112, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16124:   call    *%rax
  Inst 16125:   movq    rsp(896 + virtual offset), %rbx
  Inst 16126:   load_ext_name u1:1+0, %rsi
  Inst 16127:   movl    $1, %edi
  Inst 16128:   movq    %rdi, -8(%r13,%r14,8)
  Inst 16129:   movl    $1, %edi
  Inst 16130:   movq    %rdi, -16(%r13,%r14,8)
  Inst 16131:   movq    %rsi, -24(%r13,%r14,8)
  Inst 16132:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16133:   movq    %r12, 152(%rsi)
  Inst 16134:   movq    %rbx, %rdi
  Inst 16135:   movq    %r15, %rsi
  Inst 16136:   load_ext_name u0:3+0, %rax
  Inst 16137:   movq    %rdi, rsp(880 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16138:   call    *%rax
  Inst 16139:   jmp     label567
Block 567:
  (successor: Block 568)
  (instruction range: 16140 .. 16212)
  Inst 16140:   movq    %rax, rsp(880 + virtual offset)
  Inst 16141:   nop     len=0
  Inst 16142:   nop     len=0
  Inst 16143:   nop     len=0
  Inst 16144:   nop     len=0
  Inst 16145:   nop     len=0
  Inst 16146:   nop     len=0
  Inst 16147:   nop     len=0
  Inst 16148:   nop     len=0
  Inst 16149:   nop     len=0
  Inst 16150:   nop     len=0
  Inst 16151:   nop     len=0
  Inst 16152:   nop     len=0
  Inst 16153:   nop     len=0
  Inst 16154:   nop     len=0
  Inst 16155:   nop     len=0
  Inst 16156:   nop     len=0
  Inst 16157:   nop     len=0
  Inst 16158:   nop     len=0
  Inst 16159:   nop     len=0
  Inst 16160:   nop     len=0
  Inst 16161:   nop     len=0
  Inst 16162:   nop     len=0
  Inst 16163:   nop     len=0
  Inst 16164:   nop     len=0
  Inst 16165:   nop     len=0
  Inst 16166:   nop     len=0
  Inst 16167:   nop     len=0
  Inst 16168:   nop     len=0
  Inst 16169:   nop     len=0
  Inst 16170:   nop     len=0
  Inst 16171:   nop     len=0
  Inst 16172:   nop     len=0
  Inst 16173:   nop     len=0
  Inst 16174:   nop     len=0
  Inst 16175:   nop     len=0
  Inst 16176:   nop     len=0
  Inst 16177:   nop     len=0
  Inst 16178:   nop     len=0
  Inst 16179:   nop     len=0
  Inst 16180:   nop     len=0
  Inst 16181:   nop     len=0
  Inst 16182:   nop     len=0
  Inst 16183:   nop     len=0
  Inst 16184:   nop     len=0
  Inst 16185:   nop     len=0
  Inst 16186:   nop     len=0
  Inst 16187:   nop     len=0
  Inst 16188:   nop     len=0
  Inst 16189:   nop     len=0
  Inst 16190:   nop     len=0
  Inst 16191:   nop     len=0
  Inst 16192:   nop     len=0
  Inst 16193:   nop     len=0
  Inst 16194:   nop     len=0
  Inst 16195:   nop     len=0
  Inst 16196:   nop     len=0
  Inst 16197:   nop     len=0
  Inst 16198:   nop     len=0
  Inst 16199:   nop     len=0
  Inst 16200:   nop     len=0
  Inst 16201:   nop     len=0
  Inst 16202:   nop     len=0
  Inst 16203:   nop     len=0
  Inst 16204:   nop     len=0
  Inst 16205:   nop     len=0
  Inst 16206:   nop     len=0
  Inst 16207:   nop     len=0
  Inst 16208:   nop     len=0
  Inst 16209:   nop     len=0
  Inst 16210:   nop     len=0
  Inst 16211:   jmp     label568
Block 568:
  (original IR block: block284)
  (successor: Block 569)
  (successor: Block 570)
  (instruction range: 16212 .. 16223)
  Inst 16212:   movq    rsp(2064 + virtual offset), %rsi
  Inst 16213:   movq    8(%rsi), %rdi
  Inst 16214:   movq    rsp(2048 + virtual offset), %rsi
  Inst 16215:   load_ext_name u0:2+0, %rax
  Inst 16216:   movq    %rsi, rsp(896 + virtual offset)
  Inst 16217:   movq    %rdi, rsp(912 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16218:   call    *%rax
  Inst 16219:   movq    %rax, %rbx
  Inst 16220:   movq    %rdx, %r14
  Inst 16221:   testq   %r14, %r14
  Inst 16222:   jz      label569; j label570
Block 569:
  (successor: Block 572)
  (instruction range: 16223 .. 16296)
  Inst 16223:   movq    %rbx, rsp(1384 + virtual offset)
  Inst 16224:   nop     len=0
  Inst 16225:   nop     len=0
  Inst 16226:   nop     len=0
  Inst 16227:   nop     len=0
  Inst 16228:   nop     len=0
  Inst 16229:   nop     len=0
  Inst 16230:   nop     len=0
  Inst 16231:   nop     len=0
  Inst 16232:   nop     len=0
  Inst 16233:   nop     len=0
  Inst 16234:   nop     len=0
  Inst 16235:   nop     len=0
  Inst 16236:   nop     len=0
  Inst 16237:   nop     len=0
  Inst 16238:   nop     len=0
  Inst 16239:   nop     len=0
  Inst 16240:   nop     len=0
  Inst 16241:   nop     len=0
  Inst 16242:   nop     len=0
  Inst 16243:   nop     len=0
  Inst 16244:   nop     len=0
  Inst 16245:   nop     len=0
  Inst 16246:   nop     len=0
  Inst 16247:   nop     len=0
  Inst 16248:   nop     len=0
  Inst 16249:   nop     len=0
  Inst 16250:   nop     len=0
  Inst 16251:   nop     len=0
  Inst 16252:   nop     len=0
  Inst 16253:   nop     len=0
  Inst 16254:   nop     len=0
  Inst 16255:   nop     len=0
  Inst 16256:   nop     len=0
  Inst 16257:   nop     len=0
  Inst 16258:   nop     len=0
  Inst 16259:   nop     len=0
  Inst 16260:   nop     len=0
  Inst 16261:   nop     len=0
  Inst 16262:   nop     len=0
  Inst 16263:   nop     len=0
  Inst 16264:   nop     len=0
  Inst 16265:   nop     len=0
  Inst 16266:   nop     len=0
  Inst 16267:   nop     len=0
  Inst 16268:   nop     len=0
  Inst 16269:   nop     len=0
  Inst 16270:   nop     len=0
  Inst 16271:   nop     len=0
  Inst 16272:   nop     len=0
  Inst 16273:   nop     len=0
  Inst 16274:   nop     len=0
  Inst 16275:   nop     len=0
  Inst 16276:   nop     len=0
  Inst 16277:   nop     len=0
  Inst 16278:   nop     len=0
  Inst 16279:   nop     len=0
  Inst 16280:   nop     len=0
  Inst 16281:   nop     len=0
  Inst 16282:   nop     len=0
  Inst 16283:   nop     len=0
  Inst 16284:   nop     len=0
  Inst 16285:   nop     len=0
  Inst 16286:   nop     len=0
  Inst 16287:   nop     len=0
  Inst 16288:   nop     len=0
  Inst 16289:   nop     len=0
  Inst 16290:   nop     len=0
  Inst 16291:   nop     len=0
  Inst 16292:   nop     len=0
  Inst 16293:   nop     len=0
  Inst 16294:   nop     len=0
  Inst 16295:   jmp     label572
Block 570:
  (original IR block: block287)
  (successor: Block 571)
  (instruction range: 16296 .. 16325)
  Inst 16296:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16297:   movq    152(%rsi), %r13
  Inst 16298:   movq    %r14, %r15
  Inst 16299:   addq    $-1, %r15
  Inst 16300:   movq    %r14, %rdx
  Inst 16301:   shlq    $3, %rdx
  Inst 16302:   movq    %r13, %r12
  Inst 16303:   addq    %rdx, %r12
  Inst 16304:   movq    %r13, %rdi
  Inst 16305:   addq    $-24, %rdi
  Inst 16306:   movq    %r13, %rsi
  Inst 16307:   load_ext_name %Memmove+0, %rax
  Inst 16308:   movq    %rbx, rsp(896 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16309:   call    *%rax
  Inst 16310:   movq    rsp(896 + virtual offset), %rbx
  Inst 16311:   load_ext_name u1:1+0, %rsi
  Inst 16312:   movl    $1, %edi
  Inst 16313:   movq    %rdi, -8(%r13,%r14,8)
  Inst 16314:   movl    $1, %edi
  Inst 16315:   movq    %rdi, -16(%r13,%r14,8)
  Inst 16316:   movq    %rsi, -24(%r13,%r14,8)
  Inst 16317:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16318:   movq    %r12, 152(%rsi)
  Inst 16319:   movq    %rbx, %rdi
  Inst 16320:   movq    %r15, %rsi
  Inst 16321:   load_ext_name u0:3+0, %rax
  Inst 16322:   movq    %rdi, rsp(896 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16323:   call    *%rax
  Inst 16324:   jmp     label571
Block 571:
  (successor: Block 572)
  (instruction range: 16325 .. 16398)
  Inst 16325:   movq    %rax, rsp(1384 + virtual offset)
  Inst 16326:   nop     len=0
  Inst 16327:   nop     len=0
  Inst 16328:   nop     len=0
  Inst 16329:   nop     len=0
  Inst 16330:   nop     len=0
  Inst 16331:   nop     len=0
  Inst 16332:   nop     len=0
  Inst 16333:   nop     len=0
  Inst 16334:   nop     len=0
  Inst 16335:   nop     len=0
  Inst 16336:   nop     len=0
  Inst 16337:   nop     len=0
  Inst 16338:   nop     len=0
  Inst 16339:   nop     len=0
  Inst 16340:   nop     len=0
  Inst 16341:   nop     len=0
  Inst 16342:   nop     len=0
  Inst 16343:   nop     len=0
  Inst 16344:   nop     len=0
  Inst 16345:   nop     len=0
  Inst 16346:   nop     len=0
  Inst 16347:   nop     len=0
  Inst 16348:   nop     len=0
  Inst 16349:   nop     len=0
  Inst 16350:   nop     len=0
  Inst 16351:   nop     len=0
  Inst 16352:   nop     len=0
  Inst 16353:   nop     len=0
  Inst 16354:   nop     len=0
  Inst 16355:   nop     len=0
  Inst 16356:   nop     len=0
  Inst 16357:   nop     len=0
  Inst 16358:   nop     len=0
  Inst 16359:   nop     len=0
  Inst 16360:   nop     len=0
  Inst 16361:   nop     len=0
  Inst 16362:   nop     len=0
  Inst 16363:   nop     len=0
  Inst 16364:   nop     len=0
  Inst 16365:   nop     len=0
  Inst 16366:   nop     len=0
  Inst 16367:   nop     len=0
  Inst 16368:   nop     len=0
  Inst 16369:   nop     len=0
  Inst 16370:   nop     len=0
  Inst 16371:   nop     len=0
  Inst 16372:   nop     len=0
  Inst 16373:   nop     len=0
  Inst 16374:   nop     len=0
  Inst 16375:   nop     len=0
  Inst 16376:   nop     len=0
  Inst 16377:   nop     len=0
  Inst 16378:   nop     len=0
  Inst 16379:   nop     len=0
  Inst 16380:   nop     len=0
  Inst 16381:   nop     len=0
  Inst 16382:   nop     len=0
  Inst 16383:   nop     len=0
  Inst 16384:   nop     len=0
  Inst 16385:   nop     len=0
  Inst 16386:   nop     len=0
  Inst 16387:   nop     len=0
  Inst 16388:   nop     len=0
  Inst 16389:   nop     len=0
  Inst 16390:   nop     len=0
  Inst 16391:   nop     len=0
  Inst 16392:   nop     len=0
  Inst 16393:   nop     len=0
  Inst 16394:   nop     len=0
  Inst 16395:   nop     len=0
  Inst 16396:   nop     len=0
  Inst 16397:   jmp     label572
Block 572:
  (original IR block: block286)
  (successor: Block 573)
  (successor: Block 574)
  (instruction range: 16398 .. 16409)
  Inst 16398:   movq    rsp(2064 + virtual offset), %rsi
  Inst 16399:   movq    8(%rsi), %rdi
  Inst 16400:   movq    rsp(2048 + virtual offset), %rsi
  Inst 16401:   load_ext_name u0:2+0, %rax
  Inst 16402:   movq    %rsi, rsp(896 + virtual offset)
  Inst 16403:   movq    %rdi, rsp(912 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16404:   call    *%rax
  Inst 16405:   movq    %rax, %r15
  Inst 16406:   movq    %rdx, %r14
  Inst 16407:   testq   %r14, %r14
  Inst 16408:   jz      label573; j label574
Block 573:
  (successor: Block 576)
  (instruction range: 16409 .. 16482)
  Inst 16409:   movq    %r15, rsp(896 + virtual offset)
  Inst 16410:   nop     len=0
  Inst 16411:   nop     len=0
  Inst 16412:   nop     len=0
  Inst 16413:   nop     len=0
  Inst 16414:   nop     len=0
  Inst 16415:   nop     len=0
  Inst 16416:   nop     len=0
  Inst 16417:   nop     len=0
  Inst 16418:   nop     len=0
  Inst 16419:   nop     len=0
  Inst 16420:   nop     len=0
  Inst 16421:   nop     len=0
  Inst 16422:   nop     len=0
  Inst 16423:   nop     len=0
  Inst 16424:   nop     len=0
  Inst 16425:   nop     len=0
  Inst 16426:   nop     len=0
  Inst 16427:   nop     len=0
  Inst 16428:   nop     len=0
  Inst 16429:   nop     len=0
  Inst 16430:   nop     len=0
  Inst 16431:   nop     len=0
  Inst 16432:   nop     len=0
  Inst 16433:   nop     len=0
  Inst 16434:   nop     len=0
  Inst 16435:   nop     len=0
  Inst 16436:   nop     len=0
  Inst 16437:   nop     len=0
  Inst 16438:   nop     len=0
  Inst 16439:   nop     len=0
  Inst 16440:   nop     len=0
  Inst 16441:   nop     len=0
  Inst 16442:   nop     len=0
  Inst 16443:   nop     len=0
  Inst 16444:   nop     len=0
  Inst 16445:   nop     len=0
  Inst 16446:   nop     len=0
  Inst 16447:   nop     len=0
  Inst 16448:   nop     len=0
  Inst 16449:   nop     len=0
  Inst 16450:   nop     len=0
  Inst 16451:   nop     len=0
  Inst 16452:   nop     len=0
  Inst 16453:   nop     len=0
  Inst 16454:   nop     len=0
  Inst 16455:   nop     len=0
  Inst 16456:   nop     len=0
  Inst 16457:   nop     len=0
  Inst 16458:   nop     len=0
  Inst 16459:   nop     len=0
  Inst 16460:   nop     len=0
  Inst 16461:   nop     len=0
  Inst 16462:   nop     len=0
  Inst 16463:   nop     len=0
  Inst 16464:   nop     len=0
  Inst 16465:   nop     len=0
  Inst 16466:   nop     len=0
  Inst 16467:   nop     len=0
  Inst 16468:   nop     len=0
  Inst 16469:   nop     len=0
  Inst 16470:   nop     len=0
  Inst 16471:   nop     len=0
  Inst 16472:   nop     len=0
  Inst 16473:   nop     len=0
  Inst 16474:   nop     len=0
  Inst 16475:   nop     len=0
  Inst 16476:   nop     len=0
  Inst 16477:   nop     len=0
  Inst 16478:   nop     len=0
  Inst 16479:   nop     len=0
  Inst 16480:   nop     len=0
  Inst 16481:   jmp     label576
Block 574:
  (original IR block: block289)
  (successor: Block 575)
  (instruction range: 16482 .. 16511)
  Inst 16482:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16483:   movq    152(%rsi), %r13
  Inst 16484:   movq    %r14, %rbx
  Inst 16485:   addq    $-1, %rbx
  Inst 16486:   movq    %r14, %rdx
  Inst 16487:   shlq    $3, %rdx
  Inst 16488:   movq    %r13, %r12
  Inst 16489:   addq    %rdx, %r12
  Inst 16490:   movq    %r13, %rdi
  Inst 16491:   addq    $-24, %rdi
  Inst 16492:   movq    %r13, %rsi
  Inst 16493:   load_ext_name %Memmove+0, %rax
  Inst 16494:   movq    %r15, rsp(912 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S113, S114, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16495:   call    *%rax
  Inst 16496:   movq    rsp(912 + virtual offset), %r15
  Inst 16497:   load_ext_name u1:1+0, %rsi
  Inst 16498:   movl    $1, %edi
  Inst 16499:   movq    %rdi, -8(%r13,%r14,8)
  Inst 16500:   movl    $1, %edi
  Inst 16501:   movq    %rdi, -16(%r13,%r14,8)
  Inst 16502:   movq    %rsi, -24(%r13,%r14,8)
  Inst 16503:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16504:   movq    %r12, 152(%rsi)
  Inst 16505:   movq    %r15, %rdi
  Inst 16506:   movq    %rbx, %rsi
  Inst 16507:   load_ext_name u0:3+0, %rax
  Inst 16508:   movq    %rdi, rsp(896 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16509:   call    *%rax
  Inst 16510:   jmp     label575
Block 575:
  (successor: Block 576)
  (instruction range: 16511 .. 16584)
  Inst 16511:   movq    %rax, rsp(896 + virtual offset)
  Inst 16512:   nop     len=0
  Inst 16513:   nop     len=0
  Inst 16514:   nop     len=0
  Inst 16515:   nop     len=0
  Inst 16516:   nop     len=0
  Inst 16517:   nop     len=0
  Inst 16518:   nop     len=0
  Inst 16519:   nop     len=0
  Inst 16520:   nop     len=0
  Inst 16521:   nop     len=0
  Inst 16522:   nop     len=0
  Inst 16523:   nop     len=0
  Inst 16524:   nop     len=0
  Inst 16525:   nop     len=0
  Inst 16526:   nop     len=0
  Inst 16527:   nop     len=0
  Inst 16528:   nop     len=0
  Inst 16529:   nop     len=0
  Inst 16530:   nop     len=0
  Inst 16531:   nop     len=0
  Inst 16532:   nop     len=0
  Inst 16533:   nop     len=0
  Inst 16534:   nop     len=0
  Inst 16535:   nop     len=0
  Inst 16536:   nop     len=0
  Inst 16537:   nop     len=0
  Inst 16538:   nop     len=0
  Inst 16539:   nop     len=0
  Inst 16540:   nop     len=0
  Inst 16541:   nop     len=0
  Inst 16542:   nop     len=0
  Inst 16543:   nop     len=0
  Inst 16544:   nop     len=0
  Inst 16545:   nop     len=0
  Inst 16546:   nop     len=0
  Inst 16547:   nop     len=0
  Inst 16548:   nop     len=0
  Inst 16549:   nop     len=0
  Inst 16550:   nop     len=0
  Inst 16551:   nop     len=0
  Inst 16552:   nop     len=0
  Inst 16553:   nop     len=0
  Inst 16554:   nop     len=0
  Inst 16555:   nop     len=0
  Inst 16556:   nop     len=0
  Inst 16557:   nop     len=0
  Inst 16558:   nop     len=0
  Inst 16559:   nop     len=0
  Inst 16560:   nop     len=0
  Inst 16561:   nop     len=0
  Inst 16562:   nop     len=0
  Inst 16563:   nop     len=0
  Inst 16564:   nop     len=0
  Inst 16565:   nop     len=0
  Inst 16566:   nop     len=0
  Inst 16567:   nop     len=0
  Inst 16568:   nop     len=0
  Inst 16569:   nop     len=0
  Inst 16570:   nop     len=0
  Inst 16571:   nop     len=0
  Inst 16572:   nop     len=0
  Inst 16573:   nop     len=0
  Inst 16574:   nop     len=0
  Inst 16575:   nop     len=0
  Inst 16576:   nop     len=0
  Inst 16577:   nop     len=0
  Inst 16578:   nop     len=0
  Inst 16579:   nop     len=0
  Inst 16580:   nop     len=0
  Inst 16581:   nop     len=0
  Inst 16582:   nop     len=0
  Inst 16583:   jmp     label576
Block 576:
  (original IR block: block288)
  (successor: Block 577)
  (successor: Block 578)
  (instruction range: 16584 .. 16595)
  Inst 16584:   movq    rsp(2064 + virtual offset), %rsi
  Inst 16585:   movq    8(%rsi), %rdi
  Inst 16586:   movq    rsp(2048 + virtual offset), %rsi
  Inst 16587:   load_ext_name u0:2+0, %rax
  Inst 16588:   movq    %rsi, rsp(912 + virtual offset)
  Inst 16589:   movq    %rdi, rsp(928 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16590:   call    *%rax
  Inst 16591:   movq    %rax, %rbx
  Inst 16592:   movq    %rdx, %r14
  Inst 16593:   testq   %r14, %r14
  Inst 16594:   jz      label577; j label578
Block 577:
  (successor: Block 580)
  (instruction range: 16595 .. 16669)
  Inst 16595:   movq    %rbx, rsp(1400 + virtual offset)
  Inst 16596:   nop     len=0
  Inst 16597:   nop     len=0
  Inst 16598:   nop     len=0
  Inst 16599:   nop     len=0
  Inst 16600:   nop     len=0
  Inst 16601:   nop     len=0
  Inst 16602:   nop     len=0
  Inst 16603:   nop     len=0
  Inst 16604:   nop     len=0
  Inst 16605:   nop     len=0
  Inst 16606:   nop     len=0
  Inst 16607:   nop     len=0
  Inst 16608:   nop     len=0
  Inst 16609:   nop     len=0
  Inst 16610:   nop     len=0
  Inst 16611:   nop     len=0
  Inst 16612:   nop     len=0
  Inst 16613:   nop     len=0
  Inst 16614:   nop     len=0
  Inst 16615:   nop     len=0
  Inst 16616:   nop     len=0
  Inst 16617:   nop     len=0
  Inst 16618:   nop     len=0
  Inst 16619:   nop     len=0
  Inst 16620:   nop     len=0
  Inst 16621:   nop     len=0
  Inst 16622:   nop     len=0
  Inst 16623:   nop     len=0
  Inst 16624:   nop     len=0
  Inst 16625:   nop     len=0
  Inst 16626:   nop     len=0
  Inst 16627:   nop     len=0
  Inst 16628:   nop     len=0
  Inst 16629:   nop     len=0
  Inst 16630:   nop     len=0
  Inst 16631:   nop     len=0
  Inst 16632:   nop     len=0
  Inst 16633:   nop     len=0
  Inst 16634:   nop     len=0
  Inst 16635:   nop     len=0
  Inst 16636:   nop     len=0
  Inst 16637:   nop     len=0
  Inst 16638:   nop     len=0
  Inst 16639:   nop     len=0
  Inst 16640:   nop     len=0
  Inst 16641:   nop     len=0
  Inst 16642:   nop     len=0
  Inst 16643:   nop     len=0
  Inst 16644:   nop     len=0
  Inst 16645:   nop     len=0
  Inst 16646:   nop     len=0
  Inst 16647:   nop     len=0
  Inst 16648:   nop     len=0
  Inst 16649:   nop     len=0
  Inst 16650:   nop     len=0
  Inst 16651:   nop     len=0
  Inst 16652:   nop     len=0
  Inst 16653:   nop     len=0
  Inst 16654:   nop     len=0
  Inst 16655:   nop     len=0
  Inst 16656:   nop     len=0
  Inst 16657:   nop     len=0
  Inst 16658:   nop     len=0
  Inst 16659:   nop     len=0
  Inst 16660:   nop     len=0
  Inst 16661:   nop     len=0
  Inst 16662:   nop     len=0
  Inst 16663:   nop     len=0
  Inst 16664:   nop     len=0
  Inst 16665:   nop     len=0
  Inst 16666:   nop     len=0
  Inst 16667:   nop     len=0
  Inst 16668:   jmp     label580
Block 578:
  (original IR block: block291)
  (successor: Block 579)
  (instruction range: 16669 .. 16698)
  Inst 16669:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16670:   movq    152(%rsi), %r13
  Inst 16671:   movq    %r14, %r15
  Inst 16672:   addq    $-1, %r15
  Inst 16673:   movq    %r14, %rdx
  Inst 16674:   shlq    $3, %rdx
  Inst 16675:   movq    %r13, %r12
  Inst 16676:   addq    %rdx, %r12
  Inst 16677:   movq    %r13, %rdi
  Inst 16678:   addq    $-24, %rdi
  Inst 16679:   movq    %r13, %rsi
  Inst 16680:   load_ext_name %Memmove+0, %rax
  Inst 16681:   movq    %rbx, rsp(912 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16682:   call    *%rax
  Inst 16683:   movq    rsp(912 + virtual offset), %rbx
  Inst 16684:   load_ext_name u1:1+0, %rsi
  Inst 16685:   movl    $1, %edi
  Inst 16686:   movq    %rdi, -8(%r13,%r14,8)
  Inst 16687:   movl    $1, %edi
  Inst 16688:   movq    %rdi, -16(%r13,%r14,8)
  Inst 16689:   movq    %rsi, -24(%r13,%r14,8)
  Inst 16690:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16691:   movq    %r12, 152(%rsi)
  Inst 16692:   movq    %rbx, %rdi
  Inst 16693:   movq    %r15, %rsi
  Inst 16694:   load_ext_name u0:3+0, %rax
  Inst 16695:   movq    %rdi, rsp(912 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16696:   call    *%rax
  Inst 16697:   jmp     label579
Block 579:
  (successor: Block 580)
  (instruction range: 16698 .. 16772)
  Inst 16698:   movq    %rax, rsp(1400 + virtual offset)
  Inst 16699:   nop     len=0
  Inst 16700:   nop     len=0
  Inst 16701:   nop     len=0
  Inst 16702:   nop     len=0
  Inst 16703:   nop     len=0
  Inst 16704:   nop     len=0
  Inst 16705:   nop     len=0
  Inst 16706:   nop     len=0
  Inst 16707:   nop     len=0
  Inst 16708:   nop     len=0
  Inst 16709:   nop     len=0
  Inst 16710:   nop     len=0
  Inst 16711:   nop     len=0
  Inst 16712:   nop     len=0
  Inst 16713:   nop     len=0
  Inst 16714:   nop     len=0
  Inst 16715:   nop     len=0
  Inst 16716:   nop     len=0
  Inst 16717:   nop     len=0
  Inst 16718:   nop     len=0
  Inst 16719:   nop     len=0
  Inst 16720:   nop     len=0
  Inst 16721:   nop     len=0
  Inst 16722:   nop     len=0
  Inst 16723:   nop     len=0
  Inst 16724:   nop     len=0
  Inst 16725:   nop     len=0
  Inst 16726:   nop     len=0
  Inst 16727:   nop     len=0
  Inst 16728:   nop     len=0
  Inst 16729:   nop     len=0
  Inst 16730:   nop     len=0
  Inst 16731:   nop     len=0
  Inst 16732:   nop     len=0
  Inst 16733:   nop     len=0
  Inst 16734:   nop     len=0
  Inst 16735:   nop     len=0
  Inst 16736:   nop     len=0
  Inst 16737:   nop     len=0
  Inst 16738:   nop     len=0
  Inst 16739:   nop     len=0
  Inst 16740:   nop     len=0
  Inst 16741:   nop     len=0
  Inst 16742:   nop     len=0
  Inst 16743:   nop     len=0
  Inst 16744:   nop     len=0
  Inst 16745:   nop     len=0
  Inst 16746:   nop     len=0
  Inst 16747:   nop     len=0
  Inst 16748:   nop     len=0
  Inst 16749:   nop     len=0
  Inst 16750:   nop     len=0
  Inst 16751:   nop     len=0
  Inst 16752:   nop     len=0
  Inst 16753:   nop     len=0
  Inst 16754:   nop     len=0
  Inst 16755:   nop     len=0
  Inst 16756:   nop     len=0
  Inst 16757:   nop     len=0
  Inst 16758:   nop     len=0
  Inst 16759:   nop     len=0
  Inst 16760:   nop     len=0
  Inst 16761:   nop     len=0
  Inst 16762:   nop     len=0
  Inst 16763:   nop     len=0
  Inst 16764:   nop     len=0
  Inst 16765:   nop     len=0
  Inst 16766:   nop     len=0
  Inst 16767:   nop     len=0
  Inst 16768:   nop     len=0
  Inst 16769:   nop     len=0
  Inst 16770:   nop     len=0
  Inst 16771:   jmp     label580
Block 580:
  (original IR block: block290)
  (successor: Block 581)
  (successor: Block 582)
  (instruction range: 16772 .. 16783)
  Inst 16772:   movq    rsp(2064 + virtual offset), %rsi
  Inst 16773:   movq    8(%rsi), %rdi
  Inst 16774:   movq    rsp(2048 + virtual offset), %rsi
  Inst 16775:   load_ext_name u0:2+0, %rax
  Inst 16776:   movq    %rsi, rsp(912 + virtual offset)
  Inst 16777:   movq    %rdi, rsp(928 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16778:   call    *%rax
  Inst 16779:   movq    %rax, %rbx
  Inst 16780:   movq    %rdx, %r14
  Inst 16781:   testq   %r14, %r14
  Inst 16782:   jz      label581; j label582
Block 581:
  (successor: Block 584)
  (instruction range: 16783 .. 16857)
  Inst 16783:   movq    %rbx, rsp(912 + virtual offset)
  Inst 16784:   nop     len=0
  Inst 16785:   nop     len=0
  Inst 16786:   nop     len=0
  Inst 16787:   nop     len=0
  Inst 16788:   nop     len=0
  Inst 16789:   nop     len=0
  Inst 16790:   nop     len=0
  Inst 16791:   nop     len=0
  Inst 16792:   nop     len=0
  Inst 16793:   nop     len=0
  Inst 16794:   nop     len=0
  Inst 16795:   nop     len=0
  Inst 16796:   nop     len=0
  Inst 16797:   nop     len=0
  Inst 16798:   nop     len=0
  Inst 16799:   nop     len=0
  Inst 16800:   nop     len=0
  Inst 16801:   nop     len=0
  Inst 16802:   nop     len=0
  Inst 16803:   nop     len=0
  Inst 16804:   nop     len=0
  Inst 16805:   nop     len=0
  Inst 16806:   nop     len=0
  Inst 16807:   nop     len=0
  Inst 16808:   nop     len=0
  Inst 16809:   nop     len=0
  Inst 16810:   nop     len=0
  Inst 16811:   nop     len=0
  Inst 16812:   nop     len=0
  Inst 16813:   nop     len=0
  Inst 16814:   nop     len=0
  Inst 16815:   nop     len=0
  Inst 16816:   nop     len=0
  Inst 16817:   nop     len=0
  Inst 16818:   nop     len=0
  Inst 16819:   nop     len=0
  Inst 16820:   nop     len=0
  Inst 16821:   nop     len=0
  Inst 16822:   nop     len=0
  Inst 16823:   nop     len=0
  Inst 16824:   nop     len=0
  Inst 16825:   nop     len=0
  Inst 16826:   nop     len=0
  Inst 16827:   nop     len=0
  Inst 16828:   nop     len=0
  Inst 16829:   nop     len=0
  Inst 16830:   nop     len=0
  Inst 16831:   nop     len=0
  Inst 16832:   nop     len=0
  Inst 16833:   nop     len=0
  Inst 16834:   nop     len=0
  Inst 16835:   nop     len=0
  Inst 16836:   nop     len=0
  Inst 16837:   nop     len=0
  Inst 16838:   nop     len=0
  Inst 16839:   nop     len=0
  Inst 16840:   nop     len=0
  Inst 16841:   nop     len=0
  Inst 16842:   nop     len=0
  Inst 16843:   nop     len=0
  Inst 16844:   nop     len=0
  Inst 16845:   nop     len=0
  Inst 16846:   nop     len=0
  Inst 16847:   nop     len=0
  Inst 16848:   nop     len=0
  Inst 16849:   nop     len=0
  Inst 16850:   nop     len=0
  Inst 16851:   nop     len=0
  Inst 16852:   nop     len=0
  Inst 16853:   nop     len=0
  Inst 16854:   nop     len=0
  Inst 16855:   nop     len=0
  Inst 16856:   jmp     label584
Block 582:
  (original IR block: block293)
  (successor: Block 583)
  (instruction range: 16857 .. 16886)
  Inst 16857:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16858:   movq    152(%rsi), %r13
  Inst 16859:   movq    %r14, %r15
  Inst 16860:   addq    $-1, %r15
  Inst 16861:   movq    %r14, %rdx
  Inst 16862:   shlq    $3, %rdx
  Inst 16863:   movq    %r13, %r12
  Inst 16864:   addq    %rdx, %r12
  Inst 16865:   movq    %r13, %rdi
  Inst 16866:   addq    $-24, %rdi
  Inst 16867:   movq    %r13, %rsi
  Inst 16868:   load_ext_name %Memmove+0, %rax
  Inst 16869:   movq    %rbx, rsp(928 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S115, S116, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16870:   call    *%rax
  Inst 16871:   movq    rsp(928 + virtual offset), %rbx
  Inst 16872:   load_ext_name u1:1+0, %rsi
  Inst 16873:   movl    $1, %edi
  Inst 16874:   movq    %rdi, -8(%r13,%r14,8)
  Inst 16875:   movl    $1, %edi
  Inst 16876:   movq    %rdi, -16(%r13,%r14,8)
  Inst 16877:   movq    %rsi, -24(%r13,%r14,8)
  Inst 16878:   movq    rsp(2072 + virtual offset), %rsi
  Inst 16879:   movq    %r12, 152(%rsi)
  Inst 16880:   movq    %rbx, %rdi
  Inst 16881:   movq    %r15, %rsi
  Inst 16882:   load_ext_name u0:3+0, %rax
  Inst 16883:   movq    %rdi, rsp(912 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16884:   call    *%rax
  Inst 16885:   jmp     label583
Block 583:
  (successor: Block 584)
  (instruction range: 16886 .. 16960)
  Inst 16886:   movq    %rax, rsp(912 + virtual offset)
  Inst 16887:   nop     len=0
  Inst 16888:   nop     len=0
  Inst 16889:   nop     len=0
  Inst 16890:   nop     len=0
  Inst 16891:   nop     len=0
  Inst 16892:   nop     len=0
  Inst 16893:   nop     len=0
  Inst 16894:   nop     len=0
  Inst 16895:   nop     len=0
  Inst 16896:   nop     len=0
  Inst 16897:   nop     len=0
  Inst 16898:   nop     len=0
  Inst 16899:   nop     len=0
  Inst 16900:   nop     len=0
  Inst 16901:   nop     len=0
  Inst 16902:   nop     len=0
  Inst 16903:   nop     len=0
  Inst 16904:   nop     len=0
  Inst 16905:   nop     len=0
  Inst 16906:   nop     len=0
  Inst 16907:   nop     len=0
  Inst 16908:   nop     len=0
  Inst 16909:   nop     len=0
  Inst 16910:   nop     len=0
  Inst 16911:   nop     len=0
  Inst 16912:   nop     len=0
  Inst 16913:   nop     len=0
  Inst 16914:   nop     len=0
  Inst 16915:   nop     len=0
  Inst 16916:   nop     len=0
  Inst 16917:   nop     len=0
  Inst 16918:   nop     len=0
  Inst 16919:   nop     len=0
  Inst 16920:   nop     len=0
  Inst 16921:   nop     len=0
  Inst 16922:   nop     len=0
  Inst 16923:   nop     len=0
  Inst 16924:   nop     len=0
  Inst 16925:   nop     len=0
  Inst 16926:   nop     len=0
  Inst 16927:   nop     len=0
  Inst 16928:   nop     len=0
  Inst 16929:   nop     len=0
  Inst 16930:   nop     len=0
  Inst 16931:   nop     len=0
  Inst 16932:   nop     len=0
  Inst 16933:   nop     len=0
  Inst 16934:   nop     len=0
  Inst 16935:   nop     len=0
  Inst 16936:   nop     len=0
  Inst 16937:   nop     len=0
  Inst 16938:   nop     len=0
  Inst 16939:   nop     len=0
  Inst 16940:   nop     len=0
  Inst 16941:   nop     len=0
  Inst 16942:   nop     len=0
  Inst 16943:   nop     len=0
  Inst 16944:   nop     len=0
  Inst 16945:   nop     len=0
  Inst 16946:   nop     len=0
  Inst 16947:   nop     len=0
  Inst 16948:   nop     len=0
  Inst 16949:   nop     len=0
  Inst 16950:   nop     len=0
  Inst 16951:   nop     len=0
  Inst 16952:   nop     len=0
  Inst 16953:   nop     len=0
  Inst 16954:   nop     len=0
  Inst 16955:   nop     len=0
  Inst 16956:   nop     len=0
  Inst 16957:   nop     len=0
  Inst 16958:   nop     len=0
  Inst 16959:   jmp     label584
Block 584:
  (original IR block: block292)
  (successor: Block 585)
  (successor: Block 586)
  (instruction range: 16960 .. 16971)
  Inst 16960:   movq    rsp(2064 + virtual offset), %rsi
  Inst 16961:   movq    8(%rsi), %rdi
  Inst 16962:   movq    rsp(2048 + virtual offset), %rsi
  Inst 16963:   load_ext_name u0:2+0, %rax
  Inst 16964:   movq    %rsi, rsp(928 + virtual offset)
  Inst 16965:   movq    %rdi, rsp(944 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 16966:   call    *%rax
  Inst 16967:   movq    %rax, %r15
  Inst 16968:   movq    %rdx, %r14
  Inst 16969:   testq   %r14, %r14
  Inst 16970:   jz      label585; j label586
Block 585:
  (successor: Block 588)
  (instruction range: 16971 .. 17046)
  Inst 16971:   movq    %r15, rsp(1416 + virtual offset)
  Inst 16972:   nop     len=0
  Inst 16973:   nop     len=0
  Inst 16974:   nop     len=0
  Inst 16975:   nop     len=0
  Inst 16976:   nop     len=0
  Inst 16977:   nop     len=0
  Inst 16978:   nop     len=0
  Inst 16979:   nop     len=0
  Inst 16980:   nop     len=0
  Inst 16981:   nop     len=0
  Inst 16982:   nop     len=0
  Inst 16983:   nop     len=0
  Inst 16984:   nop     len=0
  Inst 16985:   nop     len=0
  Inst 16986:   nop     len=0
  Inst 16987:   nop     len=0
  Inst 16988:   nop     len=0
  Inst 16989:   nop     len=0
  Inst 16990:   nop     len=0
  Inst 16991:   nop     len=0
  Inst 16992:   nop     len=0
  Inst 16993:   nop     len=0
  Inst 16994:   nop     len=0
  Inst 16995:   nop     len=0
  Inst 16996:   nop     len=0
  Inst 16997:   nop     len=0
  Inst 16998:   nop     len=0
  Inst 16999:   nop     len=0
  Inst 17000:   nop     len=0
  Inst 17001:   nop     len=0
  Inst 17002:   nop     len=0
  Inst 17003:   nop     len=0
  Inst 17004:   nop     len=0
  Inst 17005:   nop     len=0
  Inst 17006:   nop     len=0
  Inst 17007:   nop     len=0
  Inst 17008:   nop     len=0
  Inst 17009:   nop     len=0
  Inst 17010:   nop     len=0
  Inst 17011:   nop     len=0
  Inst 17012:   nop     len=0
  Inst 17013:   nop     len=0
  Inst 17014:   nop     len=0
  Inst 17015:   nop     len=0
  Inst 17016:   nop     len=0
  Inst 17017:   nop     len=0
  Inst 17018:   nop     len=0
  Inst 17019:   nop     len=0
  Inst 17020:   nop     len=0
  Inst 17021:   nop     len=0
  Inst 17022:   nop     len=0
  Inst 17023:   nop     len=0
  Inst 17024:   nop     len=0
  Inst 17025:   nop     len=0
  Inst 17026:   nop     len=0
  Inst 17027:   nop     len=0
  Inst 17028:   nop     len=0
  Inst 17029:   nop     len=0
  Inst 17030:   nop     len=0
  Inst 17031:   nop     len=0
  Inst 17032:   nop     len=0
  Inst 17033:   nop     len=0
  Inst 17034:   nop     len=0
  Inst 17035:   nop     len=0
  Inst 17036:   nop     len=0
  Inst 17037:   nop     len=0
  Inst 17038:   nop     len=0
  Inst 17039:   nop     len=0
  Inst 17040:   nop     len=0
  Inst 17041:   nop     len=0
  Inst 17042:   nop     len=0
  Inst 17043:   nop     len=0
  Inst 17044:   nop     len=0
  Inst 17045:   jmp     label588
Block 586:
  (original IR block: block295)
  (successor: Block 587)
  (instruction range: 17046 .. 17075)
  Inst 17046:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17047:   movq    152(%rsi), %r13
  Inst 17048:   movq    %r14, %rbx
  Inst 17049:   addq    $-1, %rbx
  Inst 17050:   movq    %r14, %rdx
  Inst 17051:   shlq    $3, %rdx
  Inst 17052:   movq    %r13, %r12
  Inst 17053:   addq    %rdx, %r12
  Inst 17054:   movq    %r13, %rdi
  Inst 17055:   addq    $-24, %rdi
  Inst 17056:   movq    %r13, %rsi
  Inst 17057:   load_ext_name %Memmove+0, %rax
  Inst 17058:   movq    %r15, rsp(928 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17059:   call    *%rax
  Inst 17060:   movq    rsp(928 + virtual offset), %r15
  Inst 17061:   load_ext_name u1:1+0, %rsi
  Inst 17062:   movl    $1, %edi
  Inst 17063:   movq    %rdi, -8(%r13,%r14,8)
  Inst 17064:   movl    $1, %edi
  Inst 17065:   movq    %rdi, -16(%r13,%r14,8)
  Inst 17066:   movq    %rsi, -24(%r13,%r14,8)
  Inst 17067:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17068:   movq    %r12, 152(%rsi)
  Inst 17069:   movq    %r15, %rdi
  Inst 17070:   movq    %rbx, %rsi
  Inst 17071:   load_ext_name u0:3+0, %rax
  Inst 17072:   movq    %rdi, rsp(928 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17073:   call    *%rax
  Inst 17074:   jmp     label587
Block 587:
  (successor: Block 588)
  (instruction range: 17075 .. 17150)
  Inst 17075:   movq    %rax, rsp(1416 + virtual offset)
  Inst 17076:   nop     len=0
  Inst 17077:   nop     len=0
  Inst 17078:   nop     len=0
  Inst 17079:   nop     len=0
  Inst 17080:   nop     len=0
  Inst 17081:   nop     len=0
  Inst 17082:   nop     len=0
  Inst 17083:   nop     len=0
  Inst 17084:   nop     len=0
  Inst 17085:   nop     len=0
  Inst 17086:   nop     len=0
  Inst 17087:   nop     len=0
  Inst 17088:   nop     len=0
  Inst 17089:   nop     len=0
  Inst 17090:   nop     len=0
  Inst 17091:   nop     len=0
  Inst 17092:   nop     len=0
  Inst 17093:   nop     len=0
  Inst 17094:   nop     len=0
  Inst 17095:   nop     len=0
  Inst 17096:   nop     len=0
  Inst 17097:   nop     len=0
  Inst 17098:   nop     len=0
  Inst 17099:   nop     len=0
  Inst 17100:   nop     len=0
  Inst 17101:   nop     len=0
  Inst 17102:   nop     len=0
  Inst 17103:   nop     len=0
  Inst 17104:   nop     len=0
  Inst 17105:   nop     len=0
  Inst 17106:   nop     len=0
  Inst 17107:   nop     len=0
  Inst 17108:   nop     len=0
  Inst 17109:   nop     len=0
  Inst 17110:   nop     len=0
  Inst 17111:   nop     len=0
  Inst 17112:   nop     len=0
  Inst 17113:   nop     len=0
  Inst 17114:   nop     len=0
  Inst 17115:   nop     len=0
  Inst 17116:   nop     len=0
  Inst 17117:   nop     len=0
  Inst 17118:   nop     len=0
  Inst 17119:   nop     len=0
  Inst 17120:   nop     len=0
  Inst 17121:   nop     len=0
  Inst 17122:   nop     len=0
  Inst 17123:   nop     len=0
  Inst 17124:   nop     len=0
  Inst 17125:   nop     len=0
  Inst 17126:   nop     len=0
  Inst 17127:   nop     len=0
  Inst 17128:   nop     len=0
  Inst 17129:   nop     len=0
  Inst 17130:   nop     len=0
  Inst 17131:   nop     len=0
  Inst 17132:   nop     len=0
  Inst 17133:   nop     len=0
  Inst 17134:   nop     len=0
  Inst 17135:   nop     len=0
  Inst 17136:   nop     len=0
  Inst 17137:   nop     len=0
  Inst 17138:   nop     len=0
  Inst 17139:   nop     len=0
  Inst 17140:   nop     len=0
  Inst 17141:   nop     len=0
  Inst 17142:   nop     len=0
  Inst 17143:   nop     len=0
  Inst 17144:   nop     len=0
  Inst 17145:   nop     len=0
  Inst 17146:   nop     len=0
  Inst 17147:   nop     len=0
  Inst 17148:   nop     len=0
  Inst 17149:   jmp     label588
Block 588:
  (original IR block: block294)
  (successor: Block 589)
  (successor: Block 590)
  (instruction range: 17150 .. 17161)
  Inst 17150:   movq    rsp(2064 + virtual offset), %rsi
  Inst 17151:   movq    8(%rsi), %rdi
  Inst 17152:   movq    rsp(2048 + virtual offset), %rsi
  Inst 17153:   load_ext_name u0:2+0, %rax
  Inst 17154:   movq    %rsi, rsp(928 + virtual offset)
  Inst 17155:   movq    %rdi, rsp(944 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17156:   call    *%rax
  Inst 17157:   movq    %rax, %rbx
  Inst 17158:   movq    %rdx, %r14
  Inst 17159:   testq   %r14, %r14
  Inst 17160:   jz      label589; j label590
Block 589:
  (successor: Block 592)
  (instruction range: 17161 .. 17236)
  Inst 17161:   movq    %rbx, rsp(928 + virtual offset)
  Inst 17162:   nop     len=0
  Inst 17163:   nop     len=0
  Inst 17164:   nop     len=0
  Inst 17165:   nop     len=0
  Inst 17166:   nop     len=0
  Inst 17167:   nop     len=0
  Inst 17168:   nop     len=0
  Inst 17169:   nop     len=0
  Inst 17170:   nop     len=0
  Inst 17171:   nop     len=0
  Inst 17172:   nop     len=0
  Inst 17173:   nop     len=0
  Inst 17174:   nop     len=0
  Inst 17175:   nop     len=0
  Inst 17176:   nop     len=0
  Inst 17177:   nop     len=0
  Inst 17178:   nop     len=0
  Inst 17179:   nop     len=0
  Inst 17180:   nop     len=0
  Inst 17181:   nop     len=0
  Inst 17182:   nop     len=0
  Inst 17183:   nop     len=0
  Inst 17184:   nop     len=0
  Inst 17185:   nop     len=0
  Inst 17186:   nop     len=0
  Inst 17187:   nop     len=0
  Inst 17188:   nop     len=0
  Inst 17189:   nop     len=0
  Inst 17190:   nop     len=0
  Inst 17191:   nop     len=0
  Inst 17192:   nop     len=0
  Inst 17193:   nop     len=0
  Inst 17194:   nop     len=0
  Inst 17195:   nop     len=0
  Inst 17196:   nop     len=0
  Inst 17197:   nop     len=0
  Inst 17198:   nop     len=0
  Inst 17199:   nop     len=0
  Inst 17200:   nop     len=0
  Inst 17201:   nop     len=0
  Inst 17202:   nop     len=0
  Inst 17203:   nop     len=0
  Inst 17204:   nop     len=0
  Inst 17205:   nop     len=0
  Inst 17206:   nop     len=0
  Inst 17207:   nop     len=0
  Inst 17208:   nop     len=0
  Inst 17209:   nop     len=0
  Inst 17210:   nop     len=0
  Inst 17211:   nop     len=0
  Inst 17212:   nop     len=0
  Inst 17213:   nop     len=0
  Inst 17214:   nop     len=0
  Inst 17215:   nop     len=0
  Inst 17216:   nop     len=0
  Inst 17217:   nop     len=0
  Inst 17218:   nop     len=0
  Inst 17219:   nop     len=0
  Inst 17220:   nop     len=0
  Inst 17221:   nop     len=0
  Inst 17222:   nop     len=0
  Inst 17223:   nop     len=0
  Inst 17224:   nop     len=0
  Inst 17225:   nop     len=0
  Inst 17226:   nop     len=0
  Inst 17227:   nop     len=0
  Inst 17228:   nop     len=0
  Inst 17229:   nop     len=0
  Inst 17230:   nop     len=0
  Inst 17231:   nop     len=0
  Inst 17232:   nop     len=0
  Inst 17233:   nop     len=0
  Inst 17234:   nop     len=0
  Inst 17235:   jmp     label592
Block 590:
  (original IR block: block297)
  (successor: Block 591)
  (instruction range: 17236 .. 17265)
  Inst 17236:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17237:   movq    152(%rsi), %r13
  Inst 17238:   movq    %r14, %r15
  Inst 17239:   addq    $-1, %r15
  Inst 17240:   movq    %r14, %rdx
  Inst 17241:   shlq    $3, %rdx
  Inst 17242:   movq    %r13, %r12
  Inst 17243:   addq    %rdx, %r12
  Inst 17244:   movq    %r13, %rdi
  Inst 17245:   addq    $-24, %rdi
  Inst 17246:   movq    %r13, %rsi
  Inst 17247:   load_ext_name %Memmove+0, %rax
  Inst 17248:   movq    %rbx, rsp(944 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S117, S118, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17249:   call    *%rax
  Inst 17250:   movq    rsp(944 + virtual offset), %rbx
  Inst 17251:   load_ext_name u1:1+0, %rsi
  Inst 17252:   movl    $1, %edi
  Inst 17253:   movq    %rdi, -8(%r13,%r14,8)
  Inst 17254:   movl    $1, %edi
  Inst 17255:   movq    %rdi, -16(%r13,%r14,8)
  Inst 17256:   movq    %rsi, -24(%r13,%r14,8)
  Inst 17257:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17258:   movq    %r12, 152(%rsi)
  Inst 17259:   movq    %rbx, %rdi
  Inst 17260:   movq    %r15, %rsi
  Inst 17261:   load_ext_name u0:3+0, %rax
  Inst 17262:   movq    %rdi, rsp(928 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17263:   call    *%rax
  Inst 17264:   jmp     label591
Block 591:
  (successor: Block 592)
  (instruction range: 17265 .. 17340)
  Inst 17265:   movq    %rax, rsp(928 + virtual offset)
  Inst 17266:   nop     len=0
  Inst 17267:   nop     len=0
  Inst 17268:   nop     len=0
  Inst 17269:   nop     len=0
  Inst 17270:   nop     len=0
  Inst 17271:   nop     len=0
  Inst 17272:   nop     len=0
  Inst 17273:   nop     len=0
  Inst 17274:   nop     len=0
  Inst 17275:   nop     len=0
  Inst 17276:   nop     len=0
  Inst 17277:   nop     len=0
  Inst 17278:   nop     len=0
  Inst 17279:   nop     len=0
  Inst 17280:   nop     len=0
  Inst 17281:   nop     len=0
  Inst 17282:   nop     len=0
  Inst 17283:   nop     len=0
  Inst 17284:   nop     len=0
  Inst 17285:   nop     len=0
  Inst 17286:   nop     len=0
  Inst 17287:   nop     len=0
  Inst 17288:   nop     len=0
  Inst 17289:   nop     len=0
  Inst 17290:   nop     len=0
  Inst 17291:   nop     len=0
  Inst 17292:   nop     len=0
  Inst 17293:   nop     len=0
  Inst 17294:   nop     len=0
  Inst 17295:   nop     len=0
  Inst 17296:   nop     len=0
  Inst 17297:   nop     len=0
  Inst 17298:   nop     len=0
  Inst 17299:   nop     len=0
  Inst 17300:   nop     len=0
  Inst 17301:   nop     len=0
  Inst 17302:   nop     len=0
  Inst 17303:   nop     len=0
  Inst 17304:   nop     len=0
  Inst 17305:   nop     len=0
  Inst 17306:   nop     len=0
  Inst 17307:   nop     len=0
  Inst 17308:   nop     len=0
  Inst 17309:   nop     len=0
  Inst 17310:   nop     len=0
  Inst 17311:   nop     len=0
  Inst 17312:   nop     len=0
  Inst 17313:   nop     len=0
  Inst 17314:   nop     len=0
  Inst 17315:   nop     len=0
  Inst 17316:   nop     len=0
  Inst 17317:   nop     len=0
  Inst 17318:   nop     len=0
  Inst 17319:   nop     len=0
  Inst 17320:   nop     len=0
  Inst 17321:   nop     len=0
  Inst 17322:   nop     len=0
  Inst 17323:   nop     len=0
  Inst 17324:   nop     len=0
  Inst 17325:   nop     len=0
  Inst 17326:   nop     len=0
  Inst 17327:   nop     len=0
  Inst 17328:   nop     len=0
  Inst 17329:   nop     len=0
  Inst 17330:   nop     len=0
  Inst 17331:   nop     len=0
  Inst 17332:   nop     len=0
  Inst 17333:   nop     len=0
  Inst 17334:   nop     len=0
  Inst 17335:   nop     len=0
  Inst 17336:   nop     len=0
  Inst 17337:   nop     len=0
  Inst 17338:   nop     len=0
  Inst 17339:   jmp     label592
Block 592:
  (original IR block: block296)
  (successor: Block 593)
  (successor: Block 594)
  (instruction range: 17340 .. 17351)
  Inst 17340:   movq    rsp(2064 + virtual offset), %rsi
  Inst 17341:   movq    8(%rsi), %rdi
  Inst 17342:   movq    rsp(2048 + virtual offset), %rsi
  Inst 17343:   load_ext_name u0:2+0, %rax
  Inst 17344:   movq    %rsi, rsp(944 + virtual offset)
  Inst 17345:   movq    %rdi, rsp(960 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17346:   call    *%rax
  Inst 17347:   movq    %rax, %rbx
  Inst 17348:   movq    %rdx, %r14
  Inst 17349:   testq   %r14, %r14
  Inst 17350:   jz      label593; j label594
Block 593:
  (successor: Block 596)
  (instruction range: 17351 .. 17427)
  Inst 17351:   movq    %rbx, rsp(1432 + virtual offset)
  Inst 17352:   nop     len=0
  Inst 17353:   nop     len=0
  Inst 17354:   nop     len=0
  Inst 17355:   nop     len=0
  Inst 17356:   nop     len=0
  Inst 17357:   nop     len=0
  Inst 17358:   nop     len=0
  Inst 17359:   nop     len=0
  Inst 17360:   nop     len=0
  Inst 17361:   nop     len=0
  Inst 17362:   nop     len=0
  Inst 17363:   nop     len=0
  Inst 17364:   nop     len=0
  Inst 17365:   nop     len=0
  Inst 17366:   nop     len=0
  Inst 17367:   nop     len=0
  Inst 17368:   nop     len=0
  Inst 17369:   nop     len=0
  Inst 17370:   nop     len=0
  Inst 17371:   nop     len=0
  Inst 17372:   nop     len=0
  Inst 17373:   nop     len=0
  Inst 17374:   nop     len=0
  Inst 17375:   nop     len=0
  Inst 17376:   nop     len=0
  Inst 17377:   nop     len=0
  Inst 17378:   nop     len=0
  Inst 17379:   nop     len=0
  Inst 17380:   nop     len=0
  Inst 17381:   nop     len=0
  Inst 17382:   nop     len=0
  Inst 17383:   nop     len=0
  Inst 17384:   nop     len=0
  Inst 17385:   nop     len=0
  Inst 17386:   nop     len=0
  Inst 17387:   nop     len=0
  Inst 17388:   nop     len=0
  Inst 17389:   nop     len=0
  Inst 17390:   nop     len=0
  Inst 17391:   nop     len=0
  Inst 17392:   nop     len=0
  Inst 17393:   nop     len=0
  Inst 17394:   nop     len=0
  Inst 17395:   nop     len=0
  Inst 17396:   nop     len=0
  Inst 17397:   nop     len=0
  Inst 17398:   nop     len=0
  Inst 17399:   nop     len=0
  Inst 17400:   nop     len=0
  Inst 17401:   nop     len=0
  Inst 17402:   nop     len=0
  Inst 17403:   nop     len=0
  Inst 17404:   nop     len=0
  Inst 17405:   nop     len=0
  Inst 17406:   nop     len=0
  Inst 17407:   nop     len=0
  Inst 17408:   nop     len=0
  Inst 17409:   nop     len=0
  Inst 17410:   nop     len=0
  Inst 17411:   nop     len=0
  Inst 17412:   nop     len=0
  Inst 17413:   nop     len=0
  Inst 17414:   nop     len=0
  Inst 17415:   nop     len=0
  Inst 17416:   nop     len=0
  Inst 17417:   nop     len=0
  Inst 17418:   nop     len=0
  Inst 17419:   nop     len=0
  Inst 17420:   nop     len=0
  Inst 17421:   nop     len=0
  Inst 17422:   nop     len=0
  Inst 17423:   nop     len=0
  Inst 17424:   nop     len=0
  Inst 17425:   nop     len=0
  Inst 17426:   jmp     label596
Block 594:
  (original IR block: block299)
  (successor: Block 595)
  (instruction range: 17427 .. 17456)
  Inst 17427:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17428:   movq    152(%rsi), %r13
  Inst 17429:   movq    %r14, %r15
  Inst 17430:   addq    $-1, %r15
  Inst 17431:   movq    %r14, %rdx
  Inst 17432:   shlq    $3, %rdx
  Inst 17433:   movq    %r13, %r12
  Inst 17434:   addq    %rdx, %r12
  Inst 17435:   movq    %r13, %rdi
  Inst 17436:   addq    $-24, %rdi
  Inst 17437:   movq    %r13, %rsi
  Inst 17438:   load_ext_name %Memmove+0, %rax
  Inst 17439:   movq    %rbx, rsp(944 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17440:   call    *%rax
  Inst 17441:   movq    rsp(944 + virtual offset), %rbx
  Inst 17442:   load_ext_name u1:1+0, %rsi
  Inst 17443:   movl    $1, %edi
  Inst 17444:   movq    %rdi, -8(%r13,%r14,8)
  Inst 17445:   movl    $1, %edi
  Inst 17446:   movq    %rdi, -16(%r13,%r14,8)
  Inst 17447:   movq    %rsi, -24(%r13,%r14,8)
  Inst 17448:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17449:   movq    %r12, 152(%rsi)
  Inst 17450:   movq    %rbx, %rdi
  Inst 17451:   movq    %r15, %rsi
  Inst 17452:   load_ext_name u0:3+0, %rax
  Inst 17453:   movq    %rdi, rsp(944 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17454:   call    *%rax
  Inst 17455:   jmp     label595
Block 595:
  (successor: Block 596)
  (instruction range: 17456 .. 17532)
  Inst 17456:   movq    %rax, rsp(1432 + virtual offset)
  Inst 17457:   nop     len=0
  Inst 17458:   nop     len=0
  Inst 17459:   nop     len=0
  Inst 17460:   nop     len=0
  Inst 17461:   nop     len=0
  Inst 17462:   nop     len=0
  Inst 17463:   nop     len=0
  Inst 17464:   nop     len=0
  Inst 17465:   nop     len=0
  Inst 17466:   nop     len=0
  Inst 17467:   nop     len=0
  Inst 17468:   nop     len=0
  Inst 17469:   nop     len=0
  Inst 17470:   nop     len=0
  Inst 17471:   nop     len=0
  Inst 17472:   nop     len=0
  Inst 17473:   nop     len=0
  Inst 17474:   nop     len=0
  Inst 17475:   nop     len=0
  Inst 17476:   nop     len=0
  Inst 17477:   nop     len=0
  Inst 17478:   nop     len=0
  Inst 17479:   nop     len=0
  Inst 17480:   nop     len=0
  Inst 17481:   nop     len=0
  Inst 17482:   nop     len=0
  Inst 17483:   nop     len=0
  Inst 17484:   nop     len=0
  Inst 17485:   nop     len=0
  Inst 17486:   nop     len=0
  Inst 17487:   nop     len=0
  Inst 17488:   nop     len=0
  Inst 17489:   nop     len=0
  Inst 17490:   nop     len=0
  Inst 17491:   nop     len=0
  Inst 17492:   nop     len=0
  Inst 17493:   nop     len=0
  Inst 17494:   nop     len=0
  Inst 17495:   nop     len=0
  Inst 17496:   nop     len=0
  Inst 17497:   nop     len=0
  Inst 17498:   nop     len=0
  Inst 17499:   nop     len=0
  Inst 17500:   nop     len=0
  Inst 17501:   nop     len=0
  Inst 17502:   nop     len=0
  Inst 17503:   nop     len=0
  Inst 17504:   nop     len=0
  Inst 17505:   nop     len=0
  Inst 17506:   nop     len=0
  Inst 17507:   nop     len=0
  Inst 17508:   nop     len=0
  Inst 17509:   nop     len=0
  Inst 17510:   nop     len=0
  Inst 17511:   nop     len=0
  Inst 17512:   nop     len=0
  Inst 17513:   nop     len=0
  Inst 17514:   nop     len=0
  Inst 17515:   nop     len=0
  Inst 17516:   nop     len=0
  Inst 17517:   nop     len=0
  Inst 17518:   nop     len=0
  Inst 17519:   nop     len=0
  Inst 17520:   nop     len=0
  Inst 17521:   nop     len=0
  Inst 17522:   nop     len=0
  Inst 17523:   nop     len=0
  Inst 17524:   nop     len=0
  Inst 17525:   nop     len=0
  Inst 17526:   nop     len=0
  Inst 17527:   nop     len=0
  Inst 17528:   nop     len=0
  Inst 17529:   nop     len=0
  Inst 17530:   nop     len=0
  Inst 17531:   jmp     label596
Block 596:
  (original IR block: block298)
  (successor: Block 597)
  (successor: Block 598)
  (instruction range: 17532 .. 17543)
  Inst 17532:   movq    rsp(2064 + virtual offset), %rsi
  Inst 17533:   movq    8(%rsi), %rdi
  Inst 17534:   movq    rsp(2048 + virtual offset), %rsi
  Inst 17535:   load_ext_name u0:2+0, %rax
  Inst 17536:   movq    %rsi, rsp(944 + virtual offset)
  Inst 17537:   movq    %rdi, rsp(960 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17538:   call    *%rax
  Inst 17539:   movq    %rax, %r15
  Inst 17540:   movq    %rdx, %r14
  Inst 17541:   testq   %r14, %r14
  Inst 17542:   jz      label597; j label598
Block 597:
  (successor: Block 600)
  (instruction range: 17543 .. 17619)
  Inst 17543:   movq    %r15, rsp(944 + virtual offset)
  Inst 17544:   nop     len=0
  Inst 17545:   nop     len=0
  Inst 17546:   nop     len=0
  Inst 17547:   nop     len=0
  Inst 17548:   nop     len=0
  Inst 17549:   nop     len=0
  Inst 17550:   nop     len=0
  Inst 17551:   nop     len=0
  Inst 17552:   nop     len=0
  Inst 17553:   nop     len=0
  Inst 17554:   nop     len=0
  Inst 17555:   nop     len=0
  Inst 17556:   nop     len=0
  Inst 17557:   nop     len=0
  Inst 17558:   nop     len=0
  Inst 17559:   nop     len=0
  Inst 17560:   nop     len=0
  Inst 17561:   nop     len=0
  Inst 17562:   nop     len=0
  Inst 17563:   nop     len=0
  Inst 17564:   nop     len=0
  Inst 17565:   nop     len=0
  Inst 17566:   nop     len=0
  Inst 17567:   nop     len=0
  Inst 17568:   nop     len=0
  Inst 17569:   nop     len=0
  Inst 17570:   nop     len=0
  Inst 17571:   nop     len=0
  Inst 17572:   nop     len=0
  Inst 17573:   nop     len=0
  Inst 17574:   nop     len=0
  Inst 17575:   nop     len=0
  Inst 17576:   nop     len=0
  Inst 17577:   nop     len=0
  Inst 17578:   nop     len=0
  Inst 17579:   nop     len=0
  Inst 17580:   nop     len=0
  Inst 17581:   nop     len=0
  Inst 17582:   nop     len=0
  Inst 17583:   nop     len=0
  Inst 17584:   nop     len=0
  Inst 17585:   nop     len=0
  Inst 17586:   nop     len=0
  Inst 17587:   nop     len=0
  Inst 17588:   nop     len=0
  Inst 17589:   nop     len=0
  Inst 17590:   nop     len=0
  Inst 17591:   nop     len=0
  Inst 17592:   nop     len=0
  Inst 17593:   nop     len=0
  Inst 17594:   nop     len=0
  Inst 17595:   nop     len=0
  Inst 17596:   nop     len=0
  Inst 17597:   nop     len=0
  Inst 17598:   nop     len=0
  Inst 17599:   nop     len=0
  Inst 17600:   nop     len=0
  Inst 17601:   nop     len=0
  Inst 17602:   nop     len=0
  Inst 17603:   nop     len=0
  Inst 17604:   nop     len=0
  Inst 17605:   nop     len=0
  Inst 17606:   nop     len=0
  Inst 17607:   nop     len=0
  Inst 17608:   nop     len=0
  Inst 17609:   nop     len=0
  Inst 17610:   nop     len=0
  Inst 17611:   nop     len=0
  Inst 17612:   nop     len=0
  Inst 17613:   nop     len=0
  Inst 17614:   nop     len=0
  Inst 17615:   nop     len=0
  Inst 17616:   nop     len=0
  Inst 17617:   nop     len=0
  Inst 17618:   jmp     label600
Block 598:
  (original IR block: block301)
  (successor: Block 599)
  (instruction range: 17619 .. 17648)
  Inst 17619:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17620:   movq    152(%rsi), %r13
  Inst 17621:   movq    %r14, %rbx
  Inst 17622:   addq    $-1, %rbx
  Inst 17623:   movq    %r14, %rdx
  Inst 17624:   shlq    $3, %rdx
  Inst 17625:   movq    %r13, %r12
  Inst 17626:   addq    %rdx, %r12
  Inst 17627:   movq    %r13, %rdi
  Inst 17628:   addq    $-24, %rdi
  Inst 17629:   movq    %r13, %rsi
  Inst 17630:   load_ext_name %Memmove+0, %rax
  Inst 17631:   movq    %r15, rsp(960 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S119, S120, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17632:   call    *%rax
  Inst 17633:   movq    rsp(960 + virtual offset), %r15
  Inst 17634:   load_ext_name u1:1+0, %rsi
  Inst 17635:   movl    $1, %edi
  Inst 17636:   movq    %rdi, -8(%r13,%r14,8)
  Inst 17637:   movl    $1, %edi
  Inst 17638:   movq    %rdi, -16(%r13,%r14,8)
  Inst 17639:   movq    %rsi, -24(%r13,%r14,8)
  Inst 17640:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17641:   movq    %r12, 152(%rsi)
  Inst 17642:   movq    %r15, %rdi
  Inst 17643:   movq    %rbx, %rsi
  Inst 17644:   load_ext_name u0:3+0, %rax
  Inst 17645:   movq    %rdi, rsp(944 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17646:   call    *%rax
  Inst 17647:   jmp     label599
Block 599:
  (successor: Block 600)
  (instruction range: 17648 .. 17724)
  Inst 17648:   movq    %rax, rsp(944 + virtual offset)
  Inst 17649:   nop     len=0
  Inst 17650:   nop     len=0
  Inst 17651:   nop     len=0
  Inst 17652:   nop     len=0
  Inst 17653:   nop     len=0
  Inst 17654:   nop     len=0
  Inst 17655:   nop     len=0
  Inst 17656:   nop     len=0
  Inst 17657:   nop     len=0
  Inst 17658:   nop     len=0
  Inst 17659:   nop     len=0
  Inst 17660:   nop     len=0
  Inst 17661:   nop     len=0
  Inst 17662:   nop     len=0
  Inst 17663:   nop     len=0
  Inst 17664:   nop     len=0
  Inst 17665:   nop     len=0
  Inst 17666:   nop     len=0
  Inst 17667:   nop     len=0
  Inst 17668:   nop     len=0
  Inst 17669:   nop     len=0
  Inst 17670:   nop     len=0
  Inst 17671:   nop     len=0
  Inst 17672:   nop     len=0
  Inst 17673:   nop     len=0
  Inst 17674:   nop     len=0
  Inst 17675:   nop     len=0
  Inst 17676:   nop     len=0
  Inst 17677:   nop     len=0
  Inst 17678:   nop     len=0
  Inst 17679:   nop     len=0
  Inst 17680:   nop     len=0
  Inst 17681:   nop     len=0
  Inst 17682:   nop     len=0
  Inst 17683:   nop     len=0
  Inst 17684:   nop     len=0
  Inst 17685:   nop     len=0
  Inst 17686:   nop     len=0
  Inst 17687:   nop     len=0
  Inst 17688:   nop     len=0
  Inst 17689:   nop     len=0
  Inst 17690:   nop     len=0
  Inst 17691:   nop     len=0
  Inst 17692:   nop     len=0
  Inst 17693:   nop     len=0
  Inst 17694:   nop     len=0
  Inst 17695:   nop     len=0
  Inst 17696:   nop     len=0
  Inst 17697:   nop     len=0
  Inst 17698:   nop     len=0
  Inst 17699:   nop     len=0
  Inst 17700:   nop     len=0
  Inst 17701:   nop     len=0
  Inst 17702:   nop     len=0
  Inst 17703:   nop     len=0
  Inst 17704:   nop     len=0
  Inst 17705:   nop     len=0
  Inst 17706:   nop     len=0
  Inst 17707:   nop     len=0
  Inst 17708:   nop     len=0
  Inst 17709:   nop     len=0
  Inst 17710:   nop     len=0
  Inst 17711:   nop     len=0
  Inst 17712:   nop     len=0
  Inst 17713:   nop     len=0
  Inst 17714:   nop     len=0
  Inst 17715:   nop     len=0
  Inst 17716:   nop     len=0
  Inst 17717:   nop     len=0
  Inst 17718:   nop     len=0
  Inst 17719:   nop     len=0
  Inst 17720:   nop     len=0
  Inst 17721:   nop     len=0
  Inst 17722:   nop     len=0
  Inst 17723:   jmp     label600
Block 600:
  (original IR block: block300)
  (successor: Block 601)
  (successor: Block 602)
  (instruction range: 17724 .. 17735)
  Inst 17724:   movq    rsp(2064 + virtual offset), %rsi
  Inst 17725:   movq    8(%rsi), %rdi
  Inst 17726:   movq    rsp(2048 + virtual offset), %rsi
  Inst 17727:   load_ext_name u0:2+0, %rax
  Inst 17728:   movq    %rsi, rsp(960 + virtual offset)
  Inst 17729:   movq    %rdi, rsp(976 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17730:   call    *%rax
  Inst 17731:   movq    %rax, %rbx
  Inst 17732:   movq    %rdx, %r14
  Inst 17733:   testq   %r14, %r14
  Inst 17734:   jz      label601; j label602
Block 601:
  (successor: Block 604)
  (instruction range: 17735 .. 17812)
  Inst 17735:   movq    %rbx, rsp(1448 + virtual offset)
  Inst 17736:   nop     len=0
  Inst 17737:   nop     len=0
  Inst 17738:   nop     len=0
  Inst 17739:   nop     len=0
  Inst 17740:   nop     len=0
  Inst 17741:   nop     len=0
  Inst 17742:   nop     len=0
  Inst 17743:   nop     len=0
  Inst 17744:   nop     len=0
  Inst 17745:   nop     len=0
  Inst 17746:   nop     len=0
  Inst 17747:   nop     len=0
  Inst 17748:   nop     len=0
  Inst 17749:   nop     len=0
  Inst 17750:   nop     len=0
  Inst 17751:   nop     len=0
  Inst 17752:   nop     len=0
  Inst 17753:   nop     len=0
  Inst 17754:   nop     len=0
  Inst 17755:   nop     len=0
  Inst 17756:   nop     len=0
  Inst 17757:   nop     len=0
  Inst 17758:   nop     len=0
  Inst 17759:   nop     len=0
  Inst 17760:   nop     len=0
  Inst 17761:   nop     len=0
  Inst 17762:   nop     len=0
  Inst 17763:   nop     len=0
  Inst 17764:   nop     len=0
  Inst 17765:   nop     len=0
  Inst 17766:   nop     len=0
  Inst 17767:   nop     len=0
  Inst 17768:   nop     len=0
  Inst 17769:   nop     len=0
  Inst 17770:   nop     len=0
  Inst 17771:   nop     len=0
  Inst 17772:   nop     len=0
  Inst 17773:   nop     len=0
  Inst 17774:   nop     len=0
  Inst 17775:   nop     len=0
  Inst 17776:   nop     len=0
  Inst 17777:   nop     len=0
  Inst 17778:   nop     len=0
  Inst 17779:   nop     len=0
  Inst 17780:   nop     len=0
  Inst 17781:   nop     len=0
  Inst 17782:   nop     len=0
  Inst 17783:   nop     len=0
  Inst 17784:   nop     len=0
  Inst 17785:   nop     len=0
  Inst 17786:   nop     len=0
  Inst 17787:   nop     len=0
  Inst 17788:   nop     len=0
  Inst 17789:   nop     len=0
  Inst 17790:   nop     len=0
  Inst 17791:   nop     len=0
  Inst 17792:   nop     len=0
  Inst 17793:   nop     len=0
  Inst 17794:   nop     len=0
  Inst 17795:   nop     len=0
  Inst 17796:   nop     len=0
  Inst 17797:   nop     len=0
  Inst 17798:   nop     len=0
  Inst 17799:   nop     len=0
  Inst 17800:   nop     len=0
  Inst 17801:   nop     len=0
  Inst 17802:   nop     len=0
  Inst 17803:   nop     len=0
  Inst 17804:   nop     len=0
  Inst 17805:   nop     len=0
  Inst 17806:   nop     len=0
  Inst 17807:   nop     len=0
  Inst 17808:   nop     len=0
  Inst 17809:   nop     len=0
  Inst 17810:   nop     len=0
  Inst 17811:   jmp     label604
Block 602:
  (original IR block: block303)
  (successor: Block 603)
  (instruction range: 17812 .. 17841)
  Inst 17812:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17813:   movq    152(%rsi), %r13
  Inst 17814:   movq    %r14, %r15
  Inst 17815:   addq    $-1, %r15
  Inst 17816:   movq    %r14, %rdx
  Inst 17817:   shlq    $3, %rdx
  Inst 17818:   movq    %r13, %r12
  Inst 17819:   addq    %rdx, %r12
  Inst 17820:   movq    %r13, %rdi
  Inst 17821:   addq    $-24, %rdi
  Inst 17822:   movq    %r13, %rsi
  Inst 17823:   load_ext_name %Memmove+0, %rax
  Inst 17824:   movq    %rbx, rsp(960 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17825:   call    *%rax
  Inst 17826:   movq    rsp(960 + virtual offset), %rbx
  Inst 17827:   load_ext_name u1:1+0, %rsi
  Inst 17828:   movl    $1, %edi
  Inst 17829:   movq    %rdi, -8(%r13,%r14,8)
  Inst 17830:   movl    $1, %edi
  Inst 17831:   movq    %rdi, -16(%r13,%r14,8)
  Inst 17832:   movq    %rsi, -24(%r13,%r14,8)
  Inst 17833:   movq    rsp(2072 + virtual offset), %rsi
  Inst 17834:   movq    %r12, 152(%rsi)
  Inst 17835:   movq    %rbx, %rdi
  Inst 17836:   movq    %r15, %rsi
  Inst 17837:   load_ext_name u0:3+0, %rax
  Inst 17838:   movq    %rdi, rsp(960 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17839:   call    *%rax
  Inst 17840:   jmp     label603
Block 603:
  (successor: Block 604)
  (instruction range: 17841 .. 17918)
  Inst 17841:   movq    %rax, rsp(1448 + virtual offset)
  Inst 17842:   nop     len=0
  Inst 17843:   nop     len=0
  Inst 17844:   nop     len=0
  Inst 17845:   nop     len=0
  Inst 17846:   nop     len=0
  Inst 17847:   nop     len=0
  Inst 17848:   nop     len=0
  Inst 17849:   nop     len=0
  Inst 17850:   nop     len=0
  Inst 17851:   nop     len=0
  Inst 17852:   nop     len=0
  Inst 17853:   nop     len=0
  Inst 17854:   nop     len=0
  Inst 17855:   nop     len=0
  Inst 17856:   nop     len=0
  Inst 17857:   nop     len=0
  Inst 17858:   nop     len=0
  Inst 17859:   nop     len=0
  Inst 17860:   nop     len=0
  Inst 17861:   nop     len=0
  Inst 17862:   nop     len=0
  Inst 17863:   nop     len=0
  Inst 17864:   nop     len=0
  Inst 17865:   nop     len=0
  Inst 17866:   nop     len=0
  Inst 17867:   nop     len=0
  Inst 17868:   nop     len=0
  Inst 17869:   nop     len=0
  Inst 17870:   nop     len=0
  Inst 17871:   nop     len=0
  Inst 17872:   nop     len=0
  Inst 17873:   nop     len=0
  Inst 17874:   nop     len=0
  Inst 17875:   nop     len=0
  Inst 17876:   nop     len=0
  Inst 17877:   nop     len=0
  Inst 17878:   nop     len=0
  Inst 17879:   nop     len=0
  Inst 17880:   nop     len=0
  Inst 17881:   nop     len=0
  Inst 17882:   nop     len=0
  Inst 17883:   nop     len=0
  Inst 17884:   nop     len=0
  Inst 17885:   nop     len=0
  Inst 17886:   nop     len=0
  Inst 17887:   nop     len=0
  Inst 17888:   nop     len=0
  Inst 17889:   nop     len=0
  Inst 17890:   nop     len=0
  Inst 17891:   nop     len=0
  Inst 17892:   nop     len=0
  Inst 17893:   nop     len=0
  Inst 17894:   nop     len=0
  Inst 17895:   nop     len=0
  Inst 17896:   nop     len=0
  Inst 17897:   nop     len=0
  Inst 17898:   nop     len=0
  Inst 17899:   nop     len=0
  Inst 17900:   nop     len=0
  Inst 17901:   nop     len=0
  Inst 17902:   nop     len=0
  Inst 17903:   nop     len=0
  Inst 17904:   nop     len=0
  Inst 17905:   nop     len=0
  Inst 17906:   nop     len=0
  Inst 17907:   nop     len=0
  Inst 17908:   nop     len=0
  Inst 17909:   nop     len=0
  Inst 17910:   nop     len=0
  Inst 17911:   nop     len=0
  Inst 17912:   nop     len=0
  Inst 17913:   nop     len=0
  Inst 17914:   nop     len=0
  Inst 17915:   nop     len=0
  Inst 17916:   nop     len=0
  Inst 17917:   jmp     label604
Block 604:
  (original IR block: block302)
  (successor: Block 605)
  (successor: Block 606)
  (instruction range: 17918 .. 17929)
  Inst 17918:   movq    rsp(2064 + virtual offset), %rsi
  Inst 17919:   movq    8(%rsi), %rdi
  Inst 17920:   movq    rsp(2048 + virtual offset), %rsi
  Inst 17921:   load_ext_name u0:2+0, %rax
  Inst 17922:   movq    %rsi, rsp(960 + virtual offset)
  Inst 17923:   movq    %rdi, rsp(976 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 17924:   call    *%rax
  Inst 17925:   movq    %rax, %rbx
  Inst 17926:   movq    %rdx, %r14
  Inst 17927:   testq   %r14, %r14
  Inst 17928:   jz      label605; j label606
Block 605:
  (successor: Block 608)
  (instruction range: 17929 .. 18006)
  Inst 17929:   movq    %rbx, rsp(960 + virtual offset)
  Inst 17930:   nop     len=0
  Inst 17931:   nop     len=0
  Inst 17932:   nop     len=0
  Inst 17933:   nop     len=0
  Inst 17934:   nop     len=0
  Inst 17935:   nop     len=0
  Inst 17936:   nop     len=0
  Inst 17937:   nop     len=0
  Inst 17938:   nop     len=0
  Inst 17939:   nop     len=0
  Inst 17940:   nop     len=0
  Inst 17941:   nop     len=0
  Inst 17942:   nop     len=0
  Inst 17943:   nop     len=0
  Inst 17944:   nop     len=0
  Inst 17945:   nop     len=0
  Inst 17946:   nop     len=0
  Inst 17947:   nop     len=0
  Inst 17948:   nop     len=0
  Inst 17949:   nop     len=0
  Inst 17950:   nop     len=0
  Inst 17951:   nop     len=0
  Inst 17952:   nop     len=0
  Inst 17953:   nop     len=0
  Inst 17954:   nop     len=0
  Inst 17955:   nop     len=0
  Inst 17956:   nop     len=0
  Inst 17957:   nop     len=0
  Inst 17958:   nop     len=0
  Inst 17959:   nop     len=0
  Inst 17960:   nop     len=0
  Inst 17961:   nop     len=0
  Inst 17962:   nop     len=0
  Inst 17963:   nop     len=0
  Inst 17964:   nop     len=0
  Inst 17965:   nop     len=0
  Inst 17966:   nop     len=0
  Inst 17967:   nop     len=0
  Inst 17968:   nop     len=0
  Inst 17969:   nop     len=0
  Inst 17970:   nop     len=0
  Inst 17971:   nop     len=0
  Inst 17972:   nop     len=0
  Inst 17973:   nop     len=0
  Inst 17974:   nop     len=0
  Inst 17975:   nop     len=0
  Inst 17976:   nop     len=0
  Inst 17977:   nop     len=0
  Inst 17978:   nop     len=0
  Inst 17979:   nop     len=0
  Inst 17980:   nop     len=0
  Inst 17981:   nop     len=0
  Inst 17982:   nop     len=0
  Inst 17983:   nop     len=0
  Inst 17984:   nop     len=0
  Inst 17985:   nop     len=0
  Inst 17986:   nop     len=0
  Inst 17987:   nop     len=0
  Inst 17988:   nop     len=0
  Inst 17989:   nop     len=0
  Inst 17990:   nop     len=0
  Inst 17991:   nop     len=0
  Inst 17992:   nop     len=0
  Inst 17993:   nop     len=0
  Inst 17994:   nop     len=0
  Inst 17995:   nop     len=0
  Inst 17996:   nop     len=0
  Inst 17997:   nop     len=0
  Inst 17998:   nop     len=0
  Inst 17999:   nop     len=0
  Inst 18000:   nop     len=0
  Inst 18001:   nop     len=0
  Inst 18002:   nop     len=0
  Inst 18003:   nop     len=0
  Inst 18004:   nop     len=0
  Inst 18005:   jmp     label608
Block 606:
  (original IR block: block305)
  (successor: Block 607)
  (instruction range: 18006 .. 18035)
  Inst 18006:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18007:   movq    152(%rsi), %r13
  Inst 18008:   movq    %r14, %r15
  Inst 18009:   addq    $-1, %r15
  Inst 18010:   movq    %r14, %rdx
  Inst 18011:   shlq    $3, %rdx
  Inst 18012:   movq    %r13, %r12
  Inst 18013:   addq    %rdx, %r12
  Inst 18014:   movq    %r13, %rdi
  Inst 18015:   addq    $-24, %rdi
  Inst 18016:   movq    %r13, %rsi
  Inst 18017:   load_ext_name %Memmove+0, %rax
  Inst 18018:   movq    %rbx, rsp(976 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S121, S122, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18019:   call    *%rax
  Inst 18020:   movq    rsp(976 + virtual offset), %rbx
  Inst 18021:   load_ext_name u1:1+0, %rsi
  Inst 18022:   movl    $1, %edi
  Inst 18023:   movq    %rdi, -8(%r13,%r14,8)
  Inst 18024:   movl    $1, %edi
  Inst 18025:   movq    %rdi, -16(%r13,%r14,8)
  Inst 18026:   movq    %rsi, -24(%r13,%r14,8)
  Inst 18027:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18028:   movq    %r12, 152(%rsi)
  Inst 18029:   movq    %rbx, %rdi
  Inst 18030:   movq    %r15, %rsi
  Inst 18031:   load_ext_name u0:3+0, %rax
  Inst 18032:   movq    %rdi, rsp(960 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18033:   call    *%rax
  Inst 18034:   jmp     label607
Block 607:
  (successor: Block 608)
  (instruction range: 18035 .. 18112)
  Inst 18035:   movq    %rax, rsp(960 + virtual offset)
  Inst 18036:   nop     len=0
  Inst 18037:   nop     len=0
  Inst 18038:   nop     len=0
  Inst 18039:   nop     len=0
  Inst 18040:   nop     len=0
  Inst 18041:   nop     len=0
  Inst 18042:   nop     len=0
  Inst 18043:   nop     len=0
  Inst 18044:   nop     len=0
  Inst 18045:   nop     len=0
  Inst 18046:   nop     len=0
  Inst 18047:   nop     len=0
  Inst 18048:   nop     len=0
  Inst 18049:   nop     len=0
  Inst 18050:   nop     len=0
  Inst 18051:   nop     len=0
  Inst 18052:   nop     len=0
  Inst 18053:   nop     len=0
  Inst 18054:   nop     len=0
  Inst 18055:   nop     len=0
  Inst 18056:   nop     len=0
  Inst 18057:   nop     len=0
  Inst 18058:   nop     len=0
  Inst 18059:   nop     len=0
  Inst 18060:   nop     len=0
  Inst 18061:   nop     len=0
  Inst 18062:   nop     len=0
  Inst 18063:   nop     len=0
  Inst 18064:   nop     len=0
  Inst 18065:   nop     len=0
  Inst 18066:   nop     len=0
  Inst 18067:   nop     len=0
  Inst 18068:   nop     len=0
  Inst 18069:   nop     len=0
  Inst 18070:   nop     len=0
  Inst 18071:   nop     len=0
  Inst 18072:   nop     len=0
  Inst 18073:   nop     len=0
  Inst 18074:   nop     len=0
  Inst 18075:   nop     len=0
  Inst 18076:   nop     len=0
  Inst 18077:   nop     len=0
  Inst 18078:   nop     len=0
  Inst 18079:   nop     len=0
  Inst 18080:   nop     len=0
  Inst 18081:   nop     len=0
  Inst 18082:   nop     len=0
  Inst 18083:   nop     len=0
  Inst 18084:   nop     len=0
  Inst 18085:   nop     len=0
  Inst 18086:   nop     len=0
  Inst 18087:   nop     len=0
  Inst 18088:   nop     len=0
  Inst 18089:   nop     len=0
  Inst 18090:   nop     len=0
  Inst 18091:   nop     len=0
  Inst 18092:   nop     len=0
  Inst 18093:   nop     len=0
  Inst 18094:   nop     len=0
  Inst 18095:   nop     len=0
  Inst 18096:   nop     len=0
  Inst 18097:   nop     len=0
  Inst 18098:   nop     len=0
  Inst 18099:   nop     len=0
  Inst 18100:   nop     len=0
  Inst 18101:   nop     len=0
  Inst 18102:   nop     len=0
  Inst 18103:   nop     len=0
  Inst 18104:   nop     len=0
  Inst 18105:   nop     len=0
  Inst 18106:   nop     len=0
  Inst 18107:   nop     len=0
  Inst 18108:   nop     len=0
  Inst 18109:   nop     len=0
  Inst 18110:   nop     len=0
  Inst 18111:   jmp     label608
Block 608:
  (original IR block: block304)
  (successor: Block 609)
  (successor: Block 610)
  (instruction range: 18112 .. 18123)
  Inst 18112:   movq    rsp(2064 + virtual offset), %rsi
  Inst 18113:   movq    8(%rsi), %rdi
  Inst 18114:   movq    rsp(2048 + virtual offset), %rsi
  Inst 18115:   load_ext_name u0:2+0, %rax
  Inst 18116:   movq    %rsi, rsp(976 + virtual offset)
  Inst 18117:   movq    %rdi, rsp(992 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18118:   call    *%rax
  Inst 18119:   movq    %rax, %r15
  Inst 18120:   movq    %rdx, %r14
  Inst 18121:   testq   %r14, %r14
  Inst 18122:   jz      label609; j label610
Block 609:
  (successor: Block 612)
  (instruction range: 18123 .. 18201)
  Inst 18123:   movq    %r15, rsp(1464 + virtual offset)
  Inst 18124:   nop     len=0
  Inst 18125:   nop     len=0
  Inst 18126:   nop     len=0
  Inst 18127:   nop     len=0
  Inst 18128:   nop     len=0
  Inst 18129:   nop     len=0
  Inst 18130:   nop     len=0
  Inst 18131:   nop     len=0
  Inst 18132:   nop     len=0
  Inst 18133:   nop     len=0
  Inst 18134:   nop     len=0
  Inst 18135:   nop     len=0
  Inst 18136:   nop     len=0
  Inst 18137:   nop     len=0
  Inst 18138:   nop     len=0
  Inst 18139:   nop     len=0
  Inst 18140:   nop     len=0
  Inst 18141:   nop     len=0
  Inst 18142:   nop     len=0
  Inst 18143:   nop     len=0
  Inst 18144:   nop     len=0
  Inst 18145:   nop     len=0
  Inst 18146:   nop     len=0
  Inst 18147:   nop     len=0
  Inst 18148:   nop     len=0
  Inst 18149:   nop     len=0
  Inst 18150:   nop     len=0
  Inst 18151:   nop     len=0
  Inst 18152:   nop     len=0
  Inst 18153:   nop     len=0
  Inst 18154:   nop     len=0
  Inst 18155:   nop     len=0
  Inst 18156:   nop     len=0
  Inst 18157:   nop     len=0
  Inst 18158:   nop     len=0
  Inst 18159:   nop     len=0
  Inst 18160:   nop     len=0
  Inst 18161:   nop     len=0
  Inst 18162:   nop     len=0
  Inst 18163:   nop     len=0
  Inst 18164:   nop     len=0
  Inst 18165:   nop     len=0
  Inst 18166:   nop     len=0
  Inst 18167:   nop     len=0
  Inst 18168:   nop     len=0
  Inst 18169:   nop     len=0
  Inst 18170:   nop     len=0
  Inst 18171:   nop     len=0
  Inst 18172:   nop     len=0
  Inst 18173:   nop     len=0
  Inst 18174:   nop     len=0
  Inst 18175:   nop     len=0
  Inst 18176:   nop     len=0
  Inst 18177:   nop     len=0
  Inst 18178:   nop     len=0
  Inst 18179:   nop     len=0
  Inst 18180:   nop     len=0
  Inst 18181:   nop     len=0
  Inst 18182:   nop     len=0
  Inst 18183:   nop     len=0
  Inst 18184:   nop     len=0
  Inst 18185:   nop     len=0
  Inst 18186:   nop     len=0
  Inst 18187:   nop     len=0
  Inst 18188:   nop     len=0
  Inst 18189:   nop     len=0
  Inst 18190:   nop     len=0
  Inst 18191:   nop     len=0
  Inst 18192:   nop     len=0
  Inst 18193:   nop     len=0
  Inst 18194:   nop     len=0
  Inst 18195:   nop     len=0
  Inst 18196:   nop     len=0
  Inst 18197:   nop     len=0
  Inst 18198:   nop     len=0
  Inst 18199:   nop     len=0
  Inst 18200:   jmp     label612
Block 610:
  (original IR block: block307)
  (successor: Block 611)
  (instruction range: 18201 .. 18230)
  Inst 18201:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18202:   movq    152(%rsi), %r13
  Inst 18203:   movq    %r14, %rbx
  Inst 18204:   addq    $-1, %rbx
  Inst 18205:   movq    %r14, %rdx
  Inst 18206:   shlq    $3, %rdx
  Inst 18207:   movq    %r13, %r12
  Inst 18208:   addq    %rdx, %r12
  Inst 18209:   movq    %r13, %rdi
  Inst 18210:   addq    $-24, %rdi
  Inst 18211:   movq    %r13, %rsi
  Inst 18212:   load_ext_name %Memmove+0, %rax
  Inst 18213:   movq    %r15, rsp(976 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18214:   call    *%rax
  Inst 18215:   movq    rsp(976 + virtual offset), %r15
  Inst 18216:   load_ext_name u1:1+0, %rsi
  Inst 18217:   movl    $1, %edi
  Inst 18218:   movq    %rdi, -8(%r13,%r14,8)
  Inst 18219:   movl    $1, %edi
  Inst 18220:   movq    %rdi, -16(%r13,%r14,8)
  Inst 18221:   movq    %rsi, -24(%r13,%r14,8)
  Inst 18222:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18223:   movq    %r12, 152(%rsi)
  Inst 18224:   movq    %r15, %rdi
  Inst 18225:   movq    %rbx, %rsi
  Inst 18226:   load_ext_name u0:3+0, %rax
  Inst 18227:   movq    %rdi, rsp(976 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18228:   call    *%rax
  Inst 18229:   jmp     label611
Block 611:
  (successor: Block 612)
  (instruction range: 18230 .. 18308)
  Inst 18230:   movq    %rax, rsp(1464 + virtual offset)
  Inst 18231:   nop     len=0
  Inst 18232:   nop     len=0
  Inst 18233:   nop     len=0
  Inst 18234:   nop     len=0
  Inst 18235:   nop     len=0
  Inst 18236:   nop     len=0
  Inst 18237:   nop     len=0
  Inst 18238:   nop     len=0
  Inst 18239:   nop     len=0
  Inst 18240:   nop     len=0
  Inst 18241:   nop     len=0
  Inst 18242:   nop     len=0
  Inst 18243:   nop     len=0
  Inst 18244:   nop     len=0
  Inst 18245:   nop     len=0
  Inst 18246:   nop     len=0
  Inst 18247:   nop     len=0
  Inst 18248:   nop     len=0
  Inst 18249:   nop     len=0
  Inst 18250:   nop     len=0
  Inst 18251:   nop     len=0
  Inst 18252:   nop     len=0
  Inst 18253:   nop     len=0
  Inst 18254:   nop     len=0
  Inst 18255:   nop     len=0
  Inst 18256:   nop     len=0
  Inst 18257:   nop     len=0
  Inst 18258:   nop     len=0
  Inst 18259:   nop     len=0
  Inst 18260:   nop     len=0
  Inst 18261:   nop     len=0
  Inst 18262:   nop     len=0
  Inst 18263:   nop     len=0
  Inst 18264:   nop     len=0
  Inst 18265:   nop     len=0
  Inst 18266:   nop     len=0
  Inst 18267:   nop     len=0
  Inst 18268:   nop     len=0
  Inst 18269:   nop     len=0
  Inst 18270:   nop     len=0
  Inst 18271:   nop     len=0
  Inst 18272:   nop     len=0
  Inst 18273:   nop     len=0
  Inst 18274:   nop     len=0
  Inst 18275:   nop     len=0
  Inst 18276:   nop     len=0
  Inst 18277:   nop     len=0
  Inst 18278:   nop     len=0
  Inst 18279:   nop     len=0
  Inst 18280:   nop     len=0
  Inst 18281:   nop     len=0
  Inst 18282:   nop     len=0
  Inst 18283:   nop     len=0
  Inst 18284:   nop     len=0
  Inst 18285:   nop     len=0
  Inst 18286:   nop     len=0
  Inst 18287:   nop     len=0
  Inst 18288:   nop     len=0
  Inst 18289:   nop     len=0
  Inst 18290:   nop     len=0
  Inst 18291:   nop     len=0
  Inst 18292:   nop     len=0
  Inst 18293:   nop     len=0
  Inst 18294:   nop     len=0
  Inst 18295:   nop     len=0
  Inst 18296:   nop     len=0
  Inst 18297:   nop     len=0
  Inst 18298:   nop     len=0
  Inst 18299:   nop     len=0
  Inst 18300:   nop     len=0
  Inst 18301:   nop     len=0
  Inst 18302:   nop     len=0
  Inst 18303:   nop     len=0
  Inst 18304:   nop     len=0
  Inst 18305:   nop     len=0
  Inst 18306:   nop     len=0
  Inst 18307:   jmp     label612
Block 612:
  (original IR block: block306)
  (successor: Block 613)
  (successor: Block 614)
  (instruction range: 18308 .. 18319)
  Inst 18308:   movq    rsp(2064 + virtual offset), %rsi
  Inst 18309:   movq    8(%rsi), %rdi
  Inst 18310:   movq    rsp(2048 + virtual offset), %rsi
  Inst 18311:   load_ext_name u0:2+0, %rax
  Inst 18312:   movq    %rsi, rsp(976 + virtual offset)
  Inst 18313:   movq    %rdi, rsp(992 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18314:   call    *%rax
  Inst 18315:   movq    %rax, %rbx
  Inst 18316:   movq    %rdx, %r14
  Inst 18317:   testq   %r14, %r14
  Inst 18318:   jz      label613; j label614
Block 613:
  (successor: Block 616)
  (instruction range: 18319 .. 18397)
  Inst 18319:   movq    %rbx, rsp(976 + virtual offset)
  Inst 18320:   nop     len=0
  Inst 18321:   nop     len=0
  Inst 18322:   nop     len=0
  Inst 18323:   nop     len=0
  Inst 18324:   nop     len=0
  Inst 18325:   nop     len=0
  Inst 18326:   nop     len=0
  Inst 18327:   nop     len=0
  Inst 18328:   nop     len=0
  Inst 18329:   nop     len=0
  Inst 18330:   nop     len=0
  Inst 18331:   nop     len=0
  Inst 18332:   nop     len=0
  Inst 18333:   nop     len=0
  Inst 18334:   nop     len=0
  Inst 18335:   nop     len=0
  Inst 18336:   nop     len=0
  Inst 18337:   nop     len=0
  Inst 18338:   nop     len=0
  Inst 18339:   nop     len=0
  Inst 18340:   nop     len=0
  Inst 18341:   nop     len=0
  Inst 18342:   nop     len=0
  Inst 18343:   nop     len=0
  Inst 18344:   nop     len=0
  Inst 18345:   nop     len=0
  Inst 18346:   nop     len=0
  Inst 18347:   nop     len=0
  Inst 18348:   nop     len=0
  Inst 18349:   nop     len=0
  Inst 18350:   nop     len=0
  Inst 18351:   nop     len=0
  Inst 18352:   nop     len=0
  Inst 18353:   nop     len=0
  Inst 18354:   nop     len=0
  Inst 18355:   nop     len=0
  Inst 18356:   nop     len=0
  Inst 18357:   nop     len=0
  Inst 18358:   nop     len=0
  Inst 18359:   nop     len=0
  Inst 18360:   nop     len=0
  Inst 18361:   nop     len=0
  Inst 18362:   nop     len=0
  Inst 18363:   nop     len=0
  Inst 18364:   nop     len=0
  Inst 18365:   nop     len=0
  Inst 18366:   nop     len=0
  Inst 18367:   nop     len=0
  Inst 18368:   nop     len=0
  Inst 18369:   nop     len=0
  Inst 18370:   nop     len=0
  Inst 18371:   nop     len=0
  Inst 18372:   nop     len=0
  Inst 18373:   nop     len=0
  Inst 18374:   nop     len=0
  Inst 18375:   nop     len=0
  Inst 18376:   nop     len=0
  Inst 18377:   nop     len=0
  Inst 18378:   nop     len=0
  Inst 18379:   nop     len=0
  Inst 18380:   nop     len=0
  Inst 18381:   nop     len=0
  Inst 18382:   nop     len=0
  Inst 18383:   nop     len=0
  Inst 18384:   nop     len=0
  Inst 18385:   nop     len=0
  Inst 18386:   nop     len=0
  Inst 18387:   nop     len=0
  Inst 18388:   nop     len=0
  Inst 18389:   nop     len=0
  Inst 18390:   nop     len=0
  Inst 18391:   nop     len=0
  Inst 18392:   nop     len=0
  Inst 18393:   nop     len=0
  Inst 18394:   nop     len=0
  Inst 18395:   nop     len=0
  Inst 18396:   jmp     label616
Block 614:
  (original IR block: block309)
  (successor: Block 615)
  (instruction range: 18397 .. 18426)
  Inst 18397:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18398:   movq    152(%rsi), %r13
  Inst 18399:   movq    %r14, %r15
  Inst 18400:   addq    $-1, %r15
  Inst 18401:   movq    %r14, %rdx
  Inst 18402:   shlq    $3, %rdx
  Inst 18403:   movq    %r13, %r12
  Inst 18404:   addq    %rdx, %r12
  Inst 18405:   movq    %r13, %rdi
  Inst 18406:   addq    $-24, %rdi
  Inst 18407:   movq    %r13, %rsi
  Inst 18408:   load_ext_name %Memmove+0, %rax
  Inst 18409:   movq    %rbx, rsp(992 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S123, S124, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18410:   call    *%rax
  Inst 18411:   movq    rsp(992 + virtual offset), %rbx
  Inst 18412:   load_ext_name u1:1+0, %rsi
  Inst 18413:   movl    $1, %edi
  Inst 18414:   movq    %rdi, -8(%r13,%r14,8)
  Inst 18415:   movl    $1, %edi
  Inst 18416:   movq    %rdi, -16(%r13,%r14,8)
  Inst 18417:   movq    %rsi, -24(%r13,%r14,8)
  Inst 18418:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18419:   movq    %r12, 152(%rsi)
  Inst 18420:   movq    %rbx, %rdi
  Inst 18421:   movq    %r15, %rsi
  Inst 18422:   load_ext_name u0:3+0, %rax
  Inst 18423:   movq    %rdi, rsp(976 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18424:   call    *%rax
  Inst 18425:   jmp     label615
Block 615:
  (successor: Block 616)
  (instruction range: 18426 .. 18504)
  Inst 18426:   movq    %rax, rsp(976 + virtual offset)
  Inst 18427:   nop     len=0
  Inst 18428:   nop     len=0
  Inst 18429:   nop     len=0
  Inst 18430:   nop     len=0
  Inst 18431:   nop     len=0
  Inst 18432:   nop     len=0
  Inst 18433:   nop     len=0
  Inst 18434:   nop     len=0
  Inst 18435:   nop     len=0
  Inst 18436:   nop     len=0
  Inst 18437:   nop     len=0
  Inst 18438:   nop     len=0
  Inst 18439:   nop     len=0
  Inst 18440:   nop     len=0
  Inst 18441:   nop     len=0
  Inst 18442:   nop     len=0
  Inst 18443:   nop     len=0
  Inst 18444:   nop     len=0
  Inst 18445:   nop     len=0
  Inst 18446:   nop     len=0
  Inst 18447:   nop     len=0
  Inst 18448:   nop     len=0
  Inst 18449:   nop     len=0
  Inst 18450:   nop     len=0
  Inst 18451:   nop     len=0
  Inst 18452:   nop     len=0
  Inst 18453:   nop     len=0
  Inst 18454:   nop     len=0
  Inst 18455:   nop     len=0
  Inst 18456:   nop     len=0
  Inst 18457:   nop     len=0
  Inst 18458:   nop     len=0
  Inst 18459:   nop     len=0
  Inst 18460:   nop     len=0
  Inst 18461:   nop     len=0
  Inst 18462:   nop     len=0
  Inst 18463:   nop     len=0
  Inst 18464:   nop     len=0
  Inst 18465:   nop     len=0
  Inst 18466:   nop     len=0
  Inst 18467:   nop     len=0
  Inst 18468:   nop     len=0
  Inst 18469:   nop     len=0
  Inst 18470:   nop     len=0
  Inst 18471:   nop     len=0
  Inst 18472:   nop     len=0
  Inst 18473:   nop     len=0
  Inst 18474:   nop     len=0
  Inst 18475:   nop     len=0
  Inst 18476:   nop     len=0
  Inst 18477:   nop     len=0
  Inst 18478:   nop     len=0
  Inst 18479:   nop     len=0
  Inst 18480:   nop     len=0
  Inst 18481:   nop     len=0
  Inst 18482:   nop     len=0
  Inst 18483:   nop     len=0
  Inst 18484:   nop     len=0
  Inst 18485:   nop     len=0
  Inst 18486:   nop     len=0
  Inst 18487:   nop     len=0
  Inst 18488:   nop     len=0
  Inst 18489:   nop     len=0
  Inst 18490:   nop     len=0
  Inst 18491:   nop     len=0
  Inst 18492:   nop     len=0
  Inst 18493:   nop     len=0
  Inst 18494:   nop     len=0
  Inst 18495:   nop     len=0
  Inst 18496:   nop     len=0
  Inst 18497:   nop     len=0
  Inst 18498:   nop     len=0
  Inst 18499:   nop     len=0
  Inst 18500:   nop     len=0
  Inst 18501:   nop     len=0
  Inst 18502:   nop     len=0
  Inst 18503:   jmp     label616
Block 616:
  (original IR block: block308)
  (successor: Block 617)
  (successor: Block 618)
  (instruction range: 18504 .. 18515)
  Inst 18504:   movq    rsp(2064 + virtual offset), %rsi
  Inst 18505:   movq    8(%rsi), %rdi
  Inst 18506:   movq    rsp(2048 + virtual offset), %rsi
  Inst 18507:   load_ext_name u0:2+0, %rax
  Inst 18508:   movq    %rsi, rsp(992 + virtual offset)
  Inst 18509:   movq    %rdi, rsp(1008 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18510:   call    *%rax
  Inst 18511:   movq    %rax, %rbx
  Inst 18512:   movq    %rdx, %r14
  Inst 18513:   testq   %r14, %r14
  Inst 18514:   jz      label617; j label618
Block 617:
  (successor: Block 620)
  (instruction range: 18515 .. 18594)
  Inst 18515:   movq    %rbx, rsp(1480 + virtual offset)
  Inst 18516:   nop     len=0
  Inst 18517:   nop     len=0
  Inst 18518:   nop     len=0
  Inst 18519:   nop     len=0
  Inst 18520:   nop     len=0
  Inst 18521:   nop     len=0
  Inst 18522:   nop     len=0
  Inst 18523:   nop     len=0
  Inst 18524:   nop     len=0
  Inst 18525:   nop     len=0
  Inst 18526:   nop     len=0
  Inst 18527:   nop     len=0
  Inst 18528:   nop     len=0
  Inst 18529:   nop     len=0
  Inst 18530:   nop     len=0
  Inst 18531:   nop     len=0
  Inst 18532:   nop     len=0
  Inst 18533:   nop     len=0
  Inst 18534:   nop     len=0
  Inst 18535:   nop     len=0
  Inst 18536:   nop     len=0
  Inst 18537:   nop     len=0
  Inst 18538:   nop     len=0
  Inst 18539:   nop     len=0
  Inst 18540:   nop     len=0
  Inst 18541:   nop     len=0
  Inst 18542:   nop     len=0
  Inst 18543:   nop     len=0
  Inst 18544:   nop     len=0
  Inst 18545:   nop     len=0
  Inst 18546:   nop     len=0
  Inst 18547:   nop     len=0
  Inst 18548:   nop     len=0
  Inst 18549:   nop     len=0
  Inst 18550:   nop     len=0
  Inst 18551:   nop     len=0
  Inst 18552:   nop     len=0
  Inst 18553:   nop     len=0
  Inst 18554:   nop     len=0
  Inst 18555:   nop     len=0
  Inst 18556:   nop     len=0
  Inst 18557:   nop     len=0
  Inst 18558:   nop     len=0
  Inst 18559:   nop     len=0
  Inst 18560:   nop     len=0
  Inst 18561:   nop     len=0
  Inst 18562:   nop     len=0
  Inst 18563:   nop     len=0
  Inst 18564:   nop     len=0
  Inst 18565:   nop     len=0
  Inst 18566:   nop     len=0
  Inst 18567:   nop     len=0
  Inst 18568:   nop     len=0
  Inst 18569:   nop     len=0
  Inst 18570:   nop     len=0
  Inst 18571:   nop     len=0
  Inst 18572:   nop     len=0
  Inst 18573:   nop     len=0
  Inst 18574:   nop     len=0
  Inst 18575:   nop     len=0
  Inst 18576:   nop     len=0
  Inst 18577:   nop     len=0
  Inst 18578:   nop     len=0
  Inst 18579:   nop     len=0
  Inst 18580:   nop     len=0
  Inst 18581:   nop     len=0
  Inst 18582:   nop     len=0
  Inst 18583:   nop     len=0
  Inst 18584:   nop     len=0
  Inst 18585:   nop     len=0
  Inst 18586:   nop     len=0
  Inst 18587:   nop     len=0
  Inst 18588:   nop     len=0
  Inst 18589:   nop     len=0
  Inst 18590:   nop     len=0
  Inst 18591:   nop     len=0
  Inst 18592:   nop     len=0
  Inst 18593:   jmp     label620
Block 618:
  (original IR block: block311)
  (successor: Block 619)
  (instruction range: 18594 .. 18623)
  Inst 18594:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18595:   movq    152(%rsi), %r13
  Inst 18596:   movq    %r14, %r15
  Inst 18597:   addq    $-1, %r15
  Inst 18598:   movq    %r14, %rdx
  Inst 18599:   shlq    $3, %rdx
  Inst 18600:   movq    %r13, %r12
  Inst 18601:   addq    %rdx, %r12
  Inst 18602:   movq    %r13, %rdi
  Inst 18603:   addq    $-24, %rdi
  Inst 18604:   movq    %r13, %rsi
  Inst 18605:   load_ext_name %Memmove+0, %rax
  Inst 18606:   movq    %rbx, rsp(992 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18607:   call    *%rax
  Inst 18608:   movq    rsp(992 + virtual offset), %rbx
  Inst 18609:   load_ext_name u1:1+0, %rsi
  Inst 18610:   movl    $1, %edi
  Inst 18611:   movq    %rdi, -8(%r13,%r14,8)
  Inst 18612:   movl    $1, %edi
  Inst 18613:   movq    %rdi, -16(%r13,%r14,8)
  Inst 18614:   movq    %rsi, -24(%r13,%r14,8)
  Inst 18615:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18616:   movq    %r12, 152(%rsi)
  Inst 18617:   movq    %rbx, %rdi
  Inst 18618:   movq    %r15, %rsi
  Inst 18619:   load_ext_name u0:3+0, %rax
  Inst 18620:   movq    %rdi, rsp(992 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18621:   call    *%rax
  Inst 18622:   jmp     label619
Block 619:
  (successor: Block 620)
  (instruction range: 18623 .. 18702)
  Inst 18623:   movq    %rax, rsp(1480 + virtual offset)
  Inst 18624:   nop     len=0
  Inst 18625:   nop     len=0
  Inst 18626:   nop     len=0
  Inst 18627:   nop     len=0
  Inst 18628:   nop     len=0
  Inst 18629:   nop     len=0
  Inst 18630:   nop     len=0
  Inst 18631:   nop     len=0
  Inst 18632:   nop     len=0
  Inst 18633:   nop     len=0
  Inst 18634:   nop     len=0
  Inst 18635:   nop     len=0
  Inst 18636:   nop     len=0
  Inst 18637:   nop     len=0
  Inst 18638:   nop     len=0
  Inst 18639:   nop     len=0
  Inst 18640:   nop     len=0
  Inst 18641:   nop     len=0
  Inst 18642:   nop     len=0
  Inst 18643:   nop     len=0
  Inst 18644:   nop     len=0
  Inst 18645:   nop     len=0
  Inst 18646:   nop     len=0
  Inst 18647:   nop     len=0
  Inst 18648:   nop     len=0
  Inst 18649:   nop     len=0
  Inst 18650:   nop     len=0
  Inst 18651:   nop     len=0
  Inst 18652:   nop     len=0
  Inst 18653:   nop     len=0
  Inst 18654:   nop     len=0
  Inst 18655:   nop     len=0
  Inst 18656:   nop     len=0
  Inst 18657:   nop     len=0
  Inst 18658:   nop     len=0
  Inst 18659:   nop     len=0
  Inst 18660:   nop     len=0
  Inst 18661:   nop     len=0
  Inst 18662:   nop     len=0
  Inst 18663:   nop     len=0
  Inst 18664:   nop     len=0
  Inst 18665:   nop     len=0
  Inst 18666:   nop     len=0
  Inst 18667:   nop     len=0
  Inst 18668:   nop     len=0
  Inst 18669:   nop     len=0
  Inst 18670:   nop     len=0
  Inst 18671:   nop     len=0
  Inst 18672:   nop     len=0
  Inst 18673:   nop     len=0
  Inst 18674:   nop     len=0
  Inst 18675:   nop     len=0
  Inst 18676:   nop     len=0
  Inst 18677:   nop     len=0
  Inst 18678:   nop     len=0
  Inst 18679:   nop     len=0
  Inst 18680:   nop     len=0
  Inst 18681:   nop     len=0
  Inst 18682:   nop     len=0
  Inst 18683:   nop     len=0
  Inst 18684:   nop     len=0
  Inst 18685:   nop     len=0
  Inst 18686:   nop     len=0
  Inst 18687:   nop     len=0
  Inst 18688:   nop     len=0
  Inst 18689:   nop     len=0
  Inst 18690:   nop     len=0
  Inst 18691:   nop     len=0
  Inst 18692:   nop     len=0
  Inst 18693:   nop     len=0
  Inst 18694:   nop     len=0
  Inst 18695:   nop     len=0
  Inst 18696:   nop     len=0
  Inst 18697:   nop     len=0
  Inst 18698:   nop     len=0
  Inst 18699:   nop     len=0
  Inst 18700:   nop     len=0
  Inst 18701:   jmp     label620
Block 620:
  (original IR block: block310)
  (successor: Block 621)
  (successor: Block 622)
  (instruction range: 18702 .. 18713)
  Inst 18702:   movq    rsp(2064 + virtual offset), %rsi
  Inst 18703:   movq    8(%rsi), %rdi
  Inst 18704:   movq    rsp(2048 + virtual offset), %rsi
  Inst 18705:   load_ext_name u0:2+0, %rax
  Inst 18706:   movq    %rsi, rsp(992 + virtual offset)
  Inst 18707:   movq    %rdi, rsp(1008 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18708:   call    *%rax
  Inst 18709:   movq    %rax, %r15
  Inst 18710:   movq    %rdx, %r14
  Inst 18711:   testq   %r14, %r14
  Inst 18712:   jz      label621; j label622
Block 621:
  (successor: Block 624)
  (instruction range: 18713 .. 18792)
  Inst 18713:   movq    %r15, rsp(992 + virtual offset)
  Inst 18714:   nop     len=0
  Inst 18715:   nop     len=0
  Inst 18716:   nop     len=0
  Inst 18717:   nop     len=0
  Inst 18718:   nop     len=0
  Inst 18719:   nop     len=0
  Inst 18720:   nop     len=0
  Inst 18721:   nop     len=0
  Inst 18722:   nop     len=0
  Inst 18723:   nop     len=0
  Inst 18724:   nop     len=0
  Inst 18725:   nop     len=0
  Inst 18726:   nop     len=0
  Inst 18727:   nop     len=0
  Inst 18728:   nop     len=0
  Inst 18729:   nop     len=0
  Inst 18730:   nop     len=0
  Inst 18731:   nop     len=0
  Inst 18732:   nop     len=0
  Inst 18733:   nop     len=0
  Inst 18734:   nop     len=0
  Inst 18735:   nop     len=0
  Inst 18736:   nop     len=0
  Inst 18737:   nop     len=0
  Inst 18738:   nop     len=0
  Inst 18739:   nop     len=0
  Inst 18740:   nop     len=0
  Inst 18741:   nop     len=0
  Inst 18742:   nop     len=0
  Inst 18743:   nop     len=0
  Inst 18744:   nop     len=0
  Inst 18745:   nop     len=0
  Inst 18746:   nop     len=0
  Inst 18747:   nop     len=0
  Inst 18748:   nop     len=0
  Inst 18749:   nop     len=0
  Inst 18750:   nop     len=0
  Inst 18751:   nop     len=0
  Inst 18752:   nop     len=0
  Inst 18753:   nop     len=0
  Inst 18754:   nop     len=0
  Inst 18755:   nop     len=0
  Inst 18756:   nop     len=0
  Inst 18757:   nop     len=0
  Inst 18758:   nop     len=0
  Inst 18759:   nop     len=0
  Inst 18760:   nop     len=0
  Inst 18761:   nop     len=0
  Inst 18762:   nop     len=0
  Inst 18763:   nop     len=0
  Inst 18764:   nop     len=0
  Inst 18765:   nop     len=0
  Inst 18766:   nop     len=0
  Inst 18767:   nop     len=0
  Inst 18768:   nop     len=0
  Inst 18769:   nop     len=0
  Inst 18770:   nop     len=0
  Inst 18771:   nop     len=0
  Inst 18772:   nop     len=0
  Inst 18773:   nop     len=0
  Inst 18774:   nop     len=0
  Inst 18775:   nop     len=0
  Inst 18776:   nop     len=0
  Inst 18777:   nop     len=0
  Inst 18778:   nop     len=0
  Inst 18779:   nop     len=0
  Inst 18780:   nop     len=0
  Inst 18781:   nop     len=0
  Inst 18782:   nop     len=0
  Inst 18783:   nop     len=0
  Inst 18784:   nop     len=0
  Inst 18785:   nop     len=0
  Inst 18786:   nop     len=0
  Inst 18787:   nop     len=0
  Inst 18788:   nop     len=0
  Inst 18789:   nop     len=0
  Inst 18790:   nop     len=0
  Inst 18791:   jmp     label624
Block 622:
  (original IR block: block313)
  (successor: Block 623)
  (instruction range: 18792 .. 18821)
  Inst 18792:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18793:   movq    152(%rsi), %r13
  Inst 18794:   movq    %r14, %rbx
  Inst 18795:   addq    $-1, %rbx
  Inst 18796:   movq    %r14, %rdx
  Inst 18797:   shlq    $3, %rdx
  Inst 18798:   movq    %r13, %r12
  Inst 18799:   addq    %rdx, %r12
  Inst 18800:   movq    %r13, %rdi
  Inst 18801:   addq    $-24, %rdi
  Inst 18802:   movq    %r13, %rsi
  Inst 18803:   load_ext_name %Memmove+0, %rax
  Inst 18804:   movq    %r15, rsp(1008 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S125, S126, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18805:   call    *%rax
  Inst 18806:   movq    rsp(1008 + virtual offset), %r15
  Inst 18807:   load_ext_name u1:1+0, %rsi
  Inst 18808:   movl    $1, %edi
  Inst 18809:   movq    %rdi, -8(%r13,%r14,8)
  Inst 18810:   movl    $1, %edi
  Inst 18811:   movq    %rdi, -16(%r13,%r14,8)
  Inst 18812:   movq    %rsi, -24(%r13,%r14,8)
  Inst 18813:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18814:   movq    %r12, 152(%rsi)
  Inst 18815:   movq    %r15, %rdi
  Inst 18816:   movq    %rbx, %rsi
  Inst 18817:   load_ext_name u0:3+0, %rax
  Inst 18818:   movq    %rdi, rsp(992 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18819:   call    *%rax
  Inst 18820:   jmp     label623
Block 623:
  (successor: Block 624)
  (instruction range: 18821 .. 18900)
  Inst 18821:   movq    %rax, rsp(992 + virtual offset)
  Inst 18822:   nop     len=0
  Inst 18823:   nop     len=0
  Inst 18824:   nop     len=0
  Inst 18825:   nop     len=0
  Inst 18826:   nop     len=0
  Inst 18827:   nop     len=0
  Inst 18828:   nop     len=0
  Inst 18829:   nop     len=0
  Inst 18830:   nop     len=0
  Inst 18831:   nop     len=0
  Inst 18832:   nop     len=0
  Inst 18833:   nop     len=0
  Inst 18834:   nop     len=0
  Inst 18835:   nop     len=0
  Inst 18836:   nop     len=0
  Inst 18837:   nop     len=0
  Inst 18838:   nop     len=0
  Inst 18839:   nop     len=0
  Inst 18840:   nop     len=0
  Inst 18841:   nop     len=0
  Inst 18842:   nop     len=0
  Inst 18843:   nop     len=0
  Inst 18844:   nop     len=0
  Inst 18845:   nop     len=0
  Inst 18846:   nop     len=0
  Inst 18847:   nop     len=0
  Inst 18848:   nop     len=0
  Inst 18849:   nop     len=0
  Inst 18850:   nop     len=0
  Inst 18851:   nop     len=0
  Inst 18852:   nop     len=0
  Inst 18853:   nop     len=0
  Inst 18854:   nop     len=0
  Inst 18855:   nop     len=0
  Inst 18856:   nop     len=0
  Inst 18857:   nop     len=0
  Inst 18858:   nop     len=0
  Inst 18859:   nop     len=0
  Inst 18860:   nop     len=0
  Inst 18861:   nop     len=0
  Inst 18862:   nop     len=0
  Inst 18863:   nop     len=0
  Inst 18864:   nop     len=0
  Inst 18865:   nop     len=0
  Inst 18866:   nop     len=0
  Inst 18867:   nop     len=0
  Inst 18868:   nop     len=0
  Inst 18869:   nop     len=0
  Inst 18870:   nop     len=0
  Inst 18871:   nop     len=0
  Inst 18872:   nop     len=0
  Inst 18873:   nop     len=0
  Inst 18874:   nop     len=0
  Inst 18875:   nop     len=0
  Inst 18876:   nop     len=0
  Inst 18877:   nop     len=0
  Inst 18878:   nop     len=0
  Inst 18879:   nop     len=0
  Inst 18880:   nop     len=0
  Inst 18881:   nop     len=0
  Inst 18882:   nop     len=0
  Inst 18883:   nop     len=0
  Inst 18884:   nop     len=0
  Inst 18885:   nop     len=0
  Inst 18886:   nop     len=0
  Inst 18887:   nop     len=0
  Inst 18888:   nop     len=0
  Inst 18889:   nop     len=0
  Inst 18890:   nop     len=0
  Inst 18891:   nop     len=0
  Inst 18892:   nop     len=0
  Inst 18893:   nop     len=0
  Inst 18894:   nop     len=0
  Inst 18895:   nop     len=0
  Inst 18896:   nop     len=0
  Inst 18897:   nop     len=0
  Inst 18898:   nop     len=0
  Inst 18899:   jmp     label624
Block 624:
  (original IR block: block312)
  (successor: Block 625)
  (successor: Block 626)
  (instruction range: 18900 .. 18911)
  Inst 18900:   movq    rsp(2064 + virtual offset), %rsi
  Inst 18901:   movq    8(%rsi), %rdi
  Inst 18902:   movq    rsp(2048 + virtual offset), %rsi
  Inst 18903:   load_ext_name u0:2+0, %rax
  Inst 18904:   movq    %rsi, rsp(1008 + virtual offset)
  Inst 18905:   movq    %rdi, rsp(1024 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 18906:   call    *%rax
  Inst 18907:   movq    %rax, %rbx
  Inst 18908:   movq    %rdx, %r14
  Inst 18909:   testq   %r14, %r14
  Inst 18910:   jz      label625; j label626
Block 625:
  (successor: Block 628)
  (instruction range: 18911 .. 18991)
  Inst 18911:   movq    %rbx, rsp(1512 + virtual offset)
  Inst 18912:   nop     len=0
  Inst 18913:   nop     len=0
  Inst 18914:   nop     len=0
  Inst 18915:   nop     len=0
  Inst 18916:   nop     len=0
  Inst 18917:   nop     len=0
  Inst 18918:   nop     len=0
  Inst 18919:   nop     len=0
  Inst 18920:   nop     len=0
  Inst 18921:   nop     len=0
  Inst 18922:   nop     len=0
  Inst 18923:   nop     len=0
  Inst 18924:   nop     len=0
  Inst 18925:   nop     len=0
  Inst 18926:   nop     len=0
  Inst 18927:   nop     len=0
  Inst 18928:   nop     len=0
  Inst 18929:   nop     len=0
  Inst 18930:   nop     len=0
  Inst 18931:   nop     len=0
  Inst 18932:   nop     len=0
  Inst 18933:   nop     len=0
  Inst 18934:   nop     len=0
  Inst 18935:   nop     len=0
  Inst 18936:   nop     len=0
  Inst 18937:   nop     len=0
  Inst 18938:   nop     len=0
  Inst 18939:   nop     len=0
  Inst 18940:   nop     len=0
  Inst 18941:   nop     len=0
  Inst 18942:   nop     len=0
  Inst 18943:   nop     len=0
  Inst 18944:   nop     len=0
  Inst 18945:   nop     len=0
  Inst 18946:   nop     len=0
  Inst 18947:   nop     len=0
  Inst 18948:   nop     len=0
  Inst 18949:   nop     len=0
  Inst 18950:   nop     len=0
  Inst 18951:   nop     len=0
  Inst 18952:   nop     len=0
  Inst 18953:   nop     len=0
  Inst 18954:   nop     len=0
  Inst 18955:   nop     len=0
  Inst 18956:   nop     len=0
  Inst 18957:   nop     len=0
  Inst 18958:   nop     len=0
  Inst 18959:   nop     len=0
  Inst 18960:   nop     len=0
  Inst 18961:   nop     len=0
  Inst 18962:   nop     len=0
  Inst 18963:   nop     len=0
  Inst 18964:   nop     len=0
  Inst 18965:   nop     len=0
  Inst 18966:   nop     len=0
  Inst 18967:   nop     len=0
  Inst 18968:   nop     len=0
  Inst 18969:   nop     len=0
  Inst 18970:   nop     len=0
  Inst 18971:   nop     len=0
  Inst 18972:   nop     len=0
  Inst 18973:   nop     len=0
  Inst 18974:   nop     len=0
  Inst 18975:   nop     len=0
  Inst 18976:   nop     len=0
  Inst 18977:   nop     len=0
  Inst 18978:   nop     len=0
  Inst 18979:   nop     len=0
  Inst 18980:   nop     len=0
  Inst 18981:   nop     len=0
  Inst 18982:   nop     len=0
  Inst 18983:   nop     len=0
  Inst 18984:   nop     len=0
  Inst 18985:   nop     len=0
  Inst 18986:   nop     len=0
  Inst 18987:   nop     len=0
  Inst 18988:   nop     len=0
  Inst 18989:   nop     len=0
  Inst 18990:   jmp     label628
Block 626:
  (original IR block: block315)
  (successor: Block 627)
  (instruction range: 18991 .. 19020)
  Inst 18991:   movq    rsp(2072 + virtual offset), %rsi
  Inst 18992:   movq    152(%rsi), %r13
  Inst 18993:   movq    %r14, %r15
  Inst 18994:   addq    $-1, %r15
  Inst 18995:   movq    %r14, %rdx
  Inst 18996:   shlq    $3, %rdx
  Inst 18997:   movq    %r13, %r12
  Inst 18998:   addq    %rdx, %r12
  Inst 18999:   movq    %r13, %rdi
  Inst 19000:   addq    $-24, %rdi
  Inst 19001:   movq    %r13, %rsi
  Inst 19002:   load_ext_name %Memmove+0, %rax
  Inst 19003:   movq    %rbx, rsp(1008 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19004:   call    *%rax
  Inst 19005:   movq    rsp(1008 + virtual offset), %rbx
  Inst 19006:   load_ext_name u1:1+0, %rsi
  Inst 19007:   movl    $1, %edi
  Inst 19008:   movq    %rdi, -8(%r13,%r14,8)
  Inst 19009:   movl    $1, %edi
  Inst 19010:   movq    %rdi, -16(%r13,%r14,8)
  Inst 19011:   movq    %rsi, -24(%r13,%r14,8)
  Inst 19012:   movq    rsp(2072 + virtual offset), %rsi
  Inst 19013:   movq    %r12, 152(%rsi)
  Inst 19014:   movq    %rbx, %rdi
  Inst 19015:   movq    %r15, %rsi
  Inst 19016:   load_ext_name u0:3+0, %rax
  Inst 19017:   movq    %rdi, rsp(1008 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19018:   call    *%rax
  Inst 19019:   jmp     label627
Block 627:
  (successor: Block 628)
  (instruction range: 19020 .. 19100)
  Inst 19020:   movq    %rax, rsp(1512 + virtual offset)
  Inst 19021:   nop     len=0
  Inst 19022:   nop     len=0
  Inst 19023:   nop     len=0
  Inst 19024:   nop     len=0
  Inst 19025:   nop     len=0
  Inst 19026:   nop     len=0
  Inst 19027:   nop     len=0
  Inst 19028:   nop     len=0
  Inst 19029:   nop     len=0
  Inst 19030:   nop     len=0
  Inst 19031:   nop     len=0
  Inst 19032:   nop     len=0
  Inst 19033:   nop     len=0
  Inst 19034:   nop     len=0
  Inst 19035:   nop     len=0
  Inst 19036:   nop     len=0
  Inst 19037:   nop     len=0
  Inst 19038:   nop     len=0
  Inst 19039:   nop     len=0
  Inst 19040:   nop     len=0
  Inst 19041:   nop     len=0
  Inst 19042:   nop     len=0
  Inst 19043:   nop     len=0
  Inst 19044:   nop     len=0
  Inst 19045:   nop     len=0
  Inst 19046:   nop     len=0
  Inst 19047:   nop     len=0
  Inst 19048:   nop     len=0
  Inst 19049:   nop     len=0
  Inst 19050:   nop     len=0
  Inst 19051:   nop     len=0
  Inst 19052:   nop     len=0
  Inst 19053:   nop     len=0
  Inst 19054:   nop     len=0
  Inst 19055:   nop     len=0
  Inst 19056:   nop     len=0
  Inst 19057:   nop     len=0
  Inst 19058:   nop     len=0
  Inst 19059:   nop     len=0
  Inst 19060:   nop     len=0
  Inst 19061:   nop     len=0
  Inst 19062:   nop     len=0
  Inst 19063:   nop     len=0
  Inst 19064:   nop     len=0
  Inst 19065:   nop     len=0
  Inst 19066:   nop     len=0
  Inst 19067:   nop     len=0
  Inst 19068:   nop     len=0
  Inst 19069:   nop     len=0
  Inst 19070:   nop     len=0
  Inst 19071:   nop     len=0
  Inst 19072:   nop     len=0
  Inst 19073:   nop     len=0
  Inst 19074:   nop     len=0
  Inst 19075:   nop     len=0
  Inst 19076:   nop     len=0
  Inst 19077:   nop     len=0
  Inst 19078:   nop     len=0
  Inst 19079:   nop     len=0
  Inst 19080:   nop     len=0
  Inst 19081:   nop     len=0
  Inst 19082:   nop     len=0
  Inst 19083:   nop     len=0
  Inst 19084:   nop     len=0
  Inst 19085:   nop     len=0
  Inst 19086:   nop     len=0
  Inst 19087:   nop     len=0
  Inst 19088:   nop     len=0
  Inst 19089:   nop     len=0
  Inst 19090:   nop     len=0
  Inst 19091:   nop     len=0
  Inst 19092:   nop     len=0
  Inst 19093:   nop     len=0
  Inst 19094:   nop     len=0
  Inst 19095:   nop     len=0
  Inst 19096:   nop     len=0
  Inst 19097:   nop     len=0
  Inst 19098:   nop     len=0
  Inst 19099:   jmp     label628
Block 628:
  (original IR block: block314)
  (successor: Block 629)
  (successor: Block 630)
  (instruction range: 19100 .. 19111)
  Inst 19100:   movq    rsp(2064 + virtual offset), %rsi
  Inst 19101:   movq    8(%rsi), %rdi
  Inst 19102:   movq    rsp(2048 + virtual offset), %rsi
  Inst 19103:   load_ext_name u0:2+0, %rax
  Inst 19104:   movq    %rsi, rsp(1008 + virtual offset)
  Inst 19105:   movq    %rdi, rsp(1024 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19106:   call    *%rax
  Inst 19107:   movq    %rax, %rbx
  Inst 19108:   movq    %rdx, %r14
  Inst 19109:   testq   %r14, %r14
  Inst 19110:   jz      label629; j label630
Block 629:
  (successor: Block 632)
  (instruction range: 19111 .. 19191)
  Inst 19111:   movq    %rbx, rsp(1008 + virtual offset)
  Inst 19112:   nop     len=0
  Inst 19113:   nop     len=0
  Inst 19114:   nop     len=0
  Inst 19115:   nop     len=0
  Inst 19116:   nop     len=0
  Inst 19117:   nop     len=0
  Inst 19118:   nop     len=0
  Inst 19119:   nop     len=0
  Inst 19120:   nop     len=0
  Inst 19121:   nop     len=0
  Inst 19122:   nop     len=0
  Inst 19123:   nop     len=0
  Inst 19124:   nop     len=0
  Inst 19125:   nop     len=0
  Inst 19126:   nop     len=0
  Inst 19127:   nop     len=0
  Inst 19128:   nop     len=0
  Inst 19129:   nop     len=0
  Inst 19130:   nop     len=0
  Inst 19131:   nop     len=0
  Inst 19132:   nop     len=0
  Inst 19133:   nop     len=0
  Inst 19134:   nop     len=0
  Inst 19135:   nop     len=0
  Inst 19136:   nop     len=0
  Inst 19137:   nop     len=0
  Inst 19138:   nop     len=0
  Inst 19139:   nop     len=0
  Inst 19140:   nop     len=0
  Inst 19141:   nop     len=0
  Inst 19142:   nop     len=0
  Inst 19143:   nop     len=0
  Inst 19144:   nop     len=0
  Inst 19145:   nop     len=0
  Inst 19146:   nop     len=0
  Inst 19147:   nop     len=0
  Inst 19148:   nop     len=0
  Inst 19149:   nop     len=0
  Inst 19150:   nop     len=0
  Inst 19151:   nop     len=0
  Inst 19152:   nop     len=0
  Inst 19153:   nop     len=0
  Inst 19154:   nop     len=0
  Inst 19155:   nop     len=0
  Inst 19156:   nop     len=0
  Inst 19157:   nop     len=0
  Inst 19158:   nop     len=0
  Inst 19159:   nop     len=0
  Inst 19160:   nop     len=0
  Inst 19161:   nop     len=0
  Inst 19162:   nop     len=0
  Inst 19163:   nop     len=0
  Inst 19164:   nop     len=0
  Inst 19165:   nop     len=0
  Inst 19166:   nop     len=0
  Inst 19167:   nop     len=0
  Inst 19168:   nop     len=0
  Inst 19169:   nop     len=0
  Inst 19170:   nop     len=0
  Inst 19171:   nop     len=0
  Inst 19172:   nop     len=0
  Inst 19173:   nop     len=0
  Inst 19174:   nop     len=0
  Inst 19175:   nop     len=0
  Inst 19176:   nop     len=0
  Inst 19177:   nop     len=0
  Inst 19178:   nop     len=0
  Inst 19179:   nop     len=0
  Inst 19180:   nop     len=0
  Inst 19181:   nop     len=0
  Inst 19182:   nop     len=0
  Inst 19183:   nop     len=0
  Inst 19184:   nop     len=0
  Inst 19185:   nop     len=0
  Inst 19186:   nop     len=0
  Inst 19187:   nop     len=0
  Inst 19188:   nop     len=0
  Inst 19189:   nop     len=0
  Inst 19190:   jmp     label632
Block 630:
  (original IR block: block317)
  (successor: Block 631)
  (instruction range: 19191 .. 19220)
  Inst 19191:   movq    rsp(2072 + virtual offset), %rsi
  Inst 19192:   movq    152(%rsi), %r13
  Inst 19193:   movq    %r14, %r15
  Inst 19194:   addq    $-1, %r15
  Inst 19195:   movq    %r14, %rdx
  Inst 19196:   shlq    $3, %rdx
  Inst 19197:   movq    %r13, %r12
  Inst 19198:   addq    %rdx, %r12
  Inst 19199:   movq    %r13, %rdi
  Inst 19200:   addq    $-24, %rdi
  Inst 19201:   movq    %r13, %rsi
  Inst 19202:   load_ext_name %Memmove+0, %rax
  Inst 19203:   movq    %rbx, rsp(1024 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S127, S128, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19204:   call    *%rax
  Inst 19205:   movq    rsp(1024 + virtual offset), %rbx
  Inst 19206:   load_ext_name u1:1+0, %rsi
  Inst 19207:   movl    $1, %edi
  Inst 19208:   movq    %rdi, -8(%r13,%r14,8)
  Inst 19209:   movl    $1, %edi
  Inst 19210:   movq    %rdi, -16(%r13,%r14,8)
  Inst 19211:   movq    %rsi, -24(%r13,%r14,8)
  Inst 19212:   movq    rsp(2072 + virtual offset), %rsi
  Inst 19213:   movq    %r12, 152(%rsi)
  Inst 19214:   movq    %rbx, %rdi
  Inst 19215:   movq    %r15, %rsi
  Inst 19216:   load_ext_name u0:3+0, %rax
  Inst 19217:   movq    %rdi, rsp(1008 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19218:   call    *%rax
  Inst 19219:   jmp     label631
Block 631:
  (successor: Block 632)
  (instruction range: 19220 .. 19300)
  Inst 19220:   movq    %rax, rsp(1008 + virtual offset)
  Inst 19221:   nop     len=0
  Inst 19222:   nop     len=0
  Inst 19223:   nop     len=0
  Inst 19224:   nop     len=0
  Inst 19225:   nop     len=0
  Inst 19226:   nop     len=0
  Inst 19227:   nop     len=0
  Inst 19228:   nop     len=0
  Inst 19229:   nop     len=0
  Inst 19230:   nop     len=0
  Inst 19231:   nop     len=0
  Inst 19232:   nop     len=0
  Inst 19233:   nop     len=0
  Inst 19234:   nop     len=0
  Inst 19235:   nop     len=0
  Inst 19236:   nop     len=0
  Inst 19237:   nop     len=0
  Inst 19238:   nop     len=0
  Inst 19239:   nop     len=0
  Inst 19240:   nop     len=0
  Inst 19241:   nop     len=0
  Inst 19242:   nop     len=0
  Inst 19243:   nop     len=0
  Inst 19244:   nop     len=0
  Inst 19245:   nop     len=0
  Inst 19246:   nop     len=0
  Inst 19247:   nop     len=0
  Inst 19248:   nop     len=0
  Inst 19249:   nop     len=0
  Inst 19250:   nop     len=0
  Inst 19251:   nop     len=0
  Inst 19252:   nop     len=0
  Inst 19253:   nop     len=0
  Inst 19254:   nop     len=0
  Inst 19255:   nop     len=0
  Inst 19256:   nop     len=0
  Inst 19257:   nop     len=0
  Inst 19258:   nop     len=0
  Inst 19259:   nop     len=0
  Inst 19260:   nop     len=0
  Inst 19261:   nop     len=0
  Inst 19262:   nop     len=0
  Inst 19263:   nop     len=0
  Inst 19264:   nop     len=0
  Inst 19265:   nop     len=0
  Inst 19266:   nop     len=0
  Inst 19267:   nop     len=0
  Inst 19268:   nop     len=0
  Inst 19269:   nop     len=0
  Inst 19270:   nop     len=0
  Inst 19271:   nop     len=0
  Inst 19272:   nop     len=0
  Inst 19273:   nop     len=0
  Inst 19274:   nop     len=0
  Inst 19275:   nop     len=0
  Inst 19276:   nop     len=0
  Inst 19277:   nop     len=0
  Inst 19278:   nop     len=0
  Inst 19279:   nop     len=0
  Inst 19280:   nop     len=0
  Inst 19281:   nop     len=0
  Inst 19282:   nop     len=0
  Inst 19283:   nop     len=0
  Inst 19284:   nop     len=0
  Inst 19285:   nop     len=0
  Inst 19286:   nop     len=0
  Inst 19287:   nop     len=0
  Inst 19288:   nop     len=0
  Inst 19289:   nop     len=0
  Inst 19290:   nop     len=0
  Inst 19291:   nop     len=0
  Inst 19292:   nop     len=0
  Inst 19293:   nop     len=0
  Inst 19294:   nop     len=0
  Inst 19295:   nop     len=0
  Inst 19296:   nop     len=0
  Inst 19297:   nop     len=0
  Inst 19298:   nop     len=0
  Inst 19299:   jmp     label632
Block 632:
  (original IR block: block316)
  (successor: Block 633)
  (successor: Block 634)
  (instruction range: 19300 .. 19311)
  Inst 19300:   movq    rsp(2064 + virtual offset), %rsi
  Inst 19301:   movq    8(%rsi), %rdi
  Inst 19302:   movq    rsp(2048 + virtual offset), %rsi
  Inst 19303:   load_ext_name u0:2+0, %rax
  Inst 19304:   movq    %rsi, rsp(1024 + virtual offset)
  Inst 19305:   movq    %rdi, rsp(1040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19306:   call    *%rax
  Inst 19307:   movq    %rax, %r15
  Inst 19308:   movq    %rdx, %r14
  Inst 19309:   testq   %r14, %r14
  Inst 19310:   jz      label633; j label634
Block 633:
  (successor: Block 636)
  (instruction range: 19311 .. 19392)
  Inst 19311:   movq    %r15, rsp(1528 + virtual offset)
  Inst 19312:   nop     len=0
  Inst 19313:   nop     len=0
  Inst 19314:   nop     len=0
  Inst 19315:   nop     len=0
  Inst 19316:   nop     len=0
  Inst 19317:   nop     len=0
  Inst 19318:   nop     len=0
  Inst 19319:   nop     len=0
  Inst 19320:   nop     len=0
  Inst 19321:   nop     len=0
  Inst 19322:   nop     len=0
  Inst 19323:   nop     len=0
  Inst 19324:   nop     len=0
  Inst 19325:   nop     len=0
  Inst 19326:   nop     len=0
  Inst 19327:   nop     len=0
  Inst 19328:   nop     len=0
  Inst 19329:   nop     len=0
  Inst 19330:   nop     len=0
  Inst 19331:   nop     len=0
  Inst 19332:   nop     len=0
  Inst 19333:   nop     len=0
  Inst 19334:   nop     len=0
  Inst 19335:   nop     len=0
  Inst 19336:   nop     len=0
  Inst 19337:   nop     len=0
  Inst 19338:   nop     len=0
  Inst 19339:   nop     len=0
  Inst 19340:   nop     len=0
  Inst 19341:   nop     len=0
  Inst 19342:   nop     len=0
  Inst 19343:   nop     len=0
  Inst 19344:   nop     len=0
  Inst 19345:   nop     len=0
  Inst 19346:   nop     len=0
  Inst 19347:   nop     len=0
  Inst 19348:   nop     len=0
  Inst 19349:   nop     len=0
  Inst 19350:   nop     len=0
  Inst 19351:   nop     len=0
  Inst 19352:   nop     len=0
  Inst 19353:   nop     len=0
  Inst 19354:   nop     len=0
  Inst 19355:   nop     len=0
  Inst 19356:   nop     len=0
  Inst 19357:   nop     len=0
  Inst 19358:   nop     len=0
  Inst 19359:   nop     len=0
  Inst 19360:   nop     len=0
  Inst 19361:   nop     len=0
  Inst 19362:   nop     len=0
  Inst 19363:   nop     len=0
  Inst 19364:   nop     len=0
  Inst 19365:   nop     len=0
  Inst 19366:   nop     len=0
  Inst 19367:   nop     len=0
  Inst 19368:   nop     len=0
  Inst 19369:   nop     len=0
  Inst 19370:   nop     len=0
  Inst 19371:   nop     len=0
  Inst 19372:   nop     len=0
  Inst 19373:   nop     len=0
  Inst 19374:   nop     len=0
  Inst 19375:   nop     len=0
  Inst 19376:   nop     len=0
  Inst 19377:   nop     len=0
  Inst 19378:   nop     len=0
  Inst 19379:   nop     len=0
  Inst 19380:   nop     len=0
  Inst 19381:   nop     len=0
  Inst 19382:   nop     len=0
  Inst 19383:   nop     len=0
  Inst 19384:   nop     len=0
  Inst 19385:   nop     len=0
  Inst 19386:   nop     len=0
  Inst 19387:   nop     len=0
  Inst 19388:   nop     len=0
  Inst 19389:   nop     len=0
  Inst 19390:   nop     len=0
  Inst 19391:   jmp     label636
Block 634:
  (original IR block: block319)
  (successor: Block 635)
  (instruction range: 19392 .. 19421)
  Inst 19392:   movq    rsp(2072 + virtual offset), %rsi
  Inst 19393:   movq    152(%rsi), %r13
  Inst 19394:   movq    %r14, %rbx
  Inst 19395:   addq    $-1, %rbx
  Inst 19396:   movq    %r14, %rdx
  Inst 19397:   shlq    $3, %rdx
  Inst 19398:   movq    %r13, %r12
  Inst 19399:   addq    %rdx, %r12
  Inst 19400:   movq    %r13, %rdi
  Inst 19401:   addq    $-24, %rdi
  Inst 19402:   movq    %r13, %rsi
  Inst 19403:   load_ext_name %Memmove+0, %rax
  Inst 19404:   movq    %r15, rsp(1024 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19405:   call    *%rax
  Inst 19406:   movq    rsp(1024 + virtual offset), %r15
  Inst 19407:   load_ext_name u1:1+0, %rsi
  Inst 19408:   movl    $1, %edi
  Inst 19409:   movq    %rdi, -8(%r13,%r14,8)
  Inst 19410:   movl    $1, %edi
  Inst 19411:   movq    %rdi, -16(%r13,%r14,8)
  Inst 19412:   movq    %rsi, -24(%r13,%r14,8)
  Inst 19413:   movq    rsp(2072 + virtual offset), %rsi
  Inst 19414:   movq    %r12, 152(%rsi)
  Inst 19415:   movq    %r15, %rdi
  Inst 19416:   movq    %rbx, %rsi
  Inst 19417:   load_ext_name u0:3+0, %rax
  Inst 19418:   movq    %rdi, rsp(1024 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19419:   call    *%rax
  Inst 19420:   jmp     label635
Block 635:
  (successor: Block 636)
  (instruction range: 19421 .. 19502)
  Inst 19421:   movq    %rax, rsp(1528 + virtual offset)
  Inst 19422:   nop     len=0
  Inst 19423:   nop     len=0
  Inst 19424:   nop     len=0
  Inst 19425:   nop     len=0
  Inst 19426:   nop     len=0
  Inst 19427:   nop     len=0
  Inst 19428:   nop     len=0
  Inst 19429:   nop     len=0
  Inst 19430:   nop     len=0
  Inst 19431:   nop     len=0
  Inst 19432:   nop     len=0
  Inst 19433:   nop     len=0
  Inst 19434:   nop     len=0
  Inst 19435:   nop     len=0
  Inst 19436:   nop     len=0
  Inst 19437:   nop     len=0
  Inst 19438:   nop     len=0
  Inst 19439:   nop     len=0
  Inst 19440:   nop     len=0
  Inst 19441:   nop     len=0
  Inst 19442:   nop     len=0
  Inst 19443:   nop     len=0
  Inst 19444:   nop     len=0
  Inst 19445:   nop     len=0
  Inst 19446:   nop     len=0
  Inst 19447:   nop     len=0
  Inst 19448:   nop     len=0
  Inst 19449:   nop     len=0
  Inst 19450:   nop     len=0
  Inst 19451:   nop     len=0
  Inst 19452:   nop     len=0
  Inst 19453:   nop     len=0
  Inst 19454:   nop     len=0
  Inst 19455:   nop     len=0
  Inst 19456:   nop     len=0
  Inst 19457:   nop     len=0
  Inst 19458:   nop     len=0
  Inst 19459:   nop     len=0
  Inst 19460:   nop     len=0
  Inst 19461:   nop     len=0
  Inst 19462:   nop     len=0
  Inst 19463:   nop     len=0
  Inst 19464:   nop     len=0
  Inst 19465:   nop     len=0
  Inst 19466:   nop     len=0
  Inst 19467:   nop     len=0
  Inst 19468:   nop     len=0
  Inst 19469:   nop     len=0
  Inst 19470:   nop     len=0
  Inst 19471:   nop     len=0
  Inst 19472:   nop     len=0
  Inst 19473:   nop     len=0
  Inst 19474:   nop     len=0
  Inst 19475:   nop     len=0
  Inst 19476:   nop     len=0
  Inst 19477:   nop     len=0
  Inst 19478:   nop     len=0
  Inst 19479:   nop     len=0
  Inst 19480:   nop     len=0
  Inst 19481:   nop     len=0
  Inst 19482:   nop     len=0
  Inst 19483:   nop     len=0
  Inst 19484:   nop     len=0
  Inst 19485:   nop     len=0
  Inst 19486:   nop     len=0
  Inst 19487:   nop     len=0
  Inst 19488:   nop     len=0
  Inst 19489:   nop     len=0
  Inst 19490:   nop     len=0
  Inst 19491:   nop     len=0
  Inst 19492:   nop     len=0
  Inst 19493:   nop     len=0
  Inst 19494:   nop     len=0
  Inst 19495:   nop     len=0
  Inst 19496:   nop     len=0
  Inst 19497:   nop     len=0
  Inst 19498:   nop     len=0
  Inst 19499:   nop     len=0
  Inst 19500:   nop     len=0
  Inst 19501:   jmp     label636
Block 636:
  (original IR block: block318)
  (successor: Block 637)
  (successor: Block 638)
  (instruction range: 19502 .. 19513)
  Inst 19502:   movq    rsp(2064 + virtual offset), %rsi
  Inst 19503:   movq    8(%rsi), %rdi
  Inst 19504:   movq    rsp(2048 + virtual offset), %rsi
  Inst 19505:   load_ext_name u0:2+0, %rax
  Inst 19506:   movq    %rsi, rsp(1024 + virtual offset)
  Inst 19507:   movq    %rdi, rsp(1040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19508:   call    *%rax
  Inst 19509:   movq    %rax, %rbx
  Inst 19510:   movq    %rdx, %r14
  Inst 19511:   testq   %r14, %r14
  Inst 19512:   jz      label637; j label638
Block 637:
  (successor: Block 640)
  (instruction range: 19513 .. 19594)
  Inst 19513:   movq    %rbx, rsp(1024 + virtual offset)
  Inst 19514:   nop     len=0
  Inst 19515:   nop     len=0
  Inst 19516:   nop     len=0
  Inst 19517:   nop     len=0
  Inst 19518:   nop     len=0
  Inst 19519:   nop     len=0
  Inst 19520:   nop     len=0
  Inst 19521:   nop     len=0
  Inst 19522:   nop     len=0
  Inst 19523:   nop     len=0
  Inst 19524:   nop     len=0
  Inst 19525:   nop     len=0
  Inst 19526:   nop     len=0
  Inst 19527:   nop     len=0
  Inst 19528:   nop     len=0
  Inst 19529:   nop     len=0
  Inst 19530:   nop     len=0
  Inst 19531:   nop     len=0
  Inst 19532:   nop     len=0
  Inst 19533:   nop     len=0
  Inst 19534:   nop     len=0
  Inst 19535:   nop     len=0
  Inst 19536:   nop     len=0
  Inst 19537:   nop     len=0
  Inst 19538:   nop     len=0
  Inst 19539:   nop     len=0
  Inst 19540:   nop     len=0
  Inst 19541:   nop     len=0
  Inst 19542:   nop     len=0
  Inst 19543:   nop     len=0
  Inst 19544:   nop     len=0
  Inst 19545:   nop     len=0
  Inst 19546:   nop     len=0
  Inst 19547:   nop     len=0
  Inst 19548:   nop     len=0
  Inst 19549:   nop     len=0
  Inst 19550:   nop     len=0
  Inst 19551:   nop     len=0
  Inst 19552:   nop     len=0
  Inst 19553:   nop     len=0
  Inst 19554:   nop     len=0
  Inst 19555:   nop     len=0
  Inst 19556:   nop     len=0
  Inst 19557:   nop     len=0
  Inst 19558:   nop     len=0
  Inst 19559:   nop     len=0
  Inst 19560:   nop     len=0
  Inst 19561:   nop     len=0
  Inst 19562:   nop     len=0
  Inst 19563:   nop     len=0
  Inst 19564:   nop     len=0
  Inst 19565:   nop     len=0
  Inst 19566:   nop     len=0
  Inst 19567:   nop     len=0
  Inst 19568:   nop     len=0
  Inst 19569:   nop     len=0
  Inst 19570:   nop     len=0
  Inst 19571:   nop     len=0
  Inst 19572:   nop     len=0
  Inst 19573:   nop     len=0
  Inst 19574:   nop     len=0
  Inst 19575:   nop     len=0
  Inst 19576:   nop     len=0
  Inst 19577:   nop     len=0
  Inst 19578:   nop     len=0
  Inst 19579:   nop     len=0
  Inst 19580:   nop     len=0
  Inst 19581:   nop     len=0
  Inst 19582:   nop     len=0
  Inst 19583:   nop     len=0
  Inst 19584:   nop     len=0
  Inst 19585:   nop     len=0
  Inst 19586:   nop     len=0
  Inst 19587:   nop     len=0
  Inst 19588:   nop     len=0
  Inst 19589:   nop     len=0
  Inst 19590:   nop     len=0
  Inst 19591:   nop     len=0
  Inst 19592:   nop     len=0
  Inst 19593:   jmp     label640
Block 638:
  (original IR block: block321)
  (successor: Block 639)
  (instruction range: 19594 .. 19623)
  Inst 19594:   movq    rsp(2072 + virtual offset), %rsi
  Inst 19595:   movq    152(%rsi), %r13
  Inst 19596:   movq    %r14, %r15
  Inst 19597:   addq    $-1, %r15
  Inst 19598:   movq    %r14, %rdx
  Inst 19599:   shlq    $3, %rdx
  Inst 19600:   movq    %r13, %r12
  Inst 19601:   addq    %rdx, %r12
  Inst 19602:   movq    %r13, %rdi
  Inst 19603:   addq    $-24, %rdi
  Inst 19604:   movq    %r13, %rsi
  Inst 19605:   load_ext_name %Memmove+0, %rax
  Inst 19606:   movq    %rbx, rsp(1040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S129, S130, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19607:   call    *%rax
  Inst 19608:   movq    rsp(1040 + virtual offset), %rbx
  Inst 19609:   load_ext_name u1:1+0, %rsi
  Inst 19610:   movl    $1, %edi
  Inst 19611:   movq    %rdi, -8(%r13,%r14,8)
  Inst 19612:   movl    $1, %edi
  Inst 19613:   movq    %rdi, -16(%r13,%r14,8)
  Inst 19614:   movq    %rsi, -24(%r13,%r14,8)
  Inst 19615:   movq    rsp(2072 + virtual offset), %rsi
  Inst 19616:   movq    %r12, 152(%rsi)
  Inst 19617:   movq    %rbx, %rdi
  Inst 19618:   movq    %r15, %rsi
  Inst 19619:   load_ext_name u0:3+0, %rax
  Inst 19620:   movq    %rdi, rsp(1024 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19621:   call    *%rax
  Inst 19622:   jmp     label639
Block 639:
  (successor: Block 640)
  (instruction range: 19623 .. 19704)
  Inst 19623:   movq    %rax, rsp(1024 + virtual offset)
  Inst 19624:   nop     len=0
  Inst 19625:   nop     len=0
  Inst 19626:   nop     len=0
  Inst 19627:   nop     len=0
  Inst 19628:   nop     len=0
  Inst 19629:   nop     len=0
  Inst 19630:   nop     len=0
  Inst 19631:   nop     len=0
  Inst 19632:   nop     len=0
  Inst 19633:   nop     len=0
  Inst 19634:   nop     len=0
  Inst 19635:   nop     len=0
  Inst 19636:   nop     len=0
  Inst 19637:   nop     len=0
  Inst 19638:   nop     len=0
  Inst 19639:   nop     len=0
  Inst 19640:   nop     len=0
  Inst 19641:   nop     len=0
  Inst 19642:   nop     len=0
  Inst 19643:   nop     len=0
  Inst 19644:   nop     len=0
  Inst 19645:   nop     len=0
  Inst 19646:   nop     len=0
  Inst 19647:   nop     len=0
  Inst 19648:   nop     len=0
  Inst 19649:   nop     len=0
  Inst 19650:   nop     len=0
  Inst 19651:   nop     len=0
  Inst 19652:   nop     len=0
  Inst 19653:   nop     len=0
  Inst 19654:   nop     len=0
  Inst 19655:   nop     len=0
  Inst 19656:   nop     len=0
  Inst 19657:   nop     len=0
  Inst 19658:   nop     len=0
  Inst 19659:   nop     len=0
  Inst 19660:   nop     len=0
  Inst 19661:   nop     len=0
  Inst 19662:   nop     len=0
  Inst 19663:   nop     len=0
  Inst 19664:   nop     len=0
  Inst 19665:   nop     len=0
  Inst 19666:   nop     len=0
  Inst 19667:   nop     len=0
  Inst 19668:   nop     len=0
  Inst 19669:   nop     len=0
  Inst 19670:   nop     len=0
  Inst 19671:   nop     len=0
  Inst 19672:   nop     len=0
  Inst 19673:   nop     len=0
  Inst 19674:   nop     len=0
  Inst 19675:   nop     len=0
  Inst 19676:   nop     len=0
  Inst 19677:   nop     len=0
  Inst 19678:   nop     len=0
  Inst 19679:   nop     len=0
  Inst 19680:   nop     len=0
  Inst 19681:   nop     len=0
  Inst 19682:   nop     len=0
  Inst 19683:   nop     len=0
  Inst 19684:   nop     len=0
  Inst 19685:   nop     len=0
  Inst 19686:   nop     len=0
  Inst 19687:   nop     len=0
  Inst 19688:   nop     len=0
  Inst 19689:   nop     len=0
  Inst 19690:   nop     len=0
  Inst 19691:   nop     len=0
  Inst 19692:   nop     len=0
  Inst 19693:   nop     len=0
  Inst 19694:   nop     len=0
  Inst 19695:   nop     len=0
  Inst 19696:   nop     len=0
  Inst 19697:   nop     len=0
  Inst 19698:   nop     len=0
  Inst 19699:   nop     len=0
  Inst 19700:   nop     len=0
  Inst 19701:   nop     len=0
  Inst 19702:   nop     len=0
  Inst 19703:   jmp     label640
Block 640:
  (original IR block: block320)
  (successor: Block 641)
  (successor: Block 642)
  (instruction range: 19704 .. 19715)
  Inst 19704:   movq    rsp(2064 + virtual offset), %rsi
  Inst 19705:   movq    8(%rsi), %rdi
  Inst 19706:   movq    rsp(2048 + virtual offset), %rsi
  Inst 19707:   load_ext_name u0:2+0, %rax
  Inst 19708:   movq    %rsi, rsp(1040 + virtual offset)
  Inst 19709:   movq    %rdi, rsp(1056 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19710:   call    *%rax
  Inst 19711:   movq    %rax, %rbx
  Inst 19712:   movq    %rdx, %r14
  Inst 19713:   testq   %r14, %r14
  Inst 19714:   jz      label641; j label642
Block 641:
  (successor: Block 644)
  (instruction range: 19715 .. 19797)
  Inst 19715:   movq    %rbx, rsp(1544 + virtual offset)
  Inst 19716:   nop     len=0
  Inst 19717:   nop     len=0
  Inst 19718:   nop     len=0
  Inst 19719:   nop     len=0
  Inst 19720:   nop     len=0
  Inst 19721:   nop     len=0
  Inst 19722:   nop     len=0
  Inst 19723:   nop     len=0
  Inst 19724:   nop     len=0
  Inst 19725:   nop     len=0
  Inst 19726:   nop     len=0
  Inst 19727:   nop     len=0
  Inst 19728:   nop     len=0
  Inst 19729:   nop     len=0
  Inst 19730:   nop     len=0
  Inst 19731:   nop     len=0
  Inst 19732:   nop     len=0
  Inst 19733:   nop     len=0
  Inst 19734:   nop     len=0
  Inst 19735:   nop     len=0
  Inst 19736:   nop     len=0
  Inst 19737:   nop     len=0
  Inst 19738:   nop     len=0
  Inst 19739:   nop     len=0
  Inst 19740:   nop     len=0
  Inst 19741:   nop     len=0
  Inst 19742:   nop     len=0
  Inst 19743:   nop     len=0
  Inst 19744:   nop     len=0
  Inst 19745:   nop     len=0
  Inst 19746:   nop     len=0
  Inst 19747:   nop     len=0
  Inst 19748:   nop     len=0
  Inst 19749:   nop     len=0
  Inst 19750:   nop     len=0
  Inst 19751:   nop     len=0
  Inst 19752:   nop     len=0
  Inst 19753:   nop     len=0
  Inst 19754:   nop     len=0
  Inst 19755:   nop     len=0
  Inst 19756:   nop     len=0
  Inst 19757:   nop     len=0
  Inst 19758:   nop     len=0
  Inst 19759:   nop     len=0
  Inst 19760:   nop     len=0
  Inst 19761:   nop     len=0
  Inst 19762:   nop     len=0
  Inst 19763:   nop     len=0
  Inst 19764:   nop     len=0
  Inst 19765:   nop     len=0
  Inst 19766:   nop     len=0
  Inst 19767:   nop     len=0
  Inst 19768:   nop     len=0
  Inst 19769:   nop     len=0
  Inst 19770:   nop     len=0
  Inst 19771:   nop     len=0
  Inst 19772:   nop     len=0
  Inst 19773:   nop     len=0
  Inst 19774:   nop     len=0
  Inst 19775:   nop     len=0
  Inst 19776:   nop     len=0
  Inst 19777:   nop     len=0
  Inst 19778:   nop     len=0
  Inst 19779:   nop     len=0
  Inst 19780:   nop     len=0
  Inst 19781:   nop     len=0
  Inst 19782:   nop     len=0
  Inst 19783:   nop     len=0
  Inst 19784:   nop     len=0
  Inst 19785:   nop     len=0
  Inst 19786:   nop     len=0
  Inst 19787:   nop     len=0
  Inst 19788:   nop     len=0
  Inst 19789:   nop     len=0
  Inst 19790:   nop     len=0
  Inst 19791:   nop     len=0
  Inst 19792:   nop     len=0
  Inst 19793:   nop     len=0
  Inst 19794:   nop     len=0
  Inst 19795:   nop     len=0
  Inst 19796:   jmp     label644
Block 642:
  (original IR block: block323)
  (successor: Block 643)
  (instruction range: 19797 .. 19826)
  Inst 19797:   movq    rsp(2072 + virtual offset), %rsi
  Inst 19798:   movq    152(%rsi), %r13
  Inst 19799:   movq    %r14, %r15
  Inst 19800:   addq    $-1, %r15
  Inst 19801:   movq    %r14, %rdx
  Inst 19802:   shlq    $3, %rdx
  Inst 19803:   movq    %r13, %r12
  Inst 19804:   addq    %rdx, %r12
  Inst 19805:   movq    %r13, %rdi
  Inst 19806:   addq    $-24, %rdi
  Inst 19807:   movq    %r13, %rsi
  Inst 19808:   load_ext_name %Memmove+0, %rax
  Inst 19809:   movq    %rbx, rsp(1040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19810:   call    *%rax
  Inst 19811:   movq    rsp(1040 + virtual offset), %rbx
  Inst 19812:   load_ext_name u1:1+0, %rsi
  Inst 19813:   movl    $1, %edi
  Inst 19814:   movq    %rdi, -8(%r13,%r14,8)
  Inst 19815:   movl    $1, %edi
  Inst 19816:   movq    %rdi, -16(%r13,%r14,8)
  Inst 19817:   movq    %rsi, -24(%r13,%r14,8)
  Inst 19818:   movq    rsp(2072 + virtual offset), %rsi
  Inst 19819:   movq    %r12, 152(%rsi)
  Inst 19820:   movq    %rbx, %rdi
  Inst 19821:   movq    %r15, %rsi
  Inst 19822:   load_ext_name u0:3+0, %rax
  Inst 19823:   movq    %rdi, rsp(1040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19824:   call    *%rax
  Inst 19825:   jmp     label643
Block 643:
  (successor: Block 644)
  (instruction range: 19826 .. 19908)
  Inst 19826:   movq    %rax, rsp(1544 + virtual offset)
  Inst 19827:   nop     len=0
  Inst 19828:   nop     len=0
  Inst 19829:   nop     len=0
  Inst 19830:   nop     len=0
  Inst 19831:   nop     len=0
  Inst 19832:   nop     len=0
  Inst 19833:   nop     len=0
  Inst 19834:   nop     len=0
  Inst 19835:   nop     len=0
  Inst 19836:   nop     len=0
  Inst 19837:   nop     len=0
  Inst 19838:   nop     len=0
  Inst 19839:   nop     len=0
  Inst 19840:   nop     len=0
  Inst 19841:   nop     len=0
  Inst 19842:   nop     len=0
  Inst 19843:   nop     len=0
  Inst 19844:   nop     len=0
  Inst 19845:   nop     len=0
  Inst 19846:   nop     len=0
  Inst 19847:   nop     len=0
  Inst 19848:   nop     len=0
  Inst 19849:   nop     len=0
  Inst 19850:   nop     len=0
  Inst 19851:   nop     len=0
  Inst 19852:   nop     len=0
  Inst 19853:   nop     len=0
  Inst 19854:   nop     len=0
  Inst 19855:   nop     len=0
  Inst 19856:   nop     len=0
  Inst 19857:   nop     len=0
  Inst 19858:   nop     len=0
  Inst 19859:   nop     len=0
  Inst 19860:   nop     len=0
  Inst 19861:   nop     len=0
  Inst 19862:   nop     len=0
  Inst 19863:   nop     len=0
  Inst 19864:   nop     len=0
  Inst 19865:   nop     len=0
  Inst 19866:   nop     len=0
  Inst 19867:   nop     len=0
  Inst 19868:   nop     len=0
  Inst 19869:   nop     len=0
  Inst 19870:   nop     len=0
  Inst 19871:   nop     len=0
  Inst 19872:   nop     len=0
  Inst 19873:   nop     len=0
  Inst 19874:   nop     len=0
  Inst 19875:   nop     len=0
  Inst 19876:   nop     len=0
  Inst 19877:   nop     len=0
  Inst 19878:   nop     len=0
  Inst 19879:   nop     len=0
  Inst 19880:   nop     len=0
  Inst 19881:   nop     len=0
  Inst 19882:   nop     len=0
  Inst 19883:   nop     len=0
  Inst 19884:   nop     len=0
  Inst 19885:   nop     len=0
  Inst 19886:   nop     len=0
  Inst 19887:   nop     len=0
  Inst 19888:   nop     len=0
  Inst 19889:   nop     len=0
  Inst 19890:   nop     len=0
  Inst 19891:   nop     len=0
  Inst 19892:   nop     len=0
  Inst 19893:   nop     len=0
  Inst 19894:   nop     len=0
  Inst 19895:   nop     len=0
  Inst 19896:   nop     len=0
  Inst 19897:   nop     len=0
  Inst 19898:   nop     len=0
  Inst 19899:   nop     len=0
  Inst 19900:   nop     len=0
  Inst 19901:   nop     len=0
  Inst 19902:   nop     len=0
  Inst 19903:   nop     len=0
  Inst 19904:   nop     len=0
  Inst 19905:   nop     len=0
  Inst 19906:   nop     len=0
  Inst 19907:   jmp     label644
Block 644:
  (original IR block: block322)
  (successor: Block 645)
  (successor: Block 646)
  (instruction range: 19908 .. 19919)
  Inst 19908:   movq    rsp(2064 + virtual offset), %rsi
  Inst 19909:   movq    8(%rsi), %rdi
  Inst 19910:   movq    rsp(2048 + virtual offset), %rsi
  Inst 19911:   load_ext_name u0:2+0, %rax
  Inst 19912:   movq    %rsi, rsp(1040 + virtual offset)
  Inst 19913:   movq    %rdi, rsp(1056 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 19914:   call    *%rax
  Inst 19915:   movq    %rax, %r15
  Inst 19916:   movq    %rdx, %r14
  Inst 19917:   testq   %r14, %r14
  Inst 19918:   jz      label645; j label646
Block 645:
  (successor: Block 648)
  (instruction range: 19919 .. 20001)
  Inst 19919:   movq    %r15, rsp(1040 + virtual offset)
  Inst 19920:   nop     len=0
  Inst 19921:   nop     len=0
  Inst 19922:   nop     len=0
  Inst 19923:   nop     len=0
  Inst 19924:   nop     len=0
  Inst 19925:   nop     len=0
  Inst 19926:   nop     len=0
  Inst 19927:   nop     len=0
  Inst 19928:   nop     len=0
  Inst 19929:   nop     len=0
  Inst 19930:   nop     len=0
  Inst 19931:   nop     len=0
  Inst 19932:   nop     len=0
  Inst 19933:   nop     len=0
  Inst 19934:   nop     len=0
  Inst 19935:   nop     len=0
  Inst 19936:   nop     len=0
  Inst 19937:   nop     len=0
  Inst 19938:   nop     len=0
  Inst 19939:   nop     len=0
  Inst 19940:   nop     len=0
  Inst 19941:   nop     len=0
  Inst 19942:   nop     len=0
  Inst 19943:   nop     len=0
  Inst 19944:   nop     len=0
  Inst 19945:   nop     len=0
  Inst 19946:   nop     len=0
  Inst 19947:   nop     len=0
  Inst 19948:   nop     len=0
  Inst 19949:   nop     len=0
  Inst 19950:   nop     len=0
  Inst 19951:   nop     len=0
  Inst 19952:   nop     len=0
  Inst 19953:   nop     len=0
  Inst 19954:   nop     len=0
  Inst 19955:   nop     len=0
  Inst 19956:   nop     len=0
  Inst 19957:   nop     len=0
  Inst 19958:   nop     len=0
  Inst 19959:   nop     len=0
  Inst 19960:   nop     len=0
  Inst 19961:   nop     len=0
  Inst 19962:   nop     len=0
  Inst 19963:   nop     len=0
  Inst 19964:   nop     len=0
  Inst 19965:   nop     len=0
  Inst 19966:   nop     len=0
  Inst 19967:   nop     len=0
  Inst 19968:   nop     len=0
  Inst 19969:   nop     len=0
  Inst 19970:   nop     len=0
  Inst 19971:   nop     len=0
  Inst 19972:   nop     len=0
  Inst 19973:   nop     len=0
  Inst 19974:   nop     len=0
  Inst 19975:   nop     len=0
  Inst 19976:   nop     len=0
  Inst 19977:   nop     len=0
  Inst 19978:   nop     len=0
  Inst 19979:   nop     len=0
  Inst 19980:   nop     len=0
  Inst 19981:   nop     len=0
  Inst 19982:   nop     len=0
  Inst 19983:   nop     len=0
  Inst 19984:   nop     len=0
  Inst 19985:   nop     len=0
  Inst 19986:   nop     len=0
  Inst 19987:   nop     len=0
  Inst 19988:   nop     len=0
  Inst 19989:   nop     len=0
  Inst 19990:   nop     len=0
  Inst 19991:   nop     len=0
  Inst 19992:   nop     len=0
  Inst 19993:   nop     len=0
  Inst 19994:   nop     len=0
  Inst 19995:   nop     len=0
  Inst 19996:   nop     len=0
  Inst 19997:   nop     len=0
  Inst 19998:   nop     len=0
  Inst 19999:   nop     len=0
  Inst 20000:   jmp     label648
Block 646:
  (original IR block: block325)
  (successor: Block 647)
  (instruction range: 20001 .. 20030)
  Inst 20001:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20002:   movq    152(%rsi), %r13
  Inst 20003:   movq    %r14, %rbx
  Inst 20004:   addq    $-1, %rbx
  Inst 20005:   movq    %r14, %rdx
  Inst 20006:   shlq    $3, %rdx
  Inst 20007:   movq    %r13, %r12
  Inst 20008:   addq    %rdx, %r12
  Inst 20009:   movq    %r13, %rdi
  Inst 20010:   addq    $-24, %rdi
  Inst 20011:   movq    %r13, %rsi
  Inst 20012:   load_ext_name %Memmove+0, %rax
  Inst 20013:   movq    %r15, rsp(1056 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S131, S132, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20014:   call    *%rax
  Inst 20015:   movq    rsp(1056 + virtual offset), %r15
  Inst 20016:   load_ext_name u1:1+0, %rsi
  Inst 20017:   movl    $1, %edi
  Inst 20018:   movq    %rdi, -8(%r13,%r14,8)
  Inst 20019:   movl    $1, %edi
  Inst 20020:   movq    %rdi, -16(%r13,%r14,8)
  Inst 20021:   movq    %rsi, -24(%r13,%r14,8)
  Inst 20022:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20023:   movq    %r12, 152(%rsi)
  Inst 20024:   movq    %r15, %rdi
  Inst 20025:   movq    %rbx, %rsi
  Inst 20026:   load_ext_name u0:3+0, %rax
  Inst 20027:   movq    %rdi, rsp(1040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20028:   call    *%rax
  Inst 20029:   jmp     label647
Block 647:
  (successor: Block 648)
  (instruction range: 20030 .. 20112)
  Inst 20030:   movq    %rax, rsp(1040 + virtual offset)
  Inst 20031:   nop     len=0
  Inst 20032:   nop     len=0
  Inst 20033:   nop     len=0
  Inst 20034:   nop     len=0
  Inst 20035:   nop     len=0
  Inst 20036:   nop     len=0
  Inst 20037:   nop     len=0
  Inst 20038:   nop     len=0
  Inst 20039:   nop     len=0
  Inst 20040:   nop     len=0
  Inst 20041:   nop     len=0
  Inst 20042:   nop     len=0
  Inst 20043:   nop     len=0
  Inst 20044:   nop     len=0
  Inst 20045:   nop     len=0
  Inst 20046:   nop     len=0
  Inst 20047:   nop     len=0
  Inst 20048:   nop     len=0
  Inst 20049:   nop     len=0
  Inst 20050:   nop     len=0
  Inst 20051:   nop     len=0
  Inst 20052:   nop     len=0
  Inst 20053:   nop     len=0
  Inst 20054:   nop     len=0
  Inst 20055:   nop     len=0
  Inst 20056:   nop     len=0
  Inst 20057:   nop     len=0
  Inst 20058:   nop     len=0
  Inst 20059:   nop     len=0
  Inst 20060:   nop     len=0
  Inst 20061:   nop     len=0
  Inst 20062:   nop     len=0
  Inst 20063:   nop     len=0
  Inst 20064:   nop     len=0
  Inst 20065:   nop     len=0
  Inst 20066:   nop     len=0
  Inst 20067:   nop     len=0
  Inst 20068:   nop     len=0
  Inst 20069:   nop     len=0
  Inst 20070:   nop     len=0
  Inst 20071:   nop     len=0
  Inst 20072:   nop     len=0
  Inst 20073:   nop     len=0
  Inst 20074:   nop     len=0
  Inst 20075:   nop     len=0
  Inst 20076:   nop     len=0
  Inst 20077:   nop     len=0
  Inst 20078:   nop     len=0
  Inst 20079:   nop     len=0
  Inst 20080:   nop     len=0
  Inst 20081:   nop     len=0
  Inst 20082:   nop     len=0
  Inst 20083:   nop     len=0
  Inst 20084:   nop     len=0
  Inst 20085:   nop     len=0
  Inst 20086:   nop     len=0
  Inst 20087:   nop     len=0
  Inst 20088:   nop     len=0
  Inst 20089:   nop     len=0
  Inst 20090:   nop     len=0
  Inst 20091:   nop     len=0
  Inst 20092:   nop     len=0
  Inst 20093:   nop     len=0
  Inst 20094:   nop     len=0
  Inst 20095:   nop     len=0
  Inst 20096:   nop     len=0
  Inst 20097:   nop     len=0
  Inst 20098:   nop     len=0
  Inst 20099:   nop     len=0
  Inst 20100:   nop     len=0
  Inst 20101:   nop     len=0
  Inst 20102:   nop     len=0
  Inst 20103:   nop     len=0
  Inst 20104:   nop     len=0
  Inst 20105:   nop     len=0
  Inst 20106:   nop     len=0
  Inst 20107:   nop     len=0
  Inst 20108:   nop     len=0
  Inst 20109:   nop     len=0
  Inst 20110:   nop     len=0
  Inst 20111:   jmp     label648
Block 648:
  (original IR block: block324)
  (successor: Block 649)
  (successor: Block 650)
  (instruction range: 20112 .. 20123)
  Inst 20112:   movq    rsp(2064 + virtual offset), %rsi
  Inst 20113:   movq    8(%rsi), %rdi
  Inst 20114:   movq    rsp(2048 + virtual offset), %rsi
  Inst 20115:   load_ext_name u0:2+0, %rax
  Inst 20116:   movq    %rsi, rsp(1056 + virtual offset)
  Inst 20117:   movq    %rdi, rsp(1072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20118:   call    *%rax
  Inst 20119:   movq    %rax, %rbx
  Inst 20120:   movq    %rdx, %r14
  Inst 20121:   testq   %r14, %r14
  Inst 20122:   jz      label649; j label650
Block 649:
  (successor: Block 652)
  (instruction range: 20123 .. 20206)
  Inst 20123:   movq    %rbx, rsp(1560 + virtual offset)
  Inst 20124:   nop     len=0
  Inst 20125:   nop     len=0
  Inst 20126:   nop     len=0
  Inst 20127:   nop     len=0
  Inst 20128:   nop     len=0
  Inst 20129:   nop     len=0
  Inst 20130:   nop     len=0
  Inst 20131:   nop     len=0
  Inst 20132:   nop     len=0
  Inst 20133:   nop     len=0
  Inst 20134:   nop     len=0
  Inst 20135:   nop     len=0
  Inst 20136:   nop     len=0
  Inst 20137:   nop     len=0
  Inst 20138:   nop     len=0
  Inst 20139:   nop     len=0
  Inst 20140:   nop     len=0
  Inst 20141:   nop     len=0
  Inst 20142:   nop     len=0
  Inst 20143:   nop     len=0
  Inst 20144:   nop     len=0
  Inst 20145:   nop     len=0
  Inst 20146:   nop     len=0
  Inst 20147:   nop     len=0
  Inst 20148:   nop     len=0
  Inst 20149:   nop     len=0
  Inst 20150:   nop     len=0
  Inst 20151:   nop     len=0
  Inst 20152:   nop     len=0
  Inst 20153:   nop     len=0
  Inst 20154:   nop     len=0
  Inst 20155:   nop     len=0
  Inst 20156:   nop     len=0
  Inst 20157:   nop     len=0
  Inst 20158:   nop     len=0
  Inst 20159:   nop     len=0
  Inst 20160:   nop     len=0
  Inst 20161:   nop     len=0
  Inst 20162:   nop     len=0
  Inst 20163:   nop     len=0
  Inst 20164:   nop     len=0
  Inst 20165:   nop     len=0
  Inst 20166:   nop     len=0
  Inst 20167:   nop     len=0
  Inst 20168:   nop     len=0
  Inst 20169:   nop     len=0
  Inst 20170:   nop     len=0
  Inst 20171:   nop     len=0
  Inst 20172:   nop     len=0
  Inst 20173:   nop     len=0
  Inst 20174:   nop     len=0
  Inst 20175:   nop     len=0
  Inst 20176:   nop     len=0
  Inst 20177:   nop     len=0
  Inst 20178:   nop     len=0
  Inst 20179:   nop     len=0
  Inst 20180:   nop     len=0
  Inst 20181:   nop     len=0
  Inst 20182:   nop     len=0
  Inst 20183:   nop     len=0
  Inst 20184:   nop     len=0
  Inst 20185:   nop     len=0
  Inst 20186:   nop     len=0
  Inst 20187:   nop     len=0
  Inst 20188:   nop     len=0
  Inst 20189:   nop     len=0
  Inst 20190:   nop     len=0
  Inst 20191:   nop     len=0
  Inst 20192:   nop     len=0
  Inst 20193:   nop     len=0
  Inst 20194:   nop     len=0
  Inst 20195:   nop     len=0
  Inst 20196:   nop     len=0
  Inst 20197:   nop     len=0
  Inst 20198:   nop     len=0
  Inst 20199:   nop     len=0
  Inst 20200:   nop     len=0
  Inst 20201:   nop     len=0
  Inst 20202:   nop     len=0
  Inst 20203:   nop     len=0
  Inst 20204:   nop     len=0
  Inst 20205:   jmp     label652
Block 650:
  (original IR block: block327)
  (successor: Block 651)
  (instruction range: 20206 .. 20235)
  Inst 20206:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20207:   movq    152(%rsi), %r13
  Inst 20208:   movq    %r14, %r15
  Inst 20209:   addq    $-1, %r15
  Inst 20210:   movq    %r14, %rdx
  Inst 20211:   shlq    $3, %rdx
  Inst 20212:   movq    %r13, %r12
  Inst 20213:   addq    %rdx, %r12
  Inst 20214:   movq    %r13, %rdi
  Inst 20215:   addq    $-24, %rdi
  Inst 20216:   movq    %r13, %rsi
  Inst 20217:   load_ext_name %Memmove+0, %rax
  Inst 20218:   movq    %rbx, rsp(1056 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20219:   call    *%rax
  Inst 20220:   movq    rsp(1056 + virtual offset), %rbx
  Inst 20221:   load_ext_name u1:1+0, %rsi
  Inst 20222:   movl    $1, %edi
  Inst 20223:   movq    %rdi, -8(%r13,%r14,8)
  Inst 20224:   movl    $1, %edi
  Inst 20225:   movq    %rdi, -16(%r13,%r14,8)
  Inst 20226:   movq    %rsi, -24(%r13,%r14,8)
  Inst 20227:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20228:   movq    %r12, 152(%rsi)
  Inst 20229:   movq    %rbx, %rdi
  Inst 20230:   movq    %r15, %rsi
  Inst 20231:   load_ext_name u0:3+0, %rax
  Inst 20232:   movq    %rdi, rsp(1056 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20233:   call    *%rax
  Inst 20234:   jmp     label651
Block 651:
  (successor: Block 652)
  (instruction range: 20235 .. 20318)
  Inst 20235:   movq    %rax, rsp(1560 + virtual offset)
  Inst 20236:   nop     len=0
  Inst 20237:   nop     len=0
  Inst 20238:   nop     len=0
  Inst 20239:   nop     len=0
  Inst 20240:   nop     len=0
  Inst 20241:   nop     len=0
  Inst 20242:   nop     len=0
  Inst 20243:   nop     len=0
  Inst 20244:   nop     len=0
  Inst 20245:   nop     len=0
  Inst 20246:   nop     len=0
  Inst 20247:   nop     len=0
  Inst 20248:   nop     len=0
  Inst 20249:   nop     len=0
  Inst 20250:   nop     len=0
  Inst 20251:   nop     len=0
  Inst 20252:   nop     len=0
  Inst 20253:   nop     len=0
  Inst 20254:   nop     len=0
  Inst 20255:   nop     len=0
  Inst 20256:   nop     len=0
  Inst 20257:   nop     len=0
  Inst 20258:   nop     len=0
  Inst 20259:   nop     len=0
  Inst 20260:   nop     len=0
  Inst 20261:   nop     len=0
  Inst 20262:   nop     len=0
  Inst 20263:   nop     len=0
  Inst 20264:   nop     len=0
  Inst 20265:   nop     len=0
  Inst 20266:   nop     len=0
  Inst 20267:   nop     len=0
  Inst 20268:   nop     len=0
  Inst 20269:   nop     len=0
  Inst 20270:   nop     len=0
  Inst 20271:   nop     len=0
  Inst 20272:   nop     len=0
  Inst 20273:   nop     len=0
  Inst 20274:   nop     len=0
  Inst 20275:   nop     len=0
  Inst 20276:   nop     len=0
  Inst 20277:   nop     len=0
  Inst 20278:   nop     len=0
  Inst 20279:   nop     len=0
  Inst 20280:   nop     len=0
  Inst 20281:   nop     len=0
  Inst 20282:   nop     len=0
  Inst 20283:   nop     len=0
  Inst 20284:   nop     len=0
  Inst 20285:   nop     len=0
  Inst 20286:   nop     len=0
  Inst 20287:   nop     len=0
  Inst 20288:   nop     len=0
  Inst 20289:   nop     len=0
  Inst 20290:   nop     len=0
  Inst 20291:   nop     len=0
  Inst 20292:   nop     len=0
  Inst 20293:   nop     len=0
  Inst 20294:   nop     len=0
  Inst 20295:   nop     len=0
  Inst 20296:   nop     len=0
  Inst 20297:   nop     len=0
  Inst 20298:   nop     len=0
  Inst 20299:   nop     len=0
  Inst 20300:   nop     len=0
  Inst 20301:   nop     len=0
  Inst 20302:   nop     len=0
  Inst 20303:   nop     len=0
  Inst 20304:   nop     len=0
  Inst 20305:   nop     len=0
  Inst 20306:   nop     len=0
  Inst 20307:   nop     len=0
  Inst 20308:   nop     len=0
  Inst 20309:   nop     len=0
  Inst 20310:   nop     len=0
  Inst 20311:   nop     len=0
  Inst 20312:   nop     len=0
  Inst 20313:   nop     len=0
  Inst 20314:   nop     len=0
  Inst 20315:   nop     len=0
  Inst 20316:   nop     len=0
  Inst 20317:   jmp     label652
Block 652:
  (original IR block: block326)
  (successor: Block 653)
  (successor: Block 654)
  (instruction range: 20318 .. 20329)
  Inst 20318:   movq    rsp(2064 + virtual offset), %rsi
  Inst 20319:   movq    8(%rsi), %rdi
  Inst 20320:   movq    rsp(2048 + virtual offset), %rsi
  Inst 20321:   load_ext_name u0:2+0, %rax
  Inst 20322:   movq    %rsi, rsp(1056 + virtual offset)
  Inst 20323:   movq    %rdi, rsp(1072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20324:   call    *%rax
  Inst 20325:   movq    %rax, %rbx
  Inst 20326:   movq    %rdx, %r14
  Inst 20327:   testq   %r14, %r14
  Inst 20328:   jz      label653; j label654
Block 653:
  (successor: Block 656)
  (instruction range: 20329 .. 20412)
  Inst 20329:   movq    %rbx, rsp(1056 + virtual offset)
  Inst 20330:   nop     len=0
  Inst 20331:   nop     len=0
  Inst 20332:   nop     len=0
  Inst 20333:   nop     len=0
  Inst 20334:   nop     len=0
  Inst 20335:   nop     len=0
  Inst 20336:   nop     len=0
  Inst 20337:   nop     len=0
  Inst 20338:   nop     len=0
  Inst 20339:   nop     len=0
  Inst 20340:   nop     len=0
  Inst 20341:   nop     len=0
  Inst 20342:   nop     len=0
  Inst 20343:   nop     len=0
  Inst 20344:   nop     len=0
  Inst 20345:   nop     len=0
  Inst 20346:   nop     len=0
  Inst 20347:   nop     len=0
  Inst 20348:   nop     len=0
  Inst 20349:   nop     len=0
  Inst 20350:   nop     len=0
  Inst 20351:   nop     len=0
  Inst 20352:   nop     len=0
  Inst 20353:   nop     len=0
  Inst 20354:   nop     len=0
  Inst 20355:   nop     len=0
  Inst 20356:   nop     len=0
  Inst 20357:   nop     len=0
  Inst 20358:   nop     len=0
  Inst 20359:   nop     len=0
  Inst 20360:   nop     len=0
  Inst 20361:   nop     len=0
  Inst 20362:   nop     len=0
  Inst 20363:   nop     len=0
  Inst 20364:   nop     len=0
  Inst 20365:   nop     len=0
  Inst 20366:   nop     len=0
  Inst 20367:   nop     len=0
  Inst 20368:   nop     len=0
  Inst 20369:   nop     len=0
  Inst 20370:   nop     len=0
  Inst 20371:   nop     len=0
  Inst 20372:   nop     len=0
  Inst 20373:   nop     len=0
  Inst 20374:   nop     len=0
  Inst 20375:   nop     len=0
  Inst 20376:   nop     len=0
  Inst 20377:   nop     len=0
  Inst 20378:   nop     len=0
  Inst 20379:   nop     len=0
  Inst 20380:   nop     len=0
  Inst 20381:   nop     len=0
  Inst 20382:   nop     len=0
  Inst 20383:   nop     len=0
  Inst 20384:   nop     len=0
  Inst 20385:   nop     len=0
  Inst 20386:   nop     len=0
  Inst 20387:   nop     len=0
  Inst 20388:   nop     len=0
  Inst 20389:   nop     len=0
  Inst 20390:   nop     len=0
  Inst 20391:   nop     len=0
  Inst 20392:   nop     len=0
  Inst 20393:   nop     len=0
  Inst 20394:   nop     len=0
  Inst 20395:   nop     len=0
  Inst 20396:   nop     len=0
  Inst 20397:   nop     len=0
  Inst 20398:   nop     len=0
  Inst 20399:   nop     len=0
  Inst 20400:   nop     len=0
  Inst 20401:   nop     len=0
  Inst 20402:   nop     len=0
  Inst 20403:   nop     len=0
  Inst 20404:   nop     len=0
  Inst 20405:   nop     len=0
  Inst 20406:   nop     len=0
  Inst 20407:   nop     len=0
  Inst 20408:   nop     len=0
  Inst 20409:   nop     len=0
  Inst 20410:   nop     len=0
  Inst 20411:   jmp     label656
Block 654:
  (original IR block: block329)
  (successor: Block 655)
  (instruction range: 20412 .. 20441)
  Inst 20412:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20413:   movq    152(%rsi), %r13
  Inst 20414:   movq    %r14, %r15
  Inst 20415:   addq    $-1, %r15
  Inst 20416:   movq    %r14, %rdx
  Inst 20417:   shlq    $3, %rdx
  Inst 20418:   movq    %r13, %r12
  Inst 20419:   addq    %rdx, %r12
  Inst 20420:   movq    %r13, %rdi
  Inst 20421:   addq    $-24, %rdi
  Inst 20422:   movq    %r13, %rsi
  Inst 20423:   load_ext_name %Memmove+0, %rax
  Inst 20424:   movq    %rbx, rsp(1072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S133, S134, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20425:   call    *%rax
  Inst 20426:   movq    rsp(1072 + virtual offset), %rbx
  Inst 20427:   load_ext_name u1:1+0, %rsi
  Inst 20428:   movl    $1, %edi
  Inst 20429:   movq    %rdi, -8(%r13,%r14,8)
  Inst 20430:   movl    $1, %edi
  Inst 20431:   movq    %rdi, -16(%r13,%r14,8)
  Inst 20432:   movq    %rsi, -24(%r13,%r14,8)
  Inst 20433:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20434:   movq    %r12, 152(%rsi)
  Inst 20435:   movq    %rbx, %rdi
  Inst 20436:   movq    %r15, %rsi
  Inst 20437:   load_ext_name u0:3+0, %rax
  Inst 20438:   movq    %rdi, rsp(1056 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20439:   call    *%rax
  Inst 20440:   jmp     label655
Block 655:
  (successor: Block 656)
  (instruction range: 20441 .. 20524)
  Inst 20441:   movq    %rax, rsp(1056 + virtual offset)
  Inst 20442:   nop     len=0
  Inst 20443:   nop     len=0
  Inst 20444:   nop     len=0
  Inst 20445:   nop     len=0
  Inst 20446:   nop     len=0
  Inst 20447:   nop     len=0
  Inst 20448:   nop     len=0
  Inst 20449:   nop     len=0
  Inst 20450:   nop     len=0
  Inst 20451:   nop     len=0
  Inst 20452:   nop     len=0
  Inst 20453:   nop     len=0
  Inst 20454:   nop     len=0
  Inst 20455:   nop     len=0
  Inst 20456:   nop     len=0
  Inst 20457:   nop     len=0
  Inst 20458:   nop     len=0
  Inst 20459:   nop     len=0
  Inst 20460:   nop     len=0
  Inst 20461:   nop     len=0
  Inst 20462:   nop     len=0
  Inst 20463:   nop     len=0
  Inst 20464:   nop     len=0
  Inst 20465:   nop     len=0
  Inst 20466:   nop     len=0
  Inst 20467:   nop     len=0
  Inst 20468:   nop     len=0
  Inst 20469:   nop     len=0
  Inst 20470:   nop     len=0
  Inst 20471:   nop     len=0
  Inst 20472:   nop     len=0
  Inst 20473:   nop     len=0
  Inst 20474:   nop     len=0
  Inst 20475:   nop     len=0
  Inst 20476:   nop     len=0
  Inst 20477:   nop     len=0
  Inst 20478:   nop     len=0
  Inst 20479:   nop     len=0
  Inst 20480:   nop     len=0
  Inst 20481:   nop     len=0
  Inst 20482:   nop     len=0
  Inst 20483:   nop     len=0
  Inst 20484:   nop     len=0
  Inst 20485:   nop     len=0
  Inst 20486:   nop     len=0
  Inst 20487:   nop     len=0
  Inst 20488:   nop     len=0
  Inst 20489:   nop     len=0
  Inst 20490:   nop     len=0
  Inst 20491:   nop     len=0
  Inst 20492:   nop     len=0
  Inst 20493:   nop     len=0
  Inst 20494:   nop     len=0
  Inst 20495:   nop     len=0
  Inst 20496:   nop     len=0
  Inst 20497:   nop     len=0
  Inst 20498:   nop     len=0
  Inst 20499:   nop     len=0
  Inst 20500:   nop     len=0
  Inst 20501:   nop     len=0
  Inst 20502:   nop     len=0
  Inst 20503:   nop     len=0
  Inst 20504:   nop     len=0
  Inst 20505:   nop     len=0
  Inst 20506:   nop     len=0
  Inst 20507:   nop     len=0
  Inst 20508:   nop     len=0
  Inst 20509:   nop     len=0
  Inst 20510:   nop     len=0
  Inst 20511:   nop     len=0
  Inst 20512:   nop     len=0
  Inst 20513:   nop     len=0
  Inst 20514:   nop     len=0
  Inst 20515:   nop     len=0
  Inst 20516:   nop     len=0
  Inst 20517:   nop     len=0
  Inst 20518:   nop     len=0
  Inst 20519:   nop     len=0
  Inst 20520:   nop     len=0
  Inst 20521:   nop     len=0
  Inst 20522:   nop     len=0
  Inst 20523:   jmp     label656
Block 656:
  (original IR block: block328)
  (successor: Block 657)
  (successor: Block 658)
  (instruction range: 20524 .. 20535)
  Inst 20524:   movq    rsp(2064 + virtual offset), %rsi
  Inst 20525:   movq    8(%rsi), %rdi
  Inst 20526:   movq    rsp(2048 + virtual offset), %rsi
  Inst 20527:   load_ext_name u0:2+0, %rax
  Inst 20528:   movq    %rsi, rsp(1072 + virtual offset)
  Inst 20529:   movq    %rdi, rsp(1088 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20530:   call    *%rax
  Inst 20531:   movq    %rax, %r15
  Inst 20532:   movq    %rdx, %r14
  Inst 20533:   testq   %r14, %r14
  Inst 20534:   jz      label657; j label658
Block 657:
  (successor: Block 660)
  (instruction range: 20535 .. 20619)
  Inst 20535:   movq    %r15, rsp(1576 + virtual offset)
  Inst 20536:   nop     len=0
  Inst 20537:   nop     len=0
  Inst 20538:   nop     len=0
  Inst 20539:   nop     len=0
  Inst 20540:   nop     len=0
  Inst 20541:   nop     len=0
  Inst 20542:   nop     len=0
  Inst 20543:   nop     len=0
  Inst 20544:   nop     len=0
  Inst 20545:   nop     len=0
  Inst 20546:   nop     len=0
  Inst 20547:   nop     len=0
  Inst 20548:   nop     len=0
  Inst 20549:   nop     len=0
  Inst 20550:   nop     len=0
  Inst 20551:   nop     len=0
  Inst 20552:   nop     len=0
  Inst 20553:   nop     len=0
  Inst 20554:   nop     len=0
  Inst 20555:   nop     len=0
  Inst 20556:   nop     len=0
  Inst 20557:   nop     len=0
  Inst 20558:   nop     len=0
  Inst 20559:   nop     len=0
  Inst 20560:   nop     len=0
  Inst 20561:   nop     len=0
  Inst 20562:   nop     len=0
  Inst 20563:   nop     len=0
  Inst 20564:   nop     len=0
  Inst 20565:   nop     len=0
  Inst 20566:   nop     len=0
  Inst 20567:   nop     len=0
  Inst 20568:   nop     len=0
  Inst 20569:   nop     len=0
  Inst 20570:   nop     len=0
  Inst 20571:   nop     len=0
  Inst 20572:   nop     len=0
  Inst 20573:   nop     len=0
  Inst 20574:   nop     len=0
  Inst 20575:   nop     len=0
  Inst 20576:   nop     len=0
  Inst 20577:   nop     len=0
  Inst 20578:   nop     len=0
  Inst 20579:   nop     len=0
  Inst 20580:   nop     len=0
  Inst 20581:   nop     len=0
  Inst 20582:   nop     len=0
  Inst 20583:   nop     len=0
  Inst 20584:   nop     len=0
  Inst 20585:   nop     len=0
  Inst 20586:   nop     len=0
  Inst 20587:   nop     len=0
  Inst 20588:   nop     len=0
  Inst 20589:   nop     len=0
  Inst 20590:   nop     len=0
  Inst 20591:   nop     len=0
  Inst 20592:   nop     len=0
  Inst 20593:   nop     len=0
  Inst 20594:   nop     len=0
  Inst 20595:   nop     len=0
  Inst 20596:   nop     len=0
  Inst 20597:   nop     len=0
  Inst 20598:   nop     len=0
  Inst 20599:   nop     len=0
  Inst 20600:   nop     len=0
  Inst 20601:   nop     len=0
  Inst 20602:   nop     len=0
  Inst 20603:   nop     len=0
  Inst 20604:   nop     len=0
  Inst 20605:   nop     len=0
  Inst 20606:   nop     len=0
  Inst 20607:   nop     len=0
  Inst 20608:   nop     len=0
  Inst 20609:   nop     len=0
  Inst 20610:   nop     len=0
  Inst 20611:   nop     len=0
  Inst 20612:   nop     len=0
  Inst 20613:   nop     len=0
  Inst 20614:   nop     len=0
  Inst 20615:   nop     len=0
  Inst 20616:   nop     len=0
  Inst 20617:   nop     len=0
  Inst 20618:   jmp     label660
Block 658:
  (original IR block: block331)
  (successor: Block 659)
  (instruction range: 20619 .. 20648)
  Inst 20619:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20620:   movq    152(%rsi), %r13
  Inst 20621:   movq    %r14, %rbx
  Inst 20622:   addq    $-1, %rbx
  Inst 20623:   movq    %r14, %rdx
  Inst 20624:   shlq    $3, %rdx
  Inst 20625:   movq    %r13, %r12
  Inst 20626:   addq    %rdx, %r12
  Inst 20627:   movq    %r13, %rdi
  Inst 20628:   addq    $-24, %rdi
  Inst 20629:   movq    %r13, %rsi
  Inst 20630:   load_ext_name %Memmove+0, %rax
  Inst 20631:   movq    %r15, rsp(1072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20632:   call    *%rax
  Inst 20633:   movq    rsp(1072 + virtual offset), %r15
  Inst 20634:   load_ext_name u1:1+0, %rsi
  Inst 20635:   movl    $1, %edi
  Inst 20636:   movq    %rdi, -8(%r13,%r14,8)
  Inst 20637:   movl    $1, %edi
  Inst 20638:   movq    %rdi, -16(%r13,%r14,8)
  Inst 20639:   movq    %rsi, -24(%r13,%r14,8)
  Inst 20640:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20641:   movq    %r12, 152(%rsi)
  Inst 20642:   movq    %r15, %rdi
  Inst 20643:   movq    %rbx, %rsi
  Inst 20644:   load_ext_name u0:3+0, %rax
  Inst 20645:   movq    %rdi, rsp(1072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20646:   call    *%rax
  Inst 20647:   jmp     label659
Block 659:
  (successor: Block 660)
  (instruction range: 20648 .. 20732)
  Inst 20648:   movq    %rax, rsp(1576 + virtual offset)
  Inst 20649:   nop     len=0
  Inst 20650:   nop     len=0
  Inst 20651:   nop     len=0
  Inst 20652:   nop     len=0
  Inst 20653:   nop     len=0
  Inst 20654:   nop     len=0
  Inst 20655:   nop     len=0
  Inst 20656:   nop     len=0
  Inst 20657:   nop     len=0
  Inst 20658:   nop     len=0
  Inst 20659:   nop     len=0
  Inst 20660:   nop     len=0
  Inst 20661:   nop     len=0
  Inst 20662:   nop     len=0
  Inst 20663:   nop     len=0
  Inst 20664:   nop     len=0
  Inst 20665:   nop     len=0
  Inst 20666:   nop     len=0
  Inst 20667:   nop     len=0
  Inst 20668:   nop     len=0
  Inst 20669:   nop     len=0
  Inst 20670:   nop     len=0
  Inst 20671:   nop     len=0
  Inst 20672:   nop     len=0
  Inst 20673:   nop     len=0
  Inst 20674:   nop     len=0
  Inst 20675:   nop     len=0
  Inst 20676:   nop     len=0
  Inst 20677:   nop     len=0
  Inst 20678:   nop     len=0
  Inst 20679:   nop     len=0
  Inst 20680:   nop     len=0
  Inst 20681:   nop     len=0
  Inst 20682:   nop     len=0
  Inst 20683:   nop     len=0
  Inst 20684:   nop     len=0
  Inst 20685:   nop     len=0
  Inst 20686:   nop     len=0
  Inst 20687:   nop     len=0
  Inst 20688:   nop     len=0
  Inst 20689:   nop     len=0
  Inst 20690:   nop     len=0
  Inst 20691:   nop     len=0
  Inst 20692:   nop     len=0
  Inst 20693:   nop     len=0
  Inst 20694:   nop     len=0
  Inst 20695:   nop     len=0
  Inst 20696:   nop     len=0
  Inst 20697:   nop     len=0
  Inst 20698:   nop     len=0
  Inst 20699:   nop     len=0
  Inst 20700:   nop     len=0
  Inst 20701:   nop     len=0
  Inst 20702:   nop     len=0
  Inst 20703:   nop     len=0
  Inst 20704:   nop     len=0
  Inst 20705:   nop     len=0
  Inst 20706:   nop     len=0
  Inst 20707:   nop     len=0
  Inst 20708:   nop     len=0
  Inst 20709:   nop     len=0
  Inst 20710:   nop     len=0
  Inst 20711:   nop     len=0
  Inst 20712:   nop     len=0
  Inst 20713:   nop     len=0
  Inst 20714:   nop     len=0
  Inst 20715:   nop     len=0
  Inst 20716:   nop     len=0
  Inst 20717:   nop     len=0
  Inst 20718:   nop     len=0
  Inst 20719:   nop     len=0
  Inst 20720:   nop     len=0
  Inst 20721:   nop     len=0
  Inst 20722:   nop     len=0
  Inst 20723:   nop     len=0
  Inst 20724:   nop     len=0
  Inst 20725:   nop     len=0
  Inst 20726:   nop     len=0
  Inst 20727:   nop     len=0
  Inst 20728:   nop     len=0
  Inst 20729:   nop     len=0
  Inst 20730:   nop     len=0
  Inst 20731:   jmp     label660
Block 660:
  (original IR block: block330)
  (successor: Block 661)
  (successor: Block 662)
  (instruction range: 20732 .. 20743)
  Inst 20732:   movq    rsp(2064 + virtual offset), %rsi
  Inst 20733:   movq    8(%rsi), %rdi
  Inst 20734:   movq    rsp(2048 + virtual offset), %rsi
  Inst 20735:   load_ext_name u0:2+0, %rax
  Inst 20736:   movq    %rsi, rsp(1072 + virtual offset)
  Inst 20737:   movq    %rdi, rsp(1088 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20738:   call    *%rax
  Inst 20739:   movq    %rax, %rbx
  Inst 20740:   movq    %rdx, %r14
  Inst 20741:   testq   %r14, %r14
  Inst 20742:   jz      label661; j label662
Block 661:
  (successor: Block 664)
  (instruction range: 20743 .. 20827)
  Inst 20743:   movq    %rbx, rsp(1072 + virtual offset)
  Inst 20744:   nop     len=0
  Inst 20745:   nop     len=0
  Inst 20746:   nop     len=0
  Inst 20747:   nop     len=0
  Inst 20748:   nop     len=0
  Inst 20749:   nop     len=0
  Inst 20750:   nop     len=0
  Inst 20751:   nop     len=0
  Inst 20752:   nop     len=0
  Inst 20753:   nop     len=0
  Inst 20754:   nop     len=0
  Inst 20755:   nop     len=0
  Inst 20756:   nop     len=0
  Inst 20757:   nop     len=0
  Inst 20758:   nop     len=0
  Inst 20759:   nop     len=0
  Inst 20760:   nop     len=0
  Inst 20761:   nop     len=0
  Inst 20762:   nop     len=0
  Inst 20763:   nop     len=0
  Inst 20764:   nop     len=0
  Inst 20765:   nop     len=0
  Inst 20766:   nop     len=0
  Inst 20767:   nop     len=0
  Inst 20768:   nop     len=0
  Inst 20769:   nop     len=0
  Inst 20770:   nop     len=0
  Inst 20771:   nop     len=0
  Inst 20772:   nop     len=0
  Inst 20773:   nop     len=0
  Inst 20774:   nop     len=0
  Inst 20775:   nop     len=0
  Inst 20776:   nop     len=0
  Inst 20777:   nop     len=0
  Inst 20778:   nop     len=0
  Inst 20779:   nop     len=0
  Inst 20780:   nop     len=0
  Inst 20781:   nop     len=0
  Inst 20782:   nop     len=0
  Inst 20783:   nop     len=0
  Inst 20784:   nop     len=0
  Inst 20785:   nop     len=0
  Inst 20786:   nop     len=0
  Inst 20787:   nop     len=0
  Inst 20788:   nop     len=0
  Inst 20789:   nop     len=0
  Inst 20790:   nop     len=0
  Inst 20791:   nop     len=0
  Inst 20792:   nop     len=0
  Inst 20793:   nop     len=0
  Inst 20794:   nop     len=0
  Inst 20795:   nop     len=0
  Inst 20796:   nop     len=0
  Inst 20797:   nop     len=0
  Inst 20798:   nop     len=0
  Inst 20799:   nop     len=0
  Inst 20800:   nop     len=0
  Inst 20801:   nop     len=0
  Inst 20802:   nop     len=0
  Inst 20803:   nop     len=0
  Inst 20804:   nop     len=0
  Inst 20805:   nop     len=0
  Inst 20806:   nop     len=0
  Inst 20807:   nop     len=0
  Inst 20808:   nop     len=0
  Inst 20809:   nop     len=0
  Inst 20810:   nop     len=0
  Inst 20811:   nop     len=0
  Inst 20812:   nop     len=0
  Inst 20813:   nop     len=0
  Inst 20814:   nop     len=0
  Inst 20815:   nop     len=0
  Inst 20816:   nop     len=0
  Inst 20817:   nop     len=0
  Inst 20818:   nop     len=0
  Inst 20819:   nop     len=0
  Inst 20820:   nop     len=0
  Inst 20821:   nop     len=0
  Inst 20822:   nop     len=0
  Inst 20823:   nop     len=0
  Inst 20824:   nop     len=0
  Inst 20825:   nop     len=0
  Inst 20826:   jmp     label664
Block 662:
  (original IR block: block333)
  (successor: Block 663)
  (instruction range: 20827 .. 20856)
  Inst 20827:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20828:   movq    152(%rsi), %r13
  Inst 20829:   movq    %r14, %r15
  Inst 20830:   addq    $-1, %r15
  Inst 20831:   movq    %r14, %rdx
  Inst 20832:   shlq    $3, %rdx
  Inst 20833:   movq    %r13, %r12
  Inst 20834:   addq    %rdx, %r12
  Inst 20835:   movq    %r13, %rdi
  Inst 20836:   addq    $-24, %rdi
  Inst 20837:   movq    %r13, %rsi
  Inst 20838:   load_ext_name %Memmove+0, %rax
  Inst 20839:   movq    %rbx, rsp(1088 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S135, S136, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20840:   call    *%rax
  Inst 20841:   movq    rsp(1088 + virtual offset), %rbx
  Inst 20842:   load_ext_name u1:1+0, %rsi
  Inst 20843:   movl    $1, %edi
  Inst 20844:   movq    %rdi, -8(%r13,%r14,8)
  Inst 20845:   movl    $1, %edi
  Inst 20846:   movq    %rdi, -16(%r13,%r14,8)
  Inst 20847:   movq    %rsi, -24(%r13,%r14,8)
  Inst 20848:   movq    rsp(2072 + virtual offset), %rsi
  Inst 20849:   movq    %r12, 152(%rsi)
  Inst 20850:   movq    %rbx, %rdi
  Inst 20851:   movq    %r15, %rsi
  Inst 20852:   load_ext_name u0:3+0, %rax
  Inst 20853:   movq    %rdi, rsp(1072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20854:   call    *%rax
  Inst 20855:   jmp     label663
Block 663:
  (successor: Block 664)
  (instruction range: 20856 .. 20940)
  Inst 20856:   movq    %rax, rsp(1072 + virtual offset)
  Inst 20857:   nop     len=0
  Inst 20858:   nop     len=0
  Inst 20859:   nop     len=0
  Inst 20860:   nop     len=0
  Inst 20861:   nop     len=0
  Inst 20862:   nop     len=0
  Inst 20863:   nop     len=0
  Inst 20864:   nop     len=0
  Inst 20865:   nop     len=0
  Inst 20866:   nop     len=0
  Inst 20867:   nop     len=0
  Inst 20868:   nop     len=0
  Inst 20869:   nop     len=0
  Inst 20870:   nop     len=0
  Inst 20871:   nop     len=0
  Inst 20872:   nop     len=0
  Inst 20873:   nop     len=0
  Inst 20874:   nop     len=0
  Inst 20875:   nop     len=0
  Inst 20876:   nop     len=0
  Inst 20877:   nop     len=0
  Inst 20878:   nop     len=0
  Inst 20879:   nop     len=0
  Inst 20880:   nop     len=0
  Inst 20881:   nop     len=0
  Inst 20882:   nop     len=0
  Inst 20883:   nop     len=0
  Inst 20884:   nop     len=0
  Inst 20885:   nop     len=0
  Inst 20886:   nop     len=0
  Inst 20887:   nop     len=0
  Inst 20888:   nop     len=0
  Inst 20889:   nop     len=0
  Inst 20890:   nop     len=0
  Inst 20891:   nop     len=0
  Inst 20892:   nop     len=0
  Inst 20893:   nop     len=0
  Inst 20894:   nop     len=0
  Inst 20895:   nop     len=0
  Inst 20896:   nop     len=0
  Inst 20897:   nop     len=0
  Inst 20898:   nop     len=0
  Inst 20899:   nop     len=0
  Inst 20900:   nop     len=0
  Inst 20901:   nop     len=0
  Inst 20902:   nop     len=0
  Inst 20903:   nop     len=0
  Inst 20904:   nop     len=0
  Inst 20905:   nop     len=0
  Inst 20906:   nop     len=0
  Inst 20907:   nop     len=0
  Inst 20908:   nop     len=0
  Inst 20909:   nop     len=0
  Inst 20910:   nop     len=0
  Inst 20911:   nop     len=0
  Inst 20912:   nop     len=0
  Inst 20913:   nop     len=0
  Inst 20914:   nop     len=0
  Inst 20915:   nop     len=0
  Inst 20916:   nop     len=0
  Inst 20917:   nop     len=0
  Inst 20918:   nop     len=0
  Inst 20919:   nop     len=0
  Inst 20920:   nop     len=0
  Inst 20921:   nop     len=0
  Inst 20922:   nop     len=0
  Inst 20923:   nop     len=0
  Inst 20924:   nop     len=0
  Inst 20925:   nop     len=0
  Inst 20926:   nop     len=0
  Inst 20927:   nop     len=0
  Inst 20928:   nop     len=0
  Inst 20929:   nop     len=0
  Inst 20930:   nop     len=0
  Inst 20931:   nop     len=0
  Inst 20932:   nop     len=0
  Inst 20933:   nop     len=0
  Inst 20934:   nop     len=0
  Inst 20935:   nop     len=0
  Inst 20936:   nop     len=0
  Inst 20937:   nop     len=0
  Inst 20938:   nop     len=0
  Inst 20939:   jmp     label664
Block 664:
  (original IR block: block332)
  (successor: Block 665)
  (successor: Block 666)
  (instruction range: 20940 .. 20951)
  Inst 20940:   movq    rsp(2064 + virtual offset), %rsi
  Inst 20941:   movq    8(%rsi), %rdi
  Inst 20942:   movq    rsp(2048 + virtual offset), %rsi
  Inst 20943:   load_ext_name u0:2+0, %rax
  Inst 20944:   movq    %rsi, rsp(1088 + virtual offset)
  Inst 20945:   movq    %rdi, rsp(1104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 20946:   call    *%rax
  Inst 20947:   movq    %rax, %rbx
  Inst 20948:   movq    %rdx, %r14
  Inst 20949:   testq   %r14, %r14
  Inst 20950:   jz      label665; j label666
Block 665:
  (successor: Block 668)
  (instruction range: 20951 .. 21036)
  Inst 20951:   movq    %rbx, rsp(1592 + virtual offset)
  Inst 20952:   nop     len=0
  Inst 20953:   nop     len=0
  Inst 20954:   nop     len=0
  Inst 20955:   nop     len=0
  Inst 20956:   nop     len=0
  Inst 20957:   nop     len=0
  Inst 20958:   nop     len=0
  Inst 20959:   nop     len=0
  Inst 20960:   nop     len=0
  Inst 20961:   nop     len=0
  Inst 20962:   nop     len=0
  Inst 20963:   nop     len=0
  Inst 20964:   nop     len=0
  Inst 20965:   nop     len=0
  Inst 20966:   nop     len=0
  Inst 20967:   nop     len=0
  Inst 20968:   nop     len=0
  Inst 20969:   nop     len=0
  Inst 20970:   nop     len=0
  Inst 20971:   nop     len=0
  Inst 20972:   nop     len=0
  Inst 20973:   nop     len=0
  Inst 20974:   nop     len=0
  Inst 20975:   nop     len=0
  Inst 20976:   nop     len=0
  Inst 20977:   nop     len=0
  Inst 20978:   nop     len=0
  Inst 20979:   nop     len=0
  Inst 20980:   nop     len=0
  Inst 20981:   nop     len=0
  Inst 20982:   nop     len=0
  Inst 20983:   nop     len=0
  Inst 20984:   nop     len=0
  Inst 20985:   nop     len=0
  Inst 20986:   nop     len=0
  Inst 20987:   nop     len=0
  Inst 20988:   nop     len=0
  Inst 20989:   nop     len=0
  Inst 20990:   nop     len=0
  Inst 20991:   nop     len=0
  Inst 20992:   nop     len=0
  Inst 20993:   nop     len=0
  Inst 20994:   nop     len=0
  Inst 20995:   nop     len=0
  Inst 20996:   nop     len=0
  Inst 20997:   nop     len=0
  Inst 20998:   nop     len=0
  Inst 20999:   nop     len=0
  Inst 21000:   nop     len=0
  Inst 21001:   nop     len=0
  Inst 21002:   nop     len=0
  Inst 21003:   nop     len=0
  Inst 21004:   nop     len=0
  Inst 21005:   nop     len=0
  Inst 21006:   nop     len=0
  Inst 21007:   nop     len=0
  Inst 21008:   nop     len=0
  Inst 21009:   nop     len=0
  Inst 21010:   nop     len=0
  Inst 21011:   nop     len=0
  Inst 21012:   nop     len=0
  Inst 21013:   nop     len=0
  Inst 21014:   nop     len=0
  Inst 21015:   nop     len=0
  Inst 21016:   nop     len=0
  Inst 21017:   nop     len=0
  Inst 21018:   nop     len=0
  Inst 21019:   nop     len=0
  Inst 21020:   nop     len=0
  Inst 21021:   nop     len=0
  Inst 21022:   nop     len=0
  Inst 21023:   nop     len=0
  Inst 21024:   nop     len=0
  Inst 21025:   nop     len=0
  Inst 21026:   nop     len=0
  Inst 21027:   nop     len=0
  Inst 21028:   nop     len=0
  Inst 21029:   nop     len=0
  Inst 21030:   nop     len=0
  Inst 21031:   nop     len=0
  Inst 21032:   nop     len=0
  Inst 21033:   nop     len=0
  Inst 21034:   nop     len=0
  Inst 21035:   jmp     label668
Block 666:
  (original IR block: block335)
  (successor: Block 667)
  (instruction range: 21036 .. 21065)
  Inst 21036:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21037:   movq    152(%rsi), %r13
  Inst 21038:   movq    %r14, %r15
  Inst 21039:   addq    $-1, %r15
  Inst 21040:   movq    %r14, %rdx
  Inst 21041:   shlq    $3, %rdx
  Inst 21042:   movq    %r13, %r12
  Inst 21043:   addq    %rdx, %r12
  Inst 21044:   movq    %r13, %rdi
  Inst 21045:   addq    $-24, %rdi
  Inst 21046:   movq    %r13, %rsi
  Inst 21047:   load_ext_name %Memmove+0, %rax
  Inst 21048:   movq    %rbx, rsp(1088 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21049:   call    *%rax
  Inst 21050:   movq    rsp(1088 + virtual offset), %rbx
  Inst 21051:   load_ext_name u1:1+0, %rsi
  Inst 21052:   movl    $1, %edi
  Inst 21053:   movq    %rdi, -8(%r13,%r14,8)
  Inst 21054:   movl    $1, %edi
  Inst 21055:   movq    %rdi, -16(%r13,%r14,8)
  Inst 21056:   movq    %rsi, -24(%r13,%r14,8)
  Inst 21057:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21058:   movq    %r12, 152(%rsi)
  Inst 21059:   movq    %rbx, %rdi
  Inst 21060:   movq    %r15, %rsi
  Inst 21061:   load_ext_name u0:3+0, %rax
  Inst 21062:   movq    %rdi, rsp(1088 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21063:   call    *%rax
  Inst 21064:   jmp     label667
Block 667:
  (successor: Block 668)
  (instruction range: 21065 .. 21150)
  Inst 21065:   movq    %rax, rsp(1592 + virtual offset)
  Inst 21066:   nop     len=0
  Inst 21067:   nop     len=0
  Inst 21068:   nop     len=0
  Inst 21069:   nop     len=0
  Inst 21070:   nop     len=0
  Inst 21071:   nop     len=0
  Inst 21072:   nop     len=0
  Inst 21073:   nop     len=0
  Inst 21074:   nop     len=0
  Inst 21075:   nop     len=0
  Inst 21076:   nop     len=0
  Inst 21077:   nop     len=0
  Inst 21078:   nop     len=0
  Inst 21079:   nop     len=0
  Inst 21080:   nop     len=0
  Inst 21081:   nop     len=0
  Inst 21082:   nop     len=0
  Inst 21083:   nop     len=0
  Inst 21084:   nop     len=0
  Inst 21085:   nop     len=0
  Inst 21086:   nop     len=0
  Inst 21087:   nop     len=0
  Inst 21088:   nop     len=0
  Inst 21089:   nop     len=0
  Inst 21090:   nop     len=0
  Inst 21091:   nop     len=0
  Inst 21092:   nop     len=0
  Inst 21093:   nop     len=0
  Inst 21094:   nop     len=0
  Inst 21095:   nop     len=0
  Inst 21096:   nop     len=0
  Inst 21097:   nop     len=0
  Inst 21098:   nop     len=0
  Inst 21099:   nop     len=0
  Inst 21100:   nop     len=0
  Inst 21101:   nop     len=0
  Inst 21102:   nop     len=0
  Inst 21103:   nop     len=0
  Inst 21104:   nop     len=0
  Inst 21105:   nop     len=0
  Inst 21106:   nop     len=0
  Inst 21107:   nop     len=0
  Inst 21108:   nop     len=0
  Inst 21109:   nop     len=0
  Inst 21110:   nop     len=0
  Inst 21111:   nop     len=0
  Inst 21112:   nop     len=0
  Inst 21113:   nop     len=0
  Inst 21114:   nop     len=0
  Inst 21115:   nop     len=0
  Inst 21116:   nop     len=0
  Inst 21117:   nop     len=0
  Inst 21118:   nop     len=0
  Inst 21119:   nop     len=0
  Inst 21120:   nop     len=0
  Inst 21121:   nop     len=0
  Inst 21122:   nop     len=0
  Inst 21123:   nop     len=0
  Inst 21124:   nop     len=0
  Inst 21125:   nop     len=0
  Inst 21126:   nop     len=0
  Inst 21127:   nop     len=0
  Inst 21128:   nop     len=0
  Inst 21129:   nop     len=0
  Inst 21130:   nop     len=0
  Inst 21131:   nop     len=0
  Inst 21132:   nop     len=0
  Inst 21133:   nop     len=0
  Inst 21134:   nop     len=0
  Inst 21135:   nop     len=0
  Inst 21136:   nop     len=0
  Inst 21137:   nop     len=0
  Inst 21138:   nop     len=0
  Inst 21139:   nop     len=0
  Inst 21140:   nop     len=0
  Inst 21141:   nop     len=0
  Inst 21142:   nop     len=0
  Inst 21143:   nop     len=0
  Inst 21144:   nop     len=0
  Inst 21145:   nop     len=0
  Inst 21146:   nop     len=0
  Inst 21147:   nop     len=0
  Inst 21148:   nop     len=0
  Inst 21149:   jmp     label668
Block 668:
  (original IR block: block334)
  (successor: Block 669)
  (successor: Block 670)
  (instruction range: 21150 .. 21161)
  Inst 21150:   movq    rsp(2064 + virtual offset), %rsi
  Inst 21151:   movq    8(%rsi), %rdi
  Inst 21152:   movq    rsp(2048 + virtual offset), %rsi
  Inst 21153:   load_ext_name u0:2+0, %rax
  Inst 21154:   movq    %rsi, rsp(1088 + virtual offset)
  Inst 21155:   movq    %rdi, rsp(1104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21156:   call    *%rax
  Inst 21157:   movq    %rax, %r15
  Inst 21158:   movq    %rdx, %r14
  Inst 21159:   testq   %r14, %r14
  Inst 21160:   jz      label669; j label670
Block 669:
  (successor: Block 672)
  (instruction range: 21161 .. 21246)
  Inst 21161:   movq    %r15, rsp(1088 + virtual offset)
  Inst 21162:   nop     len=0
  Inst 21163:   nop     len=0
  Inst 21164:   nop     len=0
  Inst 21165:   nop     len=0
  Inst 21166:   nop     len=0
  Inst 21167:   nop     len=0
  Inst 21168:   nop     len=0
  Inst 21169:   nop     len=0
  Inst 21170:   nop     len=0
  Inst 21171:   nop     len=0
  Inst 21172:   nop     len=0
  Inst 21173:   nop     len=0
  Inst 21174:   nop     len=0
  Inst 21175:   nop     len=0
  Inst 21176:   nop     len=0
  Inst 21177:   nop     len=0
  Inst 21178:   nop     len=0
  Inst 21179:   nop     len=0
  Inst 21180:   nop     len=0
  Inst 21181:   nop     len=0
  Inst 21182:   nop     len=0
  Inst 21183:   nop     len=0
  Inst 21184:   nop     len=0
  Inst 21185:   nop     len=0
  Inst 21186:   nop     len=0
  Inst 21187:   nop     len=0
  Inst 21188:   nop     len=0
  Inst 21189:   nop     len=0
  Inst 21190:   nop     len=0
  Inst 21191:   nop     len=0
  Inst 21192:   nop     len=0
  Inst 21193:   nop     len=0
  Inst 21194:   nop     len=0
  Inst 21195:   nop     len=0
  Inst 21196:   nop     len=0
  Inst 21197:   nop     len=0
  Inst 21198:   nop     len=0
  Inst 21199:   nop     len=0
  Inst 21200:   nop     len=0
  Inst 21201:   nop     len=0
  Inst 21202:   nop     len=0
  Inst 21203:   nop     len=0
  Inst 21204:   nop     len=0
  Inst 21205:   nop     len=0
  Inst 21206:   nop     len=0
  Inst 21207:   nop     len=0
  Inst 21208:   nop     len=0
  Inst 21209:   nop     len=0
  Inst 21210:   nop     len=0
  Inst 21211:   nop     len=0
  Inst 21212:   nop     len=0
  Inst 21213:   nop     len=0
  Inst 21214:   nop     len=0
  Inst 21215:   nop     len=0
  Inst 21216:   nop     len=0
  Inst 21217:   nop     len=0
  Inst 21218:   nop     len=0
  Inst 21219:   nop     len=0
  Inst 21220:   nop     len=0
  Inst 21221:   nop     len=0
  Inst 21222:   nop     len=0
  Inst 21223:   nop     len=0
  Inst 21224:   nop     len=0
  Inst 21225:   nop     len=0
  Inst 21226:   nop     len=0
  Inst 21227:   nop     len=0
  Inst 21228:   nop     len=0
  Inst 21229:   nop     len=0
  Inst 21230:   nop     len=0
  Inst 21231:   nop     len=0
  Inst 21232:   nop     len=0
  Inst 21233:   nop     len=0
  Inst 21234:   nop     len=0
  Inst 21235:   nop     len=0
  Inst 21236:   nop     len=0
  Inst 21237:   nop     len=0
  Inst 21238:   nop     len=0
  Inst 21239:   nop     len=0
  Inst 21240:   nop     len=0
  Inst 21241:   nop     len=0
  Inst 21242:   nop     len=0
  Inst 21243:   nop     len=0
  Inst 21244:   nop     len=0
  Inst 21245:   jmp     label672
Block 670:
  (original IR block: block337)
  (successor: Block 671)
  (instruction range: 21246 .. 21275)
  Inst 21246:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21247:   movq    152(%rsi), %r13
  Inst 21248:   movq    %r14, %rbx
  Inst 21249:   addq    $-1, %rbx
  Inst 21250:   movq    %r14, %rdx
  Inst 21251:   shlq    $3, %rdx
  Inst 21252:   movq    %r13, %r12
  Inst 21253:   addq    %rdx, %r12
  Inst 21254:   movq    %r13, %rdi
  Inst 21255:   addq    $-24, %rdi
  Inst 21256:   movq    %r13, %rsi
  Inst 21257:   load_ext_name %Memmove+0, %rax
  Inst 21258:   movq    %r15, rsp(1104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S137, S138, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21259:   call    *%rax
  Inst 21260:   movq    rsp(1104 + virtual offset), %r15
  Inst 21261:   load_ext_name u1:1+0, %rsi
  Inst 21262:   movl    $1, %edi
  Inst 21263:   movq    %rdi, -8(%r13,%r14,8)
  Inst 21264:   movl    $1, %edi
  Inst 21265:   movq    %rdi, -16(%r13,%r14,8)
  Inst 21266:   movq    %rsi, -24(%r13,%r14,8)
  Inst 21267:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21268:   movq    %r12, 152(%rsi)
  Inst 21269:   movq    %r15, %rdi
  Inst 21270:   movq    %rbx, %rsi
  Inst 21271:   load_ext_name u0:3+0, %rax
  Inst 21272:   movq    %rdi, rsp(1088 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21273:   call    *%rax
  Inst 21274:   jmp     label671
Block 671:
  (successor: Block 672)
  (instruction range: 21275 .. 21360)
  Inst 21275:   movq    %rax, rsp(1088 + virtual offset)
  Inst 21276:   nop     len=0
  Inst 21277:   nop     len=0
  Inst 21278:   nop     len=0
  Inst 21279:   nop     len=0
  Inst 21280:   nop     len=0
  Inst 21281:   nop     len=0
  Inst 21282:   nop     len=0
  Inst 21283:   nop     len=0
  Inst 21284:   nop     len=0
  Inst 21285:   nop     len=0
  Inst 21286:   nop     len=0
  Inst 21287:   nop     len=0
  Inst 21288:   nop     len=0
  Inst 21289:   nop     len=0
  Inst 21290:   nop     len=0
  Inst 21291:   nop     len=0
  Inst 21292:   nop     len=0
  Inst 21293:   nop     len=0
  Inst 21294:   nop     len=0
  Inst 21295:   nop     len=0
  Inst 21296:   nop     len=0
  Inst 21297:   nop     len=0
  Inst 21298:   nop     len=0
  Inst 21299:   nop     len=0
  Inst 21300:   nop     len=0
  Inst 21301:   nop     len=0
  Inst 21302:   nop     len=0
  Inst 21303:   nop     len=0
  Inst 21304:   nop     len=0
  Inst 21305:   nop     len=0
  Inst 21306:   nop     len=0
  Inst 21307:   nop     len=0
  Inst 21308:   nop     len=0
  Inst 21309:   nop     len=0
  Inst 21310:   nop     len=0
  Inst 21311:   nop     len=0
  Inst 21312:   nop     len=0
  Inst 21313:   nop     len=0
  Inst 21314:   nop     len=0
  Inst 21315:   nop     len=0
  Inst 21316:   nop     len=0
  Inst 21317:   nop     len=0
  Inst 21318:   nop     len=0
  Inst 21319:   nop     len=0
  Inst 21320:   nop     len=0
  Inst 21321:   nop     len=0
  Inst 21322:   nop     len=0
  Inst 21323:   nop     len=0
  Inst 21324:   nop     len=0
  Inst 21325:   nop     len=0
  Inst 21326:   nop     len=0
  Inst 21327:   nop     len=0
  Inst 21328:   nop     len=0
  Inst 21329:   nop     len=0
  Inst 21330:   nop     len=0
  Inst 21331:   nop     len=0
  Inst 21332:   nop     len=0
  Inst 21333:   nop     len=0
  Inst 21334:   nop     len=0
  Inst 21335:   nop     len=0
  Inst 21336:   nop     len=0
  Inst 21337:   nop     len=0
  Inst 21338:   nop     len=0
  Inst 21339:   nop     len=0
  Inst 21340:   nop     len=0
  Inst 21341:   nop     len=0
  Inst 21342:   nop     len=0
  Inst 21343:   nop     len=0
  Inst 21344:   nop     len=0
  Inst 21345:   nop     len=0
  Inst 21346:   nop     len=0
  Inst 21347:   nop     len=0
  Inst 21348:   nop     len=0
  Inst 21349:   nop     len=0
  Inst 21350:   nop     len=0
  Inst 21351:   nop     len=0
  Inst 21352:   nop     len=0
  Inst 21353:   nop     len=0
  Inst 21354:   nop     len=0
  Inst 21355:   nop     len=0
  Inst 21356:   nop     len=0
  Inst 21357:   nop     len=0
  Inst 21358:   nop     len=0
  Inst 21359:   jmp     label672
Block 672:
  (original IR block: block336)
  (successor: Block 673)
  (successor: Block 674)
  (instruction range: 21360 .. 21371)
  Inst 21360:   movq    rsp(2064 + virtual offset), %rsi
  Inst 21361:   movq    8(%rsi), %rdi
  Inst 21362:   movq    rsp(2048 + virtual offset), %rsi
  Inst 21363:   load_ext_name u0:2+0, %rax
  Inst 21364:   movq    %rsi, rsp(1104 + virtual offset)
  Inst 21365:   movq    %rdi, rsp(1120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21366:   call    *%rax
  Inst 21367:   movq    %rax, %rbx
  Inst 21368:   movq    %rdx, %r14
  Inst 21369:   testq   %r14, %r14
  Inst 21370:   jz      label673; j label674
Block 673:
  (successor: Block 676)
  (instruction range: 21371 .. 21457)
  Inst 21371:   movq    %rbx, rsp(1608 + virtual offset)
  Inst 21372:   nop     len=0
  Inst 21373:   nop     len=0
  Inst 21374:   nop     len=0
  Inst 21375:   nop     len=0
  Inst 21376:   nop     len=0
  Inst 21377:   nop     len=0
  Inst 21378:   nop     len=0
  Inst 21379:   nop     len=0
  Inst 21380:   nop     len=0
  Inst 21381:   nop     len=0
  Inst 21382:   nop     len=0
  Inst 21383:   nop     len=0
  Inst 21384:   nop     len=0
  Inst 21385:   nop     len=0
  Inst 21386:   nop     len=0
  Inst 21387:   nop     len=0
  Inst 21388:   nop     len=0
  Inst 21389:   nop     len=0
  Inst 21390:   nop     len=0
  Inst 21391:   nop     len=0
  Inst 21392:   nop     len=0
  Inst 21393:   nop     len=0
  Inst 21394:   nop     len=0
  Inst 21395:   nop     len=0
  Inst 21396:   nop     len=0
  Inst 21397:   nop     len=0
  Inst 21398:   nop     len=0
  Inst 21399:   nop     len=0
  Inst 21400:   nop     len=0
  Inst 21401:   nop     len=0
  Inst 21402:   nop     len=0
  Inst 21403:   nop     len=0
  Inst 21404:   nop     len=0
  Inst 21405:   nop     len=0
  Inst 21406:   nop     len=0
  Inst 21407:   nop     len=0
  Inst 21408:   nop     len=0
  Inst 21409:   nop     len=0
  Inst 21410:   nop     len=0
  Inst 21411:   nop     len=0
  Inst 21412:   nop     len=0
  Inst 21413:   nop     len=0
  Inst 21414:   nop     len=0
  Inst 21415:   nop     len=0
  Inst 21416:   nop     len=0
  Inst 21417:   nop     len=0
  Inst 21418:   nop     len=0
  Inst 21419:   nop     len=0
  Inst 21420:   nop     len=0
  Inst 21421:   nop     len=0
  Inst 21422:   nop     len=0
  Inst 21423:   nop     len=0
  Inst 21424:   nop     len=0
  Inst 21425:   nop     len=0
  Inst 21426:   nop     len=0
  Inst 21427:   nop     len=0
  Inst 21428:   nop     len=0
  Inst 21429:   nop     len=0
  Inst 21430:   nop     len=0
  Inst 21431:   nop     len=0
  Inst 21432:   nop     len=0
  Inst 21433:   nop     len=0
  Inst 21434:   nop     len=0
  Inst 21435:   nop     len=0
  Inst 21436:   nop     len=0
  Inst 21437:   nop     len=0
  Inst 21438:   nop     len=0
  Inst 21439:   nop     len=0
  Inst 21440:   nop     len=0
  Inst 21441:   nop     len=0
  Inst 21442:   nop     len=0
  Inst 21443:   nop     len=0
  Inst 21444:   nop     len=0
  Inst 21445:   nop     len=0
  Inst 21446:   nop     len=0
  Inst 21447:   nop     len=0
  Inst 21448:   nop     len=0
  Inst 21449:   nop     len=0
  Inst 21450:   nop     len=0
  Inst 21451:   nop     len=0
  Inst 21452:   nop     len=0
  Inst 21453:   nop     len=0
  Inst 21454:   nop     len=0
  Inst 21455:   nop     len=0
  Inst 21456:   jmp     label676
Block 674:
  (original IR block: block339)
  (successor: Block 675)
  (instruction range: 21457 .. 21486)
  Inst 21457:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21458:   movq    152(%rsi), %r13
  Inst 21459:   movq    %r14, %r15
  Inst 21460:   addq    $-1, %r15
  Inst 21461:   movq    %r14, %rdx
  Inst 21462:   shlq    $3, %rdx
  Inst 21463:   movq    %r13, %r12
  Inst 21464:   addq    %rdx, %r12
  Inst 21465:   movq    %r13, %rdi
  Inst 21466:   addq    $-24, %rdi
  Inst 21467:   movq    %r13, %rsi
  Inst 21468:   load_ext_name %Memmove+0, %rax
  Inst 21469:   movq    %rbx, rsp(1104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21470:   call    *%rax
  Inst 21471:   movq    rsp(1104 + virtual offset), %rbx
  Inst 21472:   load_ext_name u1:1+0, %rsi
  Inst 21473:   movl    $1, %edi
  Inst 21474:   movq    %rdi, -8(%r13,%r14,8)
  Inst 21475:   movl    $1, %edi
  Inst 21476:   movq    %rdi, -16(%r13,%r14,8)
  Inst 21477:   movq    %rsi, -24(%r13,%r14,8)
  Inst 21478:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21479:   movq    %r12, 152(%rsi)
  Inst 21480:   movq    %rbx, %rdi
  Inst 21481:   movq    %r15, %rsi
  Inst 21482:   load_ext_name u0:3+0, %rax
  Inst 21483:   movq    %rdi, rsp(1104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21484:   call    *%rax
  Inst 21485:   jmp     label675
Block 675:
  (successor: Block 676)
  (instruction range: 21486 .. 21572)
  Inst 21486:   movq    %rax, rsp(1608 + virtual offset)
  Inst 21487:   nop     len=0
  Inst 21488:   nop     len=0
  Inst 21489:   nop     len=0
  Inst 21490:   nop     len=0
  Inst 21491:   nop     len=0
  Inst 21492:   nop     len=0
  Inst 21493:   nop     len=0
  Inst 21494:   nop     len=0
  Inst 21495:   nop     len=0
  Inst 21496:   nop     len=0
  Inst 21497:   nop     len=0
  Inst 21498:   nop     len=0
  Inst 21499:   nop     len=0
  Inst 21500:   nop     len=0
  Inst 21501:   nop     len=0
  Inst 21502:   nop     len=0
  Inst 21503:   nop     len=0
  Inst 21504:   nop     len=0
  Inst 21505:   nop     len=0
  Inst 21506:   nop     len=0
  Inst 21507:   nop     len=0
  Inst 21508:   nop     len=0
  Inst 21509:   nop     len=0
  Inst 21510:   nop     len=0
  Inst 21511:   nop     len=0
  Inst 21512:   nop     len=0
  Inst 21513:   nop     len=0
  Inst 21514:   nop     len=0
  Inst 21515:   nop     len=0
  Inst 21516:   nop     len=0
  Inst 21517:   nop     len=0
  Inst 21518:   nop     len=0
  Inst 21519:   nop     len=0
  Inst 21520:   nop     len=0
  Inst 21521:   nop     len=0
  Inst 21522:   nop     len=0
  Inst 21523:   nop     len=0
  Inst 21524:   nop     len=0
  Inst 21525:   nop     len=0
  Inst 21526:   nop     len=0
  Inst 21527:   nop     len=0
  Inst 21528:   nop     len=0
  Inst 21529:   nop     len=0
  Inst 21530:   nop     len=0
  Inst 21531:   nop     len=0
  Inst 21532:   nop     len=0
  Inst 21533:   nop     len=0
  Inst 21534:   nop     len=0
  Inst 21535:   nop     len=0
  Inst 21536:   nop     len=0
  Inst 21537:   nop     len=0
  Inst 21538:   nop     len=0
  Inst 21539:   nop     len=0
  Inst 21540:   nop     len=0
  Inst 21541:   nop     len=0
  Inst 21542:   nop     len=0
  Inst 21543:   nop     len=0
  Inst 21544:   nop     len=0
  Inst 21545:   nop     len=0
  Inst 21546:   nop     len=0
  Inst 21547:   nop     len=0
  Inst 21548:   nop     len=0
  Inst 21549:   nop     len=0
  Inst 21550:   nop     len=0
  Inst 21551:   nop     len=0
  Inst 21552:   nop     len=0
  Inst 21553:   nop     len=0
  Inst 21554:   nop     len=0
  Inst 21555:   nop     len=0
  Inst 21556:   nop     len=0
  Inst 21557:   nop     len=0
  Inst 21558:   nop     len=0
  Inst 21559:   nop     len=0
  Inst 21560:   nop     len=0
  Inst 21561:   nop     len=0
  Inst 21562:   nop     len=0
  Inst 21563:   nop     len=0
  Inst 21564:   nop     len=0
  Inst 21565:   nop     len=0
  Inst 21566:   nop     len=0
  Inst 21567:   nop     len=0
  Inst 21568:   nop     len=0
  Inst 21569:   nop     len=0
  Inst 21570:   nop     len=0
  Inst 21571:   jmp     label676
Block 676:
  (original IR block: block338)
  (successor: Block 677)
  (successor: Block 678)
  (instruction range: 21572 .. 21583)
  Inst 21572:   movq    rsp(2064 + virtual offset), %rsi
  Inst 21573:   movq    8(%rsi), %rdi
  Inst 21574:   movq    rsp(2048 + virtual offset), %rsi
  Inst 21575:   load_ext_name u0:2+0, %rax
  Inst 21576:   movq    %rsi, rsp(1104 + virtual offset)
  Inst 21577:   movq    %rdi, rsp(1120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21578:   call    *%rax
  Inst 21579:   movq    %rax, %rbx
  Inst 21580:   movq    %rdx, %r14
  Inst 21581:   testq   %r14, %r14
  Inst 21582:   jz      label677; j label678
Block 677:
  (successor: Block 680)
  (instruction range: 21583 .. 21669)
  Inst 21583:   movq    %rbx, rsp(1104 + virtual offset)
  Inst 21584:   nop     len=0
  Inst 21585:   nop     len=0
  Inst 21586:   nop     len=0
  Inst 21587:   nop     len=0
  Inst 21588:   nop     len=0
  Inst 21589:   nop     len=0
  Inst 21590:   nop     len=0
  Inst 21591:   nop     len=0
  Inst 21592:   nop     len=0
  Inst 21593:   nop     len=0
  Inst 21594:   nop     len=0
  Inst 21595:   nop     len=0
  Inst 21596:   nop     len=0
  Inst 21597:   nop     len=0
  Inst 21598:   nop     len=0
  Inst 21599:   nop     len=0
  Inst 21600:   nop     len=0
  Inst 21601:   nop     len=0
  Inst 21602:   nop     len=0
  Inst 21603:   nop     len=0
  Inst 21604:   nop     len=0
  Inst 21605:   nop     len=0
  Inst 21606:   nop     len=0
  Inst 21607:   nop     len=0
  Inst 21608:   nop     len=0
  Inst 21609:   nop     len=0
  Inst 21610:   nop     len=0
  Inst 21611:   nop     len=0
  Inst 21612:   nop     len=0
  Inst 21613:   nop     len=0
  Inst 21614:   nop     len=0
  Inst 21615:   nop     len=0
  Inst 21616:   nop     len=0
  Inst 21617:   nop     len=0
  Inst 21618:   nop     len=0
  Inst 21619:   nop     len=0
  Inst 21620:   nop     len=0
  Inst 21621:   nop     len=0
  Inst 21622:   nop     len=0
  Inst 21623:   nop     len=0
  Inst 21624:   nop     len=0
  Inst 21625:   nop     len=0
  Inst 21626:   nop     len=0
  Inst 21627:   nop     len=0
  Inst 21628:   nop     len=0
  Inst 21629:   nop     len=0
  Inst 21630:   nop     len=0
  Inst 21631:   nop     len=0
  Inst 21632:   nop     len=0
  Inst 21633:   nop     len=0
  Inst 21634:   nop     len=0
  Inst 21635:   nop     len=0
  Inst 21636:   nop     len=0
  Inst 21637:   nop     len=0
  Inst 21638:   nop     len=0
  Inst 21639:   nop     len=0
  Inst 21640:   nop     len=0
  Inst 21641:   nop     len=0
  Inst 21642:   nop     len=0
  Inst 21643:   nop     len=0
  Inst 21644:   nop     len=0
  Inst 21645:   nop     len=0
  Inst 21646:   nop     len=0
  Inst 21647:   nop     len=0
  Inst 21648:   nop     len=0
  Inst 21649:   nop     len=0
  Inst 21650:   nop     len=0
  Inst 21651:   nop     len=0
  Inst 21652:   nop     len=0
  Inst 21653:   nop     len=0
  Inst 21654:   nop     len=0
  Inst 21655:   nop     len=0
  Inst 21656:   nop     len=0
  Inst 21657:   nop     len=0
  Inst 21658:   nop     len=0
  Inst 21659:   nop     len=0
  Inst 21660:   nop     len=0
  Inst 21661:   nop     len=0
  Inst 21662:   nop     len=0
  Inst 21663:   nop     len=0
  Inst 21664:   nop     len=0
  Inst 21665:   nop     len=0
  Inst 21666:   nop     len=0
  Inst 21667:   nop     len=0
  Inst 21668:   jmp     label680
Block 678:
  (original IR block: block341)
  (successor: Block 679)
  (instruction range: 21669 .. 21698)
  Inst 21669:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21670:   movq    152(%rsi), %r13
  Inst 21671:   movq    %r14, %r15
  Inst 21672:   addq    $-1, %r15
  Inst 21673:   movq    %r14, %rdx
  Inst 21674:   shlq    $3, %rdx
  Inst 21675:   movq    %r13, %r12
  Inst 21676:   addq    %rdx, %r12
  Inst 21677:   movq    %r13, %rdi
  Inst 21678:   addq    $-24, %rdi
  Inst 21679:   movq    %r13, %rsi
  Inst 21680:   load_ext_name %Memmove+0, %rax
  Inst 21681:   movq    %rbx, rsp(1120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S139, S140, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21682:   call    *%rax
  Inst 21683:   movq    rsp(1120 + virtual offset), %rbx
  Inst 21684:   load_ext_name u1:1+0, %rsi
  Inst 21685:   movl    $1, %edi
  Inst 21686:   movq    %rdi, -8(%r13,%r14,8)
  Inst 21687:   movl    $1, %edi
  Inst 21688:   movq    %rdi, -16(%r13,%r14,8)
  Inst 21689:   movq    %rsi, -24(%r13,%r14,8)
  Inst 21690:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21691:   movq    %r12, 152(%rsi)
  Inst 21692:   movq    %rbx, %rdi
  Inst 21693:   movq    %r15, %rsi
  Inst 21694:   load_ext_name u0:3+0, %rax
  Inst 21695:   movq    %rdi, rsp(1104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21696:   call    *%rax
  Inst 21697:   jmp     label679
Block 679:
  (successor: Block 680)
  (instruction range: 21698 .. 21784)
  Inst 21698:   movq    %rax, rsp(1104 + virtual offset)
  Inst 21699:   nop     len=0
  Inst 21700:   nop     len=0
  Inst 21701:   nop     len=0
  Inst 21702:   nop     len=0
  Inst 21703:   nop     len=0
  Inst 21704:   nop     len=0
  Inst 21705:   nop     len=0
  Inst 21706:   nop     len=0
  Inst 21707:   nop     len=0
  Inst 21708:   nop     len=0
  Inst 21709:   nop     len=0
  Inst 21710:   nop     len=0
  Inst 21711:   nop     len=0
  Inst 21712:   nop     len=0
  Inst 21713:   nop     len=0
  Inst 21714:   nop     len=0
  Inst 21715:   nop     len=0
  Inst 21716:   nop     len=0
  Inst 21717:   nop     len=0
  Inst 21718:   nop     len=0
  Inst 21719:   nop     len=0
  Inst 21720:   nop     len=0
  Inst 21721:   nop     len=0
  Inst 21722:   nop     len=0
  Inst 21723:   nop     len=0
  Inst 21724:   nop     len=0
  Inst 21725:   nop     len=0
  Inst 21726:   nop     len=0
  Inst 21727:   nop     len=0
  Inst 21728:   nop     len=0
  Inst 21729:   nop     len=0
  Inst 21730:   nop     len=0
  Inst 21731:   nop     len=0
  Inst 21732:   nop     len=0
  Inst 21733:   nop     len=0
  Inst 21734:   nop     len=0
  Inst 21735:   nop     len=0
  Inst 21736:   nop     len=0
  Inst 21737:   nop     len=0
  Inst 21738:   nop     len=0
  Inst 21739:   nop     len=0
  Inst 21740:   nop     len=0
  Inst 21741:   nop     len=0
  Inst 21742:   nop     len=0
  Inst 21743:   nop     len=0
  Inst 21744:   nop     len=0
  Inst 21745:   nop     len=0
  Inst 21746:   nop     len=0
  Inst 21747:   nop     len=0
  Inst 21748:   nop     len=0
  Inst 21749:   nop     len=0
  Inst 21750:   nop     len=0
  Inst 21751:   nop     len=0
  Inst 21752:   nop     len=0
  Inst 21753:   nop     len=0
  Inst 21754:   nop     len=0
  Inst 21755:   nop     len=0
  Inst 21756:   nop     len=0
  Inst 21757:   nop     len=0
  Inst 21758:   nop     len=0
  Inst 21759:   nop     len=0
  Inst 21760:   nop     len=0
  Inst 21761:   nop     len=0
  Inst 21762:   nop     len=0
  Inst 21763:   nop     len=0
  Inst 21764:   nop     len=0
  Inst 21765:   nop     len=0
  Inst 21766:   nop     len=0
  Inst 21767:   nop     len=0
  Inst 21768:   nop     len=0
  Inst 21769:   nop     len=0
  Inst 21770:   nop     len=0
  Inst 21771:   nop     len=0
  Inst 21772:   nop     len=0
  Inst 21773:   nop     len=0
  Inst 21774:   nop     len=0
  Inst 21775:   nop     len=0
  Inst 21776:   nop     len=0
  Inst 21777:   nop     len=0
  Inst 21778:   nop     len=0
  Inst 21779:   nop     len=0
  Inst 21780:   nop     len=0
  Inst 21781:   nop     len=0
  Inst 21782:   nop     len=0
  Inst 21783:   jmp     label680
Block 680:
  (original IR block: block340)
  (successor: Block 681)
  (successor: Block 682)
  (instruction range: 21784 .. 21795)
  Inst 21784:   movq    rsp(2064 + virtual offset), %rsi
  Inst 21785:   movq    8(%rsi), %rdi
  Inst 21786:   movq    rsp(2048 + virtual offset), %rsi
  Inst 21787:   load_ext_name u0:2+0, %rax
  Inst 21788:   movq    %rsi, rsp(1120 + virtual offset)
  Inst 21789:   movq    %rdi, rsp(1136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21790:   call    *%rax
  Inst 21791:   movq    %rax, %r15
  Inst 21792:   movq    %rdx, %r14
  Inst 21793:   testq   %r14, %r14
  Inst 21794:   jz      label681; j label682
Block 681:
  (successor: Block 684)
  (instruction range: 21795 .. 21882)
  Inst 21795:   movq    %r15, rsp(1624 + virtual offset)
  Inst 21796:   nop     len=0
  Inst 21797:   nop     len=0
  Inst 21798:   nop     len=0
  Inst 21799:   nop     len=0
  Inst 21800:   nop     len=0
  Inst 21801:   nop     len=0
  Inst 21802:   nop     len=0
  Inst 21803:   nop     len=0
  Inst 21804:   nop     len=0
  Inst 21805:   nop     len=0
  Inst 21806:   nop     len=0
  Inst 21807:   nop     len=0
  Inst 21808:   nop     len=0
  Inst 21809:   nop     len=0
  Inst 21810:   nop     len=0
  Inst 21811:   nop     len=0
  Inst 21812:   nop     len=0
  Inst 21813:   nop     len=0
  Inst 21814:   nop     len=0
  Inst 21815:   nop     len=0
  Inst 21816:   nop     len=0
  Inst 21817:   nop     len=0
  Inst 21818:   nop     len=0
  Inst 21819:   nop     len=0
  Inst 21820:   nop     len=0
  Inst 21821:   nop     len=0
  Inst 21822:   nop     len=0
  Inst 21823:   nop     len=0
  Inst 21824:   nop     len=0
  Inst 21825:   nop     len=0
  Inst 21826:   nop     len=0
  Inst 21827:   nop     len=0
  Inst 21828:   nop     len=0
  Inst 21829:   nop     len=0
  Inst 21830:   nop     len=0
  Inst 21831:   nop     len=0
  Inst 21832:   nop     len=0
  Inst 21833:   nop     len=0
  Inst 21834:   nop     len=0
  Inst 21835:   nop     len=0
  Inst 21836:   nop     len=0
  Inst 21837:   nop     len=0
  Inst 21838:   nop     len=0
  Inst 21839:   nop     len=0
  Inst 21840:   nop     len=0
  Inst 21841:   nop     len=0
  Inst 21842:   nop     len=0
  Inst 21843:   nop     len=0
  Inst 21844:   nop     len=0
  Inst 21845:   nop     len=0
  Inst 21846:   nop     len=0
  Inst 21847:   nop     len=0
  Inst 21848:   nop     len=0
  Inst 21849:   nop     len=0
  Inst 21850:   nop     len=0
  Inst 21851:   nop     len=0
  Inst 21852:   nop     len=0
  Inst 21853:   nop     len=0
  Inst 21854:   nop     len=0
  Inst 21855:   nop     len=0
  Inst 21856:   nop     len=0
  Inst 21857:   nop     len=0
  Inst 21858:   nop     len=0
  Inst 21859:   nop     len=0
  Inst 21860:   nop     len=0
  Inst 21861:   nop     len=0
  Inst 21862:   nop     len=0
  Inst 21863:   nop     len=0
  Inst 21864:   nop     len=0
  Inst 21865:   nop     len=0
  Inst 21866:   nop     len=0
  Inst 21867:   nop     len=0
  Inst 21868:   nop     len=0
  Inst 21869:   nop     len=0
  Inst 21870:   nop     len=0
  Inst 21871:   nop     len=0
  Inst 21872:   nop     len=0
  Inst 21873:   nop     len=0
  Inst 21874:   nop     len=0
  Inst 21875:   nop     len=0
  Inst 21876:   nop     len=0
  Inst 21877:   nop     len=0
  Inst 21878:   nop     len=0
  Inst 21879:   nop     len=0
  Inst 21880:   nop     len=0
  Inst 21881:   jmp     label684
Block 682:
  (original IR block: block343)
  (successor: Block 683)
  (instruction range: 21882 .. 21911)
  Inst 21882:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21883:   movq    152(%rsi), %r13
  Inst 21884:   movq    %r14, %rbx
  Inst 21885:   addq    $-1, %rbx
  Inst 21886:   movq    %r14, %rdx
  Inst 21887:   shlq    $3, %rdx
  Inst 21888:   movq    %r13, %r12
  Inst 21889:   addq    %rdx, %r12
  Inst 21890:   movq    %r13, %rdi
  Inst 21891:   addq    $-24, %rdi
  Inst 21892:   movq    %r13, %rsi
  Inst 21893:   load_ext_name %Memmove+0, %rax
  Inst 21894:   movq    %r15, rsp(1120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21895:   call    *%rax
  Inst 21896:   movq    rsp(1120 + virtual offset), %r15
  Inst 21897:   load_ext_name u1:1+0, %rsi
  Inst 21898:   movl    $1, %edi
  Inst 21899:   movq    %rdi, -8(%r13,%r14,8)
  Inst 21900:   movl    $1, %edi
  Inst 21901:   movq    %rdi, -16(%r13,%r14,8)
  Inst 21902:   movq    %rsi, -24(%r13,%r14,8)
  Inst 21903:   movq    rsp(2072 + virtual offset), %rsi
  Inst 21904:   movq    %r12, 152(%rsi)
  Inst 21905:   movq    %r15, %rdi
  Inst 21906:   movq    %rbx, %rsi
  Inst 21907:   load_ext_name u0:3+0, %rax
  Inst 21908:   movq    %rdi, rsp(1120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 21909:   call    *%rax
  Inst 21910:   jmp     label683
Block 683:
  (successor: Block 684)
  (instruction range: 21911 .. 21998)
  Inst 21911:   movq    %rax, rsp(1624 + virtual offset)
  Inst 21912:   nop     len=0
  Inst 21913:   nop     len=0
  Inst 21914:   nop     len=0
  Inst 21915:   nop     len=0
  Inst 21916:   nop     len=0
  Inst 21917:   nop     len=0
  Inst 21918:   nop     len=0
  Inst 21919:   nop     len=0
  Inst 21920:   nop     len=0
  Inst 21921:   nop     len=0
  Inst 21922:   nop     len=0
  Inst 21923:   nop     len=0
  Inst 21924:   nop     len=0
  Inst 21925:   nop     len=0
  Inst 21926:   nop     len=0
  Inst 21927:   nop     len=0
  Inst 21928:   nop     len=0
  Inst 21929:   nop     len=0
  Inst 21930:   nop     len=0
  Inst 21931:   nop     len=0
  Inst 21932:   nop     len=0
  Inst 21933:   nop     len=0
  Inst 21934:   nop     len=0
  Inst 21935:   nop     len=0
  Inst 21936:   nop     len=0
  Inst 21937:   nop     len=0
  Inst 21938:   nop     len=0
  Inst 21939:   nop     len=0
  Inst 21940:   nop     len=0
  Inst 21941:   nop     len=0
  Inst 21942:   nop     len=0
  Inst 21943:   nop     len=0
  Inst 21944:   nop     len=0
  Inst 21945:   nop     len=0
  Inst 21946:   nop     len=0
  Inst 21947:   nop     len=0
  Inst 21948:   nop     len=0
  Inst 21949:   nop     len=0
  Inst 21950:   nop     len=0
  Inst 21951:   nop     len=0
  Inst 21952:   nop     len=0
  Inst 21953:   nop     len=0
  Inst 21954:   nop     len=0
  Inst 21955:   nop     len=0
  Inst 21956:   nop     len=0
  Inst 21957:   nop     len=0
  Inst 21958:   nop     len=0
  Inst 21959:   nop     len=0
  Inst 21960:   nop     len=0
  Inst 21961:   nop     len=0
  Inst 21962:   nop     len=0
  Inst 21963:   nop     len=0
  Inst 21964:   nop     len=0
  Inst 21965:   nop     len=0
  Inst 21966:   nop     len=0
  Inst 21967:   nop     len=0
  Inst 21968:   nop     len=0
  Inst 21969:   nop     len=0
  Inst 21970:   nop     len=0
  Inst 21971:   nop     len=0
  Inst 21972:   nop     len=0
  Inst 21973:   nop     len=0
  Inst 21974:   nop     len=0
  Inst 21975:   nop     len=0
  Inst 21976:   nop     len=0
  Inst 21977:   nop     len=0
  Inst 21978:   nop     len=0
  Inst 21979:   nop     len=0
  Inst 21980:   nop     len=0
  Inst 21981:   nop     len=0
  Inst 21982:   nop     len=0
  Inst 21983:   nop     len=0
  Inst 21984:   nop     len=0
  Inst 21985:   nop     len=0
  Inst 21986:   nop     len=0
  Inst 21987:   nop     len=0
  Inst 21988:   nop     len=0
  Inst 21989:   nop     len=0
  Inst 21990:   nop     len=0
  Inst 21991:   nop     len=0
  Inst 21992:   nop     len=0
  Inst 21993:   nop     len=0
  Inst 21994:   nop     len=0
  Inst 21995:   nop     len=0
  Inst 21996:   nop     len=0
  Inst 21997:   jmp     label684
Block 684:
  (original IR block: block342)
  (successor: Block 685)
  (successor: Block 686)
  (instruction range: 21998 .. 22009)
  Inst 21998:   movq    rsp(2064 + virtual offset), %rsi
  Inst 21999:   movq    8(%rsi), %rdi
  Inst 22000:   movq    rsp(2048 + virtual offset), %rsi
  Inst 22001:   load_ext_name u0:2+0, %rax
  Inst 22002:   movq    %rsi, rsp(1120 + virtual offset)
  Inst 22003:   movq    %rdi, rsp(1136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22004:   call    *%rax
  Inst 22005:   movq    %rax, %rbx
  Inst 22006:   movq    %rdx, %r14
  Inst 22007:   testq   %r14, %r14
  Inst 22008:   jz      label685; j label686
Block 685:
  (successor: Block 688)
  (instruction range: 22009 .. 22096)
  Inst 22009:   movq    %rbx, rsp(1120 + virtual offset)
  Inst 22010:   nop     len=0
  Inst 22011:   nop     len=0
  Inst 22012:   nop     len=0
  Inst 22013:   nop     len=0
  Inst 22014:   nop     len=0
  Inst 22015:   nop     len=0
  Inst 22016:   nop     len=0
  Inst 22017:   nop     len=0
  Inst 22018:   nop     len=0
  Inst 22019:   nop     len=0
  Inst 22020:   nop     len=0
  Inst 22021:   nop     len=0
  Inst 22022:   nop     len=0
  Inst 22023:   nop     len=0
  Inst 22024:   nop     len=0
  Inst 22025:   nop     len=0
  Inst 22026:   nop     len=0
  Inst 22027:   nop     len=0
  Inst 22028:   nop     len=0
  Inst 22029:   nop     len=0
  Inst 22030:   nop     len=0
  Inst 22031:   nop     len=0
  Inst 22032:   nop     len=0
  Inst 22033:   nop     len=0
  Inst 22034:   nop     len=0
  Inst 22035:   nop     len=0
  Inst 22036:   nop     len=0
  Inst 22037:   nop     len=0
  Inst 22038:   nop     len=0
  Inst 22039:   nop     len=0
  Inst 22040:   nop     len=0
  Inst 22041:   nop     len=0
  Inst 22042:   nop     len=0
  Inst 22043:   nop     len=0
  Inst 22044:   nop     len=0
  Inst 22045:   nop     len=0
  Inst 22046:   nop     len=0
  Inst 22047:   nop     len=0
  Inst 22048:   nop     len=0
  Inst 22049:   nop     len=0
  Inst 22050:   nop     len=0
  Inst 22051:   nop     len=0
  Inst 22052:   nop     len=0
  Inst 22053:   nop     len=0
  Inst 22054:   nop     len=0
  Inst 22055:   nop     len=0
  Inst 22056:   nop     len=0
  Inst 22057:   nop     len=0
  Inst 22058:   nop     len=0
  Inst 22059:   nop     len=0
  Inst 22060:   nop     len=0
  Inst 22061:   nop     len=0
  Inst 22062:   nop     len=0
  Inst 22063:   nop     len=0
  Inst 22064:   nop     len=0
  Inst 22065:   nop     len=0
  Inst 22066:   nop     len=0
  Inst 22067:   nop     len=0
  Inst 22068:   nop     len=0
  Inst 22069:   nop     len=0
  Inst 22070:   nop     len=0
  Inst 22071:   nop     len=0
  Inst 22072:   nop     len=0
  Inst 22073:   nop     len=0
  Inst 22074:   nop     len=0
  Inst 22075:   nop     len=0
  Inst 22076:   nop     len=0
  Inst 22077:   nop     len=0
  Inst 22078:   nop     len=0
  Inst 22079:   nop     len=0
  Inst 22080:   nop     len=0
  Inst 22081:   nop     len=0
  Inst 22082:   nop     len=0
  Inst 22083:   nop     len=0
  Inst 22084:   nop     len=0
  Inst 22085:   nop     len=0
  Inst 22086:   nop     len=0
  Inst 22087:   nop     len=0
  Inst 22088:   nop     len=0
  Inst 22089:   nop     len=0
  Inst 22090:   nop     len=0
  Inst 22091:   nop     len=0
  Inst 22092:   nop     len=0
  Inst 22093:   nop     len=0
  Inst 22094:   nop     len=0
  Inst 22095:   jmp     label688
Block 686:
  (original IR block: block345)
  (successor: Block 687)
  (instruction range: 22096 .. 22125)
  Inst 22096:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22097:   movq    152(%rsi), %r13
  Inst 22098:   movq    %r14, %r15
  Inst 22099:   addq    $-1, %r15
  Inst 22100:   movq    %r14, %rdx
  Inst 22101:   shlq    $3, %rdx
  Inst 22102:   movq    %r13, %r12
  Inst 22103:   addq    %rdx, %r12
  Inst 22104:   movq    %r13, %rdi
  Inst 22105:   addq    $-24, %rdi
  Inst 22106:   movq    %r13, %rsi
  Inst 22107:   load_ext_name %Memmove+0, %rax
  Inst 22108:   movq    %rbx, rsp(1136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S141, S142, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22109:   call    *%rax
  Inst 22110:   movq    rsp(1136 + virtual offset), %rbx
  Inst 22111:   load_ext_name u1:1+0, %rsi
  Inst 22112:   movl    $1, %edi
  Inst 22113:   movq    %rdi, -8(%r13,%r14,8)
  Inst 22114:   movl    $1, %edi
  Inst 22115:   movq    %rdi, -16(%r13,%r14,8)
  Inst 22116:   movq    %rsi, -24(%r13,%r14,8)
  Inst 22117:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22118:   movq    %r12, 152(%rsi)
  Inst 22119:   movq    %rbx, %rdi
  Inst 22120:   movq    %r15, %rsi
  Inst 22121:   load_ext_name u0:3+0, %rax
  Inst 22122:   movq    %rdi, rsp(1120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22123:   call    *%rax
  Inst 22124:   jmp     label687
Block 687:
  (successor: Block 688)
  (instruction range: 22125 .. 22212)
  Inst 22125:   movq    %rax, rsp(1120 + virtual offset)
  Inst 22126:   nop     len=0
  Inst 22127:   nop     len=0
  Inst 22128:   nop     len=0
  Inst 22129:   nop     len=0
  Inst 22130:   nop     len=0
  Inst 22131:   nop     len=0
  Inst 22132:   nop     len=0
  Inst 22133:   nop     len=0
  Inst 22134:   nop     len=0
  Inst 22135:   nop     len=0
  Inst 22136:   nop     len=0
  Inst 22137:   nop     len=0
  Inst 22138:   nop     len=0
  Inst 22139:   nop     len=0
  Inst 22140:   nop     len=0
  Inst 22141:   nop     len=0
  Inst 22142:   nop     len=0
  Inst 22143:   nop     len=0
  Inst 22144:   nop     len=0
  Inst 22145:   nop     len=0
  Inst 22146:   nop     len=0
  Inst 22147:   nop     len=0
  Inst 22148:   nop     len=0
  Inst 22149:   nop     len=0
  Inst 22150:   nop     len=0
  Inst 22151:   nop     len=0
  Inst 22152:   nop     len=0
  Inst 22153:   nop     len=0
  Inst 22154:   nop     len=0
  Inst 22155:   nop     len=0
  Inst 22156:   nop     len=0
  Inst 22157:   nop     len=0
  Inst 22158:   nop     len=0
  Inst 22159:   nop     len=0
  Inst 22160:   nop     len=0
  Inst 22161:   nop     len=0
  Inst 22162:   nop     len=0
  Inst 22163:   nop     len=0
  Inst 22164:   nop     len=0
  Inst 22165:   nop     len=0
  Inst 22166:   nop     len=0
  Inst 22167:   nop     len=0
  Inst 22168:   nop     len=0
  Inst 22169:   nop     len=0
  Inst 22170:   nop     len=0
  Inst 22171:   nop     len=0
  Inst 22172:   nop     len=0
  Inst 22173:   nop     len=0
  Inst 22174:   nop     len=0
  Inst 22175:   nop     len=0
  Inst 22176:   nop     len=0
  Inst 22177:   nop     len=0
  Inst 22178:   nop     len=0
  Inst 22179:   nop     len=0
  Inst 22180:   nop     len=0
  Inst 22181:   nop     len=0
  Inst 22182:   nop     len=0
  Inst 22183:   nop     len=0
  Inst 22184:   nop     len=0
  Inst 22185:   nop     len=0
  Inst 22186:   nop     len=0
  Inst 22187:   nop     len=0
  Inst 22188:   nop     len=0
  Inst 22189:   nop     len=0
  Inst 22190:   nop     len=0
  Inst 22191:   nop     len=0
  Inst 22192:   nop     len=0
  Inst 22193:   nop     len=0
  Inst 22194:   nop     len=0
  Inst 22195:   nop     len=0
  Inst 22196:   nop     len=0
  Inst 22197:   nop     len=0
  Inst 22198:   nop     len=0
  Inst 22199:   nop     len=0
  Inst 22200:   nop     len=0
  Inst 22201:   nop     len=0
  Inst 22202:   nop     len=0
  Inst 22203:   nop     len=0
  Inst 22204:   nop     len=0
  Inst 22205:   nop     len=0
  Inst 22206:   nop     len=0
  Inst 22207:   nop     len=0
  Inst 22208:   nop     len=0
  Inst 22209:   nop     len=0
  Inst 22210:   nop     len=0
  Inst 22211:   jmp     label688
Block 688:
  (original IR block: block344)
  (successor: Block 689)
  (successor: Block 690)
  (instruction range: 22212 .. 22223)
  Inst 22212:   movq    rsp(2064 + virtual offset), %rsi
  Inst 22213:   movq    8(%rsi), %rdi
  Inst 22214:   movq    rsp(2048 + virtual offset), %rsi
  Inst 22215:   load_ext_name u0:2+0, %rax
  Inst 22216:   movq    %rsi, rsp(1136 + virtual offset)
  Inst 22217:   movq    %rdi, rsp(1152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22218:   call    *%rax
  Inst 22219:   movq    %rax, %rbx
  Inst 22220:   movq    %rdx, %r14
  Inst 22221:   testq   %r14, %r14
  Inst 22222:   jz      label689; j label690
Block 689:
  (successor: Block 692)
  (instruction range: 22223 .. 22311)
  Inst 22223:   movq    %rbx, rsp(1640 + virtual offset)
  Inst 22224:   nop     len=0
  Inst 22225:   nop     len=0
  Inst 22226:   nop     len=0
  Inst 22227:   nop     len=0
  Inst 22228:   nop     len=0
  Inst 22229:   nop     len=0
  Inst 22230:   nop     len=0
  Inst 22231:   nop     len=0
  Inst 22232:   nop     len=0
  Inst 22233:   nop     len=0
  Inst 22234:   nop     len=0
  Inst 22235:   nop     len=0
  Inst 22236:   nop     len=0
  Inst 22237:   nop     len=0
  Inst 22238:   nop     len=0
  Inst 22239:   nop     len=0
  Inst 22240:   nop     len=0
  Inst 22241:   nop     len=0
  Inst 22242:   nop     len=0
  Inst 22243:   nop     len=0
  Inst 22244:   nop     len=0
  Inst 22245:   nop     len=0
  Inst 22246:   nop     len=0
  Inst 22247:   nop     len=0
  Inst 22248:   nop     len=0
  Inst 22249:   nop     len=0
  Inst 22250:   nop     len=0
  Inst 22251:   nop     len=0
  Inst 22252:   nop     len=0
  Inst 22253:   nop     len=0
  Inst 22254:   nop     len=0
  Inst 22255:   nop     len=0
  Inst 22256:   nop     len=0
  Inst 22257:   nop     len=0
  Inst 22258:   nop     len=0
  Inst 22259:   nop     len=0
  Inst 22260:   nop     len=0
  Inst 22261:   nop     len=0
  Inst 22262:   nop     len=0
  Inst 22263:   nop     len=0
  Inst 22264:   nop     len=0
  Inst 22265:   nop     len=0
  Inst 22266:   nop     len=0
  Inst 22267:   nop     len=0
  Inst 22268:   nop     len=0
  Inst 22269:   nop     len=0
  Inst 22270:   nop     len=0
  Inst 22271:   nop     len=0
  Inst 22272:   nop     len=0
  Inst 22273:   nop     len=0
  Inst 22274:   nop     len=0
  Inst 22275:   nop     len=0
  Inst 22276:   nop     len=0
  Inst 22277:   nop     len=0
  Inst 22278:   nop     len=0
  Inst 22279:   nop     len=0
  Inst 22280:   nop     len=0
  Inst 22281:   nop     len=0
  Inst 22282:   nop     len=0
  Inst 22283:   nop     len=0
  Inst 22284:   nop     len=0
  Inst 22285:   nop     len=0
  Inst 22286:   nop     len=0
  Inst 22287:   nop     len=0
  Inst 22288:   nop     len=0
  Inst 22289:   nop     len=0
  Inst 22290:   nop     len=0
  Inst 22291:   nop     len=0
  Inst 22292:   nop     len=0
  Inst 22293:   nop     len=0
  Inst 22294:   nop     len=0
  Inst 22295:   nop     len=0
  Inst 22296:   nop     len=0
  Inst 22297:   nop     len=0
  Inst 22298:   nop     len=0
  Inst 22299:   nop     len=0
  Inst 22300:   nop     len=0
  Inst 22301:   nop     len=0
  Inst 22302:   nop     len=0
  Inst 22303:   nop     len=0
  Inst 22304:   nop     len=0
  Inst 22305:   nop     len=0
  Inst 22306:   nop     len=0
  Inst 22307:   nop     len=0
  Inst 22308:   nop     len=0
  Inst 22309:   nop     len=0
  Inst 22310:   jmp     label692
Block 690:
  (original IR block: block347)
  (successor: Block 691)
  (instruction range: 22311 .. 22340)
  Inst 22311:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22312:   movq    152(%rsi), %r13
  Inst 22313:   movq    %r14, %r15
  Inst 22314:   addq    $-1, %r15
  Inst 22315:   movq    %r14, %rdx
  Inst 22316:   shlq    $3, %rdx
  Inst 22317:   movq    %r13, %r12
  Inst 22318:   addq    %rdx, %r12
  Inst 22319:   movq    %r13, %rdi
  Inst 22320:   addq    $-24, %rdi
  Inst 22321:   movq    %r13, %rsi
  Inst 22322:   load_ext_name %Memmove+0, %rax
  Inst 22323:   movq    %rbx, rsp(1136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22324:   call    *%rax
  Inst 22325:   movq    rsp(1136 + virtual offset), %rbx
  Inst 22326:   load_ext_name u1:1+0, %rsi
  Inst 22327:   movl    $1, %edi
  Inst 22328:   movq    %rdi, -8(%r13,%r14,8)
  Inst 22329:   movl    $1, %edi
  Inst 22330:   movq    %rdi, -16(%r13,%r14,8)
  Inst 22331:   movq    %rsi, -24(%r13,%r14,8)
  Inst 22332:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22333:   movq    %r12, 152(%rsi)
  Inst 22334:   movq    %rbx, %rdi
  Inst 22335:   movq    %r15, %rsi
  Inst 22336:   load_ext_name u0:3+0, %rax
  Inst 22337:   movq    %rdi, rsp(1136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22338:   call    *%rax
  Inst 22339:   jmp     label691
Block 691:
  (successor: Block 692)
  (instruction range: 22340 .. 22428)
  Inst 22340:   movq    %rax, rsp(1640 + virtual offset)
  Inst 22341:   nop     len=0
  Inst 22342:   nop     len=0
  Inst 22343:   nop     len=0
  Inst 22344:   nop     len=0
  Inst 22345:   nop     len=0
  Inst 22346:   nop     len=0
  Inst 22347:   nop     len=0
  Inst 22348:   nop     len=0
  Inst 22349:   nop     len=0
  Inst 22350:   nop     len=0
  Inst 22351:   nop     len=0
  Inst 22352:   nop     len=0
  Inst 22353:   nop     len=0
  Inst 22354:   nop     len=0
  Inst 22355:   nop     len=0
  Inst 22356:   nop     len=0
  Inst 22357:   nop     len=0
  Inst 22358:   nop     len=0
  Inst 22359:   nop     len=0
  Inst 22360:   nop     len=0
  Inst 22361:   nop     len=0
  Inst 22362:   nop     len=0
  Inst 22363:   nop     len=0
  Inst 22364:   nop     len=0
  Inst 22365:   nop     len=0
  Inst 22366:   nop     len=0
  Inst 22367:   nop     len=0
  Inst 22368:   nop     len=0
  Inst 22369:   nop     len=0
  Inst 22370:   nop     len=0
  Inst 22371:   nop     len=0
  Inst 22372:   nop     len=0
  Inst 22373:   nop     len=0
  Inst 22374:   nop     len=0
  Inst 22375:   nop     len=0
  Inst 22376:   nop     len=0
  Inst 22377:   nop     len=0
  Inst 22378:   nop     len=0
  Inst 22379:   nop     len=0
  Inst 22380:   nop     len=0
  Inst 22381:   nop     len=0
  Inst 22382:   nop     len=0
  Inst 22383:   nop     len=0
  Inst 22384:   nop     len=0
  Inst 22385:   nop     len=0
  Inst 22386:   nop     len=0
  Inst 22387:   nop     len=0
  Inst 22388:   nop     len=0
  Inst 22389:   nop     len=0
  Inst 22390:   nop     len=0
  Inst 22391:   nop     len=0
  Inst 22392:   nop     len=0
  Inst 22393:   nop     len=0
  Inst 22394:   nop     len=0
  Inst 22395:   nop     len=0
  Inst 22396:   nop     len=0
  Inst 22397:   nop     len=0
  Inst 22398:   nop     len=0
  Inst 22399:   nop     len=0
  Inst 22400:   nop     len=0
  Inst 22401:   nop     len=0
  Inst 22402:   nop     len=0
  Inst 22403:   nop     len=0
  Inst 22404:   nop     len=0
  Inst 22405:   nop     len=0
  Inst 22406:   nop     len=0
  Inst 22407:   nop     len=0
  Inst 22408:   nop     len=0
  Inst 22409:   nop     len=0
  Inst 22410:   nop     len=0
  Inst 22411:   nop     len=0
  Inst 22412:   nop     len=0
  Inst 22413:   nop     len=0
  Inst 22414:   nop     len=0
  Inst 22415:   nop     len=0
  Inst 22416:   nop     len=0
  Inst 22417:   nop     len=0
  Inst 22418:   nop     len=0
  Inst 22419:   nop     len=0
  Inst 22420:   nop     len=0
  Inst 22421:   nop     len=0
  Inst 22422:   nop     len=0
  Inst 22423:   nop     len=0
  Inst 22424:   nop     len=0
  Inst 22425:   nop     len=0
  Inst 22426:   nop     len=0
  Inst 22427:   jmp     label692
Block 692:
  (original IR block: block346)
  (successor: Block 693)
  (successor: Block 694)
  (instruction range: 22428 .. 22439)
  Inst 22428:   movq    rsp(2064 + virtual offset), %rsi
  Inst 22429:   movq    8(%rsi), %rdi
  Inst 22430:   movq    rsp(2048 + virtual offset), %rsi
  Inst 22431:   load_ext_name u0:2+0, %rax
  Inst 22432:   movq    %rsi, rsp(1136 + virtual offset)
  Inst 22433:   movq    %rdi, rsp(1152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22434:   call    *%rax
  Inst 22435:   movq    %rax, %r15
  Inst 22436:   movq    %rdx, %r14
  Inst 22437:   testq   %r14, %r14
  Inst 22438:   jz      label693; j label694
Block 693:
  (successor: Block 696)
  (instruction range: 22439 .. 22527)
  Inst 22439:   movq    %r15, rsp(1136 + virtual offset)
  Inst 22440:   nop     len=0
  Inst 22441:   nop     len=0
  Inst 22442:   nop     len=0
  Inst 22443:   nop     len=0
  Inst 22444:   nop     len=0
  Inst 22445:   nop     len=0
  Inst 22446:   nop     len=0
  Inst 22447:   nop     len=0
  Inst 22448:   nop     len=0
  Inst 22449:   nop     len=0
  Inst 22450:   nop     len=0
  Inst 22451:   nop     len=0
  Inst 22452:   nop     len=0
  Inst 22453:   nop     len=0
  Inst 22454:   nop     len=0
  Inst 22455:   nop     len=0
  Inst 22456:   nop     len=0
  Inst 22457:   nop     len=0
  Inst 22458:   nop     len=0
  Inst 22459:   nop     len=0
  Inst 22460:   nop     len=0
  Inst 22461:   nop     len=0
  Inst 22462:   nop     len=0
  Inst 22463:   nop     len=0
  Inst 22464:   nop     len=0
  Inst 22465:   nop     len=0
  Inst 22466:   nop     len=0
  Inst 22467:   nop     len=0
  Inst 22468:   nop     len=0
  Inst 22469:   nop     len=0
  Inst 22470:   nop     len=0
  Inst 22471:   nop     len=0
  Inst 22472:   nop     len=0
  Inst 22473:   nop     len=0
  Inst 22474:   nop     len=0
  Inst 22475:   nop     len=0
  Inst 22476:   nop     len=0
  Inst 22477:   nop     len=0
  Inst 22478:   nop     len=0
  Inst 22479:   nop     len=0
  Inst 22480:   nop     len=0
  Inst 22481:   nop     len=0
  Inst 22482:   nop     len=0
  Inst 22483:   nop     len=0
  Inst 22484:   nop     len=0
  Inst 22485:   nop     len=0
  Inst 22486:   nop     len=0
  Inst 22487:   nop     len=0
  Inst 22488:   nop     len=0
  Inst 22489:   nop     len=0
  Inst 22490:   nop     len=0
  Inst 22491:   nop     len=0
  Inst 22492:   nop     len=0
  Inst 22493:   nop     len=0
  Inst 22494:   nop     len=0
  Inst 22495:   nop     len=0
  Inst 22496:   nop     len=0
  Inst 22497:   nop     len=0
  Inst 22498:   nop     len=0
  Inst 22499:   nop     len=0
  Inst 22500:   nop     len=0
  Inst 22501:   nop     len=0
  Inst 22502:   nop     len=0
  Inst 22503:   nop     len=0
  Inst 22504:   nop     len=0
  Inst 22505:   nop     len=0
  Inst 22506:   nop     len=0
  Inst 22507:   nop     len=0
  Inst 22508:   nop     len=0
  Inst 22509:   nop     len=0
  Inst 22510:   nop     len=0
  Inst 22511:   nop     len=0
  Inst 22512:   nop     len=0
  Inst 22513:   nop     len=0
  Inst 22514:   nop     len=0
  Inst 22515:   nop     len=0
  Inst 22516:   nop     len=0
  Inst 22517:   nop     len=0
  Inst 22518:   nop     len=0
  Inst 22519:   nop     len=0
  Inst 22520:   nop     len=0
  Inst 22521:   nop     len=0
  Inst 22522:   nop     len=0
  Inst 22523:   nop     len=0
  Inst 22524:   nop     len=0
  Inst 22525:   nop     len=0
  Inst 22526:   jmp     label696
Block 694:
  (original IR block: block349)
  (successor: Block 695)
  (instruction range: 22527 .. 22556)
  Inst 22527:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22528:   movq    152(%rsi), %r13
  Inst 22529:   movq    %r14, %rbx
  Inst 22530:   addq    $-1, %rbx
  Inst 22531:   movq    %r14, %rdx
  Inst 22532:   shlq    $3, %rdx
  Inst 22533:   movq    %r13, %r12
  Inst 22534:   addq    %rdx, %r12
  Inst 22535:   movq    %r13, %rdi
  Inst 22536:   addq    $-24, %rdi
  Inst 22537:   movq    %r13, %rsi
  Inst 22538:   load_ext_name %Memmove+0, %rax
  Inst 22539:   movq    %r15, rsp(1152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S143, S144, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22540:   call    *%rax
  Inst 22541:   movq    rsp(1152 + virtual offset), %r15
  Inst 22542:   load_ext_name u1:1+0, %rsi
  Inst 22543:   movl    $1, %edi
  Inst 22544:   movq    %rdi, -8(%r13,%r14,8)
  Inst 22545:   movl    $1, %edi
  Inst 22546:   movq    %rdi, -16(%r13,%r14,8)
  Inst 22547:   movq    %rsi, -24(%r13,%r14,8)
  Inst 22548:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22549:   movq    %r12, 152(%rsi)
  Inst 22550:   movq    %r15, %rdi
  Inst 22551:   movq    %rbx, %rsi
  Inst 22552:   load_ext_name u0:3+0, %rax
  Inst 22553:   movq    %rdi, rsp(1136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22554:   call    *%rax
  Inst 22555:   jmp     label695
Block 695:
  (successor: Block 696)
  (instruction range: 22556 .. 22644)
  Inst 22556:   movq    %rax, rsp(1136 + virtual offset)
  Inst 22557:   nop     len=0
  Inst 22558:   nop     len=0
  Inst 22559:   nop     len=0
  Inst 22560:   nop     len=0
  Inst 22561:   nop     len=0
  Inst 22562:   nop     len=0
  Inst 22563:   nop     len=0
  Inst 22564:   nop     len=0
  Inst 22565:   nop     len=0
  Inst 22566:   nop     len=0
  Inst 22567:   nop     len=0
  Inst 22568:   nop     len=0
  Inst 22569:   nop     len=0
  Inst 22570:   nop     len=0
  Inst 22571:   nop     len=0
  Inst 22572:   nop     len=0
  Inst 22573:   nop     len=0
  Inst 22574:   nop     len=0
  Inst 22575:   nop     len=0
  Inst 22576:   nop     len=0
  Inst 22577:   nop     len=0
  Inst 22578:   nop     len=0
  Inst 22579:   nop     len=0
  Inst 22580:   nop     len=0
  Inst 22581:   nop     len=0
  Inst 22582:   nop     len=0
  Inst 22583:   nop     len=0
  Inst 22584:   nop     len=0
  Inst 22585:   nop     len=0
  Inst 22586:   nop     len=0
  Inst 22587:   nop     len=0
  Inst 22588:   nop     len=0
  Inst 22589:   nop     len=0
  Inst 22590:   nop     len=0
  Inst 22591:   nop     len=0
  Inst 22592:   nop     len=0
  Inst 22593:   nop     len=0
  Inst 22594:   nop     len=0
  Inst 22595:   nop     len=0
  Inst 22596:   nop     len=0
  Inst 22597:   nop     len=0
  Inst 22598:   nop     len=0
  Inst 22599:   nop     len=0
  Inst 22600:   nop     len=0
  Inst 22601:   nop     len=0
  Inst 22602:   nop     len=0
  Inst 22603:   nop     len=0
  Inst 22604:   nop     len=0
  Inst 22605:   nop     len=0
  Inst 22606:   nop     len=0
  Inst 22607:   nop     len=0
  Inst 22608:   nop     len=0
  Inst 22609:   nop     len=0
  Inst 22610:   nop     len=0
  Inst 22611:   nop     len=0
  Inst 22612:   nop     len=0
  Inst 22613:   nop     len=0
  Inst 22614:   nop     len=0
  Inst 22615:   nop     len=0
  Inst 22616:   nop     len=0
  Inst 22617:   nop     len=0
  Inst 22618:   nop     len=0
  Inst 22619:   nop     len=0
  Inst 22620:   nop     len=0
  Inst 22621:   nop     len=0
  Inst 22622:   nop     len=0
  Inst 22623:   nop     len=0
  Inst 22624:   nop     len=0
  Inst 22625:   nop     len=0
  Inst 22626:   nop     len=0
  Inst 22627:   nop     len=0
  Inst 22628:   nop     len=0
  Inst 22629:   nop     len=0
  Inst 22630:   nop     len=0
  Inst 22631:   nop     len=0
  Inst 22632:   nop     len=0
  Inst 22633:   nop     len=0
  Inst 22634:   nop     len=0
  Inst 22635:   nop     len=0
  Inst 22636:   nop     len=0
  Inst 22637:   nop     len=0
  Inst 22638:   nop     len=0
  Inst 22639:   nop     len=0
  Inst 22640:   nop     len=0
  Inst 22641:   nop     len=0
  Inst 22642:   nop     len=0
  Inst 22643:   jmp     label696
Block 696:
  (original IR block: block348)
  (successor: Block 697)
  (successor: Block 698)
  (instruction range: 22644 .. 22655)
  Inst 22644:   movq    rsp(2064 + virtual offset), %rsi
  Inst 22645:   movq    8(%rsi), %rdi
  Inst 22646:   movq    rsp(2048 + virtual offset), %rsi
  Inst 22647:   load_ext_name u0:2+0, %rax
  Inst 22648:   movq    %rsi, rsp(1152 + virtual offset)
  Inst 22649:   movq    %rdi, rsp(1168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22650:   call    *%rax
  Inst 22651:   movq    %rax, %rbx
  Inst 22652:   movq    %rdx, %r14
  Inst 22653:   testq   %r14, %r14
  Inst 22654:   jz      label697; j label698
Block 697:
  (successor: Block 700)
  (instruction range: 22655 .. 22744)
  Inst 22655:   movq    %rbx, rsp(1656 + virtual offset)
  Inst 22656:   nop     len=0
  Inst 22657:   nop     len=0
  Inst 22658:   nop     len=0
  Inst 22659:   nop     len=0
  Inst 22660:   nop     len=0
  Inst 22661:   nop     len=0
  Inst 22662:   nop     len=0
  Inst 22663:   nop     len=0
  Inst 22664:   nop     len=0
  Inst 22665:   nop     len=0
  Inst 22666:   nop     len=0
  Inst 22667:   nop     len=0
  Inst 22668:   nop     len=0
  Inst 22669:   nop     len=0
  Inst 22670:   nop     len=0
  Inst 22671:   nop     len=0
  Inst 22672:   nop     len=0
  Inst 22673:   nop     len=0
  Inst 22674:   nop     len=0
  Inst 22675:   nop     len=0
  Inst 22676:   nop     len=0
  Inst 22677:   nop     len=0
  Inst 22678:   nop     len=0
  Inst 22679:   nop     len=0
  Inst 22680:   nop     len=0
  Inst 22681:   nop     len=0
  Inst 22682:   nop     len=0
  Inst 22683:   nop     len=0
  Inst 22684:   nop     len=0
  Inst 22685:   nop     len=0
  Inst 22686:   nop     len=0
  Inst 22687:   nop     len=0
  Inst 22688:   nop     len=0
  Inst 22689:   nop     len=0
  Inst 22690:   nop     len=0
  Inst 22691:   nop     len=0
  Inst 22692:   nop     len=0
  Inst 22693:   nop     len=0
  Inst 22694:   nop     len=0
  Inst 22695:   nop     len=0
  Inst 22696:   nop     len=0
  Inst 22697:   nop     len=0
  Inst 22698:   nop     len=0
  Inst 22699:   nop     len=0
  Inst 22700:   nop     len=0
  Inst 22701:   nop     len=0
  Inst 22702:   nop     len=0
  Inst 22703:   nop     len=0
  Inst 22704:   nop     len=0
  Inst 22705:   nop     len=0
  Inst 22706:   nop     len=0
  Inst 22707:   nop     len=0
  Inst 22708:   nop     len=0
  Inst 22709:   nop     len=0
  Inst 22710:   nop     len=0
  Inst 22711:   nop     len=0
  Inst 22712:   nop     len=0
  Inst 22713:   nop     len=0
  Inst 22714:   nop     len=0
  Inst 22715:   nop     len=0
  Inst 22716:   nop     len=0
  Inst 22717:   nop     len=0
  Inst 22718:   nop     len=0
  Inst 22719:   nop     len=0
  Inst 22720:   nop     len=0
  Inst 22721:   nop     len=0
  Inst 22722:   nop     len=0
  Inst 22723:   nop     len=0
  Inst 22724:   nop     len=0
  Inst 22725:   nop     len=0
  Inst 22726:   nop     len=0
  Inst 22727:   nop     len=0
  Inst 22728:   nop     len=0
  Inst 22729:   nop     len=0
  Inst 22730:   nop     len=0
  Inst 22731:   nop     len=0
  Inst 22732:   nop     len=0
  Inst 22733:   nop     len=0
  Inst 22734:   nop     len=0
  Inst 22735:   nop     len=0
  Inst 22736:   nop     len=0
  Inst 22737:   nop     len=0
  Inst 22738:   nop     len=0
  Inst 22739:   nop     len=0
  Inst 22740:   nop     len=0
  Inst 22741:   nop     len=0
  Inst 22742:   nop     len=0
  Inst 22743:   jmp     label700
Block 698:
  (original IR block: block351)
  (successor: Block 699)
  (instruction range: 22744 .. 22773)
  Inst 22744:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22745:   movq    152(%rsi), %r13
  Inst 22746:   movq    %r14, %r15
  Inst 22747:   addq    $-1, %r15
  Inst 22748:   movq    %r14, %rdx
  Inst 22749:   shlq    $3, %rdx
  Inst 22750:   movq    %r13, %r12
  Inst 22751:   addq    %rdx, %r12
  Inst 22752:   movq    %r13, %rdi
  Inst 22753:   addq    $-24, %rdi
  Inst 22754:   movq    %r13, %rsi
  Inst 22755:   load_ext_name %Memmove+0, %rax
  Inst 22756:   movq    %rbx, rsp(1152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22757:   call    *%rax
  Inst 22758:   movq    rsp(1152 + virtual offset), %rbx
  Inst 22759:   load_ext_name u1:1+0, %rsi
  Inst 22760:   movl    $1, %edi
  Inst 22761:   movq    %rdi, -8(%r13,%r14,8)
  Inst 22762:   movl    $1, %edi
  Inst 22763:   movq    %rdi, -16(%r13,%r14,8)
  Inst 22764:   movq    %rsi, -24(%r13,%r14,8)
  Inst 22765:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22766:   movq    %r12, 152(%rsi)
  Inst 22767:   movq    %rbx, %rdi
  Inst 22768:   movq    %r15, %rsi
  Inst 22769:   load_ext_name u0:3+0, %rax
  Inst 22770:   movq    %rdi, rsp(1152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22771:   call    *%rax
  Inst 22772:   jmp     label699
Block 699:
  (successor: Block 700)
  (instruction range: 22773 .. 22862)
  Inst 22773:   movq    %rax, rsp(1656 + virtual offset)
  Inst 22774:   nop     len=0
  Inst 22775:   nop     len=0
  Inst 22776:   nop     len=0
  Inst 22777:   nop     len=0
  Inst 22778:   nop     len=0
  Inst 22779:   nop     len=0
  Inst 22780:   nop     len=0
  Inst 22781:   nop     len=0
  Inst 22782:   nop     len=0
  Inst 22783:   nop     len=0
  Inst 22784:   nop     len=0
  Inst 22785:   nop     len=0
  Inst 22786:   nop     len=0
  Inst 22787:   nop     len=0
  Inst 22788:   nop     len=0
  Inst 22789:   nop     len=0
  Inst 22790:   nop     len=0
  Inst 22791:   nop     len=0
  Inst 22792:   nop     len=0
  Inst 22793:   nop     len=0
  Inst 22794:   nop     len=0
  Inst 22795:   nop     len=0
  Inst 22796:   nop     len=0
  Inst 22797:   nop     len=0
  Inst 22798:   nop     len=0
  Inst 22799:   nop     len=0
  Inst 22800:   nop     len=0
  Inst 22801:   nop     len=0
  Inst 22802:   nop     len=0
  Inst 22803:   nop     len=0
  Inst 22804:   nop     len=0
  Inst 22805:   nop     len=0
  Inst 22806:   nop     len=0
  Inst 22807:   nop     len=0
  Inst 22808:   nop     len=0
  Inst 22809:   nop     len=0
  Inst 22810:   nop     len=0
  Inst 22811:   nop     len=0
  Inst 22812:   nop     len=0
  Inst 22813:   nop     len=0
  Inst 22814:   nop     len=0
  Inst 22815:   nop     len=0
  Inst 22816:   nop     len=0
  Inst 22817:   nop     len=0
  Inst 22818:   nop     len=0
  Inst 22819:   nop     len=0
  Inst 22820:   nop     len=0
  Inst 22821:   nop     len=0
  Inst 22822:   nop     len=0
  Inst 22823:   nop     len=0
  Inst 22824:   nop     len=0
  Inst 22825:   nop     len=0
  Inst 22826:   nop     len=0
  Inst 22827:   nop     len=0
  Inst 22828:   nop     len=0
  Inst 22829:   nop     len=0
  Inst 22830:   nop     len=0
  Inst 22831:   nop     len=0
  Inst 22832:   nop     len=0
  Inst 22833:   nop     len=0
  Inst 22834:   nop     len=0
  Inst 22835:   nop     len=0
  Inst 22836:   nop     len=0
  Inst 22837:   nop     len=0
  Inst 22838:   nop     len=0
  Inst 22839:   nop     len=0
  Inst 22840:   nop     len=0
  Inst 22841:   nop     len=0
  Inst 22842:   nop     len=0
  Inst 22843:   nop     len=0
  Inst 22844:   nop     len=0
  Inst 22845:   nop     len=0
  Inst 22846:   nop     len=0
  Inst 22847:   nop     len=0
  Inst 22848:   nop     len=0
  Inst 22849:   nop     len=0
  Inst 22850:   nop     len=0
  Inst 22851:   nop     len=0
  Inst 22852:   nop     len=0
  Inst 22853:   nop     len=0
  Inst 22854:   nop     len=0
  Inst 22855:   nop     len=0
  Inst 22856:   nop     len=0
  Inst 22857:   nop     len=0
  Inst 22858:   nop     len=0
  Inst 22859:   nop     len=0
  Inst 22860:   nop     len=0
  Inst 22861:   jmp     label700
Block 700:
  (original IR block: block350)
  (successor: Block 701)
  (successor: Block 702)
  (instruction range: 22862 .. 22873)
  Inst 22862:   movq    rsp(2064 + virtual offset), %rsi
  Inst 22863:   movq    8(%rsi), %rdi
  Inst 22864:   movq    rsp(2048 + virtual offset), %rsi
  Inst 22865:   load_ext_name u0:2+0, %rax
  Inst 22866:   movq    %rsi, rsp(1152 + virtual offset)
  Inst 22867:   movq    %rdi, rsp(1168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22868:   call    *%rax
  Inst 22869:   movq    %rax, %rbx
  Inst 22870:   movq    %rdx, %r14
  Inst 22871:   testq   %r14, %r14
  Inst 22872:   jz      label701; j label702
Block 701:
  (successor: Block 704)
  (instruction range: 22873 .. 22962)
  Inst 22873:   movq    %rbx, rsp(1152 + virtual offset)
  Inst 22874:   nop     len=0
  Inst 22875:   nop     len=0
  Inst 22876:   nop     len=0
  Inst 22877:   nop     len=0
  Inst 22878:   nop     len=0
  Inst 22879:   nop     len=0
  Inst 22880:   nop     len=0
  Inst 22881:   nop     len=0
  Inst 22882:   nop     len=0
  Inst 22883:   nop     len=0
  Inst 22884:   nop     len=0
  Inst 22885:   nop     len=0
  Inst 22886:   nop     len=0
  Inst 22887:   nop     len=0
  Inst 22888:   nop     len=0
  Inst 22889:   nop     len=0
  Inst 22890:   nop     len=0
  Inst 22891:   nop     len=0
  Inst 22892:   nop     len=0
  Inst 22893:   nop     len=0
  Inst 22894:   nop     len=0
  Inst 22895:   nop     len=0
  Inst 22896:   nop     len=0
  Inst 22897:   nop     len=0
  Inst 22898:   nop     len=0
  Inst 22899:   nop     len=0
  Inst 22900:   nop     len=0
  Inst 22901:   nop     len=0
  Inst 22902:   nop     len=0
  Inst 22903:   nop     len=0
  Inst 22904:   nop     len=0
  Inst 22905:   nop     len=0
  Inst 22906:   nop     len=0
  Inst 22907:   nop     len=0
  Inst 22908:   nop     len=0
  Inst 22909:   nop     len=0
  Inst 22910:   nop     len=0
  Inst 22911:   nop     len=0
  Inst 22912:   nop     len=0
  Inst 22913:   nop     len=0
  Inst 22914:   nop     len=0
  Inst 22915:   nop     len=0
  Inst 22916:   nop     len=0
  Inst 22917:   nop     len=0
  Inst 22918:   nop     len=0
  Inst 22919:   nop     len=0
  Inst 22920:   nop     len=0
  Inst 22921:   nop     len=0
  Inst 22922:   nop     len=0
  Inst 22923:   nop     len=0
  Inst 22924:   nop     len=0
  Inst 22925:   nop     len=0
  Inst 22926:   nop     len=0
  Inst 22927:   nop     len=0
  Inst 22928:   nop     len=0
  Inst 22929:   nop     len=0
  Inst 22930:   nop     len=0
  Inst 22931:   nop     len=0
  Inst 22932:   nop     len=0
  Inst 22933:   nop     len=0
  Inst 22934:   nop     len=0
  Inst 22935:   nop     len=0
  Inst 22936:   nop     len=0
  Inst 22937:   nop     len=0
  Inst 22938:   nop     len=0
  Inst 22939:   nop     len=0
  Inst 22940:   nop     len=0
  Inst 22941:   nop     len=0
  Inst 22942:   nop     len=0
  Inst 22943:   nop     len=0
  Inst 22944:   nop     len=0
  Inst 22945:   nop     len=0
  Inst 22946:   nop     len=0
  Inst 22947:   nop     len=0
  Inst 22948:   nop     len=0
  Inst 22949:   nop     len=0
  Inst 22950:   nop     len=0
  Inst 22951:   nop     len=0
  Inst 22952:   nop     len=0
  Inst 22953:   nop     len=0
  Inst 22954:   nop     len=0
  Inst 22955:   nop     len=0
  Inst 22956:   nop     len=0
  Inst 22957:   nop     len=0
  Inst 22958:   nop     len=0
  Inst 22959:   nop     len=0
  Inst 22960:   nop     len=0
  Inst 22961:   jmp     label704
Block 702:
  (original IR block: block353)
  (successor: Block 703)
  (instruction range: 22962 .. 22991)
  Inst 22962:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22963:   movq    152(%rsi), %r13
  Inst 22964:   movq    %r14, %r15
  Inst 22965:   addq    $-1, %r15
  Inst 22966:   movq    %r14, %rdx
  Inst 22967:   shlq    $3, %rdx
  Inst 22968:   movq    %r13, %r12
  Inst 22969:   addq    %rdx, %r12
  Inst 22970:   movq    %r13, %rdi
  Inst 22971:   addq    $-24, %rdi
  Inst 22972:   movq    %r13, %rsi
  Inst 22973:   load_ext_name %Memmove+0, %rax
  Inst 22974:   movq    %rbx, rsp(1168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S145, S146, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22975:   call    *%rax
  Inst 22976:   movq    rsp(1168 + virtual offset), %rbx
  Inst 22977:   load_ext_name u1:1+0, %rsi
  Inst 22978:   movl    $1, %edi
  Inst 22979:   movq    %rdi, -8(%r13,%r14,8)
  Inst 22980:   movl    $1, %edi
  Inst 22981:   movq    %rdi, -16(%r13,%r14,8)
  Inst 22982:   movq    %rsi, -24(%r13,%r14,8)
  Inst 22983:   movq    rsp(2072 + virtual offset), %rsi
  Inst 22984:   movq    %r12, 152(%rsi)
  Inst 22985:   movq    %rbx, %rdi
  Inst 22986:   movq    %r15, %rsi
  Inst 22987:   load_ext_name u0:3+0, %rax
  Inst 22988:   movq    %rdi, rsp(1152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 22989:   call    *%rax
  Inst 22990:   jmp     label703
Block 703:
  (successor: Block 704)
  (instruction range: 22991 .. 23080)
  Inst 22991:   movq    %rax, rsp(1152 + virtual offset)
  Inst 22992:   nop     len=0
  Inst 22993:   nop     len=0
  Inst 22994:   nop     len=0
  Inst 22995:   nop     len=0
  Inst 22996:   nop     len=0
  Inst 22997:   nop     len=0
  Inst 22998:   nop     len=0
  Inst 22999:   nop     len=0
  Inst 23000:   nop     len=0
  Inst 23001:   nop     len=0
  Inst 23002:   nop     len=0
  Inst 23003:   nop     len=0
  Inst 23004:   nop     len=0
  Inst 23005:   nop     len=0
  Inst 23006:   nop     len=0
  Inst 23007:   nop     len=0
  Inst 23008:   nop     len=0
  Inst 23009:   nop     len=0
  Inst 23010:   nop     len=0
  Inst 23011:   nop     len=0
  Inst 23012:   nop     len=0
  Inst 23013:   nop     len=0
  Inst 23014:   nop     len=0
  Inst 23015:   nop     len=0
  Inst 23016:   nop     len=0
  Inst 23017:   nop     len=0
  Inst 23018:   nop     len=0
  Inst 23019:   nop     len=0
  Inst 23020:   nop     len=0
  Inst 23021:   nop     len=0
  Inst 23022:   nop     len=0
  Inst 23023:   nop     len=0
  Inst 23024:   nop     len=0
  Inst 23025:   nop     len=0
  Inst 23026:   nop     len=0
  Inst 23027:   nop     len=0
  Inst 23028:   nop     len=0
  Inst 23029:   nop     len=0
  Inst 23030:   nop     len=0
  Inst 23031:   nop     len=0
  Inst 23032:   nop     len=0
  Inst 23033:   nop     len=0
  Inst 23034:   nop     len=0
  Inst 23035:   nop     len=0
  Inst 23036:   nop     len=0
  Inst 23037:   nop     len=0
  Inst 23038:   nop     len=0
  Inst 23039:   nop     len=0
  Inst 23040:   nop     len=0
  Inst 23041:   nop     len=0
  Inst 23042:   nop     len=0
  Inst 23043:   nop     len=0
  Inst 23044:   nop     len=0
  Inst 23045:   nop     len=0
  Inst 23046:   nop     len=0
  Inst 23047:   nop     len=0
  Inst 23048:   nop     len=0
  Inst 23049:   nop     len=0
  Inst 23050:   nop     len=0
  Inst 23051:   nop     len=0
  Inst 23052:   nop     len=0
  Inst 23053:   nop     len=0
  Inst 23054:   nop     len=0
  Inst 23055:   nop     len=0
  Inst 23056:   nop     len=0
  Inst 23057:   nop     len=0
  Inst 23058:   nop     len=0
  Inst 23059:   nop     len=0
  Inst 23060:   nop     len=0
  Inst 23061:   nop     len=0
  Inst 23062:   nop     len=0
  Inst 23063:   nop     len=0
  Inst 23064:   nop     len=0
  Inst 23065:   nop     len=0
  Inst 23066:   nop     len=0
  Inst 23067:   nop     len=0
  Inst 23068:   nop     len=0
  Inst 23069:   nop     len=0
  Inst 23070:   nop     len=0
  Inst 23071:   nop     len=0
  Inst 23072:   nop     len=0
  Inst 23073:   nop     len=0
  Inst 23074:   nop     len=0
  Inst 23075:   nop     len=0
  Inst 23076:   nop     len=0
  Inst 23077:   nop     len=0
  Inst 23078:   nop     len=0
  Inst 23079:   jmp     label704
Block 704:
  (original IR block: block352)
  (successor: Block 705)
  (successor: Block 706)
  (instruction range: 23080 .. 23091)
  Inst 23080:   movq    rsp(2064 + virtual offset), %rsi
  Inst 23081:   movq    8(%rsi), %rdi
  Inst 23082:   movq    rsp(2048 + virtual offset), %rsi
  Inst 23083:   load_ext_name u0:2+0, %rax
  Inst 23084:   movq    %rsi, rsp(1168 + virtual offset)
  Inst 23085:   movq    %rdi, rsp(1184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23086:   call    *%rax
  Inst 23087:   movq    %rax, %r15
  Inst 23088:   movq    %rdx, %r14
  Inst 23089:   testq   %r14, %r14
  Inst 23090:   jz      label705; j label706
Block 705:
  (successor: Block 708)
  (instruction range: 23091 .. 23181)
  Inst 23091:   movq    %r15, rsp(1672 + virtual offset)
  Inst 23092:   nop     len=0
  Inst 23093:   nop     len=0
  Inst 23094:   nop     len=0
  Inst 23095:   nop     len=0
  Inst 23096:   nop     len=0
  Inst 23097:   nop     len=0
  Inst 23098:   nop     len=0
  Inst 23099:   nop     len=0
  Inst 23100:   nop     len=0
  Inst 23101:   nop     len=0
  Inst 23102:   nop     len=0
  Inst 23103:   nop     len=0
  Inst 23104:   nop     len=0
  Inst 23105:   nop     len=0
  Inst 23106:   nop     len=0
  Inst 23107:   nop     len=0
  Inst 23108:   nop     len=0
  Inst 23109:   nop     len=0
  Inst 23110:   nop     len=0
  Inst 23111:   nop     len=0
  Inst 23112:   nop     len=0
  Inst 23113:   nop     len=0
  Inst 23114:   nop     len=0
  Inst 23115:   nop     len=0
  Inst 23116:   nop     len=0
  Inst 23117:   nop     len=0
  Inst 23118:   nop     len=0
  Inst 23119:   nop     len=0
  Inst 23120:   nop     len=0
  Inst 23121:   nop     len=0
  Inst 23122:   nop     len=0
  Inst 23123:   nop     len=0
  Inst 23124:   nop     len=0
  Inst 23125:   nop     len=0
  Inst 23126:   nop     len=0
  Inst 23127:   nop     len=0
  Inst 23128:   nop     len=0
  Inst 23129:   nop     len=0
  Inst 23130:   nop     len=0
  Inst 23131:   nop     len=0
  Inst 23132:   nop     len=0
  Inst 23133:   nop     len=0
  Inst 23134:   nop     len=0
  Inst 23135:   nop     len=0
  Inst 23136:   nop     len=0
  Inst 23137:   nop     len=0
  Inst 23138:   nop     len=0
  Inst 23139:   nop     len=0
  Inst 23140:   nop     len=0
  Inst 23141:   nop     len=0
  Inst 23142:   nop     len=0
  Inst 23143:   nop     len=0
  Inst 23144:   nop     len=0
  Inst 23145:   nop     len=0
  Inst 23146:   nop     len=0
  Inst 23147:   nop     len=0
  Inst 23148:   nop     len=0
  Inst 23149:   nop     len=0
  Inst 23150:   nop     len=0
  Inst 23151:   nop     len=0
  Inst 23152:   nop     len=0
  Inst 23153:   nop     len=0
  Inst 23154:   nop     len=0
  Inst 23155:   nop     len=0
  Inst 23156:   nop     len=0
  Inst 23157:   nop     len=0
  Inst 23158:   nop     len=0
  Inst 23159:   nop     len=0
  Inst 23160:   nop     len=0
  Inst 23161:   nop     len=0
  Inst 23162:   nop     len=0
  Inst 23163:   nop     len=0
  Inst 23164:   nop     len=0
  Inst 23165:   nop     len=0
  Inst 23166:   nop     len=0
  Inst 23167:   nop     len=0
  Inst 23168:   nop     len=0
  Inst 23169:   nop     len=0
  Inst 23170:   nop     len=0
  Inst 23171:   nop     len=0
  Inst 23172:   nop     len=0
  Inst 23173:   nop     len=0
  Inst 23174:   nop     len=0
  Inst 23175:   nop     len=0
  Inst 23176:   nop     len=0
  Inst 23177:   nop     len=0
  Inst 23178:   nop     len=0
  Inst 23179:   nop     len=0
  Inst 23180:   jmp     label708
Block 706:
  (original IR block: block355)
  (successor: Block 707)
  (instruction range: 23181 .. 23210)
  Inst 23181:   movq    rsp(2072 + virtual offset), %rsi
  Inst 23182:   movq    152(%rsi), %r13
  Inst 23183:   movq    %r14, %rbx
  Inst 23184:   addq    $-1, %rbx
  Inst 23185:   movq    %r14, %rdx
  Inst 23186:   shlq    $3, %rdx
  Inst 23187:   movq    %r13, %r12
  Inst 23188:   addq    %rdx, %r12
  Inst 23189:   movq    %r13, %rdi
  Inst 23190:   addq    $-24, %rdi
  Inst 23191:   movq    %r13, %rsi
  Inst 23192:   load_ext_name %Memmove+0, %rax
  Inst 23193:   movq    %r15, rsp(1168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23194:   call    *%rax
  Inst 23195:   movq    rsp(1168 + virtual offset), %r15
  Inst 23196:   load_ext_name u1:1+0, %rsi
  Inst 23197:   movl    $1, %edi
  Inst 23198:   movq    %rdi, -8(%r13,%r14,8)
  Inst 23199:   movl    $1, %edi
  Inst 23200:   movq    %rdi, -16(%r13,%r14,8)
  Inst 23201:   movq    %rsi, -24(%r13,%r14,8)
  Inst 23202:   movq    rsp(2072 + virtual offset), %rsi
  Inst 23203:   movq    %r12, 152(%rsi)
  Inst 23204:   movq    %r15, %rdi
  Inst 23205:   movq    %rbx, %rsi
  Inst 23206:   load_ext_name u0:3+0, %rax
  Inst 23207:   movq    %rdi, rsp(1168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23208:   call    *%rax
  Inst 23209:   jmp     label707
Block 707:
  (successor: Block 708)
  (instruction range: 23210 .. 23300)
  Inst 23210:   movq    %rax, rsp(1672 + virtual offset)
  Inst 23211:   nop     len=0
  Inst 23212:   nop     len=0
  Inst 23213:   nop     len=0
  Inst 23214:   nop     len=0
  Inst 23215:   nop     len=0
  Inst 23216:   nop     len=0
  Inst 23217:   nop     len=0
  Inst 23218:   nop     len=0
  Inst 23219:   nop     len=0
  Inst 23220:   nop     len=0
  Inst 23221:   nop     len=0
  Inst 23222:   nop     len=0
  Inst 23223:   nop     len=0
  Inst 23224:   nop     len=0
  Inst 23225:   nop     len=0
  Inst 23226:   nop     len=0
  Inst 23227:   nop     len=0
  Inst 23228:   nop     len=0
  Inst 23229:   nop     len=0
  Inst 23230:   nop     len=0
  Inst 23231:   nop     len=0
  Inst 23232:   nop     len=0
  Inst 23233:   nop     len=0
  Inst 23234:   nop     len=0
  Inst 23235:   nop     len=0
  Inst 23236:   nop     len=0
  Inst 23237:   nop     len=0
  Inst 23238:   nop     len=0
  Inst 23239:   nop     len=0
  Inst 23240:   nop     len=0
  Inst 23241:   nop     len=0
  Inst 23242:   nop     len=0
  Inst 23243:   nop     len=0
  Inst 23244:   nop     len=0
  Inst 23245:   nop     len=0
  Inst 23246:   nop     len=0
  Inst 23247:   nop     len=0
  Inst 23248:   nop     len=0
  Inst 23249:   nop     len=0
  Inst 23250:   nop     len=0
  Inst 23251:   nop     len=0
  Inst 23252:   nop     len=0
  Inst 23253:   nop     len=0
  Inst 23254:   nop     len=0
  Inst 23255:   nop     len=0
  Inst 23256:   nop     len=0
  Inst 23257:   nop     len=0
  Inst 23258:   nop     len=0
  Inst 23259:   nop     len=0
  Inst 23260:   nop     len=0
  Inst 23261:   nop     len=0
  Inst 23262:   nop     len=0
  Inst 23263:   nop     len=0
  Inst 23264:   nop     len=0
  Inst 23265:   nop     len=0
  Inst 23266:   nop     len=0
  Inst 23267:   nop     len=0
  Inst 23268:   nop     len=0
  Inst 23269:   nop     len=0
  Inst 23270:   nop     len=0
  Inst 23271:   nop     len=0
  Inst 23272:   nop     len=0
  Inst 23273:   nop     len=0
  Inst 23274:   nop     len=0
  Inst 23275:   nop     len=0
  Inst 23276:   nop     len=0
  Inst 23277:   nop     len=0
  Inst 23278:   nop     len=0
  Inst 23279:   nop     len=0
  Inst 23280:   nop     len=0
  Inst 23281:   nop     len=0
  Inst 23282:   nop     len=0
  Inst 23283:   nop     len=0
  Inst 23284:   nop     len=0
  Inst 23285:   nop     len=0
  Inst 23286:   nop     len=0
  Inst 23287:   nop     len=0
  Inst 23288:   nop     len=0
  Inst 23289:   nop     len=0
  Inst 23290:   nop     len=0
  Inst 23291:   nop     len=0
  Inst 23292:   nop     len=0
  Inst 23293:   nop     len=0
  Inst 23294:   nop     len=0
  Inst 23295:   nop     len=0
  Inst 23296:   nop     len=0
  Inst 23297:   nop     len=0
  Inst 23298:   nop     len=0
  Inst 23299:   jmp     label708
Block 708:
  (original IR block: block354)
  (successor: Block 709)
  (successor: Block 710)
  (instruction range: 23300 .. 23311)
  Inst 23300:   movq    rsp(2064 + virtual offset), %rsi
  Inst 23301:   movq    8(%rsi), %rdi
  Inst 23302:   movq    rsp(2048 + virtual offset), %rsi
  Inst 23303:   load_ext_name u0:2+0, %rax
  Inst 23304:   movq    %rsi, rsp(1168 + virtual offset)
  Inst 23305:   movq    %rdi, rsp(1184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23306:   call    *%rax
  Inst 23307:   movq    %rax, %rbx
  Inst 23308:   movq    %rdx, %r14
  Inst 23309:   testq   %r14, %r14
  Inst 23310:   jz      label709; j label710
Block 709:
  (successor: Block 712)
  (instruction range: 23311 .. 23401)
  Inst 23311:   movq    %rbx, rsp(1168 + virtual offset)
  Inst 23312:   nop     len=0
  Inst 23313:   nop     len=0
  Inst 23314:   nop     len=0
  Inst 23315:   nop     len=0
  Inst 23316:   nop     len=0
  Inst 23317:   nop     len=0
  Inst 23318:   nop     len=0
  Inst 23319:   nop     len=0
  Inst 23320:   nop     len=0
  Inst 23321:   nop     len=0
  Inst 23322:   nop     len=0
  Inst 23323:   nop     len=0
  Inst 23324:   nop     len=0
  Inst 23325:   nop     len=0
  Inst 23326:   nop     len=0
  Inst 23327:   nop     len=0
  Inst 23328:   nop     len=0
  Inst 23329:   nop     len=0
  Inst 23330:   nop     len=0
  Inst 23331:   nop     len=0
  Inst 23332:   nop     len=0
  Inst 23333:   nop     len=0
  Inst 23334:   nop     len=0
  Inst 23335:   nop     len=0
  Inst 23336:   nop     len=0
  Inst 23337:   nop     len=0
  Inst 23338:   nop     len=0
  Inst 23339:   nop     len=0
  Inst 23340:   nop     len=0
  Inst 23341:   nop     len=0
  Inst 23342:   nop     len=0
  Inst 23343:   nop     len=0
  Inst 23344:   nop     len=0
  Inst 23345:   nop     len=0
  Inst 23346:   nop     len=0
  Inst 23347:   nop     len=0
  Inst 23348:   nop     len=0
  Inst 23349:   nop     len=0
  Inst 23350:   nop     len=0
  Inst 23351:   nop     len=0
  Inst 23352:   nop     len=0
  Inst 23353:   nop     len=0
  Inst 23354:   nop     len=0
  Inst 23355:   nop     len=0
  Inst 23356:   nop     len=0
  Inst 23357:   nop     len=0
  Inst 23358:   nop     len=0
  Inst 23359:   nop     len=0
  Inst 23360:   nop     len=0
  Inst 23361:   nop     len=0
  Inst 23362:   nop     len=0
  Inst 23363:   nop     len=0
  Inst 23364:   nop     len=0
  Inst 23365:   nop     len=0
  Inst 23366:   nop     len=0
  Inst 23367:   nop     len=0
  Inst 23368:   nop     len=0
  Inst 23369:   nop     len=0
  Inst 23370:   nop     len=0
  Inst 23371:   nop     len=0
  Inst 23372:   nop     len=0
  Inst 23373:   nop     len=0
  Inst 23374:   nop     len=0
  Inst 23375:   nop     len=0
  Inst 23376:   nop     len=0
  Inst 23377:   nop     len=0
  Inst 23378:   nop     len=0
  Inst 23379:   nop     len=0
  Inst 23380:   nop     len=0
  Inst 23381:   nop     len=0
  Inst 23382:   nop     len=0
  Inst 23383:   nop     len=0
  Inst 23384:   nop     len=0
  Inst 23385:   nop     len=0
  Inst 23386:   nop     len=0
  Inst 23387:   nop     len=0
  Inst 23388:   nop     len=0
  Inst 23389:   nop     len=0
  Inst 23390:   nop     len=0
  Inst 23391:   nop     len=0
  Inst 23392:   nop     len=0
  Inst 23393:   nop     len=0
  Inst 23394:   nop     len=0
  Inst 23395:   nop     len=0
  Inst 23396:   nop     len=0
  Inst 23397:   nop     len=0
  Inst 23398:   nop     len=0
  Inst 23399:   nop     len=0
  Inst 23400:   jmp     label712
Block 710:
  (original IR block: block357)
  (successor: Block 711)
  (instruction range: 23401 .. 23430)
  Inst 23401:   movq    rsp(2072 + virtual offset), %rsi
  Inst 23402:   movq    152(%rsi), %r13
  Inst 23403:   movq    %r14, %r15
  Inst 23404:   addq    $-1, %r15
  Inst 23405:   movq    %r14, %rdx
  Inst 23406:   shlq    $3, %rdx
  Inst 23407:   movq    %r13, %r12
  Inst 23408:   addq    %rdx, %r12
  Inst 23409:   movq    %r13, %rdi
  Inst 23410:   addq    $-24, %rdi
  Inst 23411:   movq    %r13, %rsi
  Inst 23412:   load_ext_name %Memmove+0, %rax
  Inst 23413:   movq    %rbx, rsp(1184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S147, S148, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23414:   call    *%rax
  Inst 23415:   movq    rsp(1184 + virtual offset), %rbx
  Inst 23416:   load_ext_name u1:1+0, %rsi
  Inst 23417:   movl    $1, %edi
  Inst 23418:   movq    %rdi, -8(%r13,%r14,8)
  Inst 23419:   movl    $1, %edi
  Inst 23420:   movq    %rdi, -16(%r13,%r14,8)
  Inst 23421:   movq    %rsi, -24(%r13,%r14,8)
  Inst 23422:   movq    rsp(2072 + virtual offset), %rsi
  Inst 23423:   movq    %r12, 152(%rsi)
  Inst 23424:   movq    %rbx, %rdi
  Inst 23425:   movq    %r15, %rsi
  Inst 23426:   load_ext_name u0:3+0, %rax
  Inst 23427:   movq    %rdi, rsp(1168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23428:   call    *%rax
  Inst 23429:   jmp     label711
Block 711:
  (successor: Block 712)
  (instruction range: 23430 .. 23520)
  Inst 23430:   movq    %rax, rsp(1168 + virtual offset)
  Inst 23431:   nop     len=0
  Inst 23432:   nop     len=0
  Inst 23433:   nop     len=0
  Inst 23434:   nop     len=0
  Inst 23435:   nop     len=0
  Inst 23436:   nop     len=0
  Inst 23437:   nop     len=0
  Inst 23438:   nop     len=0
  Inst 23439:   nop     len=0
  Inst 23440:   nop     len=0
  Inst 23441:   nop     len=0
  Inst 23442:   nop     len=0
  Inst 23443:   nop     len=0
  Inst 23444:   nop     len=0
  Inst 23445:   nop     len=0
  Inst 23446:   nop     len=0
  Inst 23447:   nop     len=0
  Inst 23448:   nop     len=0
  Inst 23449:   nop     len=0
  Inst 23450:   nop     len=0
  Inst 23451:   nop     len=0
  Inst 23452:   nop     len=0
  Inst 23453:   nop     len=0
  Inst 23454:   nop     len=0
  Inst 23455:   nop     len=0
  Inst 23456:   nop     len=0
  Inst 23457:   nop     len=0
  Inst 23458:   nop     len=0
  Inst 23459:   nop     len=0
  Inst 23460:   nop     len=0
  Inst 23461:   nop     len=0
  Inst 23462:   nop     len=0
  Inst 23463:   nop     len=0
  Inst 23464:   nop     len=0
  Inst 23465:   nop     len=0
  Inst 23466:   nop     len=0
  Inst 23467:   nop     len=0
  Inst 23468:   nop     len=0
  Inst 23469:   nop     len=0
  Inst 23470:   nop     len=0
  Inst 23471:   nop     len=0
  Inst 23472:   nop     len=0
  Inst 23473:   nop     len=0
  Inst 23474:   nop     len=0
  Inst 23475:   nop     len=0
  Inst 23476:   nop     len=0
  Inst 23477:   nop     len=0
  Inst 23478:   nop     len=0
  Inst 23479:   nop     len=0
  Inst 23480:   nop     len=0
  Inst 23481:   nop     len=0
  Inst 23482:   nop     len=0
  Inst 23483:   nop     len=0
  Inst 23484:   nop     len=0
  Inst 23485:   nop     len=0
  Inst 23486:   nop     len=0
  Inst 23487:   nop     len=0
  Inst 23488:   nop     len=0
  Inst 23489:   nop     len=0
  Inst 23490:   nop     len=0
  Inst 23491:   nop     len=0
  Inst 23492:   nop     len=0
  Inst 23493:   nop     len=0
  Inst 23494:   nop     len=0
  Inst 23495:   nop     len=0
  Inst 23496:   nop     len=0
  Inst 23497:   nop     len=0
  Inst 23498:   nop     len=0
  Inst 23499:   nop     len=0
  Inst 23500:   nop     len=0
  Inst 23501:   nop     len=0
  Inst 23502:   nop     len=0
  Inst 23503:   nop     len=0
  Inst 23504:   nop     len=0
  Inst 23505:   nop     len=0
  Inst 23506:   nop     len=0
  Inst 23507:   nop     len=0
  Inst 23508:   nop     len=0
  Inst 23509:   nop     len=0
  Inst 23510:   nop     len=0
  Inst 23511:   nop     len=0
  Inst 23512:   nop     len=0
  Inst 23513:   nop     len=0
  Inst 23514:   nop     len=0
  Inst 23515:   nop     len=0
  Inst 23516:   nop     len=0
  Inst 23517:   nop     len=0
  Inst 23518:   nop     len=0
  Inst 23519:   jmp     label712
Block 712:
  (original IR block: block356)
  (successor: Block 713)
  (successor: Block 714)
  (instruction range: 23520 .. 23531)
  Inst 23520:   movq    rsp(2064 + virtual offset), %rsi
  Inst 23521:   movq    8(%rsi), %rdi
  Inst 23522:   movq    rsp(2048 + virtual offset), %rsi
  Inst 23523:   load_ext_name u0:2+0, %rax
  Inst 23524:   movq    %rsi, rsp(1184 + virtual offset)
  Inst 23525:   movq    %rdi, rsp(1200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23526:   call    *%rax
  Inst 23527:   movq    %rax, %rbx
  Inst 23528:   movq    %rdx, %r14
  Inst 23529:   testq   %r14, %r14
  Inst 23530:   jz      label713; j label714
Block 713:
  (successor: Block 716)
  (instruction range: 23531 .. 23622)
  Inst 23531:   movq    %rbx, rsp(1688 + virtual offset)
  Inst 23532:   nop     len=0
  Inst 23533:   nop     len=0
  Inst 23534:   nop     len=0
  Inst 23535:   nop     len=0
  Inst 23536:   nop     len=0
  Inst 23537:   nop     len=0
  Inst 23538:   nop     len=0
  Inst 23539:   nop     len=0
  Inst 23540:   nop     len=0
  Inst 23541:   nop     len=0
  Inst 23542:   nop     len=0
  Inst 23543:   nop     len=0
  Inst 23544:   nop     len=0
  Inst 23545:   nop     len=0
  Inst 23546:   nop     len=0
  Inst 23547:   nop     len=0
  Inst 23548:   nop     len=0
  Inst 23549:   nop     len=0
  Inst 23550:   nop     len=0
  Inst 23551:   nop     len=0
  Inst 23552:   nop     len=0
  Inst 23553:   nop     len=0
  Inst 23554:   nop     len=0
  Inst 23555:   nop     len=0
  Inst 23556:   nop     len=0
  Inst 23557:   nop     len=0
  Inst 23558:   nop     len=0
  Inst 23559:   nop     len=0
  Inst 23560:   nop     len=0
  Inst 23561:   nop     len=0
  Inst 23562:   nop     len=0
  Inst 23563:   nop     len=0
  Inst 23564:   nop     len=0
  Inst 23565:   nop     len=0
  Inst 23566:   nop     len=0
  Inst 23567:   nop     len=0
  Inst 23568:   nop     len=0
  Inst 23569:   nop     len=0
  Inst 23570:   nop     len=0
  Inst 23571:   nop     len=0
  Inst 23572:   nop     len=0
  Inst 23573:   nop     len=0
  Inst 23574:   nop     len=0
  Inst 23575:   nop     len=0
  Inst 23576:   nop     len=0
  Inst 23577:   nop     len=0
  Inst 23578:   nop     len=0
  Inst 23579:   nop     len=0
  Inst 23580:   nop     len=0
  Inst 23581:   nop     len=0
  Inst 23582:   nop     len=0
  Inst 23583:   nop     len=0
  Inst 23584:   nop     len=0
  Inst 23585:   nop     len=0
  Inst 23586:   nop     len=0
  Inst 23587:   nop     len=0
  Inst 23588:   nop     len=0
  Inst 23589:   nop     len=0
  Inst 23590:   nop     len=0
  Inst 23591:   nop     len=0
  Inst 23592:   nop     len=0
  Inst 23593:   nop     len=0
  Inst 23594:   nop     len=0
  Inst 23595:   nop     len=0
  Inst 23596:   nop     len=0
  Inst 23597:   nop     len=0
  Inst 23598:   nop     len=0
  Inst 23599:   nop     len=0
  Inst 23600:   nop     len=0
  Inst 23601:   nop     len=0
  Inst 23602:   nop     len=0
  Inst 23603:   nop     len=0
  Inst 23604:   nop     len=0
  Inst 23605:   nop     len=0
  Inst 23606:   nop     len=0
  Inst 23607:   nop     len=0
  Inst 23608:   nop     len=0
  Inst 23609:   nop     len=0
  Inst 23610:   nop     len=0
  Inst 23611:   nop     len=0
  Inst 23612:   nop     len=0
  Inst 23613:   nop     len=0
  Inst 23614:   nop     len=0
  Inst 23615:   nop     len=0
  Inst 23616:   nop     len=0
  Inst 23617:   nop     len=0
  Inst 23618:   nop     len=0
  Inst 23619:   nop     len=0
  Inst 23620:   nop     len=0
  Inst 23621:   jmp     label716
Block 714:
  (original IR block: block359)
  (successor: Block 715)
  (instruction range: 23622 .. 23651)
  Inst 23622:   movq    rsp(2072 + virtual offset), %rsi
  Inst 23623:   movq    152(%rsi), %r13
  Inst 23624:   movq    %r14, %r15
  Inst 23625:   addq    $-1, %r15
  Inst 23626:   movq    %r14, %rdx
  Inst 23627:   shlq    $3, %rdx
  Inst 23628:   movq    %r13, %r12
  Inst 23629:   addq    %rdx, %r12
  Inst 23630:   movq    %r13, %rdi
  Inst 23631:   addq    $-24, %rdi
  Inst 23632:   movq    %r13, %rsi
  Inst 23633:   load_ext_name %Memmove+0, %rax
  Inst 23634:   movq    %rbx, rsp(1184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23635:   call    *%rax
  Inst 23636:   movq    rsp(1184 + virtual offset), %rbx
  Inst 23637:   load_ext_name u1:1+0, %rsi
  Inst 23638:   movl    $1, %edi
  Inst 23639:   movq    %rdi, -8(%r13,%r14,8)
  Inst 23640:   movl    $1, %edi
  Inst 23641:   movq    %rdi, -16(%r13,%r14,8)
  Inst 23642:   movq    %rsi, -24(%r13,%r14,8)
  Inst 23643:   movq    rsp(2072 + virtual offset), %rsi
  Inst 23644:   movq    %r12, 152(%rsi)
  Inst 23645:   movq    %rbx, %rdi
  Inst 23646:   movq    %r15, %rsi
  Inst 23647:   load_ext_name u0:3+0, %rax
  Inst 23648:   movq    %rdi, rsp(1184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23649:   call    *%rax
  Inst 23650:   jmp     label715
Block 715:
  (successor: Block 716)
  (instruction range: 23651 .. 23742)
  Inst 23651:   movq    %rax, rsp(1688 + virtual offset)
  Inst 23652:   nop     len=0
  Inst 23653:   nop     len=0
  Inst 23654:   nop     len=0
  Inst 23655:   nop     len=0
  Inst 23656:   nop     len=0
  Inst 23657:   nop     len=0
  Inst 23658:   nop     len=0
  Inst 23659:   nop     len=0
  Inst 23660:   nop     len=0
  Inst 23661:   nop     len=0
  Inst 23662:   nop     len=0
  Inst 23663:   nop     len=0
  Inst 23664:   nop     len=0
  Inst 23665:   nop     len=0
  Inst 23666:   nop     len=0
  Inst 23667:   nop     len=0
  Inst 23668:   nop     len=0
  Inst 23669:   nop     len=0
  Inst 23670:   nop     len=0
  Inst 23671:   nop     len=0
  Inst 23672:   nop     len=0
  Inst 23673:   nop     len=0
  Inst 23674:   nop     len=0
  Inst 23675:   nop     len=0
  Inst 23676:   nop     len=0
  Inst 23677:   nop     len=0
  Inst 23678:   nop     len=0
  Inst 23679:   nop     len=0
  Inst 23680:   nop     len=0
  Inst 23681:   nop     len=0
  Inst 23682:   nop     len=0
  Inst 23683:   nop     len=0
  Inst 23684:   nop     len=0
  Inst 23685:   nop     len=0
  Inst 23686:   nop     len=0
  Inst 23687:   nop     len=0
  Inst 23688:   nop     len=0
  Inst 23689:   nop     len=0
  Inst 23690:   nop     len=0
  Inst 23691:   nop     len=0
  Inst 23692:   nop     len=0
  Inst 23693:   nop     len=0
  Inst 23694:   nop     len=0
  Inst 23695:   nop     len=0
  Inst 23696:   nop     len=0
  Inst 23697:   nop     len=0
  Inst 23698:   nop     len=0
  Inst 23699:   nop     len=0
  Inst 23700:   nop     len=0
  Inst 23701:   nop     len=0
  Inst 23702:   nop     len=0
  Inst 23703:   nop     len=0
  Inst 23704:   nop     len=0
  Inst 23705:   nop     len=0
  Inst 23706:   nop     len=0
  Inst 23707:   nop     len=0
  Inst 23708:   nop     len=0
  Inst 23709:   nop     len=0
  Inst 23710:   nop     len=0
  Inst 23711:   nop     len=0
  Inst 23712:   nop     len=0
  Inst 23713:   nop     len=0
  Inst 23714:   nop     len=0
  Inst 23715:   nop     len=0
  Inst 23716:   nop     len=0
  Inst 23717:   nop     len=0
  Inst 23718:   nop     len=0
  Inst 23719:   nop     len=0
  Inst 23720:   nop     len=0
  Inst 23721:   nop     len=0
  Inst 23722:   nop     len=0
  Inst 23723:   nop     len=0
  Inst 23724:   nop     len=0
  Inst 23725:   nop     len=0
  Inst 23726:   nop     len=0
  Inst 23727:   nop     len=0
  Inst 23728:   nop     len=0
  Inst 23729:   nop     len=0
  Inst 23730:   nop     len=0
  Inst 23731:   nop     len=0
  Inst 23732:   nop     len=0
  Inst 23733:   nop     len=0
  Inst 23734:   nop     len=0
  Inst 23735:   nop     len=0
  Inst 23736:   nop     len=0
  Inst 23737:   nop     len=0
  Inst 23738:   nop     len=0
  Inst 23739:   nop     len=0
  Inst 23740:   nop     len=0
  Inst 23741:   jmp     label716
Block 716:
  (original IR block: block358)
  (successor: Block 717)
  (successor: Block 718)
  (instruction range: 23742 .. 23753)
  Inst 23742:   movq    rsp(2064 + virtual offset), %rsi
  Inst 23743:   movq    8(%rsi), %rdi
  Inst 23744:   movq    rsp(2048 + virtual offset), %rsi
  Inst 23745:   load_ext_name u0:2+0, %rax
  Inst 23746:   movq    %rsi, rsp(1184 + virtual offset)
  Inst 23747:   movq    %rdi, rsp(1200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23748:   call    *%rax
  Inst 23749:   movq    %rax, %r15
  Inst 23750:   movq    %rdx, %r14
  Inst 23751:   testq   %r14, %r14
  Inst 23752:   jz      label717; j label718
Block 717:
  (successor: Block 720)
  (instruction range: 23753 .. 23844)
  Inst 23753:   movq    %r15, rsp(1184 + virtual offset)
  Inst 23754:   nop     len=0
  Inst 23755:   nop     len=0
  Inst 23756:   nop     len=0
  Inst 23757:   nop     len=0
  Inst 23758:   nop     len=0
  Inst 23759:   nop     len=0
  Inst 23760:   nop     len=0
  Inst 23761:   nop     len=0
  Inst 23762:   nop     len=0
  Inst 23763:   nop     len=0
  Inst 23764:   nop     len=0
  Inst 23765:   nop     len=0
  Inst 23766:   nop     len=0
  Inst 23767:   nop     len=0
  Inst 23768:   nop     len=0
  Inst 23769:   nop     len=0
  Inst 23770:   nop     len=0
  Inst 23771:   nop     len=0
  Inst 23772:   nop     len=0
  Inst 23773:   nop     len=0
  Inst 23774:   nop     len=0
  Inst 23775:   nop     len=0
  Inst 23776:   nop     len=0
  Inst 23777:   nop     len=0
  Inst 23778:   nop     len=0
  Inst 23779:   nop     len=0
  Inst 23780:   nop     len=0
  Inst 23781:   nop     len=0
  Inst 23782:   nop     len=0
  Inst 23783:   nop     len=0
  Inst 23784:   nop     len=0
  Inst 23785:   nop     len=0
  Inst 23786:   nop     len=0
  Inst 23787:   nop     len=0
  Inst 23788:   nop     len=0
  Inst 23789:   nop     len=0
  Inst 23790:   nop     len=0
  Inst 23791:   nop     len=0
  Inst 23792:   nop     len=0
  Inst 23793:   nop     len=0
  Inst 23794:   nop     len=0
  Inst 23795:   nop     len=0
  Inst 23796:   nop     len=0
  Inst 23797:   nop     len=0
  Inst 23798:   nop     len=0
  Inst 23799:   nop     len=0
  Inst 23800:   nop     len=0
  Inst 23801:   nop     len=0
  Inst 23802:   nop     len=0
  Inst 23803:   nop     len=0
  Inst 23804:   nop     len=0
  Inst 23805:   nop     len=0
  Inst 23806:   nop     len=0
  Inst 23807:   nop     len=0
  Inst 23808:   nop     len=0
  Inst 23809:   nop     len=0
  Inst 23810:   nop     len=0
  Inst 23811:   nop     len=0
  Inst 23812:   nop     len=0
  Inst 23813:   nop     len=0
  Inst 23814:   nop     len=0
  Inst 23815:   nop     len=0
  Inst 23816:   nop     len=0
  Inst 23817:   nop     len=0
  Inst 23818:   nop     len=0
  Inst 23819:   nop     len=0
  Inst 23820:   nop     len=0
  Inst 23821:   nop     len=0
  Inst 23822:   nop     len=0
  Inst 23823:   nop     len=0
  Inst 23824:   nop     len=0
  Inst 23825:   nop     len=0
  Inst 23826:   nop     len=0
  Inst 23827:   nop     len=0
  Inst 23828:   nop     len=0
  Inst 23829:   nop     len=0
  Inst 23830:   nop     len=0
  Inst 23831:   nop     len=0
  Inst 23832:   nop     len=0
  Inst 23833:   nop     len=0
  Inst 23834:   nop     len=0
  Inst 23835:   nop     len=0
  Inst 23836:   nop     len=0
  Inst 23837:   nop     len=0
  Inst 23838:   nop     len=0
  Inst 23839:   nop     len=0
  Inst 23840:   nop     len=0
  Inst 23841:   nop     len=0
  Inst 23842:   nop     len=0
  Inst 23843:   jmp     label720
Block 718:
  (original IR block: block361)
  (successor: Block 719)
  (instruction range: 23844 .. 23873)
  Inst 23844:   movq    rsp(2072 + virtual offset), %rsi
  Inst 23845:   movq    152(%rsi), %r13
  Inst 23846:   movq    %r14, %rbx
  Inst 23847:   addq    $-1, %rbx
  Inst 23848:   movq    %r14, %rdx
  Inst 23849:   shlq    $3, %rdx
  Inst 23850:   movq    %r13, %r12
  Inst 23851:   addq    %rdx, %r12
  Inst 23852:   movq    %r13, %rdi
  Inst 23853:   addq    $-24, %rdi
  Inst 23854:   movq    %r13, %rsi
  Inst 23855:   load_ext_name %Memmove+0, %rax
  Inst 23856:   movq    %r15, rsp(1200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S149, S150, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23857:   call    *%rax
  Inst 23858:   movq    rsp(1200 + virtual offset), %r15
  Inst 23859:   load_ext_name u1:1+0, %rsi
  Inst 23860:   movl    $1, %edi
  Inst 23861:   movq    %rdi, -8(%r13,%r14,8)
  Inst 23862:   movl    $1, %edi
  Inst 23863:   movq    %rdi, -16(%r13,%r14,8)
  Inst 23864:   movq    %rsi, -24(%r13,%r14,8)
  Inst 23865:   movq    rsp(2072 + virtual offset), %rsi
  Inst 23866:   movq    %r12, 152(%rsi)
  Inst 23867:   movq    %r15, %rdi
  Inst 23868:   movq    %rbx, %rsi
  Inst 23869:   load_ext_name u0:3+0, %rax
  Inst 23870:   movq    %rdi, rsp(1184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23871:   call    *%rax
  Inst 23872:   jmp     label719
Block 719:
  (successor: Block 720)
  (instruction range: 23873 .. 23964)
  Inst 23873:   movq    %rax, rsp(1184 + virtual offset)
  Inst 23874:   nop     len=0
  Inst 23875:   nop     len=0
  Inst 23876:   nop     len=0
  Inst 23877:   nop     len=0
  Inst 23878:   nop     len=0
  Inst 23879:   nop     len=0
  Inst 23880:   nop     len=0
  Inst 23881:   nop     len=0
  Inst 23882:   nop     len=0
  Inst 23883:   nop     len=0
  Inst 23884:   nop     len=0
  Inst 23885:   nop     len=0
  Inst 23886:   nop     len=0
  Inst 23887:   nop     len=0
  Inst 23888:   nop     len=0
  Inst 23889:   nop     len=0
  Inst 23890:   nop     len=0
  Inst 23891:   nop     len=0
  Inst 23892:   nop     len=0
  Inst 23893:   nop     len=0
  Inst 23894:   nop     len=0
  Inst 23895:   nop     len=0
  Inst 23896:   nop     len=0
  Inst 23897:   nop     len=0
  Inst 23898:   nop     len=0
  Inst 23899:   nop     len=0
  Inst 23900:   nop     len=0
  Inst 23901:   nop     len=0
  Inst 23902:   nop     len=0
  Inst 23903:   nop     len=0
  Inst 23904:   nop     len=0
  Inst 23905:   nop     len=0
  Inst 23906:   nop     len=0
  Inst 23907:   nop     len=0
  Inst 23908:   nop     len=0
  Inst 23909:   nop     len=0
  Inst 23910:   nop     len=0
  Inst 23911:   nop     len=0
  Inst 23912:   nop     len=0
  Inst 23913:   nop     len=0
  Inst 23914:   nop     len=0
  Inst 23915:   nop     len=0
  Inst 23916:   nop     len=0
  Inst 23917:   nop     len=0
  Inst 23918:   nop     len=0
  Inst 23919:   nop     len=0
  Inst 23920:   nop     len=0
  Inst 23921:   nop     len=0
  Inst 23922:   nop     len=0
  Inst 23923:   nop     len=0
  Inst 23924:   nop     len=0
  Inst 23925:   nop     len=0
  Inst 23926:   nop     len=0
  Inst 23927:   nop     len=0
  Inst 23928:   nop     len=0
  Inst 23929:   nop     len=0
  Inst 23930:   nop     len=0
  Inst 23931:   nop     len=0
  Inst 23932:   nop     len=0
  Inst 23933:   nop     len=0
  Inst 23934:   nop     len=0
  Inst 23935:   nop     len=0
  Inst 23936:   nop     len=0
  Inst 23937:   nop     len=0
  Inst 23938:   nop     len=0
  Inst 23939:   nop     len=0
  Inst 23940:   nop     len=0
  Inst 23941:   nop     len=0
  Inst 23942:   nop     len=0
  Inst 23943:   nop     len=0
  Inst 23944:   nop     len=0
  Inst 23945:   nop     len=0
  Inst 23946:   nop     len=0
  Inst 23947:   nop     len=0
  Inst 23948:   nop     len=0
  Inst 23949:   nop     len=0
  Inst 23950:   nop     len=0
  Inst 23951:   nop     len=0
  Inst 23952:   nop     len=0
  Inst 23953:   nop     len=0
  Inst 23954:   nop     len=0
  Inst 23955:   nop     len=0
  Inst 23956:   nop     len=0
  Inst 23957:   nop     len=0
  Inst 23958:   nop     len=0
  Inst 23959:   nop     len=0
  Inst 23960:   nop     len=0
  Inst 23961:   nop     len=0
  Inst 23962:   nop     len=0
  Inst 23963:   jmp     label720
Block 720:
  (original IR block: block360)
  (successor: Block 721)
  (successor: Block 722)
  (instruction range: 23964 .. 23975)
  Inst 23964:   movq    rsp(2064 + virtual offset), %rsi
  Inst 23965:   movq    8(%rsi), %rdi
  Inst 23966:   movq    rsp(2048 + virtual offset), %rsi
  Inst 23967:   load_ext_name u0:2+0, %rax
  Inst 23968:   movq    %rsi, rsp(1200 + virtual offset)
  Inst 23969:   movq    %rdi, rsp(1216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 23970:   call    *%rax
  Inst 23971:   movq    %rax, %rbx
  Inst 23972:   movq    %rdx, %r14
  Inst 23973:   testq   %r14, %r14
  Inst 23974:   jz      label721; j label722
Block 721:
  (successor: Block 724)
  (instruction range: 23975 .. 24067)
  Inst 23975:   movq    %rbx, rsp(1704 + virtual offset)
  Inst 23976:   nop     len=0
  Inst 23977:   nop     len=0
  Inst 23978:   nop     len=0
  Inst 23979:   nop     len=0
  Inst 23980:   nop     len=0
  Inst 23981:   nop     len=0
  Inst 23982:   nop     len=0
  Inst 23983:   nop     len=0
  Inst 23984:   nop     len=0
  Inst 23985:   nop     len=0
  Inst 23986:   nop     len=0
  Inst 23987:   nop     len=0
  Inst 23988:   nop     len=0
  Inst 23989:   nop     len=0
  Inst 23990:   nop     len=0
  Inst 23991:   nop     len=0
  Inst 23992:   nop     len=0
  Inst 23993:   nop     len=0
  Inst 23994:   nop     len=0
  Inst 23995:   nop     len=0
  Inst 23996:   nop     len=0
  Inst 23997:   nop     len=0
  Inst 23998:   nop     len=0
  Inst 23999:   nop     len=0
  Inst 24000:   nop     len=0
  Inst 24001:   nop     len=0
  Inst 24002:   nop     len=0
  Inst 24003:   nop     len=0
  Inst 24004:   nop     len=0
  Inst 24005:   nop     len=0
  Inst 24006:   nop     len=0
  Inst 24007:   nop     len=0
  Inst 24008:   nop     len=0
  Inst 24009:   nop     len=0
  Inst 24010:   nop     len=0
  Inst 24011:   nop     len=0
  Inst 24012:   nop     len=0
  Inst 24013:   nop     len=0
  Inst 24014:   nop     len=0
  Inst 24015:   nop     len=0
  Inst 24016:   nop     len=0
  Inst 24017:   nop     len=0
  Inst 24018:   nop     len=0
  Inst 24019:   nop     len=0
  Inst 24020:   nop     len=0
  Inst 24021:   nop     len=0
  Inst 24022:   nop     len=0
  Inst 24023:   nop     len=0
  Inst 24024:   nop     len=0
  Inst 24025:   nop     len=0
  Inst 24026:   nop     len=0
  Inst 24027:   nop     len=0
  Inst 24028:   nop     len=0
  Inst 24029:   nop     len=0
  Inst 24030:   nop     len=0
  Inst 24031:   nop     len=0
  Inst 24032:   nop     len=0
  Inst 24033:   nop     len=0
  Inst 24034:   nop     len=0
  Inst 24035:   nop     len=0
  Inst 24036:   nop     len=0
  Inst 24037:   nop     len=0
  Inst 24038:   nop     len=0
  Inst 24039:   nop     len=0
  Inst 24040:   nop     len=0
  Inst 24041:   nop     len=0
  Inst 24042:   nop     len=0
  Inst 24043:   nop     len=0
  Inst 24044:   nop     len=0
  Inst 24045:   nop     len=0
  Inst 24046:   nop     len=0
  Inst 24047:   nop     len=0
  Inst 24048:   nop     len=0
  Inst 24049:   nop     len=0
  Inst 24050:   nop     len=0
  Inst 24051:   nop     len=0
  Inst 24052:   nop     len=0
  Inst 24053:   nop     len=0
  Inst 24054:   nop     len=0
  Inst 24055:   nop     len=0
  Inst 24056:   nop     len=0
  Inst 24057:   nop     len=0
  Inst 24058:   nop     len=0
  Inst 24059:   nop     len=0
  Inst 24060:   nop     len=0
  Inst 24061:   nop     len=0
  Inst 24062:   nop     len=0
  Inst 24063:   nop     len=0
  Inst 24064:   nop     len=0
  Inst 24065:   nop     len=0
  Inst 24066:   jmp     label724
Block 722:
  (original IR block: block363)
  (successor: Block 723)
  (instruction range: 24067 .. 24096)
  Inst 24067:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24068:   movq    152(%rsi), %r13
  Inst 24069:   movq    %r14, %r15
  Inst 24070:   addq    $-1, %r15
  Inst 24071:   movq    %r14, %rdx
  Inst 24072:   shlq    $3, %rdx
  Inst 24073:   movq    %r13, %r12
  Inst 24074:   addq    %rdx, %r12
  Inst 24075:   movq    %r13, %rdi
  Inst 24076:   addq    $-24, %rdi
  Inst 24077:   movq    %r13, %rsi
  Inst 24078:   load_ext_name %Memmove+0, %rax
  Inst 24079:   movq    %rbx, rsp(1200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24080:   call    *%rax
  Inst 24081:   movq    rsp(1200 + virtual offset), %rbx
  Inst 24082:   load_ext_name u1:1+0, %rsi
  Inst 24083:   movl    $1, %edi
  Inst 24084:   movq    %rdi, -8(%r13,%r14,8)
  Inst 24085:   movl    $1, %edi
  Inst 24086:   movq    %rdi, -16(%r13,%r14,8)
  Inst 24087:   movq    %rsi, -24(%r13,%r14,8)
  Inst 24088:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24089:   movq    %r12, 152(%rsi)
  Inst 24090:   movq    %rbx, %rdi
  Inst 24091:   movq    %r15, %rsi
  Inst 24092:   load_ext_name u0:3+0, %rax
  Inst 24093:   movq    %rdi, rsp(1200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24094:   call    *%rax
  Inst 24095:   jmp     label723
Block 723:
  (successor: Block 724)
  (instruction range: 24096 .. 24188)
  Inst 24096:   movq    %rax, rsp(1704 + virtual offset)
  Inst 24097:   nop     len=0
  Inst 24098:   nop     len=0
  Inst 24099:   nop     len=0
  Inst 24100:   nop     len=0
  Inst 24101:   nop     len=0
  Inst 24102:   nop     len=0
  Inst 24103:   nop     len=0
  Inst 24104:   nop     len=0
  Inst 24105:   nop     len=0
  Inst 24106:   nop     len=0
  Inst 24107:   nop     len=0
  Inst 24108:   nop     len=0
  Inst 24109:   nop     len=0
  Inst 24110:   nop     len=0
  Inst 24111:   nop     len=0
  Inst 24112:   nop     len=0
  Inst 24113:   nop     len=0
  Inst 24114:   nop     len=0
  Inst 24115:   nop     len=0
  Inst 24116:   nop     len=0
  Inst 24117:   nop     len=0
  Inst 24118:   nop     len=0
  Inst 24119:   nop     len=0
  Inst 24120:   nop     len=0
  Inst 24121:   nop     len=0
  Inst 24122:   nop     len=0
  Inst 24123:   nop     len=0
  Inst 24124:   nop     len=0
  Inst 24125:   nop     len=0
  Inst 24126:   nop     len=0
  Inst 24127:   nop     len=0
  Inst 24128:   nop     len=0
  Inst 24129:   nop     len=0
  Inst 24130:   nop     len=0
  Inst 24131:   nop     len=0
  Inst 24132:   nop     len=0
  Inst 24133:   nop     len=0
  Inst 24134:   nop     len=0
  Inst 24135:   nop     len=0
  Inst 24136:   nop     len=0
  Inst 24137:   nop     len=0
  Inst 24138:   nop     len=0
  Inst 24139:   nop     len=0
  Inst 24140:   nop     len=0
  Inst 24141:   nop     len=0
  Inst 24142:   nop     len=0
  Inst 24143:   nop     len=0
  Inst 24144:   nop     len=0
  Inst 24145:   nop     len=0
  Inst 24146:   nop     len=0
  Inst 24147:   nop     len=0
  Inst 24148:   nop     len=0
  Inst 24149:   nop     len=0
  Inst 24150:   nop     len=0
  Inst 24151:   nop     len=0
  Inst 24152:   nop     len=0
  Inst 24153:   nop     len=0
  Inst 24154:   nop     len=0
  Inst 24155:   nop     len=0
  Inst 24156:   nop     len=0
  Inst 24157:   nop     len=0
  Inst 24158:   nop     len=0
  Inst 24159:   nop     len=0
  Inst 24160:   nop     len=0
  Inst 24161:   nop     len=0
  Inst 24162:   nop     len=0
  Inst 24163:   nop     len=0
  Inst 24164:   nop     len=0
  Inst 24165:   nop     len=0
  Inst 24166:   nop     len=0
  Inst 24167:   nop     len=0
  Inst 24168:   nop     len=0
  Inst 24169:   nop     len=0
  Inst 24170:   nop     len=0
  Inst 24171:   nop     len=0
  Inst 24172:   nop     len=0
  Inst 24173:   nop     len=0
  Inst 24174:   nop     len=0
  Inst 24175:   nop     len=0
  Inst 24176:   nop     len=0
  Inst 24177:   nop     len=0
  Inst 24178:   nop     len=0
  Inst 24179:   nop     len=0
  Inst 24180:   nop     len=0
  Inst 24181:   nop     len=0
  Inst 24182:   nop     len=0
  Inst 24183:   nop     len=0
  Inst 24184:   nop     len=0
  Inst 24185:   nop     len=0
  Inst 24186:   nop     len=0
  Inst 24187:   jmp     label724
Block 724:
  (original IR block: block362)
  (successor: Block 725)
  (successor: Block 726)
  (instruction range: 24188 .. 24199)
  Inst 24188:   movq    rsp(2064 + virtual offset), %rsi
  Inst 24189:   movq    8(%rsi), %rdi
  Inst 24190:   movq    rsp(2048 + virtual offset), %rsi
  Inst 24191:   load_ext_name u0:2+0, %rax
  Inst 24192:   movq    %rsi, rsp(1200 + virtual offset)
  Inst 24193:   movq    %rdi, rsp(1216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24194:   call    *%rax
  Inst 24195:   movq    %rax, %rbx
  Inst 24196:   movq    %rdx, %r14
  Inst 24197:   testq   %r14, %r14
  Inst 24198:   jz      label725; j label726
Block 725:
  (successor: Block 728)
  (instruction range: 24199 .. 24291)
  Inst 24199:   movq    %rbx, rsp(1200 + virtual offset)
  Inst 24200:   nop     len=0
  Inst 24201:   nop     len=0
  Inst 24202:   nop     len=0
  Inst 24203:   nop     len=0
  Inst 24204:   nop     len=0
  Inst 24205:   nop     len=0
  Inst 24206:   nop     len=0
  Inst 24207:   nop     len=0
  Inst 24208:   nop     len=0
  Inst 24209:   nop     len=0
  Inst 24210:   nop     len=0
  Inst 24211:   nop     len=0
  Inst 24212:   nop     len=0
  Inst 24213:   nop     len=0
  Inst 24214:   nop     len=0
  Inst 24215:   nop     len=0
  Inst 24216:   nop     len=0
  Inst 24217:   nop     len=0
  Inst 24218:   nop     len=0
  Inst 24219:   nop     len=0
  Inst 24220:   nop     len=0
  Inst 24221:   nop     len=0
  Inst 24222:   nop     len=0
  Inst 24223:   nop     len=0
  Inst 24224:   nop     len=0
  Inst 24225:   nop     len=0
  Inst 24226:   nop     len=0
  Inst 24227:   nop     len=0
  Inst 24228:   nop     len=0
  Inst 24229:   nop     len=0
  Inst 24230:   nop     len=0
  Inst 24231:   nop     len=0
  Inst 24232:   nop     len=0
  Inst 24233:   nop     len=0
  Inst 24234:   nop     len=0
  Inst 24235:   nop     len=0
  Inst 24236:   nop     len=0
  Inst 24237:   nop     len=0
  Inst 24238:   nop     len=0
  Inst 24239:   nop     len=0
  Inst 24240:   nop     len=0
  Inst 24241:   nop     len=0
  Inst 24242:   nop     len=0
  Inst 24243:   nop     len=0
  Inst 24244:   nop     len=0
  Inst 24245:   nop     len=0
  Inst 24246:   nop     len=0
  Inst 24247:   nop     len=0
  Inst 24248:   nop     len=0
  Inst 24249:   nop     len=0
  Inst 24250:   nop     len=0
  Inst 24251:   nop     len=0
  Inst 24252:   nop     len=0
  Inst 24253:   nop     len=0
  Inst 24254:   nop     len=0
  Inst 24255:   nop     len=0
  Inst 24256:   nop     len=0
  Inst 24257:   nop     len=0
  Inst 24258:   nop     len=0
  Inst 24259:   nop     len=0
  Inst 24260:   nop     len=0
  Inst 24261:   nop     len=0
  Inst 24262:   nop     len=0
  Inst 24263:   nop     len=0
  Inst 24264:   nop     len=0
  Inst 24265:   nop     len=0
  Inst 24266:   nop     len=0
  Inst 24267:   nop     len=0
  Inst 24268:   nop     len=0
  Inst 24269:   nop     len=0
  Inst 24270:   nop     len=0
  Inst 24271:   nop     len=0
  Inst 24272:   nop     len=0
  Inst 24273:   nop     len=0
  Inst 24274:   nop     len=0
  Inst 24275:   nop     len=0
  Inst 24276:   nop     len=0
  Inst 24277:   nop     len=0
  Inst 24278:   nop     len=0
  Inst 24279:   nop     len=0
  Inst 24280:   nop     len=0
  Inst 24281:   nop     len=0
  Inst 24282:   nop     len=0
  Inst 24283:   nop     len=0
  Inst 24284:   nop     len=0
  Inst 24285:   nop     len=0
  Inst 24286:   nop     len=0
  Inst 24287:   nop     len=0
  Inst 24288:   nop     len=0
  Inst 24289:   nop     len=0
  Inst 24290:   jmp     label728
Block 726:
  (original IR block: block365)
  (successor: Block 727)
  (instruction range: 24291 .. 24320)
  Inst 24291:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24292:   movq    152(%rsi), %r13
  Inst 24293:   movq    %r14, %r15
  Inst 24294:   addq    $-1, %r15
  Inst 24295:   movq    %r14, %rdx
  Inst 24296:   shlq    $3, %rdx
  Inst 24297:   movq    %r13, %r12
  Inst 24298:   addq    %rdx, %r12
  Inst 24299:   movq    %r13, %rdi
  Inst 24300:   addq    $-24, %rdi
  Inst 24301:   movq    %r13, %rsi
  Inst 24302:   load_ext_name %Memmove+0, %rax
  Inst 24303:   movq    %rbx, rsp(1216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S151, S152, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24304:   call    *%rax
  Inst 24305:   movq    rsp(1216 + virtual offset), %rbx
  Inst 24306:   load_ext_name u1:1+0, %rsi
  Inst 24307:   movl    $1, %edi
  Inst 24308:   movq    %rdi, -8(%r13,%r14,8)
  Inst 24309:   movl    $1, %edi
  Inst 24310:   movq    %rdi, -16(%r13,%r14,8)
  Inst 24311:   movq    %rsi, -24(%r13,%r14,8)
  Inst 24312:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24313:   movq    %r12, 152(%rsi)
  Inst 24314:   movq    %rbx, %rdi
  Inst 24315:   movq    %r15, %rsi
  Inst 24316:   load_ext_name u0:3+0, %rax
  Inst 24317:   movq    %rdi, rsp(1200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24318:   call    *%rax
  Inst 24319:   jmp     label727
Block 727:
  (successor: Block 728)
  (instruction range: 24320 .. 24412)
  Inst 24320:   movq    %rax, rsp(1200 + virtual offset)
  Inst 24321:   nop     len=0
  Inst 24322:   nop     len=0
  Inst 24323:   nop     len=0
  Inst 24324:   nop     len=0
  Inst 24325:   nop     len=0
  Inst 24326:   nop     len=0
  Inst 24327:   nop     len=0
  Inst 24328:   nop     len=0
  Inst 24329:   nop     len=0
  Inst 24330:   nop     len=0
  Inst 24331:   nop     len=0
  Inst 24332:   nop     len=0
  Inst 24333:   nop     len=0
  Inst 24334:   nop     len=0
  Inst 24335:   nop     len=0
  Inst 24336:   nop     len=0
  Inst 24337:   nop     len=0
  Inst 24338:   nop     len=0
  Inst 24339:   nop     len=0
  Inst 24340:   nop     len=0
  Inst 24341:   nop     len=0
  Inst 24342:   nop     len=0
  Inst 24343:   nop     len=0
  Inst 24344:   nop     len=0
  Inst 24345:   nop     len=0
  Inst 24346:   nop     len=0
  Inst 24347:   nop     len=0
  Inst 24348:   nop     len=0
  Inst 24349:   nop     len=0
  Inst 24350:   nop     len=0
  Inst 24351:   nop     len=0
  Inst 24352:   nop     len=0
  Inst 24353:   nop     len=0
  Inst 24354:   nop     len=0
  Inst 24355:   nop     len=0
  Inst 24356:   nop     len=0
  Inst 24357:   nop     len=0
  Inst 24358:   nop     len=0
  Inst 24359:   nop     len=0
  Inst 24360:   nop     len=0
  Inst 24361:   nop     len=0
  Inst 24362:   nop     len=0
  Inst 24363:   nop     len=0
  Inst 24364:   nop     len=0
  Inst 24365:   nop     len=0
  Inst 24366:   nop     len=0
  Inst 24367:   nop     len=0
  Inst 24368:   nop     len=0
  Inst 24369:   nop     len=0
  Inst 24370:   nop     len=0
  Inst 24371:   nop     len=0
  Inst 24372:   nop     len=0
  Inst 24373:   nop     len=0
  Inst 24374:   nop     len=0
  Inst 24375:   nop     len=0
  Inst 24376:   nop     len=0
  Inst 24377:   nop     len=0
  Inst 24378:   nop     len=0
  Inst 24379:   nop     len=0
  Inst 24380:   nop     len=0
  Inst 24381:   nop     len=0
  Inst 24382:   nop     len=0
  Inst 24383:   nop     len=0
  Inst 24384:   nop     len=0
  Inst 24385:   nop     len=0
  Inst 24386:   nop     len=0
  Inst 24387:   nop     len=0
  Inst 24388:   nop     len=0
  Inst 24389:   nop     len=0
  Inst 24390:   nop     len=0
  Inst 24391:   nop     len=0
  Inst 24392:   nop     len=0
  Inst 24393:   nop     len=0
  Inst 24394:   nop     len=0
  Inst 24395:   nop     len=0
  Inst 24396:   nop     len=0
  Inst 24397:   nop     len=0
  Inst 24398:   nop     len=0
  Inst 24399:   nop     len=0
  Inst 24400:   nop     len=0
  Inst 24401:   nop     len=0
  Inst 24402:   nop     len=0
  Inst 24403:   nop     len=0
  Inst 24404:   nop     len=0
  Inst 24405:   nop     len=0
  Inst 24406:   nop     len=0
  Inst 24407:   nop     len=0
  Inst 24408:   nop     len=0
  Inst 24409:   nop     len=0
  Inst 24410:   nop     len=0
  Inst 24411:   jmp     label728
Block 728:
  (original IR block: block364)
  (successor: Block 729)
  (successor: Block 730)
  (instruction range: 24412 .. 24423)
  Inst 24412:   movq    rsp(2064 + virtual offset), %rsi
  Inst 24413:   movq    8(%rsi), %rdi
  Inst 24414:   movq    rsp(2048 + virtual offset), %rsi
  Inst 24415:   load_ext_name u0:2+0, %rax
  Inst 24416:   movq    %rsi, rsp(1216 + virtual offset)
  Inst 24417:   movq    %rdi, rsp(1232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24418:   call    *%rax
  Inst 24419:   movq    %rax, %r15
  Inst 24420:   movq    %rdx, %r14
  Inst 24421:   testq   %r14, %r14
  Inst 24422:   jz      label729; j label730
Block 729:
  (successor: Block 732)
  (instruction range: 24423 .. 24516)
  Inst 24423:   movq    %r15, rsp(1720 + virtual offset)
  Inst 24424:   nop     len=0
  Inst 24425:   nop     len=0
  Inst 24426:   nop     len=0
  Inst 24427:   nop     len=0
  Inst 24428:   nop     len=0
  Inst 24429:   nop     len=0
  Inst 24430:   nop     len=0
  Inst 24431:   nop     len=0
  Inst 24432:   nop     len=0
  Inst 24433:   nop     len=0
  Inst 24434:   nop     len=0
  Inst 24435:   nop     len=0
  Inst 24436:   nop     len=0
  Inst 24437:   nop     len=0
  Inst 24438:   nop     len=0
  Inst 24439:   nop     len=0
  Inst 24440:   nop     len=0
  Inst 24441:   nop     len=0
  Inst 24442:   nop     len=0
  Inst 24443:   nop     len=0
  Inst 24444:   nop     len=0
  Inst 24445:   nop     len=0
  Inst 24446:   nop     len=0
  Inst 24447:   nop     len=0
  Inst 24448:   nop     len=0
  Inst 24449:   nop     len=0
  Inst 24450:   nop     len=0
  Inst 24451:   nop     len=0
  Inst 24452:   nop     len=0
  Inst 24453:   nop     len=0
  Inst 24454:   nop     len=0
  Inst 24455:   nop     len=0
  Inst 24456:   nop     len=0
  Inst 24457:   nop     len=0
  Inst 24458:   nop     len=0
  Inst 24459:   nop     len=0
  Inst 24460:   nop     len=0
  Inst 24461:   nop     len=0
  Inst 24462:   nop     len=0
  Inst 24463:   nop     len=0
  Inst 24464:   nop     len=0
  Inst 24465:   nop     len=0
  Inst 24466:   nop     len=0
  Inst 24467:   nop     len=0
  Inst 24468:   nop     len=0
  Inst 24469:   nop     len=0
  Inst 24470:   nop     len=0
  Inst 24471:   nop     len=0
  Inst 24472:   nop     len=0
  Inst 24473:   nop     len=0
  Inst 24474:   nop     len=0
  Inst 24475:   nop     len=0
  Inst 24476:   nop     len=0
  Inst 24477:   nop     len=0
  Inst 24478:   nop     len=0
  Inst 24479:   nop     len=0
  Inst 24480:   nop     len=0
  Inst 24481:   nop     len=0
  Inst 24482:   nop     len=0
  Inst 24483:   nop     len=0
  Inst 24484:   nop     len=0
  Inst 24485:   nop     len=0
  Inst 24486:   nop     len=0
  Inst 24487:   nop     len=0
  Inst 24488:   nop     len=0
  Inst 24489:   nop     len=0
  Inst 24490:   nop     len=0
  Inst 24491:   nop     len=0
  Inst 24492:   nop     len=0
  Inst 24493:   nop     len=0
  Inst 24494:   nop     len=0
  Inst 24495:   nop     len=0
  Inst 24496:   nop     len=0
  Inst 24497:   nop     len=0
  Inst 24498:   nop     len=0
  Inst 24499:   nop     len=0
  Inst 24500:   nop     len=0
  Inst 24501:   nop     len=0
  Inst 24502:   nop     len=0
  Inst 24503:   nop     len=0
  Inst 24504:   nop     len=0
  Inst 24505:   nop     len=0
  Inst 24506:   nop     len=0
  Inst 24507:   nop     len=0
  Inst 24508:   nop     len=0
  Inst 24509:   nop     len=0
  Inst 24510:   nop     len=0
  Inst 24511:   nop     len=0
  Inst 24512:   nop     len=0
  Inst 24513:   nop     len=0
  Inst 24514:   nop     len=0
  Inst 24515:   jmp     label732
Block 730:
  (original IR block: block367)
  (successor: Block 731)
  (instruction range: 24516 .. 24545)
  Inst 24516:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24517:   movq    152(%rsi), %r13
  Inst 24518:   movq    %r14, %rbx
  Inst 24519:   addq    $-1, %rbx
  Inst 24520:   movq    %r14, %rdx
  Inst 24521:   shlq    $3, %rdx
  Inst 24522:   movq    %r13, %r12
  Inst 24523:   addq    %rdx, %r12
  Inst 24524:   movq    %r13, %rdi
  Inst 24525:   addq    $-24, %rdi
  Inst 24526:   movq    %r13, %rsi
  Inst 24527:   load_ext_name %Memmove+0, %rax
  Inst 24528:   movq    %r15, rsp(1216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24529:   call    *%rax
  Inst 24530:   movq    rsp(1216 + virtual offset), %r15
  Inst 24531:   load_ext_name u1:1+0, %rsi
  Inst 24532:   movl    $1, %edi
  Inst 24533:   movq    %rdi, -8(%r13,%r14,8)
  Inst 24534:   movl    $1, %edi
  Inst 24535:   movq    %rdi, -16(%r13,%r14,8)
  Inst 24536:   movq    %rsi, -24(%r13,%r14,8)
  Inst 24537:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24538:   movq    %r12, 152(%rsi)
  Inst 24539:   movq    %r15, %rdi
  Inst 24540:   movq    %rbx, %rsi
  Inst 24541:   load_ext_name u0:3+0, %rax
  Inst 24542:   movq    %rdi, rsp(1216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24543:   call    *%rax
  Inst 24544:   jmp     label731
Block 731:
  (successor: Block 732)
  (instruction range: 24545 .. 24638)
  Inst 24545:   movq    %rax, rsp(1720 + virtual offset)
  Inst 24546:   nop     len=0
  Inst 24547:   nop     len=0
  Inst 24548:   nop     len=0
  Inst 24549:   nop     len=0
  Inst 24550:   nop     len=0
  Inst 24551:   nop     len=0
  Inst 24552:   nop     len=0
  Inst 24553:   nop     len=0
  Inst 24554:   nop     len=0
  Inst 24555:   nop     len=0
  Inst 24556:   nop     len=0
  Inst 24557:   nop     len=0
  Inst 24558:   nop     len=0
  Inst 24559:   nop     len=0
  Inst 24560:   nop     len=0
  Inst 24561:   nop     len=0
  Inst 24562:   nop     len=0
  Inst 24563:   nop     len=0
  Inst 24564:   nop     len=0
  Inst 24565:   nop     len=0
  Inst 24566:   nop     len=0
  Inst 24567:   nop     len=0
  Inst 24568:   nop     len=0
  Inst 24569:   nop     len=0
  Inst 24570:   nop     len=0
  Inst 24571:   nop     len=0
  Inst 24572:   nop     len=0
  Inst 24573:   nop     len=0
  Inst 24574:   nop     len=0
  Inst 24575:   nop     len=0
  Inst 24576:   nop     len=0
  Inst 24577:   nop     len=0
  Inst 24578:   nop     len=0
  Inst 24579:   nop     len=0
  Inst 24580:   nop     len=0
  Inst 24581:   nop     len=0
  Inst 24582:   nop     len=0
  Inst 24583:   nop     len=0
  Inst 24584:   nop     len=0
  Inst 24585:   nop     len=0
  Inst 24586:   nop     len=0
  Inst 24587:   nop     len=0
  Inst 24588:   nop     len=0
  Inst 24589:   nop     len=0
  Inst 24590:   nop     len=0
  Inst 24591:   nop     len=0
  Inst 24592:   nop     len=0
  Inst 24593:   nop     len=0
  Inst 24594:   nop     len=0
  Inst 24595:   nop     len=0
  Inst 24596:   nop     len=0
  Inst 24597:   nop     len=0
  Inst 24598:   nop     len=0
  Inst 24599:   nop     len=0
  Inst 24600:   nop     len=0
  Inst 24601:   nop     len=0
  Inst 24602:   nop     len=0
  Inst 24603:   nop     len=0
  Inst 24604:   nop     len=0
  Inst 24605:   nop     len=0
  Inst 24606:   nop     len=0
  Inst 24607:   nop     len=0
  Inst 24608:   nop     len=0
  Inst 24609:   nop     len=0
  Inst 24610:   nop     len=0
  Inst 24611:   nop     len=0
  Inst 24612:   nop     len=0
  Inst 24613:   nop     len=0
  Inst 24614:   nop     len=0
  Inst 24615:   nop     len=0
  Inst 24616:   nop     len=0
  Inst 24617:   nop     len=0
  Inst 24618:   nop     len=0
  Inst 24619:   nop     len=0
  Inst 24620:   nop     len=0
  Inst 24621:   nop     len=0
  Inst 24622:   nop     len=0
  Inst 24623:   nop     len=0
  Inst 24624:   nop     len=0
  Inst 24625:   nop     len=0
  Inst 24626:   nop     len=0
  Inst 24627:   nop     len=0
  Inst 24628:   nop     len=0
  Inst 24629:   nop     len=0
  Inst 24630:   nop     len=0
  Inst 24631:   nop     len=0
  Inst 24632:   nop     len=0
  Inst 24633:   nop     len=0
  Inst 24634:   nop     len=0
  Inst 24635:   nop     len=0
  Inst 24636:   nop     len=0
  Inst 24637:   jmp     label732
Block 732:
  (original IR block: block366)
  (successor: Block 733)
  (successor: Block 734)
  (instruction range: 24638 .. 24649)
  Inst 24638:   movq    rsp(2064 + virtual offset), %rsi
  Inst 24639:   movq    8(%rsi), %rdi
  Inst 24640:   movq    rsp(2048 + virtual offset), %rsi
  Inst 24641:   load_ext_name u0:2+0, %rax
  Inst 24642:   movq    %rsi, rsp(1216 + virtual offset)
  Inst 24643:   movq    %rdi, rsp(1232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24644:   call    *%rax
  Inst 24645:   movq    %rax, %rbx
  Inst 24646:   movq    %rdx, %r14
  Inst 24647:   testq   %r14, %r14
  Inst 24648:   jz      label733; j label734
Block 733:
  (successor: Block 736)
  (instruction range: 24649 .. 24742)
  Inst 24649:   movq    %rbx, rsp(1216 + virtual offset)
  Inst 24650:   nop     len=0
  Inst 24651:   nop     len=0
  Inst 24652:   nop     len=0
  Inst 24653:   nop     len=0
  Inst 24654:   nop     len=0
  Inst 24655:   nop     len=0
  Inst 24656:   nop     len=0
  Inst 24657:   nop     len=0
  Inst 24658:   nop     len=0
  Inst 24659:   nop     len=0
  Inst 24660:   nop     len=0
  Inst 24661:   nop     len=0
  Inst 24662:   nop     len=0
  Inst 24663:   nop     len=0
  Inst 24664:   nop     len=0
  Inst 24665:   nop     len=0
  Inst 24666:   nop     len=0
  Inst 24667:   nop     len=0
  Inst 24668:   nop     len=0
  Inst 24669:   nop     len=0
  Inst 24670:   nop     len=0
  Inst 24671:   nop     len=0
  Inst 24672:   nop     len=0
  Inst 24673:   nop     len=0
  Inst 24674:   nop     len=0
  Inst 24675:   nop     len=0
  Inst 24676:   nop     len=0
  Inst 24677:   nop     len=0
  Inst 24678:   nop     len=0
  Inst 24679:   nop     len=0
  Inst 24680:   nop     len=0
  Inst 24681:   nop     len=0
  Inst 24682:   nop     len=0
  Inst 24683:   nop     len=0
  Inst 24684:   nop     len=0
  Inst 24685:   nop     len=0
  Inst 24686:   nop     len=0
  Inst 24687:   nop     len=0
  Inst 24688:   nop     len=0
  Inst 24689:   nop     len=0
  Inst 24690:   nop     len=0
  Inst 24691:   nop     len=0
  Inst 24692:   nop     len=0
  Inst 24693:   nop     len=0
  Inst 24694:   nop     len=0
  Inst 24695:   nop     len=0
  Inst 24696:   nop     len=0
  Inst 24697:   nop     len=0
  Inst 24698:   nop     len=0
  Inst 24699:   nop     len=0
  Inst 24700:   nop     len=0
  Inst 24701:   nop     len=0
  Inst 24702:   nop     len=0
  Inst 24703:   nop     len=0
  Inst 24704:   nop     len=0
  Inst 24705:   nop     len=0
  Inst 24706:   nop     len=0
  Inst 24707:   nop     len=0
  Inst 24708:   nop     len=0
  Inst 24709:   nop     len=0
  Inst 24710:   nop     len=0
  Inst 24711:   nop     len=0
  Inst 24712:   nop     len=0
  Inst 24713:   nop     len=0
  Inst 24714:   nop     len=0
  Inst 24715:   nop     len=0
  Inst 24716:   nop     len=0
  Inst 24717:   nop     len=0
  Inst 24718:   nop     len=0
  Inst 24719:   nop     len=0
  Inst 24720:   nop     len=0
  Inst 24721:   nop     len=0
  Inst 24722:   nop     len=0
  Inst 24723:   nop     len=0
  Inst 24724:   nop     len=0
  Inst 24725:   nop     len=0
  Inst 24726:   nop     len=0
  Inst 24727:   nop     len=0
  Inst 24728:   nop     len=0
  Inst 24729:   nop     len=0
  Inst 24730:   nop     len=0
  Inst 24731:   nop     len=0
  Inst 24732:   nop     len=0
  Inst 24733:   nop     len=0
  Inst 24734:   nop     len=0
  Inst 24735:   nop     len=0
  Inst 24736:   nop     len=0
  Inst 24737:   nop     len=0
  Inst 24738:   nop     len=0
  Inst 24739:   nop     len=0
  Inst 24740:   nop     len=0
  Inst 24741:   jmp     label736
Block 734:
  (original IR block: block369)
  (successor: Block 735)
  (instruction range: 24742 .. 24771)
  Inst 24742:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24743:   movq    152(%rsi), %r13
  Inst 24744:   movq    %r14, %r15
  Inst 24745:   addq    $-1, %r15
  Inst 24746:   movq    %r14, %rdx
  Inst 24747:   shlq    $3, %rdx
  Inst 24748:   movq    %r13, %r12
  Inst 24749:   addq    %rdx, %r12
  Inst 24750:   movq    %r13, %rdi
  Inst 24751:   addq    $-24, %rdi
  Inst 24752:   movq    %r13, %rsi
  Inst 24753:   load_ext_name %Memmove+0, %rax
  Inst 24754:   movq    %rbx, rsp(1232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S153, S154, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24755:   call    *%rax
  Inst 24756:   movq    rsp(1232 + virtual offset), %rbx
  Inst 24757:   load_ext_name u1:1+0, %rsi
  Inst 24758:   movl    $1, %edi
  Inst 24759:   movq    %rdi, -8(%r13,%r14,8)
  Inst 24760:   movl    $1, %edi
  Inst 24761:   movq    %rdi, -16(%r13,%r14,8)
  Inst 24762:   movq    %rsi, -24(%r13,%r14,8)
  Inst 24763:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24764:   movq    %r12, 152(%rsi)
  Inst 24765:   movq    %rbx, %rdi
  Inst 24766:   movq    %r15, %rsi
  Inst 24767:   load_ext_name u0:3+0, %rax
  Inst 24768:   movq    %rdi, rsp(1216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24769:   call    *%rax
  Inst 24770:   jmp     label735
Block 735:
  (successor: Block 736)
  (instruction range: 24771 .. 24864)
  Inst 24771:   movq    %rax, rsp(1216 + virtual offset)
  Inst 24772:   nop     len=0
  Inst 24773:   nop     len=0
  Inst 24774:   nop     len=0
  Inst 24775:   nop     len=0
  Inst 24776:   nop     len=0
  Inst 24777:   nop     len=0
  Inst 24778:   nop     len=0
  Inst 24779:   nop     len=0
  Inst 24780:   nop     len=0
  Inst 24781:   nop     len=0
  Inst 24782:   nop     len=0
  Inst 24783:   nop     len=0
  Inst 24784:   nop     len=0
  Inst 24785:   nop     len=0
  Inst 24786:   nop     len=0
  Inst 24787:   nop     len=0
  Inst 24788:   nop     len=0
  Inst 24789:   nop     len=0
  Inst 24790:   nop     len=0
  Inst 24791:   nop     len=0
  Inst 24792:   nop     len=0
  Inst 24793:   nop     len=0
  Inst 24794:   nop     len=0
  Inst 24795:   nop     len=0
  Inst 24796:   nop     len=0
  Inst 24797:   nop     len=0
  Inst 24798:   nop     len=0
  Inst 24799:   nop     len=0
  Inst 24800:   nop     len=0
  Inst 24801:   nop     len=0
  Inst 24802:   nop     len=0
  Inst 24803:   nop     len=0
  Inst 24804:   nop     len=0
  Inst 24805:   nop     len=0
  Inst 24806:   nop     len=0
  Inst 24807:   nop     len=0
  Inst 24808:   nop     len=0
  Inst 24809:   nop     len=0
  Inst 24810:   nop     len=0
  Inst 24811:   nop     len=0
  Inst 24812:   nop     len=0
  Inst 24813:   nop     len=0
  Inst 24814:   nop     len=0
  Inst 24815:   nop     len=0
  Inst 24816:   nop     len=0
  Inst 24817:   nop     len=0
  Inst 24818:   nop     len=0
  Inst 24819:   nop     len=0
  Inst 24820:   nop     len=0
  Inst 24821:   nop     len=0
  Inst 24822:   nop     len=0
  Inst 24823:   nop     len=0
  Inst 24824:   nop     len=0
  Inst 24825:   nop     len=0
  Inst 24826:   nop     len=0
  Inst 24827:   nop     len=0
  Inst 24828:   nop     len=0
  Inst 24829:   nop     len=0
  Inst 24830:   nop     len=0
  Inst 24831:   nop     len=0
  Inst 24832:   nop     len=0
  Inst 24833:   nop     len=0
  Inst 24834:   nop     len=0
  Inst 24835:   nop     len=0
  Inst 24836:   nop     len=0
  Inst 24837:   nop     len=0
  Inst 24838:   nop     len=0
  Inst 24839:   nop     len=0
  Inst 24840:   nop     len=0
  Inst 24841:   nop     len=0
  Inst 24842:   nop     len=0
  Inst 24843:   nop     len=0
  Inst 24844:   nop     len=0
  Inst 24845:   nop     len=0
  Inst 24846:   nop     len=0
  Inst 24847:   nop     len=0
  Inst 24848:   nop     len=0
  Inst 24849:   nop     len=0
  Inst 24850:   nop     len=0
  Inst 24851:   nop     len=0
  Inst 24852:   nop     len=0
  Inst 24853:   nop     len=0
  Inst 24854:   nop     len=0
  Inst 24855:   nop     len=0
  Inst 24856:   nop     len=0
  Inst 24857:   nop     len=0
  Inst 24858:   nop     len=0
  Inst 24859:   nop     len=0
  Inst 24860:   nop     len=0
  Inst 24861:   nop     len=0
  Inst 24862:   nop     len=0
  Inst 24863:   jmp     label736
Block 736:
  (original IR block: block368)
  (successor: Block 737)
  (successor: Block 738)
  (instruction range: 24864 .. 24875)
  Inst 24864:   movq    rsp(2064 + virtual offset), %rsi
  Inst 24865:   movq    8(%rsi), %rdi
  Inst 24866:   movq    rsp(2048 + virtual offset), %rsi
  Inst 24867:   load_ext_name u0:2+0, %rax
  Inst 24868:   movq    %rsi, rsp(1232 + virtual offset)
  Inst 24869:   movq    %rdi, rsp(1248 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24870:   call    *%rax
  Inst 24871:   movq    %rax, %rbx
  Inst 24872:   movq    %rdx, %r14
  Inst 24873:   testq   %r14, %r14
  Inst 24874:   jz      label737; j label738
Block 737:
  (successor: Block 740)
  (instruction range: 24875 .. 24969)
  Inst 24875:   movq    %rbx, rsp(1736 + virtual offset)
  Inst 24876:   nop     len=0
  Inst 24877:   nop     len=0
  Inst 24878:   nop     len=0
  Inst 24879:   nop     len=0
  Inst 24880:   nop     len=0
  Inst 24881:   nop     len=0
  Inst 24882:   nop     len=0
  Inst 24883:   nop     len=0
  Inst 24884:   nop     len=0
  Inst 24885:   nop     len=0
  Inst 24886:   nop     len=0
  Inst 24887:   nop     len=0
  Inst 24888:   nop     len=0
  Inst 24889:   nop     len=0
  Inst 24890:   nop     len=0
  Inst 24891:   nop     len=0
  Inst 24892:   nop     len=0
  Inst 24893:   nop     len=0
  Inst 24894:   nop     len=0
  Inst 24895:   nop     len=0
  Inst 24896:   nop     len=0
  Inst 24897:   nop     len=0
  Inst 24898:   nop     len=0
  Inst 24899:   nop     len=0
  Inst 24900:   nop     len=0
  Inst 24901:   nop     len=0
  Inst 24902:   nop     len=0
  Inst 24903:   nop     len=0
  Inst 24904:   nop     len=0
  Inst 24905:   nop     len=0
  Inst 24906:   nop     len=0
  Inst 24907:   nop     len=0
  Inst 24908:   nop     len=0
  Inst 24909:   nop     len=0
  Inst 24910:   nop     len=0
  Inst 24911:   nop     len=0
  Inst 24912:   nop     len=0
  Inst 24913:   nop     len=0
  Inst 24914:   nop     len=0
  Inst 24915:   nop     len=0
  Inst 24916:   nop     len=0
  Inst 24917:   nop     len=0
  Inst 24918:   nop     len=0
  Inst 24919:   nop     len=0
  Inst 24920:   nop     len=0
  Inst 24921:   nop     len=0
  Inst 24922:   nop     len=0
  Inst 24923:   nop     len=0
  Inst 24924:   nop     len=0
  Inst 24925:   nop     len=0
  Inst 24926:   nop     len=0
  Inst 24927:   nop     len=0
  Inst 24928:   nop     len=0
  Inst 24929:   nop     len=0
  Inst 24930:   nop     len=0
  Inst 24931:   nop     len=0
  Inst 24932:   nop     len=0
  Inst 24933:   nop     len=0
  Inst 24934:   nop     len=0
  Inst 24935:   nop     len=0
  Inst 24936:   nop     len=0
  Inst 24937:   nop     len=0
  Inst 24938:   nop     len=0
  Inst 24939:   nop     len=0
  Inst 24940:   nop     len=0
  Inst 24941:   nop     len=0
  Inst 24942:   nop     len=0
  Inst 24943:   nop     len=0
  Inst 24944:   nop     len=0
  Inst 24945:   nop     len=0
  Inst 24946:   nop     len=0
  Inst 24947:   nop     len=0
  Inst 24948:   nop     len=0
  Inst 24949:   nop     len=0
  Inst 24950:   nop     len=0
  Inst 24951:   nop     len=0
  Inst 24952:   nop     len=0
  Inst 24953:   nop     len=0
  Inst 24954:   nop     len=0
  Inst 24955:   nop     len=0
  Inst 24956:   nop     len=0
  Inst 24957:   nop     len=0
  Inst 24958:   nop     len=0
  Inst 24959:   nop     len=0
  Inst 24960:   nop     len=0
  Inst 24961:   nop     len=0
  Inst 24962:   nop     len=0
  Inst 24963:   nop     len=0
  Inst 24964:   nop     len=0
  Inst 24965:   nop     len=0
  Inst 24966:   nop     len=0
  Inst 24967:   nop     len=0
  Inst 24968:   jmp     label740
Block 738:
  (original IR block: block371)
  (successor: Block 739)
  (instruction range: 24969 .. 24998)
  Inst 24969:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24970:   movq    152(%rsi), %r13
  Inst 24971:   movq    %r14, %r15
  Inst 24972:   addq    $-1, %r15
  Inst 24973:   movq    %r14, %rdx
  Inst 24974:   shlq    $3, %rdx
  Inst 24975:   movq    %r13, %r12
  Inst 24976:   addq    %rdx, %r12
  Inst 24977:   movq    %r13, %rdi
  Inst 24978:   addq    $-24, %rdi
  Inst 24979:   movq    %r13, %rsi
  Inst 24980:   load_ext_name %Memmove+0, %rax
  Inst 24981:   movq    %rbx, rsp(1232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24982:   call    *%rax
  Inst 24983:   movq    rsp(1232 + virtual offset), %rbx
  Inst 24984:   load_ext_name u1:1+0, %rsi
  Inst 24985:   movl    $1, %edi
  Inst 24986:   movq    %rdi, -8(%r13,%r14,8)
  Inst 24987:   movl    $1, %edi
  Inst 24988:   movq    %rdi, -16(%r13,%r14,8)
  Inst 24989:   movq    %rsi, -24(%r13,%r14,8)
  Inst 24990:   movq    rsp(2072 + virtual offset), %rsi
  Inst 24991:   movq    %r12, 152(%rsi)
  Inst 24992:   movq    %rbx, %rdi
  Inst 24993:   movq    %r15, %rsi
  Inst 24994:   load_ext_name u0:3+0, %rax
  Inst 24995:   movq    %rdi, rsp(1232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 24996:   call    *%rax
  Inst 24997:   jmp     label739
Block 739:
  (successor: Block 740)
  (instruction range: 24998 .. 25092)
  Inst 24998:   movq    %rax, rsp(1736 + virtual offset)
  Inst 24999:   nop     len=0
  Inst 25000:   nop     len=0
  Inst 25001:   nop     len=0
  Inst 25002:   nop     len=0
  Inst 25003:   nop     len=0
  Inst 25004:   nop     len=0
  Inst 25005:   nop     len=0
  Inst 25006:   nop     len=0
  Inst 25007:   nop     len=0
  Inst 25008:   nop     len=0
  Inst 25009:   nop     len=0
  Inst 25010:   nop     len=0
  Inst 25011:   nop     len=0
  Inst 25012:   nop     len=0
  Inst 25013:   nop     len=0
  Inst 25014:   nop     len=0
  Inst 25015:   nop     len=0
  Inst 25016:   nop     len=0
  Inst 25017:   nop     len=0
  Inst 25018:   nop     len=0
  Inst 25019:   nop     len=0
  Inst 25020:   nop     len=0
  Inst 25021:   nop     len=0
  Inst 25022:   nop     len=0
  Inst 25023:   nop     len=0
  Inst 25024:   nop     len=0
  Inst 25025:   nop     len=0
  Inst 25026:   nop     len=0
  Inst 25027:   nop     len=0
  Inst 25028:   nop     len=0
  Inst 25029:   nop     len=0
  Inst 25030:   nop     len=0
  Inst 25031:   nop     len=0
  Inst 25032:   nop     len=0
  Inst 25033:   nop     len=0
  Inst 25034:   nop     len=0
  Inst 25035:   nop     len=0
  Inst 25036:   nop     len=0
  Inst 25037:   nop     len=0
  Inst 25038:   nop     len=0
  Inst 25039:   nop     len=0
  Inst 25040:   nop     len=0
  Inst 25041:   nop     len=0
  Inst 25042:   nop     len=0
  Inst 25043:   nop     len=0
  Inst 25044:   nop     len=0
  Inst 25045:   nop     len=0
  Inst 25046:   nop     len=0
  Inst 25047:   nop     len=0
  Inst 25048:   nop     len=0
  Inst 25049:   nop     len=0
  Inst 25050:   nop     len=0
  Inst 25051:   nop     len=0
  Inst 25052:   nop     len=0
  Inst 25053:   nop     len=0
  Inst 25054:   nop     len=0
  Inst 25055:   nop     len=0
  Inst 25056:   nop     len=0
  Inst 25057:   nop     len=0
  Inst 25058:   nop     len=0
  Inst 25059:   nop     len=0
  Inst 25060:   nop     len=0
  Inst 25061:   nop     len=0
  Inst 25062:   nop     len=0
  Inst 25063:   nop     len=0
  Inst 25064:   nop     len=0
  Inst 25065:   nop     len=0
  Inst 25066:   nop     len=0
  Inst 25067:   nop     len=0
  Inst 25068:   nop     len=0
  Inst 25069:   nop     len=0
  Inst 25070:   nop     len=0
  Inst 25071:   nop     len=0
  Inst 25072:   nop     len=0
  Inst 25073:   nop     len=0
  Inst 25074:   nop     len=0
  Inst 25075:   nop     len=0
  Inst 25076:   nop     len=0
  Inst 25077:   nop     len=0
  Inst 25078:   nop     len=0
  Inst 25079:   nop     len=0
  Inst 25080:   nop     len=0
  Inst 25081:   nop     len=0
  Inst 25082:   nop     len=0
  Inst 25083:   nop     len=0
  Inst 25084:   nop     len=0
  Inst 25085:   nop     len=0
  Inst 25086:   nop     len=0
  Inst 25087:   nop     len=0
  Inst 25088:   nop     len=0
  Inst 25089:   nop     len=0
  Inst 25090:   nop     len=0
  Inst 25091:   jmp     label740
Block 740:
  (original IR block: block370)
  (successor: Block 741)
  (successor: Block 742)
  (instruction range: 25092 .. 25103)
  Inst 25092:   movq    rsp(2064 + virtual offset), %rsi
  Inst 25093:   movq    8(%rsi), %rdi
  Inst 25094:   movq    rsp(2048 + virtual offset), %rsi
  Inst 25095:   load_ext_name u0:2+0, %rax
  Inst 25096:   movq    %rsi, rsp(1232 + virtual offset)
  Inst 25097:   movq    %rdi, rsp(1248 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25098:   call    *%rax
  Inst 25099:   movq    %rax, %r15
  Inst 25100:   movq    %rdx, %r14
  Inst 25101:   testq   %r14, %r14
  Inst 25102:   jz      label741; j label742
Block 741:
  (successor: Block 744)
  (instruction range: 25103 .. 25197)
  Inst 25103:   movq    %r15, rsp(1232 + virtual offset)
  Inst 25104:   nop     len=0
  Inst 25105:   nop     len=0
  Inst 25106:   nop     len=0
  Inst 25107:   nop     len=0
  Inst 25108:   nop     len=0
  Inst 25109:   nop     len=0
  Inst 25110:   nop     len=0
  Inst 25111:   nop     len=0
  Inst 25112:   nop     len=0
  Inst 25113:   nop     len=0
  Inst 25114:   nop     len=0
  Inst 25115:   nop     len=0
  Inst 25116:   nop     len=0
  Inst 25117:   nop     len=0
  Inst 25118:   nop     len=0
  Inst 25119:   nop     len=0
  Inst 25120:   nop     len=0
  Inst 25121:   nop     len=0
  Inst 25122:   nop     len=0
  Inst 25123:   nop     len=0
  Inst 25124:   nop     len=0
  Inst 25125:   nop     len=0
  Inst 25126:   nop     len=0
  Inst 25127:   nop     len=0
  Inst 25128:   nop     len=0
  Inst 25129:   nop     len=0
  Inst 25130:   nop     len=0
  Inst 25131:   nop     len=0
  Inst 25132:   nop     len=0
  Inst 25133:   nop     len=0
  Inst 25134:   nop     len=0
  Inst 25135:   nop     len=0
  Inst 25136:   nop     len=0
  Inst 25137:   nop     len=0
  Inst 25138:   nop     len=0
  Inst 25139:   nop     len=0
  Inst 25140:   nop     len=0
  Inst 25141:   nop     len=0
  Inst 25142:   nop     len=0
  Inst 25143:   nop     len=0
  Inst 25144:   nop     len=0
  Inst 25145:   nop     len=0
  Inst 25146:   nop     len=0
  Inst 25147:   nop     len=0
  Inst 25148:   nop     len=0
  Inst 25149:   nop     len=0
  Inst 25150:   nop     len=0
  Inst 25151:   nop     len=0
  Inst 25152:   nop     len=0
  Inst 25153:   nop     len=0
  Inst 25154:   nop     len=0
  Inst 25155:   nop     len=0
  Inst 25156:   nop     len=0
  Inst 25157:   nop     len=0
  Inst 25158:   nop     len=0
  Inst 25159:   nop     len=0
  Inst 25160:   nop     len=0
  Inst 25161:   nop     len=0
  Inst 25162:   nop     len=0
  Inst 25163:   nop     len=0
  Inst 25164:   nop     len=0
  Inst 25165:   nop     len=0
  Inst 25166:   nop     len=0
  Inst 25167:   nop     len=0
  Inst 25168:   nop     len=0
  Inst 25169:   nop     len=0
  Inst 25170:   nop     len=0
  Inst 25171:   nop     len=0
  Inst 25172:   nop     len=0
  Inst 25173:   nop     len=0
  Inst 25174:   nop     len=0
  Inst 25175:   nop     len=0
  Inst 25176:   nop     len=0
  Inst 25177:   nop     len=0
  Inst 25178:   nop     len=0
  Inst 25179:   nop     len=0
  Inst 25180:   nop     len=0
  Inst 25181:   nop     len=0
  Inst 25182:   nop     len=0
  Inst 25183:   nop     len=0
  Inst 25184:   nop     len=0
  Inst 25185:   nop     len=0
  Inst 25186:   nop     len=0
  Inst 25187:   nop     len=0
  Inst 25188:   nop     len=0
  Inst 25189:   nop     len=0
  Inst 25190:   nop     len=0
  Inst 25191:   nop     len=0
  Inst 25192:   nop     len=0
  Inst 25193:   nop     len=0
  Inst 25194:   nop     len=0
  Inst 25195:   nop     len=0
  Inst 25196:   jmp     label744
Block 742:
  (original IR block: block373)
  (successor: Block 743)
  (instruction range: 25197 .. 25226)
  Inst 25197:   movq    rsp(2072 + virtual offset), %rsi
  Inst 25198:   movq    152(%rsi), %r13
  Inst 25199:   movq    %r14, %rbx
  Inst 25200:   addq    $-1, %rbx
  Inst 25201:   movq    %r14, %rdx
  Inst 25202:   shlq    $3, %rdx
  Inst 25203:   movq    %r13, %r12
  Inst 25204:   addq    %rdx, %r12
  Inst 25205:   movq    %r13, %rdi
  Inst 25206:   addq    $-24, %rdi
  Inst 25207:   movq    %r13, %rsi
  Inst 25208:   load_ext_name %Memmove+0, %rax
  Inst 25209:   movq    %r15, rsp(1248 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S155, S156, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25210:   call    *%rax
  Inst 25211:   movq    rsp(1248 + virtual offset), %r15
  Inst 25212:   load_ext_name u1:1+0, %rsi
  Inst 25213:   movl    $1, %edi
  Inst 25214:   movq    %rdi, -8(%r13,%r14,8)
  Inst 25215:   movl    $1, %edi
  Inst 25216:   movq    %rdi, -16(%r13,%r14,8)
  Inst 25217:   movq    %rsi, -24(%r13,%r14,8)
  Inst 25218:   movq    rsp(2072 + virtual offset), %rsi
  Inst 25219:   movq    %r12, 152(%rsi)
  Inst 25220:   movq    %r15, %rdi
  Inst 25221:   movq    %rbx, %rsi
  Inst 25222:   load_ext_name u0:3+0, %rax
  Inst 25223:   movq    %rdi, rsp(1232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25224:   call    *%rax
  Inst 25225:   jmp     label743
Block 743:
  (successor: Block 744)
  (instruction range: 25226 .. 25320)
  Inst 25226:   movq    %rax, rsp(1232 + virtual offset)
  Inst 25227:   nop     len=0
  Inst 25228:   nop     len=0
  Inst 25229:   nop     len=0
  Inst 25230:   nop     len=0
  Inst 25231:   nop     len=0
  Inst 25232:   nop     len=0
  Inst 25233:   nop     len=0
  Inst 25234:   nop     len=0
  Inst 25235:   nop     len=0
  Inst 25236:   nop     len=0
  Inst 25237:   nop     len=0
  Inst 25238:   nop     len=0
  Inst 25239:   nop     len=0
  Inst 25240:   nop     len=0
  Inst 25241:   nop     len=0
  Inst 25242:   nop     len=0
  Inst 25243:   nop     len=0
  Inst 25244:   nop     len=0
  Inst 25245:   nop     len=0
  Inst 25246:   nop     len=0
  Inst 25247:   nop     len=0
  Inst 25248:   nop     len=0
  Inst 25249:   nop     len=0
  Inst 25250:   nop     len=0
  Inst 25251:   nop     len=0
  Inst 25252:   nop     len=0
  Inst 25253:   nop     len=0
  Inst 25254:   nop     len=0
  Inst 25255:   nop     len=0
  Inst 25256:   nop     len=0
  Inst 25257:   nop     len=0
  Inst 25258:   nop     len=0
  Inst 25259:   nop     len=0
  Inst 25260:   nop     len=0
  Inst 25261:   nop     len=0
  Inst 25262:   nop     len=0
  Inst 25263:   nop     len=0
  Inst 25264:   nop     len=0
  Inst 25265:   nop     len=0
  Inst 25266:   nop     len=0
  Inst 25267:   nop     len=0
  Inst 25268:   nop     len=0
  Inst 25269:   nop     len=0
  Inst 25270:   nop     len=0
  Inst 25271:   nop     len=0
  Inst 25272:   nop     len=0
  Inst 25273:   nop     len=0
  Inst 25274:   nop     len=0
  Inst 25275:   nop     len=0
  Inst 25276:   nop     len=0
  Inst 25277:   nop     len=0
  Inst 25278:   nop     len=0
  Inst 25279:   nop     len=0
  Inst 25280:   nop     len=0
  Inst 25281:   nop     len=0
  Inst 25282:   nop     len=0
  Inst 25283:   nop     len=0
  Inst 25284:   nop     len=0
  Inst 25285:   nop     len=0
  Inst 25286:   nop     len=0
  Inst 25287:   nop     len=0
  Inst 25288:   nop     len=0
  Inst 25289:   nop     len=0
  Inst 25290:   nop     len=0
  Inst 25291:   nop     len=0
  Inst 25292:   nop     len=0
  Inst 25293:   nop     len=0
  Inst 25294:   nop     len=0
  Inst 25295:   nop     len=0
  Inst 25296:   nop     len=0
  Inst 25297:   nop     len=0
  Inst 25298:   nop     len=0
  Inst 25299:   nop     len=0
  Inst 25300:   nop     len=0
  Inst 25301:   nop     len=0
  Inst 25302:   nop     len=0
  Inst 25303:   nop     len=0
  Inst 25304:   nop     len=0
  Inst 25305:   nop     len=0
  Inst 25306:   nop     len=0
  Inst 25307:   nop     len=0
  Inst 25308:   nop     len=0
  Inst 25309:   nop     len=0
  Inst 25310:   nop     len=0
  Inst 25311:   nop     len=0
  Inst 25312:   nop     len=0
  Inst 25313:   nop     len=0
  Inst 25314:   nop     len=0
  Inst 25315:   nop     len=0
  Inst 25316:   nop     len=0
  Inst 25317:   nop     len=0
  Inst 25318:   nop     len=0
  Inst 25319:   jmp     label744
Block 744:
  (original IR block: block372)
  (successor: Block 745)
  (successor: Block 746)
  (instruction range: 25320 .. 25331)
  Inst 25320:   movq    rsp(2064 + virtual offset), %rsi
  Inst 25321:   movq    8(%rsi), %rdi
  Inst 25322:   movq    rsp(2048 + virtual offset), %rsi
  Inst 25323:   load_ext_name u0:2+0, %rax
  Inst 25324:   movq    %rsi, rsp(1248 + virtual offset)
  Inst 25325:   movq    %rdi, rsp(1264 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25326:   call    *%rax
  Inst 25327:   movq    %rax, %rbx
  Inst 25328:   movq    %rdx, %r14
  Inst 25329:   testq   %r14, %r14
  Inst 25330:   jz      label745; j label746
Block 745:
  (successor: Block 748)
  (instruction range: 25331 .. 25426)
  Inst 25331:   movq    %rbx, rsp(2008 + virtual offset)
  Inst 25332:   nop     len=0
  Inst 25333:   nop     len=0
  Inst 25334:   nop     len=0
  Inst 25335:   nop     len=0
  Inst 25336:   nop     len=0
  Inst 25337:   nop     len=0
  Inst 25338:   nop     len=0
  Inst 25339:   nop     len=0
  Inst 25340:   nop     len=0
  Inst 25341:   nop     len=0
  Inst 25342:   nop     len=0
  Inst 25343:   nop     len=0
  Inst 25344:   nop     len=0
  Inst 25345:   nop     len=0
  Inst 25346:   nop     len=0
  Inst 25347:   nop     len=0
  Inst 25348:   nop     len=0
  Inst 25349:   nop     len=0
  Inst 25350:   nop     len=0
  Inst 25351:   nop     len=0
  Inst 25352:   nop     len=0
  Inst 25353:   nop     len=0
  Inst 25354:   nop     len=0
  Inst 25355:   nop     len=0
  Inst 25356:   nop     len=0
  Inst 25357:   nop     len=0
  Inst 25358:   nop     len=0
  Inst 25359:   nop     len=0
  Inst 25360:   nop     len=0
  Inst 25361:   nop     len=0
  Inst 25362:   nop     len=0
  Inst 25363:   nop     len=0
  Inst 25364:   nop     len=0
  Inst 25365:   nop     len=0
  Inst 25366:   nop     len=0
  Inst 25367:   nop     len=0
  Inst 25368:   nop     len=0
  Inst 25369:   nop     len=0
  Inst 25370:   nop     len=0
  Inst 25371:   nop     len=0
  Inst 25372:   nop     len=0
  Inst 25373:   nop     len=0
  Inst 25374:   nop     len=0
  Inst 25375:   nop     len=0
  Inst 25376:   nop     len=0
  Inst 25377:   nop     len=0
  Inst 25378:   nop     len=0
  Inst 25379:   nop     len=0
  Inst 25380:   nop     len=0
  Inst 25381:   nop     len=0
  Inst 25382:   nop     len=0
  Inst 25383:   nop     len=0
  Inst 25384:   nop     len=0
  Inst 25385:   nop     len=0
  Inst 25386:   nop     len=0
  Inst 25387:   nop     len=0
  Inst 25388:   nop     len=0
  Inst 25389:   nop     len=0
  Inst 25390:   nop     len=0
  Inst 25391:   nop     len=0
  Inst 25392:   nop     len=0
  Inst 25393:   nop     len=0
  Inst 25394:   nop     len=0
  Inst 25395:   nop     len=0
  Inst 25396:   nop     len=0
  Inst 25397:   nop     len=0
  Inst 25398:   nop     len=0
  Inst 25399:   nop     len=0
  Inst 25400:   nop     len=0
  Inst 25401:   nop     len=0
  Inst 25402:   nop     len=0
  Inst 25403:   nop     len=0
  Inst 25404:   nop     len=0
  Inst 25405:   nop     len=0
  Inst 25406:   nop     len=0
  Inst 25407:   nop     len=0
  Inst 25408:   nop     len=0
  Inst 25409:   nop     len=0
  Inst 25410:   nop     len=0
  Inst 25411:   nop     len=0
  Inst 25412:   nop     len=0
  Inst 25413:   nop     len=0
  Inst 25414:   nop     len=0
  Inst 25415:   nop     len=0
  Inst 25416:   nop     len=0
  Inst 25417:   nop     len=0
  Inst 25418:   nop     len=0
  Inst 25419:   nop     len=0
  Inst 25420:   nop     len=0
  Inst 25421:   nop     len=0
  Inst 25422:   nop     len=0
  Inst 25423:   nop     len=0
  Inst 25424:   nop     len=0
  Inst 25425:   jmp     label748
Block 746:
  (original IR block: block375)
  (successor: Block 747)
  (instruction range: 25426 .. 25455)
  Inst 25426:   movq    rsp(2072 + virtual offset), %rsi
  Inst 25427:   movq    152(%rsi), %r13
  Inst 25428:   movq    %r14, %r15
  Inst 25429:   addq    $-1, %r15
  Inst 25430:   movq    %r14, %rdx
  Inst 25431:   shlq    $3, %rdx
  Inst 25432:   movq    %r13, %r12
  Inst 25433:   addq    %rdx, %r12
  Inst 25434:   movq    %r13, %rdi
  Inst 25435:   addq    $-24, %rdi
  Inst 25436:   movq    %r13, %rsi
  Inst 25437:   load_ext_name %Memmove+0, %rax
  Inst 25438:   movq    %rbx, rsp(1248 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25439:   call    *%rax
  Inst 25440:   movq    rsp(1248 + virtual offset), %rbx
  Inst 25441:   load_ext_name u1:1+0, %rsi
  Inst 25442:   movl    $1, %edi
  Inst 25443:   movq    %rdi, -8(%r13,%r14,8)
  Inst 25444:   movl    $1, %edi
  Inst 25445:   movq    %rdi, -16(%r13,%r14,8)
  Inst 25446:   movq    %rsi, -24(%r13,%r14,8)
  Inst 25447:   movq    rsp(2072 + virtual offset), %rsi
  Inst 25448:   movq    %r12, 152(%rsi)
  Inst 25449:   movq    %rbx, %rdi
  Inst 25450:   movq    %r15, %rsi
  Inst 25451:   load_ext_name u0:3+0, %rax
  Inst 25452:   movq    %rdi, rsp(1248 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25453:   call    *%rax
  Inst 25454:   jmp     label747
Block 747:
  (successor: Block 748)
  (instruction range: 25455 .. 25550)
  Inst 25455:   movq    %rax, rsp(2008 + virtual offset)
  Inst 25456:   nop     len=0
  Inst 25457:   nop     len=0
  Inst 25458:   nop     len=0
  Inst 25459:   nop     len=0
  Inst 25460:   nop     len=0
  Inst 25461:   nop     len=0
  Inst 25462:   nop     len=0
  Inst 25463:   nop     len=0
  Inst 25464:   nop     len=0
  Inst 25465:   nop     len=0
  Inst 25466:   nop     len=0
  Inst 25467:   nop     len=0
  Inst 25468:   nop     len=0
  Inst 25469:   nop     len=0
  Inst 25470:   nop     len=0
  Inst 25471:   nop     len=0
  Inst 25472:   nop     len=0
  Inst 25473:   nop     len=0
  Inst 25474:   nop     len=0
  Inst 25475:   nop     len=0
  Inst 25476:   nop     len=0
  Inst 25477:   nop     len=0
  Inst 25478:   nop     len=0
  Inst 25479:   nop     len=0
  Inst 25480:   nop     len=0
  Inst 25481:   nop     len=0
  Inst 25482:   nop     len=0
  Inst 25483:   nop     len=0
  Inst 25484:   nop     len=0
  Inst 25485:   nop     len=0
  Inst 25486:   nop     len=0
  Inst 25487:   nop     len=0
  Inst 25488:   nop     len=0
  Inst 25489:   nop     len=0
  Inst 25490:   nop     len=0
  Inst 25491:   nop     len=0
  Inst 25492:   nop     len=0
  Inst 25493:   nop     len=0
  Inst 25494:   nop     len=0
  Inst 25495:   nop     len=0
  Inst 25496:   nop     len=0
  Inst 25497:   nop     len=0
  Inst 25498:   nop     len=0
  Inst 25499:   nop     len=0
  Inst 25500:   nop     len=0
  Inst 25501:   nop     len=0
  Inst 25502:   nop     len=0
  Inst 25503:   nop     len=0
  Inst 25504:   nop     len=0
  Inst 25505:   nop     len=0
  Inst 25506:   nop     len=0
  Inst 25507:   nop     len=0
  Inst 25508:   nop     len=0
  Inst 25509:   nop     len=0
  Inst 25510:   nop     len=0
  Inst 25511:   nop     len=0
  Inst 25512:   nop     len=0
  Inst 25513:   nop     len=0
  Inst 25514:   nop     len=0
  Inst 25515:   nop     len=0
  Inst 25516:   nop     len=0
  Inst 25517:   nop     len=0
  Inst 25518:   nop     len=0
  Inst 25519:   nop     len=0
  Inst 25520:   nop     len=0
  Inst 25521:   nop     len=0
  Inst 25522:   nop     len=0
  Inst 25523:   nop     len=0
  Inst 25524:   nop     len=0
  Inst 25525:   nop     len=0
  Inst 25526:   nop     len=0
  Inst 25527:   nop     len=0
  Inst 25528:   nop     len=0
  Inst 25529:   nop     len=0
  Inst 25530:   nop     len=0
  Inst 25531:   nop     len=0
  Inst 25532:   nop     len=0
  Inst 25533:   nop     len=0
  Inst 25534:   nop     len=0
  Inst 25535:   nop     len=0
  Inst 25536:   nop     len=0
  Inst 25537:   nop     len=0
  Inst 25538:   nop     len=0
  Inst 25539:   nop     len=0
  Inst 25540:   nop     len=0
  Inst 25541:   nop     len=0
  Inst 25542:   nop     len=0
  Inst 25543:   nop     len=0
  Inst 25544:   nop     len=0
  Inst 25545:   nop     len=0
  Inst 25546:   nop     len=0
  Inst 25547:   nop     len=0
  Inst 25548:   nop     len=0
  Inst 25549:   jmp     label748
Block 748:
  (original IR block: block374)
  (successor: Block 749)
  (successor: Block 750)
  (instruction range: 25550 .. 25561)
  Inst 25550:   movq    rsp(2064 + virtual offset), %rsi
  Inst 25551:   movq    8(%rsi), %rdi
  Inst 25552:   movq    rsp(2048 + virtual offset), %rsi
  Inst 25553:   load_ext_name u0:2+0, %rax
  Inst 25554:   movq    %rsi, rsp(1248 + virtual offset)
  Inst 25555:   movq    %rdi, rsp(1264 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25556:   call    *%rax
  Inst 25557:   movq    %rax, %rbx
  Inst 25558:   movq    %rdx, %r14
  Inst 25559:   testq   %r14, %r14
  Inst 25560:   jz      label749; j label750
Block 749:
  (successor: Block 752)
  (instruction range: 25561 .. 25656)
  Inst 25561:   movq    %rbx, rsp(1248 + virtual offset)
  Inst 25562:   nop     len=0
  Inst 25563:   nop     len=0
  Inst 25564:   nop     len=0
  Inst 25565:   nop     len=0
  Inst 25566:   nop     len=0
  Inst 25567:   nop     len=0
  Inst 25568:   nop     len=0
  Inst 25569:   nop     len=0
  Inst 25570:   nop     len=0
  Inst 25571:   nop     len=0
  Inst 25572:   nop     len=0
  Inst 25573:   nop     len=0
  Inst 25574:   nop     len=0
  Inst 25575:   nop     len=0
  Inst 25576:   nop     len=0
  Inst 25577:   nop     len=0
  Inst 25578:   nop     len=0
  Inst 25579:   nop     len=0
  Inst 25580:   nop     len=0
  Inst 25581:   nop     len=0
  Inst 25582:   nop     len=0
  Inst 25583:   nop     len=0
  Inst 25584:   nop     len=0
  Inst 25585:   nop     len=0
  Inst 25586:   nop     len=0
  Inst 25587:   nop     len=0
  Inst 25588:   nop     len=0
  Inst 25589:   nop     len=0
  Inst 25590:   nop     len=0
  Inst 25591:   nop     len=0
  Inst 25592:   nop     len=0
  Inst 25593:   nop     len=0
  Inst 25594:   nop     len=0
  Inst 25595:   nop     len=0
  Inst 25596:   nop     len=0
  Inst 25597:   nop     len=0
  Inst 25598:   nop     len=0
  Inst 25599:   nop     len=0
  Inst 25600:   nop     len=0
  Inst 25601:   nop     len=0
  Inst 25602:   nop     len=0
  Inst 25603:   nop     len=0
  Inst 25604:   nop     len=0
  Inst 25605:   nop     len=0
  Inst 25606:   nop     len=0
  Inst 25607:   nop     len=0
  Inst 25608:   nop     len=0
  Inst 25609:   nop     len=0
  Inst 25610:   nop     len=0
  Inst 25611:   nop     len=0
  Inst 25612:   nop     len=0
  Inst 25613:   nop     len=0
  Inst 25614:   nop     len=0
  Inst 25615:   nop     len=0
  Inst 25616:   nop     len=0
  Inst 25617:   nop     len=0
  Inst 25618:   nop     len=0
  Inst 25619:   nop     len=0
  Inst 25620:   nop     len=0
  Inst 25621:   nop     len=0
  Inst 25622:   nop     len=0
  Inst 25623:   nop     len=0
  Inst 25624:   nop     len=0
  Inst 25625:   nop     len=0
  Inst 25626:   nop     len=0
  Inst 25627:   nop     len=0
  Inst 25628:   nop     len=0
  Inst 25629:   nop     len=0
  Inst 25630:   nop     len=0
  Inst 25631:   nop     len=0
  Inst 25632:   nop     len=0
  Inst 25633:   nop     len=0
  Inst 25634:   nop     len=0
  Inst 25635:   nop     len=0
  Inst 25636:   nop     len=0
  Inst 25637:   nop     len=0
  Inst 25638:   nop     len=0
  Inst 25639:   nop     len=0
  Inst 25640:   nop     len=0
  Inst 25641:   nop     len=0
  Inst 25642:   nop     len=0
  Inst 25643:   nop     len=0
  Inst 25644:   nop     len=0
  Inst 25645:   nop     len=0
  Inst 25646:   nop     len=0
  Inst 25647:   nop     len=0
  Inst 25648:   nop     len=0
  Inst 25649:   nop     len=0
  Inst 25650:   nop     len=0
  Inst 25651:   nop     len=0
  Inst 25652:   nop     len=0
  Inst 25653:   nop     len=0
  Inst 25654:   nop     len=0
  Inst 25655:   jmp     label752
Block 750:
  (original IR block: block377)
  (successor: Block 751)
  (instruction range: 25656 .. 25685)
  Inst 25656:   movq    rsp(2072 + virtual offset), %rsi
  Inst 25657:   movq    152(%rsi), %r13
  Inst 25658:   movq    %r14, %r15
  Inst 25659:   addq    $-1, %r15
  Inst 25660:   movq    %r14, %rdx
  Inst 25661:   shlq    $3, %rdx
  Inst 25662:   movq    %r13, %r12
  Inst 25663:   addq    %rdx, %r12
  Inst 25664:   movq    %r13, %rdi
  Inst 25665:   addq    $-24, %rdi
  Inst 25666:   movq    %r13, %rsi
  Inst 25667:   load_ext_name %Memmove+0, %rax
  Inst 25668:   movq    %rbx, rsp(1264 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S157, S158, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25669:   call    *%rax
  Inst 25670:   movq    rsp(1264 + virtual offset), %rbx
  Inst 25671:   load_ext_name u1:1+0, %rsi
  Inst 25672:   movl    $1, %edi
  Inst 25673:   movq    %rdi, -8(%r13,%r14,8)
  Inst 25674:   movl    $1, %edi
  Inst 25675:   movq    %rdi, -16(%r13,%r14,8)
  Inst 25676:   movq    %rsi, -24(%r13,%r14,8)
  Inst 25677:   movq    rsp(2072 + virtual offset), %rsi
  Inst 25678:   movq    %r12, 152(%rsi)
  Inst 25679:   movq    %rbx, %rdi
  Inst 25680:   movq    %r15, %rsi
  Inst 25681:   load_ext_name u0:3+0, %rax
  Inst 25682:   movq    %rdi, rsp(1248 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25683:   call    *%rax
  Inst 25684:   jmp     label751
Block 751:
  (successor: Block 752)
  (instruction range: 25685 .. 25780)
  Inst 25685:   movq    %rax, rsp(1248 + virtual offset)
  Inst 25686:   nop     len=0
  Inst 25687:   nop     len=0
  Inst 25688:   nop     len=0
  Inst 25689:   nop     len=0
  Inst 25690:   nop     len=0
  Inst 25691:   nop     len=0
  Inst 25692:   nop     len=0
  Inst 25693:   nop     len=0
  Inst 25694:   nop     len=0
  Inst 25695:   nop     len=0
  Inst 25696:   nop     len=0
  Inst 25697:   nop     len=0
  Inst 25698:   nop     len=0
  Inst 25699:   nop     len=0
  Inst 25700:   nop     len=0
  Inst 25701:   nop     len=0
  Inst 25702:   nop     len=0
  Inst 25703:   nop     len=0
  Inst 25704:   nop     len=0
  Inst 25705:   nop     len=0
  Inst 25706:   nop     len=0
  Inst 25707:   nop     len=0
  Inst 25708:   nop     len=0
  Inst 25709:   nop     len=0
  Inst 25710:   nop     len=0
  Inst 25711:   nop     len=0
  Inst 25712:   nop     len=0
  Inst 25713:   nop     len=0
  Inst 25714:   nop     len=0
  Inst 25715:   nop     len=0
  Inst 25716:   nop     len=0
  Inst 25717:   nop     len=0
  Inst 25718:   nop     len=0
  Inst 25719:   nop     len=0
  Inst 25720:   nop     len=0
  Inst 25721:   nop     len=0
  Inst 25722:   nop     len=0
  Inst 25723:   nop     len=0
  Inst 25724:   nop     len=0
  Inst 25725:   nop     len=0
  Inst 25726:   nop     len=0
  Inst 25727:   nop     len=0
  Inst 25728:   nop     len=0
  Inst 25729:   nop     len=0
  Inst 25730:   nop     len=0
  Inst 25731:   nop     len=0
  Inst 25732:   nop     len=0
  Inst 25733:   nop     len=0
  Inst 25734:   nop     len=0
  Inst 25735:   nop     len=0
  Inst 25736:   nop     len=0
  Inst 25737:   nop     len=0
  Inst 25738:   nop     len=0
  Inst 25739:   nop     len=0
  Inst 25740:   nop     len=0
  Inst 25741:   nop     len=0
  Inst 25742:   nop     len=0
  Inst 25743:   nop     len=0
  Inst 25744:   nop     len=0
  Inst 25745:   nop     len=0
  Inst 25746:   nop     len=0
  Inst 25747:   nop     len=0
  Inst 25748:   nop     len=0
  Inst 25749:   nop     len=0
  Inst 25750:   nop     len=0
  Inst 25751:   nop     len=0
  Inst 25752:   nop     len=0
  Inst 25753:   nop     len=0
  Inst 25754:   nop     len=0
  Inst 25755:   nop     len=0
  Inst 25756:   nop     len=0
  Inst 25757:   nop     len=0
  Inst 25758:   nop     len=0
  Inst 25759:   nop     len=0
  Inst 25760:   nop     len=0
  Inst 25761:   nop     len=0
  Inst 25762:   nop     len=0
  Inst 25763:   nop     len=0
  Inst 25764:   nop     len=0
  Inst 25765:   nop     len=0
  Inst 25766:   nop     len=0
  Inst 25767:   nop     len=0
  Inst 25768:   nop     len=0
  Inst 25769:   nop     len=0
  Inst 25770:   nop     len=0
  Inst 25771:   nop     len=0
  Inst 25772:   nop     len=0
  Inst 25773:   nop     len=0
  Inst 25774:   nop     len=0
  Inst 25775:   nop     len=0
  Inst 25776:   nop     len=0
  Inst 25777:   nop     len=0
  Inst 25778:   nop     len=0
  Inst 25779:   jmp     label752
Block 752:
  (original IR block: block376)
  (successor: Block 753)
  (successor: Block 754)
  (instruction range: 25780 .. 25791)
  Inst 25780:   movq    rsp(2064 + virtual offset), %rsi
  Inst 25781:   movq    8(%rsi), %rdi
  Inst 25782:   movq    rsp(2048 + virtual offset), %rsi
  Inst 25783:   load_ext_name u0:2+0, %rax
  Inst 25784:   movq    %rsi, rsp(1264 + virtual offset)
  Inst 25785:   movq    %rdi, rsp(1280 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25786:   call    *%rax
  Inst 25787:   movq    %rax, %r15
  Inst 25788:   movq    %rdx, %r14
  Inst 25789:   testq   %r14, %r14
  Inst 25790:   jz      label753; j label754
Block 753:
  (successor: Block 756)
  (instruction range: 25791 .. 25887)
  Inst 25791:   movq    %r15, rsp(2000 + virtual offset)
  Inst 25792:   nop     len=0
  Inst 25793:   nop     len=0
  Inst 25794:   nop     len=0
  Inst 25795:   nop     len=0
  Inst 25796:   nop     len=0
  Inst 25797:   nop     len=0
  Inst 25798:   nop     len=0
  Inst 25799:   nop     len=0
  Inst 25800:   nop     len=0
  Inst 25801:   nop     len=0
  Inst 25802:   nop     len=0
  Inst 25803:   nop     len=0
  Inst 25804:   nop     len=0
  Inst 25805:   nop     len=0
  Inst 25806:   nop     len=0
  Inst 25807:   nop     len=0
  Inst 25808:   nop     len=0
  Inst 25809:   nop     len=0
  Inst 25810:   nop     len=0
  Inst 25811:   nop     len=0
  Inst 25812:   nop     len=0
  Inst 25813:   nop     len=0
  Inst 25814:   nop     len=0
  Inst 25815:   nop     len=0
  Inst 25816:   nop     len=0
  Inst 25817:   nop     len=0
  Inst 25818:   nop     len=0
  Inst 25819:   nop     len=0
  Inst 25820:   nop     len=0
  Inst 25821:   nop     len=0
  Inst 25822:   nop     len=0
  Inst 25823:   nop     len=0
  Inst 25824:   nop     len=0
  Inst 25825:   nop     len=0
  Inst 25826:   nop     len=0
  Inst 25827:   nop     len=0
  Inst 25828:   nop     len=0
  Inst 25829:   nop     len=0
  Inst 25830:   nop     len=0
  Inst 25831:   nop     len=0
  Inst 25832:   nop     len=0
  Inst 25833:   nop     len=0
  Inst 25834:   nop     len=0
  Inst 25835:   nop     len=0
  Inst 25836:   nop     len=0
  Inst 25837:   nop     len=0
  Inst 25838:   nop     len=0
  Inst 25839:   nop     len=0
  Inst 25840:   nop     len=0
  Inst 25841:   nop     len=0
  Inst 25842:   nop     len=0
  Inst 25843:   nop     len=0
  Inst 25844:   nop     len=0
  Inst 25845:   nop     len=0
  Inst 25846:   nop     len=0
  Inst 25847:   nop     len=0
  Inst 25848:   nop     len=0
  Inst 25849:   nop     len=0
  Inst 25850:   nop     len=0
  Inst 25851:   nop     len=0
  Inst 25852:   nop     len=0
  Inst 25853:   nop     len=0
  Inst 25854:   nop     len=0
  Inst 25855:   nop     len=0
  Inst 25856:   nop     len=0
  Inst 25857:   nop     len=0
  Inst 25858:   nop     len=0
  Inst 25859:   nop     len=0
  Inst 25860:   nop     len=0
  Inst 25861:   nop     len=0
  Inst 25862:   nop     len=0
  Inst 25863:   nop     len=0
  Inst 25864:   nop     len=0
  Inst 25865:   nop     len=0
  Inst 25866:   nop     len=0
  Inst 25867:   nop     len=0
  Inst 25868:   nop     len=0
  Inst 25869:   nop     len=0
  Inst 25870:   nop     len=0
  Inst 25871:   nop     len=0
  Inst 25872:   nop     len=0
  Inst 25873:   nop     len=0
  Inst 25874:   nop     len=0
  Inst 25875:   nop     len=0
  Inst 25876:   nop     len=0
  Inst 25877:   nop     len=0
  Inst 25878:   nop     len=0
  Inst 25879:   nop     len=0
  Inst 25880:   nop     len=0
  Inst 25881:   nop     len=0
  Inst 25882:   nop     len=0
  Inst 25883:   nop     len=0
  Inst 25884:   nop     len=0
  Inst 25885:   nop     len=0
  Inst 25886:   jmp     label756
Block 754:
  (original IR block: block379)
  (successor: Block 755)
  (instruction range: 25887 .. 25916)
  Inst 25887:   movq    rsp(2072 + virtual offset), %rsi
  Inst 25888:   movq    152(%rsi), %r13
  Inst 25889:   movq    %r14, %rbx
  Inst 25890:   addq    $-1, %rbx
  Inst 25891:   movq    %r14, %rdx
  Inst 25892:   shlq    $3, %rdx
  Inst 25893:   movq    %r13, %r12
  Inst 25894:   addq    %rdx, %r12
  Inst 25895:   movq    %r13, %rdi
  Inst 25896:   addq    $-24, %rdi
  Inst 25897:   movq    %r13, %rsi
  Inst 25898:   load_ext_name %Memmove+0, %rax
  Inst 25899:   movq    %r15, rsp(1264 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25900:   call    *%rax
  Inst 25901:   movq    rsp(1264 + virtual offset), %r15
  Inst 25902:   load_ext_name u1:1+0, %rsi
  Inst 25903:   movl    $1, %edi
  Inst 25904:   movq    %rdi, -8(%r13,%r14,8)
  Inst 25905:   movl    $1, %edi
  Inst 25906:   movq    %rdi, -16(%r13,%r14,8)
  Inst 25907:   movq    %rsi, -24(%r13,%r14,8)
  Inst 25908:   movq    rsp(2072 + virtual offset), %rsi
  Inst 25909:   movq    %r12, 152(%rsi)
  Inst 25910:   movq    %r15, %rdi
  Inst 25911:   movq    %rbx, %rsi
  Inst 25912:   load_ext_name u0:3+0, %rax
  Inst 25913:   movq    %rdi, rsp(1264 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 25914:   call    *%rax
  Inst 25915:   jmp     label755
Block 755:
  (successor: Block 756)
  (instruction range: 25916 .. 26012)
  Inst 25916:   movq    %rax, rsp(2000 + virtual offset)
  Inst 25917:   nop     len=0
  Inst 25918:   nop     len=0
  Inst 25919:   nop     len=0
  Inst 25920:   nop     len=0
  Inst 25921:   nop     len=0
  Inst 25922:   nop     len=0
  Inst 25923:   nop     len=0
  Inst 25924:   nop     len=0
  Inst 25925:   nop     len=0
  Inst 25926:   nop     len=0
  Inst 25927:   nop     len=0
  Inst 25928:   nop     len=0
  Inst 25929:   nop     len=0
  Inst 25930:   nop     len=0
  Inst 25931:   nop     len=0
  Inst 25932:   nop     len=0
  Inst 25933:   nop     len=0
  Inst 25934:   nop     len=0
  Inst 25935:   nop     len=0
  Inst 25936:   nop     len=0
  Inst 25937:   nop     len=0
  Inst 25938:   nop     len=0
  Inst 25939:   nop     len=0
  Inst 25940:   nop     len=0
  Inst 25941:   nop     len=0
  Inst 25942:   nop     len=0
  Inst 25943:   nop     len=0
  Inst 25944:   nop     len=0
  Inst 25945:   nop     len=0
  Inst 25946:   nop     len=0
  Inst 25947:   nop     len=0
  Inst 25948:   nop     len=0
  Inst 25949:   nop     len=0
  Inst 25950:   nop     len=0
  Inst 25951:   nop     len=0
  Inst 25952:   nop     len=0
  Inst 25953:   nop     len=0
  Inst 25954:   nop     len=0
  Inst 25955:   nop     len=0
  Inst 25956:   nop     len=0
  Inst 25957:   nop     len=0
  Inst 25958:   nop     len=0
  Inst 25959:   nop     len=0
  Inst 25960:   nop     len=0
  Inst 25961:   nop     len=0
  Inst 25962:   nop     len=0
  Inst 25963:   nop     len=0
  Inst 25964:   nop     len=0
  Inst 25965:   nop     len=0
  Inst 25966:   nop     len=0
  Inst 25967:   nop     len=0
  Inst 25968:   nop     len=0
  Inst 25969:   nop     len=0
  Inst 25970:   nop     len=0
  Inst 25971:   nop     len=0
  Inst 25972:   nop     len=0
  Inst 25973:   nop     len=0
  Inst 25974:   nop     len=0
  Inst 25975:   nop     len=0
  Inst 25976:   nop     len=0
  Inst 25977:   nop     len=0
  Inst 25978:   nop     len=0
  Inst 25979:   nop     len=0
  Inst 25980:   nop     len=0
  Inst 25981:   nop     len=0
  Inst 25982:   nop     len=0
  Inst 25983:   nop     len=0
  Inst 25984:   nop     len=0
  Inst 25985:   nop     len=0
  Inst 25986:   nop     len=0
  Inst 25987:   nop     len=0
  Inst 25988:   nop     len=0
  Inst 25989:   nop     len=0
  Inst 25990:   nop     len=0
  Inst 25991:   nop     len=0
  Inst 25992:   nop     len=0
  Inst 25993:   nop     len=0
  Inst 25994:   nop     len=0
  Inst 25995:   nop     len=0
  Inst 25996:   nop     len=0
  Inst 25997:   nop     len=0
  Inst 25998:   nop     len=0
  Inst 25999:   nop     len=0
  Inst 26000:   nop     len=0
  Inst 26001:   nop     len=0
  Inst 26002:   nop     len=0
  Inst 26003:   nop     len=0
  Inst 26004:   nop     len=0
  Inst 26005:   nop     len=0
  Inst 26006:   nop     len=0
  Inst 26007:   nop     len=0
  Inst 26008:   nop     len=0
  Inst 26009:   nop     len=0
  Inst 26010:   nop     len=0
  Inst 26011:   jmp     label756
Block 756:
  (original IR block: block378)
  (successor: Block 757)
  (successor: Block 758)
  (instruction range: 26012 .. 26023)
  Inst 26012:   movq    rsp(2064 + virtual offset), %rsi
  Inst 26013:   movq    8(%rsi), %rdi
  Inst 26014:   movq    rsp(2048 + virtual offset), %rsi
  Inst 26015:   load_ext_name u0:2+0, %rax
  Inst 26016:   movq    %rsi, rsp(1264 + virtual offset)
  Inst 26017:   movq    %rdi, rsp(1280 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26018:   call    *%rax
  Inst 26019:   movq    %rax, %rbx
  Inst 26020:   movq    %rdx, %r14
  Inst 26021:   testq   %r14, %r14
  Inst 26022:   jz      label757; j label758
Block 757:
  (successor: Block 760)
  (instruction range: 26023 .. 26119)
  Inst 26023:   movq    %rbx, rsp(1264 + virtual offset)
  Inst 26024:   nop     len=0
  Inst 26025:   nop     len=0
  Inst 26026:   nop     len=0
  Inst 26027:   nop     len=0
  Inst 26028:   nop     len=0
  Inst 26029:   nop     len=0
  Inst 26030:   nop     len=0
  Inst 26031:   nop     len=0
  Inst 26032:   nop     len=0
  Inst 26033:   nop     len=0
  Inst 26034:   nop     len=0
  Inst 26035:   nop     len=0
  Inst 26036:   nop     len=0
  Inst 26037:   nop     len=0
  Inst 26038:   nop     len=0
  Inst 26039:   nop     len=0
  Inst 26040:   nop     len=0
  Inst 26041:   nop     len=0
  Inst 26042:   nop     len=0
  Inst 26043:   nop     len=0
  Inst 26044:   nop     len=0
  Inst 26045:   nop     len=0
  Inst 26046:   nop     len=0
  Inst 26047:   nop     len=0
  Inst 26048:   nop     len=0
  Inst 26049:   nop     len=0
  Inst 26050:   nop     len=0
  Inst 26051:   nop     len=0
  Inst 26052:   nop     len=0
  Inst 26053:   nop     len=0
  Inst 26054:   nop     len=0
  Inst 26055:   nop     len=0
  Inst 26056:   nop     len=0
  Inst 26057:   nop     len=0
  Inst 26058:   nop     len=0
  Inst 26059:   nop     len=0
  Inst 26060:   nop     len=0
  Inst 26061:   nop     len=0
  Inst 26062:   nop     len=0
  Inst 26063:   nop     len=0
  Inst 26064:   nop     len=0
  Inst 26065:   nop     len=0
  Inst 26066:   nop     len=0
  Inst 26067:   nop     len=0
  Inst 26068:   nop     len=0
  Inst 26069:   nop     len=0
  Inst 26070:   nop     len=0
  Inst 26071:   nop     len=0
  Inst 26072:   nop     len=0
  Inst 26073:   nop     len=0
  Inst 26074:   nop     len=0
  Inst 26075:   nop     len=0
  Inst 26076:   nop     len=0
  Inst 26077:   nop     len=0
  Inst 26078:   nop     len=0
  Inst 26079:   nop     len=0
  Inst 26080:   nop     len=0
  Inst 26081:   nop     len=0
  Inst 26082:   nop     len=0
  Inst 26083:   nop     len=0
  Inst 26084:   nop     len=0
  Inst 26085:   nop     len=0
  Inst 26086:   nop     len=0
  Inst 26087:   nop     len=0
  Inst 26088:   nop     len=0
  Inst 26089:   nop     len=0
  Inst 26090:   nop     len=0
  Inst 26091:   nop     len=0
  Inst 26092:   nop     len=0
  Inst 26093:   nop     len=0
  Inst 26094:   nop     len=0
  Inst 26095:   nop     len=0
  Inst 26096:   nop     len=0
  Inst 26097:   nop     len=0
  Inst 26098:   nop     len=0
  Inst 26099:   nop     len=0
  Inst 26100:   nop     len=0
  Inst 26101:   nop     len=0
  Inst 26102:   nop     len=0
  Inst 26103:   nop     len=0
  Inst 26104:   nop     len=0
  Inst 26105:   nop     len=0
  Inst 26106:   nop     len=0
  Inst 26107:   nop     len=0
  Inst 26108:   nop     len=0
  Inst 26109:   nop     len=0
  Inst 26110:   nop     len=0
  Inst 26111:   nop     len=0
  Inst 26112:   nop     len=0
  Inst 26113:   nop     len=0
  Inst 26114:   nop     len=0
  Inst 26115:   nop     len=0
  Inst 26116:   nop     len=0
  Inst 26117:   nop     len=0
  Inst 26118:   jmp     label760
Block 758:
  (original IR block: block381)
  (successor: Block 759)
  (instruction range: 26119 .. 26148)
  Inst 26119:   movq    rsp(2072 + virtual offset), %rsi
  Inst 26120:   movq    152(%rsi), %r13
  Inst 26121:   movq    %r14, %r15
  Inst 26122:   addq    $-1, %r15
  Inst 26123:   movq    %r14, %rdx
  Inst 26124:   shlq    $3, %rdx
  Inst 26125:   movq    %r13, %r12
  Inst 26126:   addq    %rdx, %r12
  Inst 26127:   movq    %r13, %rdi
  Inst 26128:   addq    $-24, %rdi
  Inst 26129:   movq    %r13, %rsi
  Inst 26130:   load_ext_name %Memmove+0, %rax
  Inst 26131:   movq    %rbx, rsp(1280 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S159, S160, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26132:   call    *%rax
  Inst 26133:   movq    rsp(1280 + virtual offset), %rbx
  Inst 26134:   load_ext_name u1:1+0, %rsi
  Inst 26135:   movl    $1, %edi
  Inst 26136:   movq    %rdi, -8(%r13,%r14,8)
  Inst 26137:   movl    $1, %edi
  Inst 26138:   movq    %rdi, -16(%r13,%r14,8)
  Inst 26139:   movq    %rsi, -24(%r13,%r14,8)
  Inst 26140:   movq    rsp(2072 + virtual offset), %rsi
  Inst 26141:   movq    %r12, 152(%rsi)
  Inst 26142:   movq    %rbx, %rdi
  Inst 26143:   movq    %r15, %rsi
  Inst 26144:   load_ext_name u0:3+0, %rax
  Inst 26145:   movq    %rdi, rsp(1264 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26146:   call    *%rax
  Inst 26147:   jmp     label759
Block 759:
  (successor: Block 760)
  (instruction range: 26148 .. 26244)
  Inst 26148:   movq    %rax, rsp(1264 + virtual offset)
  Inst 26149:   nop     len=0
  Inst 26150:   nop     len=0
  Inst 26151:   nop     len=0
  Inst 26152:   nop     len=0
  Inst 26153:   nop     len=0
  Inst 26154:   nop     len=0
  Inst 26155:   nop     len=0
  Inst 26156:   nop     len=0
  Inst 26157:   nop     len=0
  Inst 26158:   nop     len=0
  Inst 26159:   nop     len=0
  Inst 26160:   nop     len=0
  Inst 26161:   nop     len=0
  Inst 26162:   nop     len=0
  Inst 26163:   nop     len=0
  Inst 26164:   nop     len=0
  Inst 26165:   nop     len=0
  Inst 26166:   nop     len=0
  Inst 26167:   nop     len=0
  Inst 26168:   nop     len=0
  Inst 26169:   nop     len=0
  Inst 26170:   nop     len=0
  Inst 26171:   nop     len=0
  Inst 26172:   nop     len=0
  Inst 26173:   nop     len=0
  Inst 26174:   nop     len=0
  Inst 26175:   nop     len=0
  Inst 26176:   nop     len=0
  Inst 26177:   nop     len=0
  Inst 26178:   nop     len=0
  Inst 26179:   nop     len=0
  Inst 26180:   nop     len=0
  Inst 26181:   nop     len=0
  Inst 26182:   nop     len=0
  Inst 26183:   nop     len=0
  Inst 26184:   nop     len=0
  Inst 26185:   nop     len=0
  Inst 26186:   nop     len=0
  Inst 26187:   nop     len=0
  Inst 26188:   nop     len=0
  Inst 26189:   nop     len=0
  Inst 26190:   nop     len=0
  Inst 26191:   nop     len=0
  Inst 26192:   nop     len=0
  Inst 26193:   nop     len=0
  Inst 26194:   nop     len=0
  Inst 26195:   nop     len=0
  Inst 26196:   nop     len=0
  Inst 26197:   nop     len=0
  Inst 26198:   nop     len=0
  Inst 26199:   nop     len=0
  Inst 26200:   nop     len=0
  Inst 26201:   nop     len=0
  Inst 26202:   nop     len=0
  Inst 26203:   nop     len=0
  Inst 26204:   nop     len=0
  Inst 26205:   nop     len=0
  Inst 26206:   nop     len=0
  Inst 26207:   nop     len=0
  Inst 26208:   nop     len=0
  Inst 26209:   nop     len=0
  Inst 26210:   nop     len=0
  Inst 26211:   nop     len=0
  Inst 26212:   nop     len=0
  Inst 26213:   nop     len=0
  Inst 26214:   nop     len=0
  Inst 26215:   nop     len=0
  Inst 26216:   nop     len=0
  Inst 26217:   nop     len=0
  Inst 26218:   nop     len=0
  Inst 26219:   nop     len=0
  Inst 26220:   nop     len=0
  Inst 26221:   nop     len=0
  Inst 26222:   nop     len=0
  Inst 26223:   nop     len=0
  Inst 26224:   nop     len=0
  Inst 26225:   nop     len=0
  Inst 26226:   nop     len=0
  Inst 26227:   nop     len=0
  Inst 26228:   nop     len=0
  Inst 26229:   nop     len=0
  Inst 26230:   nop     len=0
  Inst 26231:   nop     len=0
  Inst 26232:   nop     len=0
  Inst 26233:   nop     len=0
  Inst 26234:   nop     len=0
  Inst 26235:   nop     len=0
  Inst 26236:   nop     len=0
  Inst 26237:   nop     len=0
  Inst 26238:   nop     len=0
  Inst 26239:   nop     len=0
  Inst 26240:   nop     len=0
  Inst 26241:   nop     len=0
  Inst 26242:   nop     len=0
  Inst 26243:   jmp     label760
Block 760:
  (original IR block: block380)
  (successor: Block 761)
  (successor: Block 762)
  (instruction range: 26244 .. 26255)
  Inst 26244:   movq    rsp(2064 + virtual offset), %rsi
  Inst 26245:   movq    8(%rsi), %rdi
  Inst 26246:   movq    rsp(2048 + virtual offset), %rsi
  Inst 26247:   load_ext_name u0:2+0, %rax
  Inst 26248:   movq    %rsi, rsp(1280 + virtual offset)
  Inst 26249:   movq    %rdi, rsp(1296 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26250:   call    *%rax
  Inst 26251:   movq    %rax, %rbx
  Inst 26252:   movq    %rdx, %r14
  Inst 26253:   testq   %r14, %r14
  Inst 26254:   jz      label761; j label762
Block 761:
  (successor: Block 764)
  (instruction range: 26255 .. 26352)
  Inst 26255:   movq    %rbx, rsp(1992 + virtual offset)
  Inst 26256:   nop     len=0
  Inst 26257:   nop     len=0
  Inst 26258:   nop     len=0
  Inst 26259:   nop     len=0
  Inst 26260:   nop     len=0
  Inst 26261:   nop     len=0
  Inst 26262:   nop     len=0
  Inst 26263:   nop     len=0
  Inst 26264:   nop     len=0
  Inst 26265:   nop     len=0
  Inst 26266:   nop     len=0
  Inst 26267:   nop     len=0
  Inst 26268:   nop     len=0
  Inst 26269:   nop     len=0
  Inst 26270:   nop     len=0
  Inst 26271:   nop     len=0
  Inst 26272:   nop     len=0
  Inst 26273:   nop     len=0
  Inst 26274:   nop     len=0
  Inst 26275:   nop     len=0
  Inst 26276:   nop     len=0
  Inst 26277:   nop     len=0
  Inst 26278:   nop     len=0
  Inst 26279:   nop     len=0
  Inst 26280:   nop     len=0
  Inst 26281:   nop     len=0
  Inst 26282:   nop     len=0
  Inst 26283:   nop     len=0
  Inst 26284:   nop     len=0
  Inst 26285:   nop     len=0
  Inst 26286:   nop     len=0
  Inst 26287:   nop     len=0
  Inst 26288:   nop     len=0
  Inst 26289:   nop     len=0
  Inst 26290:   nop     len=0
  Inst 26291:   nop     len=0
  Inst 26292:   nop     len=0
  Inst 26293:   nop     len=0
  Inst 26294:   nop     len=0
  Inst 26295:   nop     len=0
  Inst 26296:   nop     len=0
  Inst 26297:   nop     len=0
  Inst 26298:   nop     len=0
  Inst 26299:   nop     len=0
  Inst 26300:   nop     len=0
  Inst 26301:   nop     len=0
  Inst 26302:   nop     len=0
  Inst 26303:   nop     len=0
  Inst 26304:   nop     len=0
  Inst 26305:   nop     len=0
  Inst 26306:   nop     len=0
  Inst 26307:   nop     len=0
  Inst 26308:   nop     len=0
  Inst 26309:   nop     len=0
  Inst 26310:   nop     len=0
  Inst 26311:   nop     len=0
  Inst 26312:   nop     len=0
  Inst 26313:   nop     len=0
  Inst 26314:   nop     len=0
  Inst 26315:   nop     len=0
  Inst 26316:   nop     len=0
  Inst 26317:   nop     len=0
  Inst 26318:   nop     len=0
  Inst 26319:   nop     len=0
  Inst 26320:   nop     len=0
  Inst 26321:   nop     len=0
  Inst 26322:   nop     len=0
  Inst 26323:   nop     len=0
  Inst 26324:   nop     len=0
  Inst 26325:   nop     len=0
  Inst 26326:   nop     len=0
  Inst 26327:   nop     len=0
  Inst 26328:   nop     len=0
  Inst 26329:   nop     len=0
  Inst 26330:   nop     len=0
  Inst 26331:   nop     len=0
  Inst 26332:   nop     len=0
  Inst 26333:   nop     len=0
  Inst 26334:   nop     len=0
  Inst 26335:   nop     len=0
  Inst 26336:   nop     len=0
  Inst 26337:   nop     len=0
  Inst 26338:   nop     len=0
  Inst 26339:   nop     len=0
  Inst 26340:   nop     len=0
  Inst 26341:   nop     len=0
  Inst 26342:   nop     len=0
  Inst 26343:   nop     len=0
  Inst 26344:   nop     len=0
  Inst 26345:   nop     len=0
  Inst 26346:   nop     len=0
  Inst 26347:   nop     len=0
  Inst 26348:   nop     len=0
  Inst 26349:   nop     len=0
  Inst 26350:   nop     len=0
  Inst 26351:   jmp     label764
Block 762:
  (original IR block: block383)
  (successor: Block 763)
  (instruction range: 26352 .. 26381)
  Inst 26352:   movq    rsp(2072 + virtual offset), %rsi
  Inst 26353:   movq    152(%rsi), %r13
  Inst 26354:   movq    %r14, %r15
  Inst 26355:   addq    $-1, %r15
  Inst 26356:   movq    %r14, %rdx
  Inst 26357:   shlq    $3, %rdx
  Inst 26358:   movq    %r13, %r12
  Inst 26359:   addq    %rdx, %r12
  Inst 26360:   movq    %r13, %rdi
  Inst 26361:   addq    $-24, %rdi
  Inst 26362:   movq    %r13, %rsi
  Inst 26363:   load_ext_name %Memmove+0, %rax
  Inst 26364:   movq    %rbx, rsp(1280 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26365:   call    *%rax
  Inst 26366:   movq    rsp(1280 + virtual offset), %rbx
  Inst 26367:   load_ext_name u1:1+0, %rsi
  Inst 26368:   movl    $1, %edi
  Inst 26369:   movq    %rdi, -8(%r13,%r14,8)
  Inst 26370:   movl    $1, %edi
  Inst 26371:   movq    %rdi, -16(%r13,%r14,8)
  Inst 26372:   movq    %rsi, -24(%r13,%r14,8)
  Inst 26373:   movq    rsp(2072 + virtual offset), %rsi
  Inst 26374:   movq    %r12, 152(%rsi)
  Inst 26375:   movq    %rbx, %rdi
  Inst 26376:   movq    %r15, %rsi
  Inst 26377:   load_ext_name u0:3+0, %rax
  Inst 26378:   movq    %rdi, rsp(1280 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26379:   call    *%rax
  Inst 26380:   jmp     label763
Block 763:
  (successor: Block 764)
  (instruction range: 26381 .. 26478)
  Inst 26381:   movq    %rax, rsp(1992 + virtual offset)
  Inst 26382:   nop     len=0
  Inst 26383:   nop     len=0
  Inst 26384:   nop     len=0
  Inst 26385:   nop     len=0
  Inst 26386:   nop     len=0
  Inst 26387:   nop     len=0
  Inst 26388:   nop     len=0
  Inst 26389:   nop     len=0
  Inst 26390:   nop     len=0
  Inst 26391:   nop     len=0
  Inst 26392:   nop     len=0
  Inst 26393:   nop     len=0
  Inst 26394:   nop     len=0
  Inst 26395:   nop     len=0
  Inst 26396:   nop     len=0
  Inst 26397:   nop     len=0
  Inst 26398:   nop     len=0
  Inst 26399:   nop     len=0
  Inst 26400:   nop     len=0
  Inst 26401:   nop     len=0
  Inst 26402:   nop     len=0
  Inst 26403:   nop     len=0
  Inst 26404:   nop     len=0
  Inst 26405:   nop     len=0
  Inst 26406:   nop     len=0
  Inst 26407:   nop     len=0
  Inst 26408:   nop     len=0
  Inst 26409:   nop     len=0
  Inst 26410:   nop     len=0
  Inst 26411:   nop     len=0
  Inst 26412:   nop     len=0
  Inst 26413:   nop     len=0
  Inst 26414:   nop     len=0
  Inst 26415:   nop     len=0
  Inst 26416:   nop     len=0
  Inst 26417:   nop     len=0
  Inst 26418:   nop     len=0
  Inst 26419:   nop     len=0
  Inst 26420:   nop     len=0
  Inst 26421:   nop     len=0
  Inst 26422:   nop     len=0
  Inst 26423:   nop     len=0
  Inst 26424:   nop     len=0
  Inst 26425:   nop     len=0
  Inst 26426:   nop     len=0
  Inst 26427:   nop     len=0
  Inst 26428:   nop     len=0
  Inst 26429:   nop     len=0
  Inst 26430:   nop     len=0
  Inst 26431:   nop     len=0
  Inst 26432:   nop     len=0
  Inst 26433:   nop     len=0
  Inst 26434:   nop     len=0
  Inst 26435:   nop     len=0
  Inst 26436:   nop     len=0
  Inst 26437:   nop     len=0
  Inst 26438:   nop     len=0
  Inst 26439:   nop     len=0
  Inst 26440:   nop     len=0
  Inst 26441:   nop     len=0
  Inst 26442:   nop     len=0
  Inst 26443:   nop     len=0
  Inst 26444:   nop     len=0
  Inst 26445:   nop     len=0
  Inst 26446:   nop     len=0
  Inst 26447:   nop     len=0
  Inst 26448:   nop     len=0
  Inst 26449:   nop     len=0
  Inst 26450:   nop     len=0
  Inst 26451:   nop     len=0
  Inst 26452:   nop     len=0
  Inst 26453:   nop     len=0
  Inst 26454:   nop     len=0
  Inst 26455:   nop     len=0
  Inst 26456:   nop     len=0
  Inst 26457:   nop     len=0
  Inst 26458:   nop     len=0
  Inst 26459:   nop     len=0
  Inst 26460:   nop     len=0
  Inst 26461:   nop     len=0
  Inst 26462:   nop     len=0
  Inst 26463:   nop     len=0
  Inst 26464:   nop     len=0
  Inst 26465:   nop     len=0
  Inst 26466:   nop     len=0
  Inst 26467:   nop     len=0
  Inst 26468:   nop     len=0
  Inst 26469:   nop     len=0
  Inst 26470:   nop     len=0
  Inst 26471:   nop     len=0
  Inst 26472:   nop     len=0
  Inst 26473:   nop     len=0
  Inst 26474:   nop     len=0
  Inst 26475:   nop     len=0
  Inst 26476:   nop     len=0
  Inst 26477:   jmp     label764
Block 764:
  (original IR block: block382)
  (successor: Block 765)
  (successor: Block 766)
  (instruction range: 26478 .. 26489)
  Inst 26478:   movq    rsp(2064 + virtual offset), %rsi
  Inst 26479:   movq    8(%rsi), %rdi
  Inst 26480:   movq    rsp(2048 + virtual offset), %rsi
  Inst 26481:   load_ext_name u0:2+0, %rax
  Inst 26482:   movq    %rsi, rsp(1280 + virtual offset)
  Inst 26483:   movq    %rdi, rsp(1296 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26484:   call    *%rax
  Inst 26485:   movq    %rax, %r15
  Inst 26486:   movq    %rdx, %r14
  Inst 26487:   testq   %r14, %r14
  Inst 26488:   jz      label765; j label766
Block 765:
  (successor: Block 768)
  (instruction range: 26489 .. 26586)
  Inst 26489:   movq    %r15, rsp(1280 + virtual offset)
  Inst 26490:   nop     len=0
  Inst 26491:   nop     len=0
  Inst 26492:   nop     len=0
  Inst 26493:   nop     len=0
  Inst 26494:   nop     len=0
  Inst 26495:   nop     len=0
  Inst 26496:   nop     len=0
  Inst 26497:   nop     len=0
  Inst 26498:   nop     len=0
  Inst 26499:   nop     len=0
  Inst 26500:   nop     len=0
  Inst 26501:   nop     len=0
  Inst 26502:   nop     len=0
  Inst 26503:   nop     len=0
  Inst 26504:   nop     len=0
  Inst 26505:   nop     len=0
  Inst 26506:   nop     len=0
  Inst 26507:   nop     len=0
  Inst 26508:   nop     len=0
  Inst 26509:   nop     len=0
  Inst 26510:   nop     len=0
  Inst 26511:   nop     len=0
  Inst 26512:   nop     len=0
  Inst 26513:   nop     len=0
  Inst 26514:   nop     len=0
  Inst 26515:   nop     len=0
  Inst 26516:   nop     len=0
  Inst 26517:   nop     len=0
  Inst 26518:   nop     len=0
  Inst 26519:   nop     len=0
  Inst 26520:   nop     len=0
  Inst 26521:   nop     len=0
  Inst 26522:   nop     len=0
  Inst 26523:   nop     len=0
  Inst 26524:   nop     len=0
  Inst 26525:   nop     len=0
  Inst 26526:   nop     len=0
  Inst 26527:   nop     len=0
  Inst 26528:   nop     len=0
  Inst 26529:   nop     len=0
  Inst 26530:   nop     len=0
  Inst 26531:   nop     len=0
  Inst 26532:   nop     len=0
  Inst 26533:   nop     len=0
  Inst 26534:   nop     len=0
  Inst 26535:   nop     len=0
  Inst 26536:   nop     len=0
  Inst 26537:   nop     len=0
  Inst 26538:   nop     len=0
  Inst 26539:   nop     len=0
  Inst 26540:   nop     len=0
  Inst 26541:   nop     len=0
  Inst 26542:   nop     len=0
  Inst 26543:   nop     len=0
  Inst 26544:   nop     len=0
  Inst 26545:   nop     len=0
  Inst 26546:   nop     len=0
  Inst 26547:   nop     len=0
  Inst 26548:   nop     len=0
  Inst 26549:   nop     len=0
  Inst 26550:   nop     len=0
  Inst 26551:   nop     len=0
  Inst 26552:   nop     len=0
  Inst 26553:   nop     len=0
  Inst 26554:   nop     len=0
  Inst 26555:   nop     len=0
  Inst 26556:   nop     len=0
  Inst 26557:   nop     len=0
  Inst 26558:   nop     len=0
  Inst 26559:   nop     len=0
  Inst 26560:   nop     len=0
  Inst 26561:   nop     len=0
  Inst 26562:   nop     len=0
  Inst 26563:   nop     len=0
  Inst 26564:   nop     len=0
  Inst 26565:   nop     len=0
  Inst 26566:   nop     len=0
  Inst 26567:   nop     len=0
  Inst 26568:   nop     len=0
  Inst 26569:   nop     len=0
  Inst 26570:   nop     len=0
  Inst 26571:   nop     len=0
  Inst 26572:   nop     len=0
  Inst 26573:   nop     len=0
  Inst 26574:   nop     len=0
  Inst 26575:   nop     len=0
  Inst 26576:   nop     len=0
  Inst 26577:   nop     len=0
  Inst 26578:   nop     len=0
  Inst 26579:   nop     len=0
  Inst 26580:   nop     len=0
  Inst 26581:   nop     len=0
  Inst 26582:   nop     len=0
  Inst 26583:   nop     len=0
  Inst 26584:   nop     len=0
  Inst 26585:   jmp     label768
Block 766:
  (original IR block: block385)
  (successor: Block 767)
  (instruction range: 26586 .. 26615)
  Inst 26586:   movq    rsp(2072 + virtual offset), %rsi
  Inst 26587:   movq    152(%rsi), %r13
  Inst 26588:   movq    %r14, %rbx
  Inst 26589:   addq    $-1, %rbx
  Inst 26590:   movq    %r14, %rdx
  Inst 26591:   shlq    $3, %rdx
  Inst 26592:   movq    %r13, %r12
  Inst 26593:   addq    %rdx, %r12
  Inst 26594:   movq    %r13, %rdi
  Inst 26595:   addq    $-24, %rdi
  Inst 26596:   movq    %r13, %rsi
  Inst 26597:   load_ext_name %Memmove+0, %rax
  Inst 26598:   movq    %r15, rsp(1296 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S161, S162, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26599:   call    *%rax
  Inst 26600:   movq    rsp(1296 + virtual offset), %r15
  Inst 26601:   load_ext_name u1:1+0, %rsi
  Inst 26602:   movl    $1, %edi
  Inst 26603:   movq    %rdi, -8(%r13,%r14,8)
  Inst 26604:   movl    $1, %edi
  Inst 26605:   movq    %rdi, -16(%r13,%r14,8)
  Inst 26606:   movq    %rsi, -24(%r13,%r14,8)
  Inst 26607:   movq    rsp(2072 + virtual offset), %rsi
  Inst 26608:   movq    %r12, 152(%rsi)
  Inst 26609:   movq    %r15, %rdi
  Inst 26610:   movq    %rbx, %rsi
  Inst 26611:   load_ext_name u0:3+0, %rax
  Inst 26612:   movq    %rdi, rsp(1280 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26613:   call    *%rax
  Inst 26614:   jmp     label767
Block 767:
  (successor: Block 768)
  (instruction range: 26615 .. 26712)
  Inst 26615:   movq    %rax, rsp(1280 + virtual offset)
  Inst 26616:   nop     len=0
  Inst 26617:   nop     len=0
  Inst 26618:   nop     len=0
  Inst 26619:   nop     len=0
  Inst 26620:   nop     len=0
  Inst 26621:   nop     len=0
  Inst 26622:   nop     len=0
  Inst 26623:   nop     len=0
  Inst 26624:   nop     len=0
  Inst 26625:   nop     len=0
  Inst 26626:   nop     len=0
  Inst 26627:   nop     len=0
  Inst 26628:   nop     len=0
  Inst 26629:   nop     len=0
  Inst 26630:   nop     len=0
  Inst 26631:   nop     len=0
  Inst 26632:   nop     len=0
  Inst 26633:   nop     len=0
  Inst 26634:   nop     len=0
  Inst 26635:   nop     len=0
  Inst 26636:   nop     len=0
  Inst 26637:   nop     len=0
  Inst 26638:   nop     len=0
  Inst 26639:   nop     len=0
  Inst 26640:   nop     len=0
  Inst 26641:   nop     len=0
  Inst 26642:   nop     len=0
  Inst 26643:   nop     len=0
  Inst 26644:   nop     len=0
  Inst 26645:   nop     len=0
  Inst 26646:   nop     len=0
  Inst 26647:   nop     len=0
  Inst 26648:   nop     len=0
  Inst 26649:   nop     len=0
  Inst 26650:   nop     len=0
  Inst 26651:   nop     len=0
  Inst 26652:   nop     len=0
  Inst 26653:   nop     len=0
  Inst 26654:   nop     len=0
  Inst 26655:   nop     len=0
  Inst 26656:   nop     len=0
  Inst 26657:   nop     len=0
  Inst 26658:   nop     len=0
  Inst 26659:   nop     len=0
  Inst 26660:   nop     len=0
  Inst 26661:   nop     len=0
  Inst 26662:   nop     len=0
  Inst 26663:   nop     len=0
  Inst 26664:   nop     len=0
  Inst 26665:   nop     len=0
  Inst 26666:   nop     len=0
  Inst 26667:   nop     len=0
  Inst 26668:   nop     len=0
  Inst 26669:   nop     len=0
  Inst 26670:   nop     len=0
  Inst 26671:   nop     len=0
  Inst 26672:   nop     len=0
  Inst 26673:   nop     len=0
  Inst 26674:   nop     len=0
  Inst 26675:   nop     len=0
  Inst 26676:   nop     len=0
  Inst 26677:   nop     len=0
  Inst 26678:   nop     len=0
  Inst 26679:   nop     len=0
  Inst 26680:   nop     len=0
  Inst 26681:   nop     len=0
  Inst 26682:   nop     len=0
  Inst 26683:   nop     len=0
  Inst 26684:   nop     len=0
  Inst 26685:   nop     len=0
  Inst 26686:   nop     len=0
  Inst 26687:   nop     len=0
  Inst 26688:   nop     len=0
  Inst 26689:   nop     len=0
  Inst 26690:   nop     len=0
  Inst 26691:   nop     len=0
  Inst 26692:   nop     len=0
  Inst 26693:   nop     len=0
  Inst 26694:   nop     len=0
  Inst 26695:   nop     len=0
  Inst 26696:   nop     len=0
  Inst 26697:   nop     len=0
  Inst 26698:   nop     len=0
  Inst 26699:   nop     len=0
  Inst 26700:   nop     len=0
  Inst 26701:   nop     len=0
  Inst 26702:   nop     len=0
  Inst 26703:   nop     len=0
  Inst 26704:   nop     len=0
  Inst 26705:   nop     len=0
  Inst 26706:   nop     len=0
  Inst 26707:   nop     len=0
  Inst 26708:   nop     len=0
  Inst 26709:   nop     len=0
  Inst 26710:   nop     len=0
  Inst 26711:   jmp     label768
Block 768:
  (original IR block: block384)
  (successor: Block 769)
  (successor: Block 770)
  (instruction range: 26712 .. 26723)
  Inst 26712:   movq    rsp(2064 + virtual offset), %rsi
  Inst 26713:   movq    8(%rsi), %rdi
  Inst 26714:   movq    rsp(2048 + virtual offset), %rsi
  Inst 26715:   load_ext_name u0:2+0, %rax
  Inst 26716:   movq    %rsi, rsp(1296 + virtual offset)
  Inst 26717:   movq    %rdi, rsp(1312 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26718:   call    *%rax
  Inst 26719:   movq    %rax, %rbx
  Inst 26720:   movq    %rdx, %r14
  Inst 26721:   testq   %r14, %r14
  Inst 26722:   jz      label769; j label770
Block 769:
  (successor: Block 772)
  (instruction range: 26723 .. 26821)
  Inst 26723:   movq    %rbx, rsp(1984 + virtual offset)
  Inst 26724:   nop     len=0
  Inst 26725:   nop     len=0
  Inst 26726:   nop     len=0
  Inst 26727:   nop     len=0
  Inst 26728:   nop     len=0
  Inst 26729:   nop     len=0
  Inst 26730:   nop     len=0
  Inst 26731:   nop     len=0
  Inst 26732:   nop     len=0
  Inst 26733:   nop     len=0
  Inst 26734:   nop     len=0
  Inst 26735:   nop     len=0
  Inst 26736:   nop     len=0
  Inst 26737:   nop     len=0
  Inst 26738:   nop     len=0
  Inst 26739:   nop     len=0
  Inst 26740:   nop     len=0
  Inst 26741:   nop     len=0
  Inst 26742:   nop     len=0
  Inst 26743:   nop     len=0
  Inst 26744:   nop     len=0
  Inst 26745:   nop     len=0
  Inst 26746:   nop     len=0
  Inst 26747:   nop     len=0
  Inst 26748:   nop     len=0
  Inst 26749:   nop     len=0
  Inst 26750:   nop     len=0
  Inst 26751:   nop     len=0
  Inst 26752:   nop     len=0
  Inst 26753:   nop     len=0
  Inst 26754:   nop     len=0
  Inst 26755:   nop     len=0
  Inst 26756:   nop     len=0
  Inst 26757:   nop     len=0
  Inst 26758:   nop     len=0
  Inst 26759:   nop     len=0
  Inst 26760:   nop     len=0
  Inst 26761:   nop     len=0
  Inst 26762:   nop     len=0
  Inst 26763:   nop     len=0
  Inst 26764:   nop     len=0
  Inst 26765:   nop     len=0
  Inst 26766:   nop     len=0
  Inst 26767:   nop     len=0
  Inst 26768:   nop     len=0
  Inst 26769:   nop     len=0
  Inst 26770:   nop     len=0
  Inst 26771:   nop     len=0
  Inst 26772:   nop     len=0
  Inst 26773:   nop     len=0
  Inst 26774:   nop     len=0
  Inst 26775:   nop     len=0
  Inst 26776:   nop     len=0
  Inst 26777:   nop     len=0
  Inst 26778:   nop     len=0
  Inst 26779:   nop     len=0
  Inst 26780:   nop     len=0
  Inst 26781:   nop     len=0
  Inst 26782:   nop     len=0
  Inst 26783:   nop     len=0
  Inst 26784:   nop     len=0
  Inst 26785:   nop     len=0
  Inst 26786:   nop     len=0
  Inst 26787:   nop     len=0
  Inst 26788:   nop     len=0
  Inst 26789:   nop     len=0
  Inst 26790:   nop     len=0
  Inst 26791:   nop     len=0
  Inst 26792:   nop     len=0
  Inst 26793:   nop     len=0
  Inst 26794:   nop     len=0
  Inst 26795:   nop     len=0
  Inst 26796:   nop     len=0
  Inst 26797:   nop     len=0
  Inst 26798:   nop     len=0
  Inst 26799:   nop     len=0
  Inst 26800:   nop     len=0
  Inst 26801:   nop     len=0
  Inst 26802:   nop     len=0
  Inst 26803:   nop     len=0
  Inst 26804:   nop     len=0
  Inst 26805:   nop     len=0
  Inst 26806:   nop     len=0
  Inst 26807:   nop     len=0
  Inst 26808:   nop     len=0
  Inst 26809:   nop     len=0
  Inst 26810:   nop     len=0
  Inst 26811:   nop     len=0
  Inst 26812:   nop     len=0
  Inst 26813:   nop     len=0
  Inst 26814:   nop     len=0
  Inst 26815:   nop     len=0
  Inst 26816:   nop     len=0
  Inst 26817:   nop     len=0
  Inst 26818:   nop     len=0
  Inst 26819:   nop     len=0
  Inst 26820:   jmp     label772
Block 770:
  (original IR block: block387)
  (successor: Block 771)
  (instruction range: 26821 .. 26850)
  Inst 26821:   movq    rsp(2072 + virtual offset), %rsi
  Inst 26822:   movq    152(%rsi), %r13
  Inst 26823:   movq    %r14, %r15
  Inst 26824:   addq    $-1, %r15
  Inst 26825:   movq    %r14, %rdx
  Inst 26826:   shlq    $3, %rdx
  Inst 26827:   movq    %r13, %r12
  Inst 26828:   addq    %rdx, %r12
  Inst 26829:   movq    %r13, %rdi
  Inst 26830:   addq    $-24, %rdi
  Inst 26831:   movq    %r13, %rsi
  Inst 26832:   load_ext_name %Memmove+0, %rax
  Inst 26833:   movq    %rbx, rsp(1296 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26834:   call    *%rax
  Inst 26835:   movq    rsp(1296 + virtual offset), %rbx
  Inst 26836:   load_ext_name u1:1+0, %rsi
  Inst 26837:   movl    $1, %edi
  Inst 26838:   movq    %rdi, -8(%r13,%r14,8)
  Inst 26839:   movl    $1, %edi
  Inst 26840:   movq    %rdi, -16(%r13,%r14,8)
  Inst 26841:   movq    %rsi, -24(%r13,%r14,8)
  Inst 26842:   movq    rsp(2072 + virtual offset), %rsi
  Inst 26843:   movq    %r12, 152(%rsi)
  Inst 26844:   movq    %rbx, %rdi
  Inst 26845:   movq    %r15, %rsi
  Inst 26846:   load_ext_name u0:3+0, %rax
  Inst 26847:   movq    %rdi, rsp(1296 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26848:   call    *%rax
  Inst 26849:   jmp     label771
Block 771:
  (successor: Block 772)
  (instruction range: 26850 .. 26948)
  Inst 26850:   movq    %rax, rsp(1984 + virtual offset)
  Inst 26851:   nop     len=0
  Inst 26852:   nop     len=0
  Inst 26853:   nop     len=0
  Inst 26854:   nop     len=0
  Inst 26855:   nop     len=0
  Inst 26856:   nop     len=0
  Inst 26857:   nop     len=0
  Inst 26858:   nop     len=0
  Inst 26859:   nop     len=0
  Inst 26860:   nop     len=0
  Inst 26861:   nop     len=0
  Inst 26862:   nop     len=0
  Inst 26863:   nop     len=0
  Inst 26864:   nop     len=0
  Inst 26865:   nop     len=0
  Inst 26866:   nop     len=0
  Inst 26867:   nop     len=0
  Inst 26868:   nop     len=0
  Inst 26869:   nop     len=0
  Inst 26870:   nop     len=0
  Inst 26871:   nop     len=0
  Inst 26872:   nop     len=0
  Inst 26873:   nop     len=0
  Inst 26874:   nop     len=0
  Inst 26875:   nop     len=0
  Inst 26876:   nop     len=0
  Inst 26877:   nop     len=0
  Inst 26878:   nop     len=0
  Inst 26879:   nop     len=0
  Inst 26880:   nop     len=0
  Inst 26881:   nop     len=0
  Inst 26882:   nop     len=0
  Inst 26883:   nop     len=0
  Inst 26884:   nop     len=0
  Inst 26885:   nop     len=0
  Inst 26886:   nop     len=0
  Inst 26887:   nop     len=0
  Inst 26888:   nop     len=0
  Inst 26889:   nop     len=0
  Inst 26890:   nop     len=0
  Inst 26891:   nop     len=0
  Inst 26892:   nop     len=0
  Inst 26893:   nop     len=0
  Inst 26894:   nop     len=0
  Inst 26895:   nop     len=0
  Inst 26896:   nop     len=0
  Inst 26897:   nop     len=0
  Inst 26898:   nop     len=0
  Inst 26899:   nop     len=0
  Inst 26900:   nop     len=0
  Inst 26901:   nop     len=0
  Inst 26902:   nop     len=0
  Inst 26903:   nop     len=0
  Inst 26904:   nop     len=0
  Inst 26905:   nop     len=0
  Inst 26906:   nop     len=0
  Inst 26907:   nop     len=0
  Inst 26908:   nop     len=0
  Inst 26909:   nop     len=0
  Inst 26910:   nop     len=0
  Inst 26911:   nop     len=0
  Inst 26912:   nop     len=0
  Inst 26913:   nop     len=0
  Inst 26914:   nop     len=0
  Inst 26915:   nop     len=0
  Inst 26916:   nop     len=0
  Inst 26917:   nop     len=0
  Inst 26918:   nop     len=0
  Inst 26919:   nop     len=0
  Inst 26920:   nop     len=0
  Inst 26921:   nop     len=0
  Inst 26922:   nop     len=0
  Inst 26923:   nop     len=0
  Inst 26924:   nop     len=0
  Inst 26925:   nop     len=0
  Inst 26926:   nop     len=0
  Inst 26927:   nop     len=0
  Inst 26928:   nop     len=0
  Inst 26929:   nop     len=0
  Inst 26930:   nop     len=0
  Inst 26931:   nop     len=0
  Inst 26932:   nop     len=0
  Inst 26933:   nop     len=0
  Inst 26934:   nop     len=0
  Inst 26935:   nop     len=0
  Inst 26936:   nop     len=0
  Inst 26937:   nop     len=0
  Inst 26938:   nop     len=0
  Inst 26939:   nop     len=0
  Inst 26940:   nop     len=0
  Inst 26941:   nop     len=0
  Inst 26942:   nop     len=0
  Inst 26943:   nop     len=0
  Inst 26944:   nop     len=0
  Inst 26945:   nop     len=0
  Inst 26946:   nop     len=0
  Inst 26947:   jmp     label772
Block 772:
  (original IR block: block386)
  (successor: Block 773)
  (successor: Block 774)
  (instruction range: 26948 .. 26959)
  Inst 26948:   movq    rsp(2064 + virtual offset), %rsi
  Inst 26949:   movq    8(%rsi), %rdi
  Inst 26950:   movq    rsp(2048 + virtual offset), %rsi
  Inst 26951:   load_ext_name u0:2+0, %rax
  Inst 26952:   movq    %rsi, rsp(1296 + virtual offset)
  Inst 26953:   movq    %rdi, rsp(1312 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 26954:   call    *%rax
  Inst 26955:   movq    %rax, %rbx
  Inst 26956:   movq    %rdx, %r14
  Inst 26957:   testq   %r14, %r14
  Inst 26958:   jz      label773; j label774
Block 773:
  (successor: Block 776)
  (instruction range: 26959 .. 27057)
  Inst 26959:   movq    %rbx, rsp(1296 + virtual offset)
  Inst 26960:   nop     len=0
  Inst 26961:   nop     len=0
  Inst 26962:   nop     len=0
  Inst 26963:   nop     len=0
  Inst 26964:   nop     len=0
  Inst 26965:   nop     len=0
  Inst 26966:   nop     len=0
  Inst 26967:   nop     len=0
  Inst 26968:   nop     len=0
  Inst 26969:   nop     len=0
  Inst 26970:   nop     len=0
  Inst 26971:   nop     len=0
  Inst 26972:   nop     len=0
  Inst 26973:   nop     len=0
  Inst 26974:   nop     len=0
  Inst 26975:   nop     len=0
  Inst 26976:   nop     len=0
  Inst 26977:   nop     len=0
  Inst 26978:   nop     len=0
  Inst 26979:   nop     len=0
  Inst 26980:   nop     len=0
  Inst 26981:   nop     len=0
  Inst 26982:   nop     len=0
  Inst 26983:   nop     len=0
  Inst 26984:   nop     len=0
  Inst 26985:   nop     len=0
  Inst 26986:   nop     len=0
  Inst 26987:   nop     len=0
  Inst 26988:   nop     len=0
  Inst 26989:   nop     len=0
  Inst 26990:   nop     len=0
  Inst 26991:   nop     len=0
  Inst 26992:   nop     len=0
  Inst 26993:   nop     len=0
  Inst 26994:   nop     len=0
  Inst 26995:   nop     len=0
  Inst 26996:   nop     len=0
  Inst 26997:   nop     len=0
  Inst 26998:   nop     len=0
  Inst 26999:   nop     len=0
  Inst 27000:   nop     len=0
  Inst 27001:   nop     len=0
  Inst 27002:   nop     len=0
  Inst 27003:   nop     len=0
  Inst 27004:   nop     len=0
  Inst 27005:   nop     len=0
  Inst 27006:   nop     len=0
  Inst 27007:   nop     len=0
  Inst 27008:   nop     len=0
  Inst 27009:   nop     len=0
  Inst 27010:   nop     len=0
  Inst 27011:   nop     len=0
  Inst 27012:   nop     len=0
  Inst 27013:   nop     len=0
  Inst 27014:   nop     len=0
  Inst 27015:   nop     len=0
  Inst 27016:   nop     len=0
  Inst 27017:   nop     len=0
  Inst 27018:   nop     len=0
  Inst 27019:   nop     len=0
  Inst 27020:   nop     len=0
  Inst 27021:   nop     len=0
  Inst 27022:   nop     len=0
  Inst 27023:   nop     len=0
  Inst 27024:   nop     len=0
  Inst 27025:   nop     len=0
  Inst 27026:   nop     len=0
  Inst 27027:   nop     len=0
  Inst 27028:   nop     len=0
  Inst 27029:   nop     len=0
  Inst 27030:   nop     len=0
  Inst 27031:   nop     len=0
  Inst 27032:   nop     len=0
  Inst 27033:   nop     len=0
  Inst 27034:   nop     len=0
  Inst 27035:   nop     len=0
  Inst 27036:   nop     len=0
  Inst 27037:   nop     len=0
  Inst 27038:   nop     len=0
  Inst 27039:   nop     len=0
  Inst 27040:   nop     len=0
  Inst 27041:   nop     len=0
  Inst 27042:   nop     len=0
  Inst 27043:   nop     len=0
  Inst 27044:   nop     len=0
  Inst 27045:   nop     len=0
  Inst 27046:   nop     len=0
  Inst 27047:   nop     len=0
  Inst 27048:   nop     len=0
  Inst 27049:   nop     len=0
  Inst 27050:   nop     len=0
  Inst 27051:   nop     len=0
  Inst 27052:   nop     len=0
  Inst 27053:   nop     len=0
  Inst 27054:   nop     len=0
  Inst 27055:   nop     len=0
  Inst 27056:   jmp     label776
Block 774:
  (original IR block: block389)
  (successor: Block 775)
  (instruction range: 27057 .. 27086)
  Inst 27057:   movq    rsp(2072 + virtual offset), %rsi
  Inst 27058:   movq    152(%rsi), %r13
  Inst 27059:   movq    %r14, %r15
  Inst 27060:   addq    $-1, %r15
  Inst 27061:   movq    %r14, %rdx
  Inst 27062:   shlq    $3, %rdx
  Inst 27063:   movq    %r13, %r12
  Inst 27064:   addq    %rdx, %r12
  Inst 27065:   movq    %r13, %rdi
  Inst 27066:   addq    $-24, %rdi
  Inst 27067:   movq    %r13, %rsi
  Inst 27068:   load_ext_name %Memmove+0, %rax
  Inst 27069:   movq    %rbx, rsp(1312 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S163, S164, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27070:   call    *%rax
  Inst 27071:   movq    rsp(1312 + virtual offset), %rbx
  Inst 27072:   load_ext_name u1:1+0, %rsi
  Inst 27073:   movl    $1, %edi
  Inst 27074:   movq    %rdi, -8(%r13,%r14,8)
  Inst 27075:   movl    $1, %edi
  Inst 27076:   movq    %rdi, -16(%r13,%r14,8)
  Inst 27077:   movq    %rsi, -24(%r13,%r14,8)
  Inst 27078:   movq    rsp(2072 + virtual offset), %rsi
  Inst 27079:   movq    %r12, 152(%rsi)
  Inst 27080:   movq    %rbx, %rdi
  Inst 27081:   movq    %r15, %rsi
  Inst 27082:   load_ext_name u0:3+0, %rax
  Inst 27083:   movq    %rdi, rsp(1296 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27084:   call    *%rax
  Inst 27085:   jmp     label775
Block 775:
  (successor: Block 776)
  (instruction range: 27086 .. 27184)
  Inst 27086:   movq    %rax, rsp(1296 + virtual offset)
  Inst 27087:   nop     len=0
  Inst 27088:   nop     len=0
  Inst 27089:   nop     len=0
  Inst 27090:   nop     len=0
  Inst 27091:   nop     len=0
  Inst 27092:   nop     len=0
  Inst 27093:   nop     len=0
  Inst 27094:   nop     len=0
  Inst 27095:   nop     len=0
  Inst 27096:   nop     len=0
  Inst 27097:   nop     len=0
  Inst 27098:   nop     len=0
  Inst 27099:   nop     len=0
  Inst 27100:   nop     len=0
  Inst 27101:   nop     len=0
  Inst 27102:   nop     len=0
  Inst 27103:   nop     len=0
  Inst 27104:   nop     len=0
  Inst 27105:   nop     len=0
  Inst 27106:   nop     len=0
  Inst 27107:   nop     len=0
  Inst 27108:   nop     len=0
  Inst 27109:   nop     len=0
  Inst 27110:   nop     len=0
  Inst 27111:   nop     len=0
  Inst 27112:   nop     len=0
  Inst 27113:   nop     len=0
  Inst 27114:   nop     len=0
  Inst 27115:   nop     len=0
  Inst 27116:   nop     len=0
  Inst 27117:   nop     len=0
  Inst 27118:   nop     len=0
  Inst 27119:   nop     len=0
  Inst 27120:   nop     len=0
  Inst 27121:   nop     len=0
  Inst 27122:   nop     len=0
  Inst 27123:   nop     len=0
  Inst 27124:   nop     len=0
  Inst 27125:   nop     len=0
  Inst 27126:   nop     len=0
  Inst 27127:   nop     len=0
  Inst 27128:   nop     len=0
  Inst 27129:   nop     len=0
  Inst 27130:   nop     len=0
  Inst 27131:   nop     len=0
  Inst 27132:   nop     len=0
  Inst 27133:   nop     len=0
  Inst 27134:   nop     len=0
  Inst 27135:   nop     len=0
  Inst 27136:   nop     len=0
  Inst 27137:   nop     len=0
  Inst 27138:   nop     len=0
  Inst 27139:   nop     len=0
  Inst 27140:   nop     len=0
  Inst 27141:   nop     len=0
  Inst 27142:   nop     len=0
  Inst 27143:   nop     len=0
  Inst 27144:   nop     len=0
  Inst 27145:   nop     len=0
  Inst 27146:   nop     len=0
  Inst 27147:   nop     len=0
  Inst 27148:   nop     len=0
  Inst 27149:   nop     len=0
  Inst 27150:   nop     len=0
  Inst 27151:   nop     len=0
  Inst 27152:   nop     len=0
  Inst 27153:   nop     len=0
  Inst 27154:   nop     len=0
  Inst 27155:   nop     len=0
  Inst 27156:   nop     len=0
  Inst 27157:   nop     len=0
  Inst 27158:   nop     len=0
  Inst 27159:   nop     len=0
  Inst 27160:   nop     len=0
  Inst 27161:   nop     len=0
  Inst 27162:   nop     len=0
  Inst 27163:   nop     len=0
  Inst 27164:   nop     len=0
  Inst 27165:   nop     len=0
  Inst 27166:   nop     len=0
  Inst 27167:   nop     len=0
  Inst 27168:   nop     len=0
  Inst 27169:   nop     len=0
  Inst 27170:   nop     len=0
  Inst 27171:   nop     len=0
  Inst 27172:   nop     len=0
  Inst 27173:   nop     len=0
  Inst 27174:   nop     len=0
  Inst 27175:   nop     len=0
  Inst 27176:   nop     len=0
  Inst 27177:   nop     len=0
  Inst 27178:   nop     len=0
  Inst 27179:   nop     len=0
  Inst 27180:   nop     len=0
  Inst 27181:   nop     len=0
  Inst 27182:   nop     len=0
  Inst 27183:   jmp     label776
Block 776:
  (original IR block: block388)
  (successor: Block 777)
  (successor: Block 778)
  (instruction range: 27184 .. 27195)
  Inst 27184:   movq    rsp(2064 + virtual offset), %rsi
  Inst 27185:   movq    8(%rsi), %rdi
  Inst 27186:   movq    rsp(2048 + virtual offset), %rsi
  Inst 27187:   load_ext_name u0:2+0, %rax
  Inst 27188:   movq    %rsi, rsp(1312 + virtual offset)
  Inst 27189:   movq    %rdi, rsp(1328 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27190:   call    *%rax
  Inst 27191:   movq    %rax, %r15
  Inst 27192:   movq    %rdx, %r14
  Inst 27193:   testq   %r14, %r14
  Inst 27194:   jz      label777; j label778
Block 777:
  (successor: Block 780)
  (instruction range: 27195 .. 27294)
  Inst 27195:   movq    %r15, rsp(1976 + virtual offset)
  Inst 27196:   nop     len=0
  Inst 27197:   nop     len=0
  Inst 27198:   nop     len=0
  Inst 27199:   nop     len=0
  Inst 27200:   nop     len=0
  Inst 27201:   nop     len=0
  Inst 27202:   nop     len=0
  Inst 27203:   nop     len=0
  Inst 27204:   nop     len=0
  Inst 27205:   nop     len=0
  Inst 27206:   nop     len=0
  Inst 27207:   nop     len=0
  Inst 27208:   nop     len=0
  Inst 27209:   nop     len=0
  Inst 27210:   nop     len=0
  Inst 27211:   nop     len=0
  Inst 27212:   nop     len=0
  Inst 27213:   nop     len=0
  Inst 27214:   nop     len=0
  Inst 27215:   nop     len=0
  Inst 27216:   nop     len=0
  Inst 27217:   nop     len=0
  Inst 27218:   nop     len=0
  Inst 27219:   nop     len=0
  Inst 27220:   nop     len=0
  Inst 27221:   nop     len=0
  Inst 27222:   nop     len=0
  Inst 27223:   nop     len=0
  Inst 27224:   nop     len=0
  Inst 27225:   nop     len=0
  Inst 27226:   nop     len=0
  Inst 27227:   nop     len=0
  Inst 27228:   nop     len=0
  Inst 27229:   nop     len=0
  Inst 27230:   nop     len=0
  Inst 27231:   nop     len=0
  Inst 27232:   nop     len=0
  Inst 27233:   nop     len=0
  Inst 27234:   nop     len=0
  Inst 27235:   nop     len=0
  Inst 27236:   nop     len=0
  Inst 27237:   nop     len=0
  Inst 27238:   nop     len=0
  Inst 27239:   nop     len=0
  Inst 27240:   nop     len=0
  Inst 27241:   nop     len=0
  Inst 27242:   nop     len=0
  Inst 27243:   nop     len=0
  Inst 27244:   nop     len=0
  Inst 27245:   nop     len=0
  Inst 27246:   nop     len=0
  Inst 27247:   nop     len=0
  Inst 27248:   nop     len=0
  Inst 27249:   nop     len=0
  Inst 27250:   nop     len=0
  Inst 27251:   nop     len=0
  Inst 27252:   nop     len=0
  Inst 27253:   nop     len=0
  Inst 27254:   nop     len=0
  Inst 27255:   nop     len=0
  Inst 27256:   nop     len=0
  Inst 27257:   nop     len=0
  Inst 27258:   nop     len=0
  Inst 27259:   nop     len=0
  Inst 27260:   nop     len=0
  Inst 27261:   nop     len=0
  Inst 27262:   nop     len=0
  Inst 27263:   nop     len=0
  Inst 27264:   nop     len=0
  Inst 27265:   nop     len=0
  Inst 27266:   nop     len=0
  Inst 27267:   nop     len=0
  Inst 27268:   nop     len=0
  Inst 27269:   nop     len=0
  Inst 27270:   nop     len=0
  Inst 27271:   nop     len=0
  Inst 27272:   nop     len=0
  Inst 27273:   nop     len=0
  Inst 27274:   nop     len=0
  Inst 27275:   nop     len=0
  Inst 27276:   nop     len=0
  Inst 27277:   nop     len=0
  Inst 27278:   nop     len=0
  Inst 27279:   nop     len=0
  Inst 27280:   nop     len=0
  Inst 27281:   nop     len=0
  Inst 27282:   nop     len=0
  Inst 27283:   nop     len=0
  Inst 27284:   nop     len=0
  Inst 27285:   nop     len=0
  Inst 27286:   nop     len=0
  Inst 27287:   nop     len=0
  Inst 27288:   nop     len=0
  Inst 27289:   nop     len=0
  Inst 27290:   nop     len=0
  Inst 27291:   nop     len=0
  Inst 27292:   nop     len=0
  Inst 27293:   jmp     label780
Block 778:
  (original IR block: block391)
  (successor: Block 779)
  (instruction range: 27294 .. 27323)
  Inst 27294:   movq    rsp(2072 + virtual offset), %rsi
  Inst 27295:   movq    152(%rsi), %r13
  Inst 27296:   movq    %r14, %rbx
  Inst 27297:   addq    $-1, %rbx
  Inst 27298:   movq    %r14, %rdx
  Inst 27299:   shlq    $3, %rdx
  Inst 27300:   movq    %r13, %r12
  Inst 27301:   addq    %rdx, %r12
  Inst 27302:   movq    %r13, %rdi
  Inst 27303:   addq    $-24, %rdi
  Inst 27304:   movq    %r13, %rsi
  Inst 27305:   load_ext_name %Memmove+0, %rax
  Inst 27306:   movq    %r15, rsp(1312 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27307:   call    *%rax
  Inst 27308:   movq    rsp(1312 + virtual offset), %r15
  Inst 27309:   load_ext_name u1:1+0, %rsi
  Inst 27310:   movl    $1, %edi
  Inst 27311:   movq    %rdi, -8(%r13,%r14,8)
  Inst 27312:   movl    $1, %edi
  Inst 27313:   movq    %rdi, -16(%r13,%r14,8)
  Inst 27314:   movq    %rsi, -24(%r13,%r14,8)
  Inst 27315:   movq    rsp(2072 + virtual offset), %rsi
  Inst 27316:   movq    %r12, 152(%rsi)
  Inst 27317:   movq    %r15, %rdi
  Inst 27318:   movq    %rbx, %rsi
  Inst 27319:   load_ext_name u0:3+0, %rax
  Inst 27320:   movq    %rdi, rsp(1312 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27321:   call    *%rax
  Inst 27322:   jmp     label779
Block 779:
  (successor: Block 780)
  (instruction range: 27323 .. 27422)
  Inst 27323:   movq    %rax, rsp(1976 + virtual offset)
  Inst 27324:   nop     len=0
  Inst 27325:   nop     len=0
  Inst 27326:   nop     len=0
  Inst 27327:   nop     len=0
  Inst 27328:   nop     len=0
  Inst 27329:   nop     len=0
  Inst 27330:   nop     len=0
  Inst 27331:   nop     len=0
  Inst 27332:   nop     len=0
  Inst 27333:   nop     len=0
  Inst 27334:   nop     len=0
  Inst 27335:   nop     len=0
  Inst 27336:   nop     len=0
  Inst 27337:   nop     len=0
  Inst 27338:   nop     len=0
  Inst 27339:   nop     len=0
  Inst 27340:   nop     len=0
  Inst 27341:   nop     len=0
  Inst 27342:   nop     len=0
  Inst 27343:   nop     len=0
  Inst 27344:   nop     len=0
  Inst 27345:   nop     len=0
  Inst 27346:   nop     len=0
  Inst 27347:   nop     len=0
  Inst 27348:   nop     len=0
  Inst 27349:   nop     len=0
  Inst 27350:   nop     len=0
  Inst 27351:   nop     len=0
  Inst 27352:   nop     len=0
  Inst 27353:   nop     len=0
  Inst 27354:   nop     len=0
  Inst 27355:   nop     len=0
  Inst 27356:   nop     len=0
  Inst 27357:   nop     len=0
  Inst 27358:   nop     len=0
  Inst 27359:   nop     len=0
  Inst 27360:   nop     len=0
  Inst 27361:   nop     len=0
  Inst 27362:   nop     len=0
  Inst 27363:   nop     len=0
  Inst 27364:   nop     len=0
  Inst 27365:   nop     len=0
  Inst 27366:   nop     len=0
  Inst 27367:   nop     len=0
  Inst 27368:   nop     len=0
  Inst 27369:   nop     len=0
  Inst 27370:   nop     len=0
  Inst 27371:   nop     len=0
  Inst 27372:   nop     len=0
  Inst 27373:   nop     len=0
  Inst 27374:   nop     len=0
  Inst 27375:   nop     len=0
  Inst 27376:   nop     len=0
  Inst 27377:   nop     len=0
  Inst 27378:   nop     len=0
  Inst 27379:   nop     len=0
  Inst 27380:   nop     len=0
  Inst 27381:   nop     len=0
  Inst 27382:   nop     len=0
  Inst 27383:   nop     len=0
  Inst 27384:   nop     len=0
  Inst 27385:   nop     len=0
  Inst 27386:   nop     len=0
  Inst 27387:   nop     len=0
  Inst 27388:   nop     len=0
  Inst 27389:   nop     len=0
  Inst 27390:   nop     len=0
  Inst 27391:   nop     len=0
  Inst 27392:   nop     len=0
  Inst 27393:   nop     len=0
  Inst 27394:   nop     len=0
  Inst 27395:   nop     len=0
  Inst 27396:   nop     len=0
  Inst 27397:   nop     len=0
  Inst 27398:   nop     len=0
  Inst 27399:   nop     len=0
  Inst 27400:   nop     len=0
  Inst 27401:   nop     len=0
  Inst 27402:   nop     len=0
  Inst 27403:   nop     len=0
  Inst 27404:   nop     len=0
  Inst 27405:   nop     len=0
  Inst 27406:   nop     len=0
  Inst 27407:   nop     len=0
  Inst 27408:   nop     len=0
  Inst 27409:   nop     len=0
  Inst 27410:   nop     len=0
  Inst 27411:   nop     len=0
  Inst 27412:   nop     len=0
  Inst 27413:   nop     len=0
  Inst 27414:   nop     len=0
  Inst 27415:   nop     len=0
  Inst 27416:   nop     len=0
  Inst 27417:   nop     len=0
  Inst 27418:   nop     len=0
  Inst 27419:   nop     len=0
  Inst 27420:   nop     len=0
  Inst 27421:   jmp     label780
Block 780:
  (original IR block: block390)
  (successor: Block 781)
  (successor: Block 782)
  (instruction range: 27422 .. 27433)
  Inst 27422:   movq    rsp(2064 + virtual offset), %rsi
  Inst 27423:   movq    8(%rsi), %rdi
  Inst 27424:   movq    rsp(2048 + virtual offset), %rsi
  Inst 27425:   load_ext_name u0:2+0, %rax
  Inst 27426:   movq    %rsi, rsp(1312 + virtual offset)
  Inst 27427:   movq    %rdi, rsp(1328 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27428:   call    *%rax
  Inst 27429:   movq    %rax, %rbx
  Inst 27430:   movq    %rdx, %r14
  Inst 27431:   testq   %r14, %r14
  Inst 27432:   jz      label781; j label782
Block 781:
  (successor: Block 784)
  (instruction range: 27433 .. 27532)
  Inst 27433:   movq    %rbx, rsp(1312 + virtual offset)
  Inst 27434:   nop     len=0
  Inst 27435:   nop     len=0
  Inst 27436:   nop     len=0
  Inst 27437:   nop     len=0
  Inst 27438:   nop     len=0
  Inst 27439:   nop     len=0
  Inst 27440:   nop     len=0
  Inst 27441:   nop     len=0
  Inst 27442:   nop     len=0
  Inst 27443:   nop     len=0
  Inst 27444:   nop     len=0
  Inst 27445:   nop     len=0
  Inst 27446:   nop     len=0
  Inst 27447:   nop     len=0
  Inst 27448:   nop     len=0
  Inst 27449:   nop     len=0
  Inst 27450:   nop     len=0
  Inst 27451:   nop     len=0
  Inst 27452:   nop     len=0
  Inst 27453:   nop     len=0
  Inst 27454:   nop     len=0
  Inst 27455:   nop     len=0
  Inst 27456:   nop     len=0
  Inst 27457:   nop     len=0
  Inst 27458:   nop     len=0
  Inst 27459:   nop     len=0
  Inst 27460:   nop     len=0
  Inst 27461:   nop     len=0
  Inst 27462:   nop     len=0
  Inst 27463:   nop     len=0
  Inst 27464:   nop     len=0
  Inst 27465:   nop     len=0
  Inst 27466:   nop     len=0
  Inst 27467:   nop     len=0
  Inst 27468:   nop     len=0
  Inst 27469:   nop     len=0
  Inst 27470:   nop     len=0
  Inst 27471:   nop     len=0
  Inst 27472:   nop     len=0
  Inst 27473:   nop     len=0
  Inst 27474:   nop     len=0
  Inst 27475:   nop     len=0
  Inst 27476:   nop     len=0
  Inst 27477:   nop     len=0
  Inst 27478:   nop     len=0
  Inst 27479:   nop     len=0
  Inst 27480:   nop     len=0
  Inst 27481:   nop     len=0
  Inst 27482:   nop     len=0
  Inst 27483:   nop     len=0
  Inst 27484:   nop     len=0
  Inst 27485:   nop     len=0
  Inst 27486:   nop     len=0
  Inst 27487:   nop     len=0
  Inst 27488:   nop     len=0
  Inst 27489:   nop     len=0
  Inst 27490:   nop     len=0
  Inst 27491:   nop     len=0
  Inst 27492:   nop     len=0
  Inst 27493:   nop     len=0
  Inst 27494:   nop     len=0
  Inst 27495:   nop     len=0
  Inst 27496:   nop     len=0
  Inst 27497:   nop     len=0
  Inst 27498:   nop     len=0
  Inst 27499:   nop     len=0
  Inst 27500:   nop     len=0
  Inst 27501:   nop     len=0
  Inst 27502:   nop     len=0
  Inst 27503:   nop     len=0
  Inst 27504:   nop     len=0
  Inst 27505:   nop     len=0
  Inst 27506:   nop     len=0
  Inst 27507:   nop     len=0
  Inst 27508:   nop     len=0
  Inst 27509:   nop     len=0
  Inst 27510:   nop     len=0
  Inst 27511:   nop     len=0
  Inst 27512:   nop     len=0
  Inst 27513:   nop     len=0
  Inst 27514:   nop     len=0
  Inst 27515:   nop     len=0
  Inst 27516:   nop     len=0
  Inst 27517:   nop     len=0
  Inst 27518:   nop     len=0
  Inst 27519:   nop     len=0
  Inst 27520:   nop     len=0
  Inst 27521:   nop     len=0
  Inst 27522:   nop     len=0
  Inst 27523:   nop     len=0
  Inst 27524:   nop     len=0
  Inst 27525:   nop     len=0
  Inst 27526:   nop     len=0
  Inst 27527:   nop     len=0
  Inst 27528:   nop     len=0
  Inst 27529:   nop     len=0
  Inst 27530:   nop     len=0
  Inst 27531:   jmp     label784
Block 782:
  (original IR block: block393)
  (successor: Block 783)
  (instruction range: 27532 .. 27561)
  Inst 27532:   movq    rsp(2072 + virtual offset), %rsi
  Inst 27533:   movq    152(%rsi), %r13
  Inst 27534:   movq    %r14, %r15
  Inst 27535:   addq    $-1, %r15
  Inst 27536:   movq    %r14, %rdx
  Inst 27537:   shlq    $3, %rdx
  Inst 27538:   movq    %r13, %r12
  Inst 27539:   addq    %rdx, %r12
  Inst 27540:   movq    %r13, %rdi
  Inst 27541:   addq    $-24, %rdi
  Inst 27542:   movq    %r13, %rsi
  Inst 27543:   load_ext_name %Memmove+0, %rax
  Inst 27544:   movq    %rbx, rsp(1328 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S165, S166, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27545:   call    *%rax
  Inst 27546:   movq    rsp(1328 + virtual offset), %rbx
  Inst 27547:   load_ext_name u1:1+0, %rsi
  Inst 27548:   movl    $1, %edi
  Inst 27549:   movq    %rdi, -8(%r13,%r14,8)
  Inst 27550:   movl    $1, %edi
  Inst 27551:   movq    %rdi, -16(%r13,%r14,8)
  Inst 27552:   movq    %rsi, -24(%r13,%r14,8)
  Inst 27553:   movq    rsp(2072 + virtual offset), %rsi
  Inst 27554:   movq    %r12, 152(%rsi)
  Inst 27555:   movq    %rbx, %rdi
  Inst 27556:   movq    %r15, %rsi
  Inst 27557:   load_ext_name u0:3+0, %rax
  Inst 27558:   movq    %rdi, rsp(1312 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27559:   call    *%rax
  Inst 27560:   jmp     label783
Block 783:
  (successor: Block 784)
  (instruction range: 27561 .. 27660)
  Inst 27561:   movq    %rax, rsp(1312 + virtual offset)
  Inst 27562:   nop     len=0
  Inst 27563:   nop     len=0
  Inst 27564:   nop     len=0
  Inst 27565:   nop     len=0
  Inst 27566:   nop     len=0
  Inst 27567:   nop     len=0
  Inst 27568:   nop     len=0
  Inst 27569:   nop     len=0
  Inst 27570:   nop     len=0
  Inst 27571:   nop     len=0
  Inst 27572:   nop     len=0
  Inst 27573:   nop     len=0
  Inst 27574:   nop     len=0
  Inst 27575:   nop     len=0
  Inst 27576:   nop     len=0
  Inst 27577:   nop     len=0
  Inst 27578:   nop     len=0
  Inst 27579:   nop     len=0
  Inst 27580:   nop     len=0
  Inst 27581:   nop     len=0
  Inst 27582:   nop     len=0
  Inst 27583:   nop     len=0
  Inst 27584:   nop     len=0
  Inst 27585:   nop     len=0
  Inst 27586:   nop     len=0
  Inst 27587:   nop     len=0
  Inst 27588:   nop     len=0
  Inst 27589:   nop     len=0
  Inst 27590:   nop     len=0
  Inst 27591:   nop     len=0
  Inst 27592:   nop     len=0
  Inst 27593:   nop     len=0
  Inst 27594:   nop     len=0
  Inst 27595:   nop     len=0
  Inst 27596:   nop     len=0
  Inst 27597:   nop     len=0
  Inst 27598:   nop     len=0
  Inst 27599:   nop     len=0
  Inst 27600:   nop     len=0
  Inst 27601:   nop     len=0
  Inst 27602:   nop     len=0
  Inst 27603:   nop     len=0
  Inst 27604:   nop     len=0
  Inst 27605:   nop     len=0
  Inst 27606:   nop     len=0
  Inst 27607:   nop     len=0
  Inst 27608:   nop     len=0
  Inst 27609:   nop     len=0
  Inst 27610:   nop     len=0
  Inst 27611:   nop     len=0
  Inst 27612:   nop     len=0
  Inst 27613:   nop     len=0
  Inst 27614:   nop     len=0
  Inst 27615:   nop     len=0
  Inst 27616:   nop     len=0
  Inst 27617:   nop     len=0
  Inst 27618:   nop     len=0
  Inst 27619:   nop     len=0
  Inst 27620:   nop     len=0
  Inst 27621:   nop     len=0
  Inst 27622:   nop     len=0
  Inst 27623:   nop     len=0
  Inst 27624:   nop     len=0
  Inst 27625:   nop     len=0
  Inst 27626:   nop     len=0
  Inst 27627:   nop     len=0
  Inst 27628:   nop     len=0
  Inst 27629:   nop     len=0
  Inst 27630:   nop     len=0
  Inst 27631:   nop     len=0
  Inst 27632:   nop     len=0
  Inst 27633:   nop     len=0
  Inst 27634:   nop     len=0
  Inst 27635:   nop     len=0
  Inst 27636:   nop     len=0
  Inst 27637:   nop     len=0
  Inst 27638:   nop     len=0
  Inst 27639:   nop     len=0
  Inst 27640:   nop     len=0
  Inst 27641:   nop     len=0
  Inst 27642:   nop     len=0
  Inst 27643:   nop     len=0
  Inst 27644:   nop     len=0
  Inst 27645:   nop     len=0
  Inst 27646:   nop     len=0
  Inst 27647:   nop     len=0
  Inst 27648:   nop     len=0
  Inst 27649:   nop     len=0
  Inst 27650:   nop     len=0
  Inst 27651:   nop     len=0
  Inst 27652:   nop     len=0
  Inst 27653:   nop     len=0
  Inst 27654:   nop     len=0
  Inst 27655:   nop     len=0
  Inst 27656:   nop     len=0
  Inst 27657:   nop     len=0
  Inst 27658:   nop     len=0
  Inst 27659:   jmp     label784
Block 784:
  (original IR block: block392)
  (successor: Block 785)
  (successor: Block 786)
  (instruction range: 27660 .. 27671)
  Inst 27660:   movq    rsp(2064 + virtual offset), %rsi
  Inst 27661:   movq    8(%rsi), %rdi
  Inst 27662:   movq    rsp(2048 + virtual offset), %rsi
  Inst 27663:   load_ext_name u0:2+0, %rax
  Inst 27664:   movq    %rsi, rsp(1328 + virtual offset)
  Inst 27665:   movq    %rdi, rsp(1344 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27666:   call    *%rax
  Inst 27667:   movq    %rax, %rbx
  Inst 27668:   movq    %rdx, %r14
  Inst 27669:   testq   %r14, %r14
  Inst 27670:   jz      label785; j label786
Block 785:
  (successor: Block 788)
  (instruction range: 27671 .. 27771)
  Inst 27671:   movq    %rbx, rsp(1968 + virtual offset)
  Inst 27672:   nop     len=0
  Inst 27673:   nop     len=0
  Inst 27674:   nop     len=0
  Inst 27675:   nop     len=0
  Inst 27676:   nop     len=0
  Inst 27677:   nop     len=0
  Inst 27678:   nop     len=0
  Inst 27679:   nop     len=0
  Inst 27680:   nop     len=0
  Inst 27681:   nop     len=0
  Inst 27682:   nop     len=0
  Inst 27683:   nop     len=0
  Inst 27684:   nop     len=0
  Inst 27685:   nop     len=0
  Inst 27686:   nop     len=0
  Inst 27687:   nop     len=0
  Inst 27688:   nop     len=0
  Inst 27689:   nop     len=0
  Inst 27690:   nop     len=0
  Inst 27691:   nop     len=0
  Inst 27692:   nop     len=0
  Inst 27693:   nop     len=0
  Inst 27694:   nop     len=0
  Inst 27695:   nop     len=0
  Inst 27696:   nop     len=0
  Inst 27697:   nop     len=0
  Inst 27698:   nop     len=0
  Inst 27699:   nop     len=0
  Inst 27700:   nop     len=0
  Inst 27701:   nop     len=0
  Inst 27702:   nop     len=0
  Inst 27703:   nop     len=0
  Inst 27704:   nop     len=0
  Inst 27705:   nop     len=0
  Inst 27706:   nop     len=0
  Inst 27707:   nop     len=0
  Inst 27708:   nop     len=0
  Inst 27709:   nop     len=0
  Inst 27710:   nop     len=0
  Inst 27711:   nop     len=0
  Inst 27712:   nop     len=0
  Inst 27713:   nop     len=0
  Inst 27714:   nop     len=0
  Inst 27715:   nop     len=0
  Inst 27716:   nop     len=0
  Inst 27717:   nop     len=0
  Inst 27718:   nop     len=0
  Inst 27719:   nop     len=0
  Inst 27720:   nop     len=0
  Inst 27721:   nop     len=0
  Inst 27722:   nop     len=0
  Inst 27723:   nop     len=0
  Inst 27724:   nop     len=0
  Inst 27725:   nop     len=0
  Inst 27726:   nop     len=0
  Inst 27727:   nop     len=0
  Inst 27728:   nop     len=0
  Inst 27729:   nop     len=0
  Inst 27730:   nop     len=0
  Inst 27731:   nop     len=0
  Inst 27732:   nop     len=0
  Inst 27733:   nop     len=0
  Inst 27734:   nop     len=0
  Inst 27735:   nop     len=0
  Inst 27736:   nop     len=0
  Inst 27737:   nop     len=0
  Inst 27738:   nop     len=0
  Inst 27739:   nop     len=0
  Inst 27740:   nop     len=0
  Inst 27741:   nop     len=0
  Inst 27742:   nop     len=0
  Inst 27743:   nop     len=0
  Inst 27744:   nop     len=0
  Inst 27745:   nop     len=0
  Inst 27746:   nop     len=0
  Inst 27747:   nop     len=0
  Inst 27748:   nop     len=0
  Inst 27749:   nop     len=0
  Inst 27750:   nop     len=0
  Inst 27751:   nop     len=0
  Inst 27752:   nop     len=0
  Inst 27753:   nop     len=0
  Inst 27754:   nop     len=0
  Inst 27755:   nop     len=0
  Inst 27756:   nop     len=0
  Inst 27757:   nop     len=0
  Inst 27758:   nop     len=0
  Inst 27759:   nop     len=0
  Inst 27760:   nop     len=0
  Inst 27761:   nop     len=0
  Inst 27762:   nop     len=0
  Inst 27763:   nop     len=0
  Inst 27764:   nop     len=0
  Inst 27765:   nop     len=0
  Inst 27766:   nop     len=0
  Inst 27767:   nop     len=0
  Inst 27768:   nop     len=0
  Inst 27769:   nop     len=0
  Inst 27770:   jmp     label788
Block 786:
  (original IR block: block395)
  (successor: Block 787)
  (instruction range: 27771 .. 27800)
  Inst 27771:   movq    rsp(2072 + virtual offset), %rsi
  Inst 27772:   movq    152(%rsi), %r13
  Inst 27773:   movq    %r14, %r15
  Inst 27774:   addq    $-1, %r15
  Inst 27775:   movq    %r14, %rdx
  Inst 27776:   shlq    $3, %rdx
  Inst 27777:   movq    %r13, %r12
  Inst 27778:   addq    %rdx, %r12
  Inst 27779:   movq    %r13, %rdi
  Inst 27780:   addq    $-24, %rdi
  Inst 27781:   movq    %r13, %rsi
  Inst 27782:   load_ext_name %Memmove+0, %rax
  Inst 27783:   movq    %rbx, rsp(1328 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27784:   call    *%rax
  Inst 27785:   movq    rsp(1328 + virtual offset), %rbx
  Inst 27786:   load_ext_name u1:1+0, %rsi
  Inst 27787:   movl    $1, %edi
  Inst 27788:   movq    %rdi, -8(%r13,%r14,8)
  Inst 27789:   movl    $1, %edi
  Inst 27790:   movq    %rdi, -16(%r13,%r14,8)
  Inst 27791:   movq    %rsi, -24(%r13,%r14,8)
  Inst 27792:   movq    rsp(2072 + virtual offset), %rsi
  Inst 27793:   movq    %r12, 152(%rsi)
  Inst 27794:   movq    %rbx, %rdi
  Inst 27795:   movq    %r15, %rsi
  Inst 27796:   load_ext_name u0:3+0, %rax
  Inst 27797:   movq    %rdi, rsp(1328 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27798:   call    *%rax
  Inst 27799:   jmp     label787
Block 787:
  (successor: Block 788)
  (instruction range: 27800 .. 27900)
  Inst 27800:   movq    %rax, rsp(1968 + virtual offset)
  Inst 27801:   nop     len=0
  Inst 27802:   nop     len=0
  Inst 27803:   nop     len=0
  Inst 27804:   nop     len=0
  Inst 27805:   nop     len=0
  Inst 27806:   nop     len=0
  Inst 27807:   nop     len=0
  Inst 27808:   nop     len=0
  Inst 27809:   nop     len=0
  Inst 27810:   nop     len=0
  Inst 27811:   nop     len=0
  Inst 27812:   nop     len=0
  Inst 27813:   nop     len=0
  Inst 27814:   nop     len=0
  Inst 27815:   nop     len=0
  Inst 27816:   nop     len=0
  Inst 27817:   nop     len=0
  Inst 27818:   nop     len=0
  Inst 27819:   nop     len=0
  Inst 27820:   nop     len=0
  Inst 27821:   nop     len=0
  Inst 27822:   nop     len=0
  Inst 27823:   nop     len=0
  Inst 27824:   nop     len=0
  Inst 27825:   nop     len=0
  Inst 27826:   nop     len=0
  Inst 27827:   nop     len=0
  Inst 27828:   nop     len=0
  Inst 27829:   nop     len=0
  Inst 27830:   nop     len=0
  Inst 27831:   nop     len=0
  Inst 27832:   nop     len=0
  Inst 27833:   nop     len=0
  Inst 27834:   nop     len=0
  Inst 27835:   nop     len=0
  Inst 27836:   nop     len=0
  Inst 27837:   nop     len=0
  Inst 27838:   nop     len=0
  Inst 27839:   nop     len=0
  Inst 27840:   nop     len=0
  Inst 27841:   nop     len=0
  Inst 27842:   nop     len=0
  Inst 27843:   nop     len=0
  Inst 27844:   nop     len=0
  Inst 27845:   nop     len=0
  Inst 27846:   nop     len=0
  Inst 27847:   nop     len=0
  Inst 27848:   nop     len=0
  Inst 27849:   nop     len=0
  Inst 27850:   nop     len=0
  Inst 27851:   nop     len=0
  Inst 27852:   nop     len=0
  Inst 27853:   nop     len=0
  Inst 27854:   nop     len=0
  Inst 27855:   nop     len=0
  Inst 27856:   nop     len=0
  Inst 27857:   nop     len=0
  Inst 27858:   nop     len=0
  Inst 27859:   nop     len=0
  Inst 27860:   nop     len=0
  Inst 27861:   nop     len=0
  Inst 27862:   nop     len=0
  Inst 27863:   nop     len=0
  Inst 27864:   nop     len=0
  Inst 27865:   nop     len=0
  Inst 27866:   nop     len=0
  Inst 27867:   nop     len=0
  Inst 27868:   nop     len=0
  Inst 27869:   nop     len=0
  Inst 27870:   nop     len=0
  Inst 27871:   nop     len=0
  Inst 27872:   nop     len=0
  Inst 27873:   nop     len=0
  Inst 27874:   nop     len=0
  Inst 27875:   nop     len=0
  Inst 27876:   nop     len=0
  Inst 27877:   nop     len=0
  Inst 27878:   nop     len=0
  Inst 27879:   nop     len=0
  Inst 27880:   nop     len=0
  Inst 27881:   nop     len=0
  Inst 27882:   nop     len=0
  Inst 27883:   nop     len=0
  Inst 27884:   nop     len=0
  Inst 27885:   nop     len=0
  Inst 27886:   nop     len=0
  Inst 27887:   nop     len=0
  Inst 27888:   nop     len=0
  Inst 27889:   nop     len=0
  Inst 27890:   nop     len=0
  Inst 27891:   nop     len=0
  Inst 27892:   nop     len=0
  Inst 27893:   nop     len=0
  Inst 27894:   nop     len=0
  Inst 27895:   nop     len=0
  Inst 27896:   nop     len=0
  Inst 27897:   nop     len=0
  Inst 27898:   nop     len=0
  Inst 27899:   jmp     label788
Block 788:
  (original IR block: block394)
  (successor: Block 789)
  (successor: Block 790)
  (instruction range: 27900 .. 27911)
  Inst 27900:   movq    rsp(2064 + virtual offset), %rsi
  Inst 27901:   movq    8(%rsi), %rdi
  Inst 27902:   movq    rsp(2048 + virtual offset), %rsi
  Inst 27903:   load_ext_name u0:2+0, %rax
  Inst 27904:   movq    %rsi, rsp(1328 + virtual offset)
  Inst 27905:   movq    %rdi, rsp(1344 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 27906:   call    *%rax
  Inst 27907:   movq    %rax, %r15
  Inst 27908:   movq    %rdx, %r14
  Inst 27909:   testq   %r14, %r14
  Inst 27910:   jz      label789; j label790
Block 789:
  (successor: Block 792)
  (instruction range: 27911 .. 28011)
  Inst 27911:   movq    %r15, rsp(1328 + virtual offset)
  Inst 27912:   nop     len=0
  Inst 27913:   nop     len=0
  Inst 27914:   nop     len=0
  Inst 27915:   nop     len=0
  Inst 27916:   nop     len=0
  Inst 27917:   nop     len=0
  Inst 27918:   nop     len=0
  Inst 27919:   nop     len=0
  Inst 27920:   nop     len=0
  Inst 27921:   nop     len=0
  Inst 27922:   nop     len=0
  Inst 27923:   nop     len=0
  Inst 27924:   nop     len=0
  Inst 27925:   nop     len=0
  Inst 27926:   nop     len=0
  Inst 27927:   nop     len=0
  Inst 27928:   nop     len=0
  Inst 27929:   nop     len=0
  Inst 27930:   nop     len=0
  Inst 27931:   nop     len=0
  Inst 27932:   nop     len=0
  Inst 27933:   nop     len=0
  Inst 27934:   nop     len=0
  Inst 27935:   nop     len=0
  Inst 27936:   nop     len=0
  Inst 27937:   nop     len=0
  Inst 27938:   nop     len=0
  Inst 27939:   nop     len=0
  Inst 27940:   nop     len=0
  Inst 27941:   nop     len=0
  Inst 27942:   nop     len=0
  Inst 27943:   nop     len=0
  Inst 27944:   nop     len=0
  Inst 27945:   nop     len=0
  Inst 27946:   nop     len=0
  Inst 27947:   nop     len=0
  Inst 27948:   nop     len=0
  Inst 27949:   nop     len=0
  Inst 27950:   nop     len=0
  Inst 27951:   nop     len=0
  Inst 27952:   nop     len=0
  Inst 27953:   nop     len=0
  Inst 27954:   nop     len=0
  Inst 27955:   nop     len=0
  Inst 27956:   nop     len=0
  Inst 27957:   nop     len=0
  Inst 27958:   nop     len=0
  Inst 27959:   nop     len=0
  Inst 27960:   nop     len=0
  Inst 27961:   nop     len=0
  Inst 27962:   nop     len=0
  Inst 27963:   nop     len=0
  Inst 27964:   nop     len=0
  Inst 27965:   nop     len=0
  Inst 27966:   nop     len=0
  Inst 27967:   nop     len=0
  Inst 27968:   nop     len=0
  Inst 27969:   nop     len=0
  Inst 27970:   nop     len=0
  Inst 27971:   nop     len=0
  Inst 27972:   nop     len=0
  Inst 27973:   nop     len=0
  Inst 27974:   nop     len=0
  Inst 27975:   nop     len=0
  Inst 27976:   nop     len=0
  Inst 27977:   nop     len=0
  Inst 27978:   nop     len=0
  Inst 27979:   nop     len=0
  Inst 27980:   nop     len=0
  Inst 27981:   nop     len=0
  Inst 27982:   nop     len=0
  Inst 27983:   nop     len=0
  Inst 27984:   nop     len=0
  Inst 27985:   nop     len=0
  Inst 27986:   nop     len=0
  Inst 27987:   nop     len=0
  Inst 27988:   nop     len=0
  Inst 27989:   nop     len=0
  Inst 27990:   nop     len=0
  Inst 27991:   nop     len=0
  Inst 27992:   nop     len=0
  Inst 27993:   nop     len=0
  Inst 27994:   nop     len=0
  Inst 27995:   nop     len=0
  Inst 27996:   nop     len=0
  Inst 27997:   nop     len=0
  Inst 27998:   nop     len=0
  Inst 27999:   nop     len=0
  Inst 28000:   nop     len=0
  Inst 28001:   nop     len=0
  Inst 28002:   nop     len=0
  Inst 28003:   nop     len=0
  Inst 28004:   nop     len=0
  Inst 28005:   nop     len=0
  Inst 28006:   nop     len=0
  Inst 28007:   nop     len=0
  Inst 28008:   nop     len=0
  Inst 28009:   nop     len=0
  Inst 28010:   jmp     label792
Block 790:
  (original IR block: block397)
  (successor: Block 791)
  (instruction range: 28011 .. 28040)
  Inst 28011:   movq    rsp(2072 + virtual offset), %rsi
  Inst 28012:   movq    152(%rsi), %r13
  Inst 28013:   movq    %r14, %rbx
  Inst 28014:   addq    $-1, %rbx
  Inst 28015:   movq    %r14, %rdx
  Inst 28016:   shlq    $3, %rdx
  Inst 28017:   movq    %r13, %r12
  Inst 28018:   addq    %rdx, %r12
  Inst 28019:   movq    %r13, %rdi
  Inst 28020:   addq    $-24, %rdi
  Inst 28021:   movq    %r13, %rsi
  Inst 28022:   load_ext_name %Memmove+0, %rax
  Inst 28023:   movq    %r15, rsp(1344 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S167, S168, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28024:   call    *%rax
  Inst 28025:   movq    rsp(1344 + virtual offset), %r15
  Inst 28026:   load_ext_name u1:1+0, %rsi
  Inst 28027:   movl    $1, %edi
  Inst 28028:   movq    %rdi, -8(%r13,%r14,8)
  Inst 28029:   movl    $1, %edi
  Inst 28030:   movq    %rdi, -16(%r13,%r14,8)
  Inst 28031:   movq    %rsi, -24(%r13,%r14,8)
  Inst 28032:   movq    rsp(2072 + virtual offset), %rsi
  Inst 28033:   movq    %r12, 152(%rsi)
  Inst 28034:   movq    %r15, %rdi
  Inst 28035:   movq    %rbx, %rsi
  Inst 28036:   load_ext_name u0:3+0, %rax
  Inst 28037:   movq    %rdi, rsp(1328 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28038:   call    *%rax
  Inst 28039:   jmp     label791
Block 791:
  (successor: Block 792)
  (instruction range: 28040 .. 28140)
  Inst 28040:   movq    %rax, rsp(1328 + virtual offset)
  Inst 28041:   nop     len=0
  Inst 28042:   nop     len=0
  Inst 28043:   nop     len=0
  Inst 28044:   nop     len=0
  Inst 28045:   nop     len=0
  Inst 28046:   nop     len=0
  Inst 28047:   nop     len=0
  Inst 28048:   nop     len=0
  Inst 28049:   nop     len=0
  Inst 28050:   nop     len=0
  Inst 28051:   nop     len=0
  Inst 28052:   nop     len=0
  Inst 28053:   nop     len=0
  Inst 28054:   nop     len=0
  Inst 28055:   nop     len=0
  Inst 28056:   nop     len=0
  Inst 28057:   nop     len=0
  Inst 28058:   nop     len=0
  Inst 28059:   nop     len=0
  Inst 28060:   nop     len=0
  Inst 28061:   nop     len=0
  Inst 28062:   nop     len=0
  Inst 28063:   nop     len=0
  Inst 28064:   nop     len=0
  Inst 28065:   nop     len=0
  Inst 28066:   nop     len=0
  Inst 28067:   nop     len=0
  Inst 28068:   nop     len=0
  Inst 28069:   nop     len=0
  Inst 28070:   nop     len=0
  Inst 28071:   nop     len=0
  Inst 28072:   nop     len=0
  Inst 28073:   nop     len=0
  Inst 28074:   nop     len=0
  Inst 28075:   nop     len=0
  Inst 28076:   nop     len=0
  Inst 28077:   nop     len=0
  Inst 28078:   nop     len=0
  Inst 28079:   nop     len=0
  Inst 28080:   nop     len=0
  Inst 28081:   nop     len=0
  Inst 28082:   nop     len=0
  Inst 28083:   nop     len=0
  Inst 28084:   nop     len=0
  Inst 28085:   nop     len=0
  Inst 28086:   nop     len=0
  Inst 28087:   nop     len=0
  Inst 28088:   nop     len=0
  Inst 28089:   nop     len=0
  Inst 28090:   nop     len=0
  Inst 28091:   nop     len=0
  Inst 28092:   nop     len=0
  Inst 28093:   nop     len=0
  Inst 28094:   nop     len=0
  Inst 28095:   nop     len=0
  Inst 28096:   nop     len=0
  Inst 28097:   nop     len=0
  Inst 28098:   nop     len=0
  Inst 28099:   nop     len=0
  Inst 28100:   nop     len=0
  Inst 28101:   nop     len=0
  Inst 28102:   nop     len=0
  Inst 28103:   nop     len=0
  Inst 28104:   nop     len=0
  Inst 28105:   nop     len=0
  Inst 28106:   nop     len=0
  Inst 28107:   nop     len=0
  Inst 28108:   nop     len=0
  Inst 28109:   nop     len=0
  Inst 28110:   nop     len=0
  Inst 28111:   nop     len=0
  Inst 28112:   nop     len=0
  Inst 28113:   nop     len=0
  Inst 28114:   nop     len=0
  Inst 28115:   nop     len=0
  Inst 28116:   nop     len=0
  Inst 28117:   nop     len=0
  Inst 28118:   nop     len=0
  Inst 28119:   nop     len=0
  Inst 28120:   nop     len=0
  Inst 28121:   nop     len=0
  Inst 28122:   nop     len=0
  Inst 28123:   nop     len=0
  Inst 28124:   nop     len=0
  Inst 28125:   nop     len=0
  Inst 28126:   nop     len=0
  Inst 28127:   nop     len=0
  Inst 28128:   nop     len=0
  Inst 28129:   nop     len=0
  Inst 28130:   nop     len=0
  Inst 28131:   nop     len=0
  Inst 28132:   nop     len=0
  Inst 28133:   nop     len=0
  Inst 28134:   nop     len=0
  Inst 28135:   nop     len=0
  Inst 28136:   nop     len=0
  Inst 28137:   nop     len=0
  Inst 28138:   nop     len=0
  Inst 28139:   jmp     label792
Block 792:
  (original IR block: block396)
  (successor: Block 793)
  (successor: Block 794)
  (instruction range: 28140 .. 28151)
  Inst 28140:   movq    rsp(2064 + virtual offset), %rsi
  Inst 28141:   movq    8(%rsi), %rdi
  Inst 28142:   movq    rsp(2048 + virtual offset), %rsi
  Inst 28143:   load_ext_name u0:2+0, %rax
  Inst 28144:   movq    %rsi, rsp(1344 + virtual offset)
  Inst 28145:   movq    %rdi, rsp(1360 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28146:   call    *%rax
  Inst 28147:   movq    %rax, %rbx
  Inst 28148:   movq    %rdx, %r14
  Inst 28149:   testq   %r14, %r14
  Inst 28150:   jz      label793; j label794
Block 793:
  (successor: Block 796)
  (instruction range: 28151 .. 28252)
  Inst 28151:   movq    %rbx, rsp(1960 + virtual offset)
  Inst 28152:   nop     len=0
  Inst 28153:   nop     len=0
  Inst 28154:   nop     len=0
  Inst 28155:   nop     len=0
  Inst 28156:   nop     len=0
  Inst 28157:   nop     len=0
  Inst 28158:   nop     len=0
  Inst 28159:   nop     len=0
  Inst 28160:   nop     len=0
  Inst 28161:   nop     len=0
  Inst 28162:   nop     len=0
  Inst 28163:   nop     len=0
  Inst 28164:   nop     len=0
  Inst 28165:   nop     len=0
  Inst 28166:   nop     len=0
  Inst 28167:   nop     len=0
  Inst 28168:   nop     len=0
  Inst 28169:   nop     len=0
  Inst 28170:   nop     len=0
  Inst 28171:   nop     len=0
  Inst 28172:   nop     len=0
  Inst 28173:   nop     len=0
  Inst 28174:   nop     len=0
  Inst 28175:   nop     len=0
  Inst 28176:   nop     len=0
  Inst 28177:   nop     len=0
  Inst 28178:   nop     len=0
  Inst 28179:   nop     len=0
  Inst 28180:   nop     len=0
  Inst 28181:   nop     len=0
  Inst 28182:   nop     len=0
  Inst 28183:   nop     len=0
  Inst 28184:   nop     len=0
  Inst 28185:   nop     len=0
  Inst 28186:   nop     len=0
  Inst 28187:   nop     len=0
  Inst 28188:   nop     len=0
  Inst 28189:   nop     len=0
  Inst 28190:   nop     len=0
  Inst 28191:   nop     len=0
  Inst 28192:   nop     len=0
  Inst 28193:   nop     len=0
  Inst 28194:   nop     len=0
  Inst 28195:   nop     len=0
  Inst 28196:   nop     len=0
  Inst 28197:   nop     len=0
  Inst 28198:   nop     len=0
  Inst 28199:   nop     len=0
  Inst 28200:   nop     len=0
  Inst 28201:   nop     len=0
  Inst 28202:   nop     len=0
  Inst 28203:   nop     len=0
  Inst 28204:   nop     len=0
  Inst 28205:   nop     len=0
  Inst 28206:   nop     len=0
  Inst 28207:   nop     len=0
  Inst 28208:   nop     len=0
  Inst 28209:   nop     len=0
  Inst 28210:   nop     len=0
  Inst 28211:   nop     len=0
  Inst 28212:   nop     len=0
  Inst 28213:   nop     len=0
  Inst 28214:   nop     len=0
  Inst 28215:   nop     len=0
  Inst 28216:   nop     len=0
  Inst 28217:   nop     len=0
  Inst 28218:   nop     len=0
  Inst 28219:   nop     len=0
  Inst 28220:   nop     len=0
  Inst 28221:   nop     len=0
  Inst 28222:   nop     len=0
  Inst 28223:   nop     len=0
  Inst 28224:   nop     len=0
  Inst 28225:   nop     len=0
  Inst 28226:   nop     len=0
  Inst 28227:   nop     len=0
  Inst 28228:   nop     len=0
  Inst 28229:   nop     len=0
  Inst 28230:   nop     len=0
  Inst 28231:   nop     len=0
  Inst 28232:   nop     len=0
  Inst 28233:   nop     len=0
  Inst 28234:   nop     len=0
  Inst 28235:   nop     len=0
  Inst 28236:   nop     len=0
  Inst 28237:   nop     len=0
  Inst 28238:   nop     len=0
  Inst 28239:   nop     len=0
  Inst 28240:   nop     len=0
  Inst 28241:   nop     len=0
  Inst 28242:   nop     len=0
  Inst 28243:   nop     len=0
  Inst 28244:   nop     len=0
  Inst 28245:   nop     len=0
  Inst 28246:   nop     len=0
  Inst 28247:   nop     len=0
  Inst 28248:   nop     len=0
  Inst 28249:   nop     len=0
  Inst 28250:   nop     len=0
  Inst 28251:   jmp     label796
Block 794:
  (original IR block: block399)
  (successor: Block 795)
  (instruction range: 28252 .. 28281)
  Inst 28252:   movq    rsp(2072 + virtual offset), %rsi
  Inst 28253:   movq    152(%rsi), %r13
  Inst 28254:   movq    %r14, %r15
  Inst 28255:   addq    $-1, %r15
  Inst 28256:   movq    %r14, %rdx
  Inst 28257:   shlq    $3, %rdx
  Inst 28258:   movq    %r13, %r12
  Inst 28259:   addq    %rdx, %r12
  Inst 28260:   movq    %r13, %rdi
  Inst 28261:   addq    $-24, %rdi
  Inst 28262:   movq    %r13, %rsi
  Inst 28263:   load_ext_name %Memmove+0, %rax
  Inst 28264:   movq    %rbx, rsp(1344 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28265:   call    *%rax
  Inst 28266:   movq    rsp(1344 + virtual offset), %rbx
  Inst 28267:   load_ext_name u1:1+0, %rsi
  Inst 28268:   movl    $1, %edi
  Inst 28269:   movq    %rdi, -8(%r13,%r14,8)
  Inst 28270:   movl    $1, %edi
  Inst 28271:   movq    %rdi, -16(%r13,%r14,8)
  Inst 28272:   movq    %rsi, -24(%r13,%r14,8)
  Inst 28273:   movq    rsp(2072 + virtual offset), %rsi
  Inst 28274:   movq    %r12, 152(%rsi)
  Inst 28275:   movq    %rbx, %rdi
  Inst 28276:   movq    %r15, %rsi
  Inst 28277:   load_ext_name u0:3+0, %rax
  Inst 28278:   movq    %rdi, rsp(1344 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28279:   call    *%rax
  Inst 28280:   jmp     label795
Block 795:
  (successor: Block 796)
  (instruction range: 28281 .. 28382)
  Inst 28281:   movq    %rax, rsp(1960 + virtual offset)
  Inst 28282:   nop     len=0
  Inst 28283:   nop     len=0
  Inst 28284:   nop     len=0
  Inst 28285:   nop     len=0
  Inst 28286:   nop     len=0
  Inst 28287:   nop     len=0
  Inst 28288:   nop     len=0
  Inst 28289:   nop     len=0
  Inst 28290:   nop     len=0
  Inst 28291:   nop     len=0
  Inst 28292:   nop     len=0
  Inst 28293:   nop     len=0
  Inst 28294:   nop     len=0
  Inst 28295:   nop     len=0
  Inst 28296:   nop     len=0
  Inst 28297:   nop     len=0
  Inst 28298:   nop     len=0
  Inst 28299:   nop     len=0
  Inst 28300:   nop     len=0
  Inst 28301:   nop     len=0
  Inst 28302:   nop     len=0
  Inst 28303:   nop     len=0
  Inst 28304:   nop     len=0
  Inst 28305:   nop     len=0
  Inst 28306:   nop     len=0
  Inst 28307:   nop     len=0
  Inst 28308:   nop     len=0
  Inst 28309:   nop     len=0
  Inst 28310:   nop     len=0
  Inst 28311:   nop     len=0
  Inst 28312:   nop     len=0
  Inst 28313:   nop     len=0
  Inst 28314:   nop     len=0
  Inst 28315:   nop     len=0
  Inst 28316:   nop     len=0
  Inst 28317:   nop     len=0
  Inst 28318:   nop     len=0
  Inst 28319:   nop     len=0
  Inst 28320:   nop     len=0
  Inst 28321:   nop     len=0
  Inst 28322:   nop     len=0
  Inst 28323:   nop     len=0
  Inst 28324:   nop     len=0
  Inst 28325:   nop     len=0
  Inst 28326:   nop     len=0
  Inst 28327:   nop     len=0
  Inst 28328:   nop     len=0
  Inst 28329:   nop     len=0
  Inst 28330:   nop     len=0
  Inst 28331:   nop     len=0
  Inst 28332:   nop     len=0
  Inst 28333:   nop     len=0
  Inst 28334:   nop     len=0
  Inst 28335:   nop     len=0
  Inst 28336:   nop     len=0
  Inst 28337:   nop     len=0
  Inst 28338:   nop     len=0
  Inst 28339:   nop     len=0
  Inst 28340:   nop     len=0
  Inst 28341:   nop     len=0
  Inst 28342:   nop     len=0
  Inst 28343:   nop     len=0
  Inst 28344:   nop     len=0
  Inst 28345:   nop     len=0
  Inst 28346:   nop     len=0
  Inst 28347:   nop     len=0
  Inst 28348:   nop     len=0
  Inst 28349:   nop     len=0
  Inst 28350:   nop     len=0
  Inst 28351:   nop     len=0
  Inst 28352:   nop     len=0
  Inst 28353:   nop     len=0
  Inst 28354:   nop     len=0
  Inst 28355:   nop     len=0
  Inst 28356:   nop     len=0
  Inst 28357:   nop     len=0
  Inst 28358:   nop     len=0
  Inst 28359:   nop     len=0
  Inst 28360:   nop     len=0
  Inst 28361:   nop     len=0
  Inst 28362:   nop     len=0
  Inst 28363:   nop     len=0
  Inst 28364:   nop     len=0
  Inst 28365:   nop     len=0
  Inst 28366:   nop     len=0
  Inst 28367:   nop     len=0
  Inst 28368:   nop     len=0
  Inst 28369:   nop     len=0
  Inst 28370:   nop     len=0
  Inst 28371:   nop     len=0
  Inst 28372:   nop     len=0
  Inst 28373:   nop     len=0
  Inst 28374:   nop     len=0
  Inst 28375:   nop     len=0
  Inst 28376:   nop     len=0
  Inst 28377:   nop     len=0
  Inst 28378:   nop     len=0
  Inst 28379:   nop     len=0
  Inst 28380:   nop     len=0
  Inst 28381:   jmp     label796
Block 796:
  (original IR block: block398)
  (successor: Block 797)
  (successor: Block 798)
  (instruction range: 28382 .. 28393)
  Inst 28382:   movq    rsp(2064 + virtual offset), %rsi
  Inst 28383:   movq    8(%rsi), %rdi
  Inst 28384:   movq    rsp(2048 + virtual offset), %rsi
  Inst 28385:   load_ext_name u0:2+0, %rax
  Inst 28386:   movq    %rsi, rsp(1344 + virtual offset)
  Inst 28387:   movq    %rdi, rsp(1360 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28388:   call    *%rax
  Inst 28389:   movq    %rax, %rbx
  Inst 28390:   movq    %rdx, %r14
  Inst 28391:   testq   %r14, %r14
  Inst 28392:   jz      label797; j label798
Block 797:
  (successor: Block 800)
  (instruction range: 28393 .. 28494)
  Inst 28393:   movq    %rbx, rsp(1344 + virtual offset)
  Inst 28394:   nop     len=0
  Inst 28395:   nop     len=0
  Inst 28396:   nop     len=0
  Inst 28397:   nop     len=0
  Inst 28398:   nop     len=0
  Inst 28399:   nop     len=0
  Inst 28400:   nop     len=0
  Inst 28401:   nop     len=0
  Inst 28402:   nop     len=0
  Inst 28403:   nop     len=0
  Inst 28404:   nop     len=0
  Inst 28405:   nop     len=0
  Inst 28406:   nop     len=0
  Inst 28407:   nop     len=0
  Inst 28408:   nop     len=0
  Inst 28409:   nop     len=0
  Inst 28410:   nop     len=0
  Inst 28411:   nop     len=0
  Inst 28412:   nop     len=0
  Inst 28413:   nop     len=0
  Inst 28414:   nop     len=0
  Inst 28415:   nop     len=0
  Inst 28416:   nop     len=0
  Inst 28417:   nop     len=0
  Inst 28418:   nop     len=0
  Inst 28419:   nop     len=0
  Inst 28420:   nop     len=0
  Inst 28421:   nop     len=0
  Inst 28422:   nop     len=0
  Inst 28423:   nop     len=0
  Inst 28424:   nop     len=0
  Inst 28425:   nop     len=0
  Inst 28426:   nop     len=0
  Inst 28427:   nop     len=0
  Inst 28428:   nop     len=0
  Inst 28429:   nop     len=0
  Inst 28430:   nop     len=0
  Inst 28431:   nop     len=0
  Inst 28432:   nop     len=0
  Inst 28433:   nop     len=0
  Inst 28434:   nop     len=0
  Inst 28435:   nop     len=0
  Inst 28436:   nop     len=0
  Inst 28437:   nop     len=0
  Inst 28438:   nop     len=0
  Inst 28439:   nop     len=0
  Inst 28440:   nop     len=0
  Inst 28441:   nop     len=0
  Inst 28442:   nop     len=0
  Inst 28443:   nop     len=0
  Inst 28444:   nop     len=0
  Inst 28445:   nop     len=0
  Inst 28446:   nop     len=0
  Inst 28447:   nop     len=0
  Inst 28448:   nop     len=0
  Inst 28449:   nop     len=0
  Inst 28450:   nop     len=0
  Inst 28451:   nop     len=0
  Inst 28452:   nop     len=0
  Inst 28453:   nop     len=0
  Inst 28454:   nop     len=0
  Inst 28455:   nop     len=0
  Inst 28456:   nop     len=0
  Inst 28457:   nop     len=0
  Inst 28458:   nop     len=0
  Inst 28459:   nop     len=0
  Inst 28460:   nop     len=0
  Inst 28461:   nop     len=0
  Inst 28462:   nop     len=0
  Inst 28463:   nop     len=0
  Inst 28464:   nop     len=0
  Inst 28465:   nop     len=0
  Inst 28466:   nop     len=0
  Inst 28467:   nop     len=0
  Inst 28468:   nop     len=0
  Inst 28469:   nop     len=0
  Inst 28470:   nop     len=0
  Inst 28471:   nop     len=0
  Inst 28472:   nop     len=0
  Inst 28473:   nop     len=0
  Inst 28474:   nop     len=0
  Inst 28475:   nop     len=0
  Inst 28476:   nop     len=0
  Inst 28477:   nop     len=0
  Inst 28478:   nop     len=0
  Inst 28479:   nop     len=0
  Inst 28480:   nop     len=0
  Inst 28481:   nop     len=0
  Inst 28482:   nop     len=0
  Inst 28483:   nop     len=0
  Inst 28484:   nop     len=0
  Inst 28485:   nop     len=0
  Inst 28486:   nop     len=0
  Inst 28487:   nop     len=0
  Inst 28488:   nop     len=0
  Inst 28489:   nop     len=0
  Inst 28490:   nop     len=0
  Inst 28491:   nop     len=0
  Inst 28492:   nop     len=0
  Inst 28493:   jmp     label800
Block 798:
  (original IR block: block401)
  (successor: Block 799)
  (instruction range: 28494 .. 28523)
  Inst 28494:   movq    rsp(2072 + virtual offset), %rsi
  Inst 28495:   movq    152(%rsi), %r13
  Inst 28496:   movq    %r14, %r15
  Inst 28497:   addq    $-1, %r15
  Inst 28498:   movq    %r14, %rdx
  Inst 28499:   shlq    $3, %rdx
  Inst 28500:   movq    %r13, %r12
  Inst 28501:   addq    %rdx, %r12
  Inst 28502:   movq    %r13, %rdi
  Inst 28503:   addq    $-24, %rdi
  Inst 28504:   movq    %r13, %rsi
  Inst 28505:   load_ext_name %Memmove+0, %rax
  Inst 28506:   movq    %rbx, rsp(1360 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S169, S170, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28507:   call    *%rax
  Inst 28508:   movq    rsp(1360 + virtual offset), %rbx
  Inst 28509:   load_ext_name u1:1+0, %rsi
  Inst 28510:   movl    $1, %edi
  Inst 28511:   movq    %rdi, -8(%r13,%r14,8)
  Inst 28512:   movl    $1, %edi
  Inst 28513:   movq    %rdi, -16(%r13,%r14,8)
  Inst 28514:   movq    %rsi, -24(%r13,%r14,8)
  Inst 28515:   movq    rsp(2072 + virtual offset), %rsi
  Inst 28516:   movq    %r12, 152(%rsi)
  Inst 28517:   movq    %rbx, %rdi
  Inst 28518:   movq    %r15, %rsi
  Inst 28519:   load_ext_name u0:3+0, %rax
  Inst 28520:   movq    %rdi, rsp(1344 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28521:   call    *%rax
  Inst 28522:   jmp     label799
Block 799:
  (successor: Block 800)
  (instruction range: 28523 .. 28624)
  Inst 28523:   movq    %rax, rsp(1344 + virtual offset)
  Inst 28524:   nop     len=0
  Inst 28525:   nop     len=0
  Inst 28526:   nop     len=0
  Inst 28527:   nop     len=0
  Inst 28528:   nop     len=0
  Inst 28529:   nop     len=0
  Inst 28530:   nop     len=0
  Inst 28531:   nop     len=0
  Inst 28532:   nop     len=0
  Inst 28533:   nop     len=0
  Inst 28534:   nop     len=0
  Inst 28535:   nop     len=0
  Inst 28536:   nop     len=0
  Inst 28537:   nop     len=0
  Inst 28538:   nop     len=0
  Inst 28539:   nop     len=0
  Inst 28540:   nop     len=0
  Inst 28541:   nop     len=0
  Inst 28542:   nop     len=0
  Inst 28543:   nop     len=0
  Inst 28544:   nop     len=0
  Inst 28545:   nop     len=0
  Inst 28546:   nop     len=0
  Inst 28547:   nop     len=0
  Inst 28548:   nop     len=0
  Inst 28549:   nop     len=0
  Inst 28550:   nop     len=0
  Inst 28551:   nop     len=0
  Inst 28552:   nop     len=0
  Inst 28553:   nop     len=0
  Inst 28554:   nop     len=0
  Inst 28555:   nop     len=0
  Inst 28556:   nop     len=0
  Inst 28557:   nop     len=0
  Inst 28558:   nop     len=0
  Inst 28559:   nop     len=0
  Inst 28560:   nop     len=0
  Inst 28561:   nop     len=0
  Inst 28562:   nop     len=0
  Inst 28563:   nop     len=0
  Inst 28564:   nop     len=0
  Inst 28565:   nop     len=0
  Inst 28566:   nop     len=0
  Inst 28567:   nop     len=0
  Inst 28568:   nop     len=0
  Inst 28569:   nop     len=0
  Inst 28570:   nop     len=0
  Inst 28571:   nop     len=0
  Inst 28572:   nop     len=0
  Inst 28573:   nop     len=0
  Inst 28574:   nop     len=0
  Inst 28575:   nop     len=0
  Inst 28576:   nop     len=0
  Inst 28577:   nop     len=0
  Inst 28578:   nop     len=0
  Inst 28579:   nop     len=0
  Inst 28580:   nop     len=0
  Inst 28581:   nop     len=0
  Inst 28582:   nop     len=0
  Inst 28583:   nop     len=0
  Inst 28584:   nop     len=0
  Inst 28585:   nop     len=0
  Inst 28586:   nop     len=0
  Inst 28587:   nop     len=0
  Inst 28588:   nop     len=0
  Inst 28589:   nop     len=0
  Inst 28590:   nop     len=0
  Inst 28591:   nop     len=0
  Inst 28592:   nop     len=0
  Inst 28593:   nop     len=0
  Inst 28594:   nop     len=0
  Inst 28595:   nop     len=0
  Inst 28596:   nop     len=0
  Inst 28597:   nop     len=0
  Inst 28598:   nop     len=0
  Inst 28599:   nop     len=0
  Inst 28600:   nop     len=0
  Inst 28601:   nop     len=0
  Inst 28602:   nop     len=0
  Inst 28603:   nop     len=0
  Inst 28604:   nop     len=0
  Inst 28605:   nop     len=0
  Inst 28606:   nop     len=0
  Inst 28607:   nop     len=0
  Inst 28608:   nop     len=0
  Inst 28609:   nop     len=0
  Inst 28610:   nop     len=0
  Inst 28611:   nop     len=0
  Inst 28612:   nop     len=0
  Inst 28613:   nop     len=0
  Inst 28614:   nop     len=0
  Inst 28615:   nop     len=0
  Inst 28616:   nop     len=0
  Inst 28617:   nop     len=0
  Inst 28618:   nop     len=0
  Inst 28619:   nop     len=0
  Inst 28620:   nop     len=0
  Inst 28621:   nop     len=0
  Inst 28622:   nop     len=0
  Inst 28623:   jmp     label800
Block 800:
  (original IR block: block400)
  (successor: Block 801)
  (successor: Block 802)
  (instruction range: 28624 .. 28635)
  Inst 28624:   movq    rsp(2064 + virtual offset), %rsi
  Inst 28625:   movq    8(%rsi), %rdi
  Inst 28626:   movq    rsp(2048 + virtual offset), %rsi
  Inst 28627:   load_ext_name u0:2+0, %rax
  Inst 28628:   movq    %rsi, rsp(1360 + virtual offset)
  Inst 28629:   movq    %rdi, rsp(1376 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28630:   call    *%rax
  Inst 28631:   movq    %rax, %r15
  Inst 28632:   movq    %rdx, %r14
  Inst 28633:   testq   %r14, %r14
  Inst 28634:   jz      label801; j label802
Block 801:
  (successor: Block 804)
  (instruction range: 28635 .. 28737)
  Inst 28635:   movq    %r15, rsp(1952 + virtual offset)
  Inst 28636:   nop     len=0
  Inst 28637:   nop     len=0
  Inst 28638:   nop     len=0
  Inst 28639:   nop     len=0
  Inst 28640:   nop     len=0
  Inst 28641:   nop     len=0
  Inst 28642:   nop     len=0
  Inst 28643:   nop     len=0
  Inst 28644:   nop     len=0
  Inst 28645:   nop     len=0
  Inst 28646:   nop     len=0
  Inst 28647:   nop     len=0
  Inst 28648:   nop     len=0
  Inst 28649:   nop     len=0
  Inst 28650:   nop     len=0
  Inst 28651:   nop     len=0
  Inst 28652:   nop     len=0
  Inst 28653:   nop     len=0
  Inst 28654:   nop     len=0
  Inst 28655:   nop     len=0
  Inst 28656:   nop     len=0
  Inst 28657:   nop     len=0
  Inst 28658:   nop     len=0
  Inst 28659:   nop     len=0
  Inst 28660:   nop     len=0
  Inst 28661:   nop     len=0
  Inst 28662:   nop     len=0
  Inst 28663:   nop     len=0
  Inst 28664:   nop     len=0
  Inst 28665:   nop     len=0
  Inst 28666:   nop     len=0
  Inst 28667:   nop     len=0
  Inst 28668:   nop     len=0
  Inst 28669:   nop     len=0
  Inst 28670:   nop     len=0
  Inst 28671:   nop     len=0
  Inst 28672:   nop     len=0
  Inst 28673:   nop     len=0
  Inst 28674:   nop     len=0
  Inst 28675:   nop     len=0
  Inst 28676:   nop     len=0
  Inst 28677:   nop     len=0
  Inst 28678:   nop     len=0
  Inst 28679:   nop     len=0
  Inst 28680:   nop     len=0
  Inst 28681:   nop     len=0
  Inst 28682:   nop     len=0
  Inst 28683:   nop     len=0
  Inst 28684:   nop     len=0
  Inst 28685:   nop     len=0
  Inst 28686:   nop     len=0
  Inst 28687:   nop     len=0
  Inst 28688:   nop     len=0
  Inst 28689:   nop     len=0
  Inst 28690:   nop     len=0
  Inst 28691:   nop     len=0
  Inst 28692:   nop     len=0
  Inst 28693:   nop     len=0
  Inst 28694:   nop     len=0
  Inst 28695:   nop     len=0
  Inst 28696:   nop     len=0
  Inst 28697:   nop     len=0
  Inst 28698:   nop     len=0
  Inst 28699:   nop     len=0
  Inst 28700:   nop     len=0
  Inst 28701:   nop     len=0
  Inst 28702:   nop     len=0
  Inst 28703:   nop     len=0
  Inst 28704:   nop     len=0
  Inst 28705:   nop     len=0
  Inst 28706:   nop     len=0
  Inst 28707:   nop     len=0
  Inst 28708:   nop     len=0
  Inst 28709:   nop     len=0
  Inst 28710:   nop     len=0
  Inst 28711:   nop     len=0
  Inst 28712:   nop     len=0
  Inst 28713:   nop     len=0
  Inst 28714:   nop     len=0
  Inst 28715:   nop     len=0
  Inst 28716:   nop     len=0
  Inst 28717:   nop     len=0
  Inst 28718:   nop     len=0
  Inst 28719:   nop     len=0
  Inst 28720:   nop     len=0
  Inst 28721:   nop     len=0
  Inst 28722:   nop     len=0
  Inst 28723:   nop     len=0
  Inst 28724:   nop     len=0
  Inst 28725:   nop     len=0
  Inst 28726:   nop     len=0
  Inst 28727:   nop     len=0
  Inst 28728:   nop     len=0
  Inst 28729:   nop     len=0
  Inst 28730:   nop     len=0
  Inst 28731:   nop     len=0
  Inst 28732:   nop     len=0
  Inst 28733:   nop     len=0
  Inst 28734:   nop     len=0
  Inst 28735:   nop     len=0
  Inst 28736:   jmp     label804
Block 802:
  (original IR block: block403)
  (successor: Block 803)
  (instruction range: 28737 .. 28766)
  Inst 28737:   movq    rsp(2072 + virtual offset), %rsi
  Inst 28738:   movq    152(%rsi), %r13
  Inst 28739:   movq    %r14, %rbx
  Inst 28740:   addq    $-1, %rbx
  Inst 28741:   movq    %r14, %rdx
  Inst 28742:   shlq    $3, %rdx
  Inst 28743:   movq    %r13, %r12
  Inst 28744:   addq    %rdx, %r12
  Inst 28745:   movq    %r13, %rdi
  Inst 28746:   addq    $-24, %rdi
  Inst 28747:   movq    %r13, %rsi
  Inst 28748:   load_ext_name %Memmove+0, %rax
  Inst 28749:   movq    %r15, rsp(1360 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28750:   call    *%rax
  Inst 28751:   movq    rsp(1360 + virtual offset), %r15
  Inst 28752:   load_ext_name u1:1+0, %rsi
  Inst 28753:   movl    $1, %edi
  Inst 28754:   movq    %rdi, -8(%r13,%r14,8)
  Inst 28755:   movl    $1, %edi
  Inst 28756:   movq    %rdi, -16(%r13,%r14,8)
  Inst 28757:   movq    %rsi, -24(%r13,%r14,8)
  Inst 28758:   movq    rsp(2072 + virtual offset), %rsi
  Inst 28759:   movq    %r12, 152(%rsi)
  Inst 28760:   movq    %r15, %rdi
  Inst 28761:   movq    %rbx, %rsi
  Inst 28762:   load_ext_name u0:3+0, %rax
  Inst 28763:   movq    %rdi, rsp(1360 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28764:   call    *%rax
  Inst 28765:   jmp     label803
Block 803:
  (successor: Block 804)
  (instruction range: 28766 .. 28868)
  Inst 28766:   movq    %rax, rsp(1952 + virtual offset)
  Inst 28767:   nop     len=0
  Inst 28768:   nop     len=0
  Inst 28769:   nop     len=0
  Inst 28770:   nop     len=0
  Inst 28771:   nop     len=0
  Inst 28772:   nop     len=0
  Inst 28773:   nop     len=0
  Inst 28774:   nop     len=0
  Inst 28775:   nop     len=0
  Inst 28776:   nop     len=0
  Inst 28777:   nop     len=0
  Inst 28778:   nop     len=0
  Inst 28779:   nop     len=0
  Inst 28780:   nop     len=0
  Inst 28781:   nop     len=0
  Inst 28782:   nop     len=0
  Inst 28783:   nop     len=0
  Inst 28784:   nop     len=0
  Inst 28785:   nop     len=0
  Inst 28786:   nop     len=0
  Inst 28787:   nop     len=0
  Inst 28788:   nop     len=0
  Inst 28789:   nop     len=0
  Inst 28790:   nop     len=0
  Inst 28791:   nop     len=0
  Inst 28792:   nop     len=0
  Inst 28793:   nop     len=0
  Inst 28794:   nop     len=0
  Inst 28795:   nop     len=0
  Inst 28796:   nop     len=0
  Inst 28797:   nop     len=0
  Inst 28798:   nop     len=0
  Inst 28799:   nop     len=0
  Inst 28800:   nop     len=0
  Inst 28801:   nop     len=0
  Inst 28802:   nop     len=0
  Inst 28803:   nop     len=0
  Inst 28804:   nop     len=0
  Inst 28805:   nop     len=0
  Inst 28806:   nop     len=0
  Inst 28807:   nop     len=0
  Inst 28808:   nop     len=0
  Inst 28809:   nop     len=0
  Inst 28810:   nop     len=0
  Inst 28811:   nop     len=0
  Inst 28812:   nop     len=0
  Inst 28813:   nop     len=0
  Inst 28814:   nop     len=0
  Inst 28815:   nop     len=0
  Inst 28816:   nop     len=0
  Inst 28817:   nop     len=0
  Inst 28818:   nop     len=0
  Inst 28819:   nop     len=0
  Inst 28820:   nop     len=0
  Inst 28821:   nop     len=0
  Inst 28822:   nop     len=0
  Inst 28823:   nop     len=0
  Inst 28824:   nop     len=0
  Inst 28825:   nop     len=0
  Inst 28826:   nop     len=0
  Inst 28827:   nop     len=0
  Inst 28828:   nop     len=0
  Inst 28829:   nop     len=0
  Inst 28830:   nop     len=0
  Inst 28831:   nop     len=0
  Inst 28832:   nop     len=0
  Inst 28833:   nop     len=0
  Inst 28834:   nop     len=0
  Inst 28835:   nop     len=0
  Inst 28836:   nop     len=0
  Inst 28837:   nop     len=0
  Inst 28838:   nop     len=0
  Inst 28839:   nop     len=0
  Inst 28840:   nop     len=0
  Inst 28841:   nop     len=0
  Inst 28842:   nop     len=0
  Inst 28843:   nop     len=0
  Inst 28844:   nop     len=0
  Inst 28845:   nop     len=0
  Inst 28846:   nop     len=0
  Inst 28847:   nop     len=0
  Inst 28848:   nop     len=0
  Inst 28849:   nop     len=0
  Inst 28850:   nop     len=0
  Inst 28851:   nop     len=0
  Inst 28852:   nop     len=0
  Inst 28853:   nop     len=0
  Inst 28854:   nop     len=0
  Inst 28855:   nop     len=0
  Inst 28856:   nop     len=0
  Inst 28857:   nop     len=0
  Inst 28858:   nop     len=0
  Inst 28859:   nop     len=0
  Inst 28860:   nop     len=0
  Inst 28861:   nop     len=0
  Inst 28862:   nop     len=0
  Inst 28863:   nop     len=0
  Inst 28864:   nop     len=0
  Inst 28865:   nop     len=0
  Inst 28866:   nop     len=0
  Inst 28867:   jmp     label804
Block 804:
  (original IR block: block402)
  (successor: Block 805)
  (successor: Block 806)
  (instruction range: 28868 .. 28879)
  Inst 28868:   movq    rsp(2064 + virtual offset), %rsi
  Inst 28869:   movq    8(%rsi), %rdi
  Inst 28870:   movq    rsp(2048 + virtual offset), %rsi
  Inst 28871:   load_ext_name u0:2+0, %rax
  Inst 28872:   movq    %rsi, rsp(1360 + virtual offset)
  Inst 28873:   movq    %rdi, rsp(1376 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28874:   call    *%rax
  Inst 28875:   movq    %rax, %rbx
  Inst 28876:   movq    %rdx, %r14
  Inst 28877:   testq   %r14, %r14
  Inst 28878:   jz      label805; j label806
Block 805:
  (successor: Block 808)
  (instruction range: 28879 .. 28981)
  Inst 28879:   movq    %rbx, rsp(1360 + virtual offset)
  Inst 28880:   nop     len=0
  Inst 28881:   nop     len=0
  Inst 28882:   nop     len=0
  Inst 28883:   nop     len=0
  Inst 28884:   nop     len=0
  Inst 28885:   nop     len=0
  Inst 28886:   nop     len=0
  Inst 28887:   nop     len=0
  Inst 28888:   nop     len=0
  Inst 28889:   nop     len=0
  Inst 28890:   nop     len=0
  Inst 28891:   nop     len=0
  Inst 28892:   nop     len=0
  Inst 28893:   nop     len=0
  Inst 28894:   nop     len=0
  Inst 28895:   nop     len=0
  Inst 28896:   nop     len=0
  Inst 28897:   nop     len=0
  Inst 28898:   nop     len=0
  Inst 28899:   nop     len=0
  Inst 28900:   nop     len=0
  Inst 28901:   nop     len=0
  Inst 28902:   nop     len=0
  Inst 28903:   nop     len=0
  Inst 28904:   nop     len=0
  Inst 28905:   nop     len=0
  Inst 28906:   nop     len=0
  Inst 28907:   nop     len=0
  Inst 28908:   nop     len=0
  Inst 28909:   nop     len=0
  Inst 28910:   nop     len=0
  Inst 28911:   nop     len=0
  Inst 28912:   nop     len=0
  Inst 28913:   nop     len=0
  Inst 28914:   nop     len=0
  Inst 28915:   nop     len=0
  Inst 28916:   nop     len=0
  Inst 28917:   nop     len=0
  Inst 28918:   nop     len=0
  Inst 28919:   nop     len=0
  Inst 28920:   nop     len=0
  Inst 28921:   nop     len=0
  Inst 28922:   nop     len=0
  Inst 28923:   nop     len=0
  Inst 28924:   nop     len=0
  Inst 28925:   nop     len=0
  Inst 28926:   nop     len=0
  Inst 28927:   nop     len=0
  Inst 28928:   nop     len=0
  Inst 28929:   nop     len=0
  Inst 28930:   nop     len=0
  Inst 28931:   nop     len=0
  Inst 28932:   nop     len=0
  Inst 28933:   nop     len=0
  Inst 28934:   nop     len=0
  Inst 28935:   nop     len=0
  Inst 28936:   nop     len=0
  Inst 28937:   nop     len=0
  Inst 28938:   nop     len=0
  Inst 28939:   nop     len=0
  Inst 28940:   nop     len=0
  Inst 28941:   nop     len=0
  Inst 28942:   nop     len=0
  Inst 28943:   nop     len=0
  Inst 28944:   nop     len=0
  Inst 28945:   nop     len=0
  Inst 28946:   nop     len=0
  Inst 28947:   nop     len=0
  Inst 28948:   nop     len=0
  Inst 28949:   nop     len=0
  Inst 28950:   nop     len=0
  Inst 28951:   nop     len=0
  Inst 28952:   nop     len=0
  Inst 28953:   nop     len=0
  Inst 28954:   nop     len=0
  Inst 28955:   nop     len=0
  Inst 28956:   nop     len=0
  Inst 28957:   nop     len=0
  Inst 28958:   nop     len=0
  Inst 28959:   nop     len=0
  Inst 28960:   nop     len=0
  Inst 28961:   nop     len=0
  Inst 28962:   nop     len=0
  Inst 28963:   nop     len=0
  Inst 28964:   nop     len=0
  Inst 28965:   nop     len=0
  Inst 28966:   nop     len=0
  Inst 28967:   nop     len=0
  Inst 28968:   nop     len=0
  Inst 28969:   nop     len=0
  Inst 28970:   nop     len=0
  Inst 28971:   nop     len=0
  Inst 28972:   nop     len=0
  Inst 28973:   nop     len=0
  Inst 28974:   nop     len=0
  Inst 28975:   nop     len=0
  Inst 28976:   nop     len=0
  Inst 28977:   nop     len=0
  Inst 28978:   nop     len=0
  Inst 28979:   nop     len=0
  Inst 28980:   jmp     label808
Block 806:
  (original IR block: block405)
  (successor: Block 807)
  (instruction range: 28981 .. 29010)
  Inst 28981:   movq    rsp(2072 + virtual offset), %rsi
  Inst 28982:   movq    152(%rsi), %r13
  Inst 28983:   movq    %r14, %r15
  Inst 28984:   addq    $-1, %r15
  Inst 28985:   movq    %r14, %rdx
  Inst 28986:   shlq    $3, %rdx
  Inst 28987:   movq    %r13, %r12
  Inst 28988:   addq    %rdx, %r12
  Inst 28989:   movq    %r13, %rdi
  Inst 28990:   addq    $-24, %rdi
  Inst 28991:   movq    %r13, %rsi
  Inst 28992:   load_ext_name %Memmove+0, %rax
  Inst 28993:   movq    %rbx, rsp(1376 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S171, S172, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 28994:   call    *%rax
  Inst 28995:   movq    rsp(1376 + virtual offset), %rbx
  Inst 28996:   load_ext_name u1:1+0, %rsi
  Inst 28997:   movl    $1, %edi
  Inst 28998:   movq    %rdi, -8(%r13,%r14,8)
  Inst 28999:   movl    $1, %edi
  Inst 29000:   movq    %rdi, -16(%r13,%r14,8)
  Inst 29001:   movq    %rsi, -24(%r13,%r14,8)
  Inst 29002:   movq    rsp(2072 + virtual offset), %rsi
  Inst 29003:   movq    %r12, 152(%rsi)
  Inst 29004:   movq    %rbx, %rdi
  Inst 29005:   movq    %r15, %rsi
  Inst 29006:   load_ext_name u0:3+0, %rax
  Inst 29007:   movq    %rdi, rsp(1360 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29008:   call    *%rax
  Inst 29009:   jmp     label807
Block 807:
  (successor: Block 808)
  (instruction range: 29010 .. 29112)
  Inst 29010:   movq    %rax, rsp(1360 + virtual offset)
  Inst 29011:   nop     len=0
  Inst 29012:   nop     len=0
  Inst 29013:   nop     len=0
  Inst 29014:   nop     len=0
  Inst 29015:   nop     len=0
  Inst 29016:   nop     len=0
  Inst 29017:   nop     len=0
  Inst 29018:   nop     len=0
  Inst 29019:   nop     len=0
  Inst 29020:   nop     len=0
  Inst 29021:   nop     len=0
  Inst 29022:   nop     len=0
  Inst 29023:   nop     len=0
  Inst 29024:   nop     len=0
  Inst 29025:   nop     len=0
  Inst 29026:   nop     len=0
  Inst 29027:   nop     len=0
  Inst 29028:   nop     len=0
  Inst 29029:   nop     len=0
  Inst 29030:   nop     len=0
  Inst 29031:   nop     len=0
  Inst 29032:   nop     len=0
  Inst 29033:   nop     len=0
  Inst 29034:   nop     len=0
  Inst 29035:   nop     len=0
  Inst 29036:   nop     len=0
  Inst 29037:   nop     len=0
  Inst 29038:   nop     len=0
  Inst 29039:   nop     len=0
  Inst 29040:   nop     len=0
  Inst 29041:   nop     len=0
  Inst 29042:   nop     len=0
  Inst 29043:   nop     len=0
  Inst 29044:   nop     len=0
  Inst 29045:   nop     len=0
  Inst 29046:   nop     len=0
  Inst 29047:   nop     len=0
  Inst 29048:   nop     len=0
  Inst 29049:   nop     len=0
  Inst 29050:   nop     len=0
  Inst 29051:   nop     len=0
  Inst 29052:   nop     len=0
  Inst 29053:   nop     len=0
  Inst 29054:   nop     len=0
  Inst 29055:   nop     len=0
  Inst 29056:   nop     len=0
  Inst 29057:   nop     len=0
  Inst 29058:   nop     len=0
  Inst 29059:   nop     len=0
  Inst 29060:   nop     len=0
  Inst 29061:   nop     len=0
  Inst 29062:   nop     len=0
  Inst 29063:   nop     len=0
  Inst 29064:   nop     len=0
  Inst 29065:   nop     len=0
  Inst 29066:   nop     len=0
  Inst 29067:   nop     len=0
  Inst 29068:   nop     len=0
  Inst 29069:   nop     len=0
  Inst 29070:   nop     len=0
  Inst 29071:   nop     len=0
  Inst 29072:   nop     len=0
  Inst 29073:   nop     len=0
  Inst 29074:   nop     len=0
  Inst 29075:   nop     len=0
  Inst 29076:   nop     len=0
  Inst 29077:   nop     len=0
  Inst 29078:   nop     len=0
  Inst 29079:   nop     len=0
  Inst 29080:   nop     len=0
  Inst 29081:   nop     len=0
  Inst 29082:   nop     len=0
  Inst 29083:   nop     len=0
  Inst 29084:   nop     len=0
  Inst 29085:   nop     len=0
  Inst 29086:   nop     len=0
  Inst 29087:   nop     len=0
  Inst 29088:   nop     len=0
  Inst 29089:   nop     len=0
  Inst 29090:   nop     len=0
  Inst 29091:   nop     len=0
  Inst 29092:   nop     len=0
  Inst 29093:   nop     len=0
  Inst 29094:   nop     len=0
  Inst 29095:   nop     len=0
  Inst 29096:   nop     len=0
  Inst 29097:   nop     len=0
  Inst 29098:   nop     len=0
  Inst 29099:   nop     len=0
  Inst 29100:   nop     len=0
  Inst 29101:   nop     len=0
  Inst 29102:   nop     len=0
  Inst 29103:   nop     len=0
  Inst 29104:   nop     len=0
  Inst 29105:   nop     len=0
  Inst 29106:   nop     len=0
  Inst 29107:   nop     len=0
  Inst 29108:   nop     len=0
  Inst 29109:   nop     len=0
  Inst 29110:   nop     len=0
  Inst 29111:   jmp     label808
Block 808:
  (original IR block: block404)
  (successor: Block 809)
  (successor: Block 810)
  (instruction range: 29112 .. 29123)
  Inst 29112:   movq    rsp(2064 + virtual offset), %rsi
  Inst 29113:   movq    8(%rsi), %rdi
  Inst 29114:   movq    rsp(2048 + virtual offset), %rsi
  Inst 29115:   load_ext_name u0:2+0, %rax
  Inst 29116:   movq    %rsi, rsp(1376 + virtual offset)
  Inst 29117:   movq    %rdi, rsp(1392 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29118:   call    *%rax
  Inst 29119:   movq    %rax, %rbx
  Inst 29120:   movq    %rdx, %r14
  Inst 29121:   testq   %r14, %r14
  Inst 29122:   jz      label809; j label810
Block 809:
  (successor: Block 812)
  (instruction range: 29123 .. 29226)
  Inst 29123:   movq    %rbx, rsp(1944 + virtual offset)
  Inst 29124:   nop     len=0
  Inst 29125:   nop     len=0
  Inst 29126:   nop     len=0
  Inst 29127:   nop     len=0
  Inst 29128:   nop     len=0
  Inst 29129:   nop     len=0
  Inst 29130:   nop     len=0
  Inst 29131:   nop     len=0
  Inst 29132:   nop     len=0
  Inst 29133:   nop     len=0
  Inst 29134:   nop     len=0
  Inst 29135:   nop     len=0
  Inst 29136:   nop     len=0
  Inst 29137:   nop     len=0
  Inst 29138:   nop     len=0
  Inst 29139:   nop     len=0
  Inst 29140:   nop     len=0
  Inst 29141:   nop     len=0
  Inst 29142:   nop     len=0
  Inst 29143:   nop     len=0
  Inst 29144:   nop     len=0
  Inst 29145:   nop     len=0
  Inst 29146:   nop     len=0
  Inst 29147:   nop     len=0
  Inst 29148:   nop     len=0
  Inst 29149:   nop     len=0
  Inst 29150:   nop     len=0
  Inst 29151:   nop     len=0
  Inst 29152:   nop     len=0
  Inst 29153:   nop     len=0
  Inst 29154:   nop     len=0
  Inst 29155:   nop     len=0
  Inst 29156:   nop     len=0
  Inst 29157:   nop     len=0
  Inst 29158:   nop     len=0
  Inst 29159:   nop     len=0
  Inst 29160:   nop     len=0
  Inst 29161:   nop     len=0
  Inst 29162:   nop     len=0
  Inst 29163:   nop     len=0
  Inst 29164:   nop     len=0
  Inst 29165:   nop     len=0
  Inst 29166:   nop     len=0
  Inst 29167:   nop     len=0
  Inst 29168:   nop     len=0
  Inst 29169:   nop     len=0
  Inst 29170:   nop     len=0
  Inst 29171:   nop     len=0
  Inst 29172:   nop     len=0
  Inst 29173:   nop     len=0
  Inst 29174:   nop     len=0
  Inst 29175:   nop     len=0
  Inst 29176:   nop     len=0
  Inst 29177:   nop     len=0
  Inst 29178:   nop     len=0
  Inst 29179:   nop     len=0
  Inst 29180:   nop     len=0
  Inst 29181:   nop     len=0
  Inst 29182:   nop     len=0
  Inst 29183:   nop     len=0
  Inst 29184:   nop     len=0
  Inst 29185:   nop     len=0
  Inst 29186:   nop     len=0
  Inst 29187:   nop     len=0
  Inst 29188:   nop     len=0
  Inst 29189:   nop     len=0
  Inst 29190:   nop     len=0
  Inst 29191:   nop     len=0
  Inst 29192:   nop     len=0
  Inst 29193:   nop     len=0
  Inst 29194:   nop     len=0
  Inst 29195:   nop     len=0
  Inst 29196:   nop     len=0
  Inst 29197:   nop     len=0
  Inst 29198:   nop     len=0
  Inst 29199:   nop     len=0
  Inst 29200:   nop     len=0
  Inst 29201:   nop     len=0
  Inst 29202:   nop     len=0
  Inst 29203:   nop     len=0
  Inst 29204:   nop     len=0
  Inst 29205:   nop     len=0
  Inst 29206:   nop     len=0
  Inst 29207:   nop     len=0
  Inst 29208:   nop     len=0
  Inst 29209:   nop     len=0
  Inst 29210:   nop     len=0
  Inst 29211:   nop     len=0
  Inst 29212:   nop     len=0
  Inst 29213:   nop     len=0
  Inst 29214:   nop     len=0
  Inst 29215:   nop     len=0
  Inst 29216:   nop     len=0
  Inst 29217:   nop     len=0
  Inst 29218:   nop     len=0
  Inst 29219:   nop     len=0
  Inst 29220:   nop     len=0
  Inst 29221:   nop     len=0
  Inst 29222:   nop     len=0
  Inst 29223:   nop     len=0
  Inst 29224:   nop     len=0
  Inst 29225:   jmp     label812
Block 810:
  (original IR block: block407)
  (successor: Block 811)
  (instruction range: 29226 .. 29255)
  Inst 29226:   movq    rsp(2072 + virtual offset), %rsi
  Inst 29227:   movq    152(%rsi), %r13
  Inst 29228:   movq    %r14, %r15
  Inst 29229:   addq    $-1, %r15
  Inst 29230:   movq    %r14, %rdx
  Inst 29231:   shlq    $3, %rdx
  Inst 29232:   movq    %r13, %r12
  Inst 29233:   addq    %rdx, %r12
  Inst 29234:   movq    %r13, %rdi
  Inst 29235:   addq    $-24, %rdi
  Inst 29236:   movq    %r13, %rsi
  Inst 29237:   load_ext_name %Memmove+0, %rax
  Inst 29238:   movq    %rbx, rsp(1376 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29239:   call    *%rax
  Inst 29240:   movq    rsp(1376 + virtual offset), %rbx
  Inst 29241:   load_ext_name u1:1+0, %rsi
  Inst 29242:   movl    $1, %edi
  Inst 29243:   movq    %rdi, -8(%r13,%r14,8)
  Inst 29244:   movl    $1, %edi
  Inst 29245:   movq    %rdi, -16(%r13,%r14,8)
  Inst 29246:   movq    %rsi, -24(%r13,%r14,8)
  Inst 29247:   movq    rsp(2072 + virtual offset), %rsi
  Inst 29248:   movq    %r12, 152(%rsi)
  Inst 29249:   movq    %rbx, %rdi
  Inst 29250:   movq    %r15, %rsi
  Inst 29251:   load_ext_name u0:3+0, %rax
  Inst 29252:   movq    %rdi, rsp(1376 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29253:   call    *%rax
  Inst 29254:   jmp     label811
Block 811:
  (successor: Block 812)
  (instruction range: 29255 .. 29358)
  Inst 29255:   movq    %rax, rsp(1944 + virtual offset)
  Inst 29256:   nop     len=0
  Inst 29257:   nop     len=0
  Inst 29258:   nop     len=0
  Inst 29259:   nop     len=0
  Inst 29260:   nop     len=0
  Inst 29261:   nop     len=0
  Inst 29262:   nop     len=0
  Inst 29263:   nop     len=0
  Inst 29264:   nop     len=0
  Inst 29265:   nop     len=0
  Inst 29266:   nop     len=0
  Inst 29267:   nop     len=0
  Inst 29268:   nop     len=0
  Inst 29269:   nop     len=0
  Inst 29270:   nop     len=0
  Inst 29271:   nop     len=0
  Inst 29272:   nop     len=0
  Inst 29273:   nop     len=0
  Inst 29274:   nop     len=0
  Inst 29275:   nop     len=0
  Inst 29276:   nop     len=0
  Inst 29277:   nop     len=0
  Inst 29278:   nop     len=0
  Inst 29279:   nop     len=0
  Inst 29280:   nop     len=0
  Inst 29281:   nop     len=0
  Inst 29282:   nop     len=0
  Inst 29283:   nop     len=0
  Inst 29284:   nop     len=0
  Inst 29285:   nop     len=0
  Inst 29286:   nop     len=0
  Inst 29287:   nop     len=0
  Inst 29288:   nop     len=0
  Inst 29289:   nop     len=0
  Inst 29290:   nop     len=0
  Inst 29291:   nop     len=0
  Inst 29292:   nop     len=0
  Inst 29293:   nop     len=0
  Inst 29294:   nop     len=0
  Inst 29295:   nop     len=0
  Inst 29296:   nop     len=0
  Inst 29297:   nop     len=0
  Inst 29298:   nop     len=0
  Inst 29299:   nop     len=0
  Inst 29300:   nop     len=0
  Inst 29301:   nop     len=0
  Inst 29302:   nop     len=0
  Inst 29303:   nop     len=0
  Inst 29304:   nop     len=0
  Inst 29305:   nop     len=0
  Inst 29306:   nop     len=0
  Inst 29307:   nop     len=0
  Inst 29308:   nop     len=0
  Inst 29309:   nop     len=0
  Inst 29310:   nop     len=0
  Inst 29311:   nop     len=0
  Inst 29312:   nop     len=0
  Inst 29313:   nop     len=0
  Inst 29314:   nop     len=0
  Inst 29315:   nop     len=0
  Inst 29316:   nop     len=0
  Inst 29317:   nop     len=0
  Inst 29318:   nop     len=0
  Inst 29319:   nop     len=0
  Inst 29320:   nop     len=0
  Inst 29321:   nop     len=0
  Inst 29322:   nop     len=0
  Inst 29323:   nop     len=0
  Inst 29324:   nop     len=0
  Inst 29325:   nop     len=0
  Inst 29326:   nop     len=0
  Inst 29327:   nop     len=0
  Inst 29328:   nop     len=0
  Inst 29329:   nop     len=0
  Inst 29330:   nop     len=0
  Inst 29331:   nop     len=0
  Inst 29332:   nop     len=0
  Inst 29333:   nop     len=0
  Inst 29334:   nop     len=0
  Inst 29335:   nop     len=0
  Inst 29336:   nop     len=0
  Inst 29337:   nop     len=0
  Inst 29338:   nop     len=0
  Inst 29339:   nop     len=0
  Inst 29340:   nop     len=0
  Inst 29341:   nop     len=0
  Inst 29342:   nop     len=0
  Inst 29343:   nop     len=0
  Inst 29344:   nop     len=0
  Inst 29345:   nop     len=0
  Inst 29346:   nop     len=0
  Inst 29347:   nop     len=0
  Inst 29348:   nop     len=0
  Inst 29349:   nop     len=0
  Inst 29350:   nop     len=0
  Inst 29351:   nop     len=0
  Inst 29352:   nop     len=0
  Inst 29353:   nop     len=0
  Inst 29354:   nop     len=0
  Inst 29355:   nop     len=0
  Inst 29356:   nop     len=0
  Inst 29357:   jmp     label812
Block 812:
  (original IR block: block406)
  (successor: Block 813)
  (successor: Block 814)
  (instruction range: 29358 .. 29369)
  Inst 29358:   movq    rsp(2064 + virtual offset), %rsi
  Inst 29359:   movq    8(%rsi), %rdi
  Inst 29360:   movq    rsp(2048 + virtual offset), %rsi
  Inst 29361:   load_ext_name u0:2+0, %rax
  Inst 29362:   movq    %rsi, rsp(1376 + virtual offset)
  Inst 29363:   movq    %rdi, rsp(1392 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29364:   call    *%rax
  Inst 29365:   movq    %rax, %r15
  Inst 29366:   movq    %rdx, %r14
  Inst 29367:   testq   %r14, %r14
  Inst 29368:   jz      label813; j label814
Block 813:
  (successor: Block 816)
  (instruction range: 29369 .. 29472)
  Inst 29369:   movq    %r15, rsp(1376 + virtual offset)
  Inst 29370:   nop     len=0
  Inst 29371:   nop     len=0
  Inst 29372:   nop     len=0
  Inst 29373:   nop     len=0
  Inst 29374:   nop     len=0
  Inst 29375:   nop     len=0
  Inst 29376:   nop     len=0
  Inst 29377:   nop     len=0
  Inst 29378:   nop     len=0
  Inst 29379:   nop     len=0
  Inst 29380:   nop     len=0
  Inst 29381:   nop     len=0
  Inst 29382:   nop     len=0
  Inst 29383:   nop     len=0
  Inst 29384:   nop     len=0
  Inst 29385:   nop     len=0
  Inst 29386:   nop     len=0
  Inst 29387:   nop     len=0
  Inst 29388:   nop     len=0
  Inst 29389:   nop     len=0
  Inst 29390:   nop     len=0
  Inst 29391:   nop     len=0
  Inst 29392:   nop     len=0
  Inst 29393:   nop     len=0
  Inst 29394:   nop     len=0
  Inst 29395:   nop     len=0
  Inst 29396:   nop     len=0
  Inst 29397:   nop     len=0
  Inst 29398:   nop     len=0
  Inst 29399:   nop     len=0
  Inst 29400:   nop     len=0
  Inst 29401:   nop     len=0
  Inst 29402:   nop     len=0
  Inst 29403:   nop     len=0
  Inst 29404:   nop     len=0
  Inst 29405:   nop     len=0
  Inst 29406:   nop     len=0
  Inst 29407:   nop     len=0
  Inst 29408:   nop     len=0
  Inst 29409:   nop     len=0
  Inst 29410:   nop     len=0
  Inst 29411:   nop     len=0
  Inst 29412:   nop     len=0
  Inst 29413:   nop     len=0
  Inst 29414:   nop     len=0
  Inst 29415:   nop     len=0
  Inst 29416:   nop     len=0
  Inst 29417:   nop     len=0
  Inst 29418:   nop     len=0
  Inst 29419:   nop     len=0
  Inst 29420:   nop     len=0
  Inst 29421:   nop     len=0
  Inst 29422:   nop     len=0
  Inst 29423:   nop     len=0
  Inst 29424:   nop     len=0
  Inst 29425:   nop     len=0
  Inst 29426:   nop     len=0
  Inst 29427:   nop     len=0
  Inst 29428:   nop     len=0
  Inst 29429:   nop     len=0
  Inst 29430:   nop     len=0
  Inst 29431:   nop     len=0
  Inst 29432:   nop     len=0
  Inst 29433:   nop     len=0
  Inst 29434:   nop     len=0
  Inst 29435:   nop     len=0
  Inst 29436:   nop     len=0
  Inst 29437:   nop     len=0
  Inst 29438:   nop     len=0
  Inst 29439:   nop     len=0
  Inst 29440:   nop     len=0
  Inst 29441:   nop     len=0
  Inst 29442:   nop     len=0
  Inst 29443:   nop     len=0
  Inst 29444:   nop     len=0
  Inst 29445:   nop     len=0
  Inst 29446:   nop     len=0
  Inst 29447:   nop     len=0
  Inst 29448:   nop     len=0
  Inst 29449:   nop     len=0
  Inst 29450:   nop     len=0
  Inst 29451:   nop     len=0
  Inst 29452:   nop     len=0
  Inst 29453:   nop     len=0
  Inst 29454:   nop     len=0
  Inst 29455:   nop     len=0
  Inst 29456:   nop     len=0
  Inst 29457:   nop     len=0
  Inst 29458:   nop     len=0
  Inst 29459:   nop     len=0
  Inst 29460:   nop     len=0
  Inst 29461:   nop     len=0
  Inst 29462:   nop     len=0
  Inst 29463:   nop     len=0
  Inst 29464:   nop     len=0
  Inst 29465:   nop     len=0
  Inst 29466:   nop     len=0
  Inst 29467:   nop     len=0
  Inst 29468:   nop     len=0
  Inst 29469:   nop     len=0
  Inst 29470:   nop     len=0
  Inst 29471:   jmp     label816
Block 814:
  (original IR block: block409)
  (successor: Block 815)
  (instruction range: 29472 .. 29501)
  Inst 29472:   movq    rsp(2072 + virtual offset), %rsi
  Inst 29473:   movq    152(%rsi), %r13
  Inst 29474:   movq    %r14, %rbx
  Inst 29475:   addq    $-1, %rbx
  Inst 29476:   movq    %r14, %rdx
  Inst 29477:   shlq    $3, %rdx
  Inst 29478:   movq    %r13, %r12
  Inst 29479:   addq    %rdx, %r12
  Inst 29480:   movq    %r13, %rdi
  Inst 29481:   addq    $-24, %rdi
  Inst 29482:   movq    %r13, %rsi
  Inst 29483:   load_ext_name %Memmove+0, %rax
  Inst 29484:   movq    %r15, rsp(1392 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S173, S174, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29485:   call    *%rax
  Inst 29486:   movq    rsp(1392 + virtual offset), %r15
  Inst 29487:   load_ext_name u1:1+0, %rsi
  Inst 29488:   movl    $1, %edi
  Inst 29489:   movq    %rdi, -8(%r13,%r14,8)
  Inst 29490:   movl    $1, %edi
  Inst 29491:   movq    %rdi, -16(%r13,%r14,8)
  Inst 29492:   movq    %rsi, -24(%r13,%r14,8)
  Inst 29493:   movq    rsp(2072 + virtual offset), %rsi
  Inst 29494:   movq    %r12, 152(%rsi)
  Inst 29495:   movq    %r15, %rdi
  Inst 29496:   movq    %rbx, %rsi
  Inst 29497:   load_ext_name u0:3+0, %rax
  Inst 29498:   movq    %rdi, rsp(1376 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29499:   call    *%rax
  Inst 29500:   jmp     label815
Block 815:
  (successor: Block 816)
  (instruction range: 29501 .. 29604)
  Inst 29501:   movq    %rax, rsp(1376 + virtual offset)
  Inst 29502:   nop     len=0
  Inst 29503:   nop     len=0
  Inst 29504:   nop     len=0
  Inst 29505:   nop     len=0
  Inst 29506:   nop     len=0
  Inst 29507:   nop     len=0
  Inst 29508:   nop     len=0
  Inst 29509:   nop     len=0
  Inst 29510:   nop     len=0
  Inst 29511:   nop     len=0
  Inst 29512:   nop     len=0
  Inst 29513:   nop     len=0
  Inst 29514:   nop     len=0
  Inst 29515:   nop     len=0
  Inst 29516:   nop     len=0
  Inst 29517:   nop     len=0
  Inst 29518:   nop     len=0
  Inst 29519:   nop     len=0
  Inst 29520:   nop     len=0
  Inst 29521:   nop     len=0
  Inst 29522:   nop     len=0
  Inst 29523:   nop     len=0
  Inst 29524:   nop     len=0
  Inst 29525:   nop     len=0
  Inst 29526:   nop     len=0
  Inst 29527:   nop     len=0
  Inst 29528:   nop     len=0
  Inst 29529:   nop     len=0
  Inst 29530:   nop     len=0
  Inst 29531:   nop     len=0
  Inst 29532:   nop     len=0
  Inst 29533:   nop     len=0
  Inst 29534:   nop     len=0
  Inst 29535:   nop     len=0
  Inst 29536:   nop     len=0
  Inst 29537:   nop     len=0
  Inst 29538:   nop     len=0
  Inst 29539:   nop     len=0
  Inst 29540:   nop     len=0
  Inst 29541:   nop     len=0
  Inst 29542:   nop     len=0
  Inst 29543:   nop     len=0
  Inst 29544:   nop     len=0
  Inst 29545:   nop     len=0
  Inst 29546:   nop     len=0
  Inst 29547:   nop     len=0
  Inst 29548:   nop     len=0
  Inst 29549:   nop     len=0
  Inst 29550:   nop     len=0
  Inst 29551:   nop     len=0
  Inst 29552:   nop     len=0
  Inst 29553:   nop     len=0
  Inst 29554:   nop     len=0
  Inst 29555:   nop     len=0
  Inst 29556:   nop     len=0
  Inst 29557:   nop     len=0
  Inst 29558:   nop     len=0
  Inst 29559:   nop     len=0
  Inst 29560:   nop     len=0
  Inst 29561:   nop     len=0
  Inst 29562:   nop     len=0
  Inst 29563:   nop     len=0
  Inst 29564:   nop     len=0
  Inst 29565:   nop     len=0
  Inst 29566:   nop     len=0
  Inst 29567:   nop     len=0
  Inst 29568:   nop     len=0
  Inst 29569:   nop     len=0
  Inst 29570:   nop     len=0
  Inst 29571:   nop     len=0
  Inst 29572:   nop     len=0
  Inst 29573:   nop     len=0
  Inst 29574:   nop     len=0
  Inst 29575:   nop     len=0
  Inst 29576:   nop     len=0
  Inst 29577:   nop     len=0
  Inst 29578:   nop     len=0
  Inst 29579:   nop     len=0
  Inst 29580:   nop     len=0
  Inst 29581:   nop     len=0
  Inst 29582:   nop     len=0
  Inst 29583:   nop     len=0
  Inst 29584:   nop     len=0
  Inst 29585:   nop     len=0
  Inst 29586:   nop     len=0
  Inst 29587:   nop     len=0
  Inst 29588:   nop     len=0
  Inst 29589:   nop     len=0
  Inst 29590:   nop     len=0
  Inst 29591:   nop     len=0
  Inst 29592:   nop     len=0
  Inst 29593:   nop     len=0
  Inst 29594:   nop     len=0
  Inst 29595:   nop     len=0
  Inst 29596:   nop     len=0
  Inst 29597:   nop     len=0
  Inst 29598:   nop     len=0
  Inst 29599:   nop     len=0
  Inst 29600:   nop     len=0
  Inst 29601:   nop     len=0
  Inst 29602:   nop     len=0
  Inst 29603:   jmp     label816
Block 816:
  (original IR block: block408)
  (successor: Block 817)
  (successor: Block 818)
  (instruction range: 29604 .. 29615)
  Inst 29604:   movq    rsp(2064 + virtual offset), %rsi
  Inst 29605:   movq    8(%rsi), %rdi
  Inst 29606:   movq    rsp(2048 + virtual offset), %rsi
  Inst 29607:   load_ext_name u0:2+0, %rax
  Inst 29608:   movq    %rsi, rsp(1392 + virtual offset)
  Inst 29609:   movq    %rdi, rsp(1408 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29610:   call    *%rax
  Inst 29611:   movq    %rax, %rbx
  Inst 29612:   movq    %rdx, %r14
  Inst 29613:   testq   %r14, %r14
  Inst 29614:   jz      label817; j label818
Block 817:
  (successor: Block 820)
  (instruction range: 29615 .. 29719)
  Inst 29615:   movq    %rbx, rsp(1936 + virtual offset)
  Inst 29616:   nop     len=0
  Inst 29617:   nop     len=0
  Inst 29618:   nop     len=0
  Inst 29619:   nop     len=0
  Inst 29620:   nop     len=0
  Inst 29621:   nop     len=0
  Inst 29622:   nop     len=0
  Inst 29623:   nop     len=0
  Inst 29624:   nop     len=0
  Inst 29625:   nop     len=0
  Inst 29626:   nop     len=0
  Inst 29627:   nop     len=0
  Inst 29628:   nop     len=0
  Inst 29629:   nop     len=0
  Inst 29630:   nop     len=0
  Inst 29631:   nop     len=0
  Inst 29632:   nop     len=0
  Inst 29633:   nop     len=0
  Inst 29634:   nop     len=0
  Inst 29635:   nop     len=0
  Inst 29636:   nop     len=0
  Inst 29637:   nop     len=0
  Inst 29638:   nop     len=0
  Inst 29639:   nop     len=0
  Inst 29640:   nop     len=0
  Inst 29641:   nop     len=0
  Inst 29642:   nop     len=0
  Inst 29643:   nop     len=0
  Inst 29644:   nop     len=0
  Inst 29645:   nop     len=0
  Inst 29646:   nop     len=0
  Inst 29647:   nop     len=0
  Inst 29648:   nop     len=0
  Inst 29649:   nop     len=0
  Inst 29650:   nop     len=0
  Inst 29651:   nop     len=0
  Inst 29652:   nop     len=0
  Inst 29653:   nop     len=0
  Inst 29654:   nop     len=0
  Inst 29655:   nop     len=0
  Inst 29656:   nop     len=0
  Inst 29657:   nop     len=0
  Inst 29658:   nop     len=0
  Inst 29659:   nop     len=0
  Inst 29660:   nop     len=0
  Inst 29661:   nop     len=0
  Inst 29662:   nop     len=0
  Inst 29663:   nop     len=0
  Inst 29664:   nop     len=0
  Inst 29665:   nop     len=0
  Inst 29666:   nop     len=0
  Inst 29667:   nop     len=0
  Inst 29668:   nop     len=0
  Inst 29669:   nop     len=0
  Inst 29670:   nop     len=0
  Inst 29671:   nop     len=0
  Inst 29672:   nop     len=0
  Inst 29673:   nop     len=0
  Inst 29674:   nop     len=0
  Inst 29675:   nop     len=0
  Inst 29676:   nop     len=0
  Inst 29677:   nop     len=0
  Inst 29678:   nop     len=0
  Inst 29679:   nop     len=0
  Inst 29680:   nop     len=0
  Inst 29681:   nop     len=0
  Inst 29682:   nop     len=0
  Inst 29683:   nop     len=0
  Inst 29684:   nop     len=0
  Inst 29685:   nop     len=0
  Inst 29686:   nop     len=0
  Inst 29687:   nop     len=0
  Inst 29688:   nop     len=0
  Inst 29689:   nop     len=0
  Inst 29690:   nop     len=0
  Inst 29691:   nop     len=0
  Inst 29692:   nop     len=0
  Inst 29693:   nop     len=0
  Inst 29694:   nop     len=0
  Inst 29695:   nop     len=0
  Inst 29696:   nop     len=0
  Inst 29697:   nop     len=0
  Inst 29698:   nop     len=0
  Inst 29699:   nop     len=0
  Inst 29700:   nop     len=0
  Inst 29701:   nop     len=0
  Inst 29702:   nop     len=0
  Inst 29703:   nop     len=0
  Inst 29704:   nop     len=0
  Inst 29705:   nop     len=0
  Inst 29706:   nop     len=0
  Inst 29707:   nop     len=0
  Inst 29708:   nop     len=0
  Inst 29709:   nop     len=0
  Inst 29710:   nop     len=0
  Inst 29711:   nop     len=0
  Inst 29712:   nop     len=0
  Inst 29713:   nop     len=0
  Inst 29714:   nop     len=0
  Inst 29715:   nop     len=0
  Inst 29716:   nop     len=0
  Inst 29717:   nop     len=0
  Inst 29718:   jmp     label820
Block 818:
  (original IR block: block411)
  (successor: Block 819)
  (instruction range: 29719 .. 29748)
  Inst 29719:   movq    rsp(2072 + virtual offset), %rsi
  Inst 29720:   movq    152(%rsi), %r13
  Inst 29721:   movq    %r14, %r15
  Inst 29722:   addq    $-1, %r15
  Inst 29723:   movq    %r14, %rdx
  Inst 29724:   shlq    $3, %rdx
  Inst 29725:   movq    %r13, %r12
  Inst 29726:   addq    %rdx, %r12
  Inst 29727:   movq    %r13, %rdi
  Inst 29728:   addq    $-24, %rdi
  Inst 29729:   movq    %r13, %rsi
  Inst 29730:   load_ext_name %Memmove+0, %rax
  Inst 29731:   movq    %rbx, rsp(1392 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29732:   call    *%rax
  Inst 29733:   movq    rsp(1392 + virtual offset), %rbx
  Inst 29734:   load_ext_name u1:1+0, %rsi
  Inst 29735:   movl    $1, %edi
  Inst 29736:   movq    %rdi, -8(%r13,%r14,8)
  Inst 29737:   movl    $1, %edi
  Inst 29738:   movq    %rdi, -16(%r13,%r14,8)
  Inst 29739:   movq    %rsi, -24(%r13,%r14,8)
  Inst 29740:   movq    rsp(2072 + virtual offset), %rsi
  Inst 29741:   movq    %r12, 152(%rsi)
  Inst 29742:   movq    %rbx, %rdi
  Inst 29743:   movq    %r15, %rsi
  Inst 29744:   load_ext_name u0:3+0, %rax
  Inst 29745:   movq    %rdi, rsp(1392 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29746:   call    *%rax
  Inst 29747:   jmp     label819
Block 819:
  (successor: Block 820)
  (instruction range: 29748 .. 29852)
  Inst 29748:   movq    %rax, rsp(1936 + virtual offset)
  Inst 29749:   nop     len=0
  Inst 29750:   nop     len=0
  Inst 29751:   nop     len=0
  Inst 29752:   nop     len=0
  Inst 29753:   nop     len=0
  Inst 29754:   nop     len=0
  Inst 29755:   nop     len=0
  Inst 29756:   nop     len=0
  Inst 29757:   nop     len=0
  Inst 29758:   nop     len=0
  Inst 29759:   nop     len=0
  Inst 29760:   nop     len=0
  Inst 29761:   nop     len=0
  Inst 29762:   nop     len=0
  Inst 29763:   nop     len=0
  Inst 29764:   nop     len=0
  Inst 29765:   nop     len=0
  Inst 29766:   nop     len=0
  Inst 29767:   nop     len=0
  Inst 29768:   nop     len=0
  Inst 29769:   nop     len=0
  Inst 29770:   nop     len=0
  Inst 29771:   nop     len=0
  Inst 29772:   nop     len=0
  Inst 29773:   nop     len=0
  Inst 29774:   nop     len=0
  Inst 29775:   nop     len=0
  Inst 29776:   nop     len=0
  Inst 29777:   nop     len=0
  Inst 29778:   nop     len=0
  Inst 29779:   nop     len=0
  Inst 29780:   nop     len=0
  Inst 29781:   nop     len=0
  Inst 29782:   nop     len=0
  Inst 29783:   nop     len=0
  Inst 29784:   nop     len=0
  Inst 29785:   nop     len=0
  Inst 29786:   nop     len=0
  Inst 29787:   nop     len=0
  Inst 29788:   nop     len=0
  Inst 29789:   nop     len=0
  Inst 29790:   nop     len=0
  Inst 29791:   nop     len=0
  Inst 29792:   nop     len=0
  Inst 29793:   nop     len=0
  Inst 29794:   nop     len=0
  Inst 29795:   nop     len=0
  Inst 29796:   nop     len=0
  Inst 29797:   nop     len=0
  Inst 29798:   nop     len=0
  Inst 29799:   nop     len=0
  Inst 29800:   nop     len=0
  Inst 29801:   nop     len=0
  Inst 29802:   nop     len=0
  Inst 29803:   nop     len=0
  Inst 29804:   nop     len=0
  Inst 29805:   nop     len=0
  Inst 29806:   nop     len=0
  Inst 29807:   nop     len=0
  Inst 29808:   nop     len=0
  Inst 29809:   nop     len=0
  Inst 29810:   nop     len=0
  Inst 29811:   nop     len=0
  Inst 29812:   nop     len=0
  Inst 29813:   nop     len=0
  Inst 29814:   nop     len=0
  Inst 29815:   nop     len=0
  Inst 29816:   nop     len=0
  Inst 29817:   nop     len=0
  Inst 29818:   nop     len=0
  Inst 29819:   nop     len=0
  Inst 29820:   nop     len=0
  Inst 29821:   nop     len=0
  Inst 29822:   nop     len=0
  Inst 29823:   nop     len=0
  Inst 29824:   nop     len=0
  Inst 29825:   nop     len=0
  Inst 29826:   nop     len=0
  Inst 29827:   nop     len=0
  Inst 29828:   nop     len=0
  Inst 29829:   nop     len=0
  Inst 29830:   nop     len=0
  Inst 29831:   nop     len=0
  Inst 29832:   nop     len=0
  Inst 29833:   nop     len=0
  Inst 29834:   nop     len=0
  Inst 29835:   nop     len=0
  Inst 29836:   nop     len=0
  Inst 29837:   nop     len=0
  Inst 29838:   nop     len=0
  Inst 29839:   nop     len=0
  Inst 29840:   nop     len=0
  Inst 29841:   nop     len=0
  Inst 29842:   nop     len=0
  Inst 29843:   nop     len=0
  Inst 29844:   nop     len=0
  Inst 29845:   nop     len=0
  Inst 29846:   nop     len=0
  Inst 29847:   nop     len=0
  Inst 29848:   nop     len=0
  Inst 29849:   nop     len=0
  Inst 29850:   nop     len=0
  Inst 29851:   jmp     label820
Block 820:
  (original IR block: block410)
  (successor: Block 821)
  (successor: Block 822)
  (instruction range: 29852 .. 29863)
  Inst 29852:   movq    rsp(2064 + virtual offset), %rsi
  Inst 29853:   movq    8(%rsi), %rdi
  Inst 29854:   movq    rsp(2048 + virtual offset), %rsi
  Inst 29855:   load_ext_name u0:2+0, %rax
  Inst 29856:   movq    %rsi, rsp(1392 + virtual offset)
  Inst 29857:   movq    %rdi, rsp(1408 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29858:   call    *%rax
  Inst 29859:   movq    %rax, %rbx
  Inst 29860:   movq    %rdx, %r14
  Inst 29861:   testq   %r14, %r14
  Inst 29862:   jz      label821; j label822
Block 821:
  (successor: Block 824)
  (instruction range: 29863 .. 29967)
  Inst 29863:   movq    %rbx, rsp(1392 + virtual offset)
  Inst 29864:   nop     len=0
  Inst 29865:   nop     len=0
  Inst 29866:   nop     len=0
  Inst 29867:   nop     len=0
  Inst 29868:   nop     len=0
  Inst 29869:   nop     len=0
  Inst 29870:   nop     len=0
  Inst 29871:   nop     len=0
  Inst 29872:   nop     len=0
  Inst 29873:   nop     len=0
  Inst 29874:   nop     len=0
  Inst 29875:   nop     len=0
  Inst 29876:   nop     len=0
  Inst 29877:   nop     len=0
  Inst 29878:   nop     len=0
  Inst 29879:   nop     len=0
  Inst 29880:   nop     len=0
  Inst 29881:   nop     len=0
  Inst 29882:   nop     len=0
  Inst 29883:   nop     len=0
  Inst 29884:   nop     len=0
  Inst 29885:   nop     len=0
  Inst 29886:   nop     len=0
  Inst 29887:   nop     len=0
  Inst 29888:   nop     len=0
  Inst 29889:   nop     len=0
  Inst 29890:   nop     len=0
  Inst 29891:   nop     len=0
  Inst 29892:   nop     len=0
  Inst 29893:   nop     len=0
  Inst 29894:   nop     len=0
  Inst 29895:   nop     len=0
  Inst 29896:   nop     len=0
  Inst 29897:   nop     len=0
  Inst 29898:   nop     len=0
  Inst 29899:   nop     len=0
  Inst 29900:   nop     len=0
  Inst 29901:   nop     len=0
  Inst 29902:   nop     len=0
  Inst 29903:   nop     len=0
  Inst 29904:   nop     len=0
  Inst 29905:   nop     len=0
  Inst 29906:   nop     len=0
  Inst 29907:   nop     len=0
  Inst 29908:   nop     len=0
  Inst 29909:   nop     len=0
  Inst 29910:   nop     len=0
  Inst 29911:   nop     len=0
  Inst 29912:   nop     len=0
  Inst 29913:   nop     len=0
  Inst 29914:   nop     len=0
  Inst 29915:   nop     len=0
  Inst 29916:   nop     len=0
  Inst 29917:   nop     len=0
  Inst 29918:   nop     len=0
  Inst 29919:   nop     len=0
  Inst 29920:   nop     len=0
  Inst 29921:   nop     len=0
  Inst 29922:   nop     len=0
  Inst 29923:   nop     len=0
  Inst 29924:   nop     len=0
  Inst 29925:   nop     len=0
  Inst 29926:   nop     len=0
  Inst 29927:   nop     len=0
  Inst 29928:   nop     len=0
  Inst 29929:   nop     len=0
  Inst 29930:   nop     len=0
  Inst 29931:   nop     len=0
  Inst 29932:   nop     len=0
  Inst 29933:   nop     len=0
  Inst 29934:   nop     len=0
  Inst 29935:   nop     len=0
  Inst 29936:   nop     len=0
  Inst 29937:   nop     len=0
  Inst 29938:   nop     len=0
  Inst 29939:   nop     len=0
  Inst 29940:   nop     len=0
  Inst 29941:   nop     len=0
  Inst 29942:   nop     len=0
  Inst 29943:   nop     len=0
  Inst 29944:   nop     len=0
  Inst 29945:   nop     len=0
  Inst 29946:   nop     len=0
  Inst 29947:   nop     len=0
  Inst 29948:   nop     len=0
  Inst 29949:   nop     len=0
  Inst 29950:   nop     len=0
  Inst 29951:   nop     len=0
  Inst 29952:   nop     len=0
  Inst 29953:   nop     len=0
  Inst 29954:   nop     len=0
  Inst 29955:   nop     len=0
  Inst 29956:   nop     len=0
  Inst 29957:   nop     len=0
  Inst 29958:   nop     len=0
  Inst 29959:   nop     len=0
  Inst 29960:   nop     len=0
  Inst 29961:   nop     len=0
  Inst 29962:   nop     len=0
  Inst 29963:   nop     len=0
  Inst 29964:   nop     len=0
  Inst 29965:   nop     len=0
  Inst 29966:   jmp     label824
Block 822:
  (original IR block: block413)
  (successor: Block 823)
  (instruction range: 29967 .. 29996)
  Inst 29967:   movq    rsp(2072 + virtual offset), %rsi
  Inst 29968:   movq    152(%rsi), %r13
  Inst 29969:   movq    %r14, %r15
  Inst 29970:   addq    $-1, %r15
  Inst 29971:   movq    %r14, %rdx
  Inst 29972:   shlq    $3, %rdx
  Inst 29973:   movq    %r13, %r12
  Inst 29974:   addq    %rdx, %r12
  Inst 29975:   movq    %r13, %rdi
  Inst 29976:   addq    $-24, %rdi
  Inst 29977:   movq    %r13, %rsi
  Inst 29978:   load_ext_name %Memmove+0, %rax
  Inst 29979:   movq    %rbx, rsp(1408 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S175, S176, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29980:   call    *%rax
  Inst 29981:   movq    rsp(1408 + virtual offset), %rbx
  Inst 29982:   load_ext_name u1:1+0, %rsi
  Inst 29983:   movl    $1, %edi
  Inst 29984:   movq    %rdi, -8(%r13,%r14,8)
  Inst 29985:   movl    $1, %edi
  Inst 29986:   movq    %rdi, -16(%r13,%r14,8)
  Inst 29987:   movq    %rsi, -24(%r13,%r14,8)
  Inst 29988:   movq    rsp(2072 + virtual offset), %rsi
  Inst 29989:   movq    %r12, 152(%rsi)
  Inst 29990:   movq    %rbx, %rdi
  Inst 29991:   movq    %r15, %rsi
  Inst 29992:   load_ext_name u0:3+0, %rax
  Inst 29993:   movq    %rdi, rsp(1392 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 29994:   call    *%rax
  Inst 29995:   jmp     label823
Block 823:
  (successor: Block 824)
  (instruction range: 29996 .. 30100)
  Inst 29996:   movq    %rax, rsp(1392 + virtual offset)
  Inst 29997:   nop     len=0
  Inst 29998:   nop     len=0
  Inst 29999:   nop     len=0
  Inst 30000:   nop     len=0
  Inst 30001:   nop     len=0
  Inst 30002:   nop     len=0
  Inst 30003:   nop     len=0
  Inst 30004:   nop     len=0
  Inst 30005:   nop     len=0
  Inst 30006:   nop     len=0
  Inst 30007:   nop     len=0
  Inst 30008:   nop     len=0
  Inst 30009:   nop     len=0
  Inst 30010:   nop     len=0
  Inst 30011:   nop     len=0
  Inst 30012:   nop     len=0
  Inst 30013:   nop     len=0
  Inst 30014:   nop     len=0
  Inst 30015:   nop     len=0
  Inst 30016:   nop     len=0
  Inst 30017:   nop     len=0
  Inst 30018:   nop     len=0
  Inst 30019:   nop     len=0
  Inst 30020:   nop     len=0
  Inst 30021:   nop     len=0
  Inst 30022:   nop     len=0
  Inst 30023:   nop     len=0
  Inst 30024:   nop     len=0
  Inst 30025:   nop     len=0
  Inst 30026:   nop     len=0
  Inst 30027:   nop     len=0
  Inst 30028:   nop     len=0
  Inst 30029:   nop     len=0
  Inst 30030:   nop     len=0
  Inst 30031:   nop     len=0
  Inst 30032:   nop     len=0
  Inst 30033:   nop     len=0
  Inst 30034:   nop     len=0
  Inst 30035:   nop     len=0
  Inst 30036:   nop     len=0
  Inst 30037:   nop     len=0
  Inst 30038:   nop     len=0
  Inst 30039:   nop     len=0
  Inst 30040:   nop     len=0
  Inst 30041:   nop     len=0
  Inst 30042:   nop     len=0
  Inst 30043:   nop     len=0
  Inst 30044:   nop     len=0
  Inst 30045:   nop     len=0
  Inst 30046:   nop     len=0
  Inst 30047:   nop     len=0
  Inst 30048:   nop     len=0
  Inst 30049:   nop     len=0
  Inst 30050:   nop     len=0
  Inst 30051:   nop     len=0
  Inst 30052:   nop     len=0
  Inst 30053:   nop     len=0
  Inst 30054:   nop     len=0
  Inst 30055:   nop     len=0
  Inst 30056:   nop     len=0
  Inst 30057:   nop     len=0
  Inst 30058:   nop     len=0
  Inst 30059:   nop     len=0
  Inst 30060:   nop     len=0
  Inst 30061:   nop     len=0
  Inst 30062:   nop     len=0
  Inst 30063:   nop     len=0
  Inst 30064:   nop     len=0
  Inst 30065:   nop     len=0
  Inst 30066:   nop     len=0
  Inst 30067:   nop     len=0
  Inst 30068:   nop     len=0
  Inst 30069:   nop     len=0
  Inst 30070:   nop     len=0
  Inst 30071:   nop     len=0
  Inst 30072:   nop     len=0
  Inst 30073:   nop     len=0
  Inst 30074:   nop     len=0
  Inst 30075:   nop     len=0
  Inst 30076:   nop     len=0
  Inst 30077:   nop     len=0
  Inst 30078:   nop     len=0
  Inst 30079:   nop     len=0
  Inst 30080:   nop     len=0
  Inst 30081:   nop     len=0
  Inst 30082:   nop     len=0
  Inst 30083:   nop     len=0
  Inst 30084:   nop     len=0
  Inst 30085:   nop     len=0
  Inst 30086:   nop     len=0
  Inst 30087:   nop     len=0
  Inst 30088:   nop     len=0
  Inst 30089:   nop     len=0
  Inst 30090:   nop     len=0
  Inst 30091:   nop     len=0
  Inst 30092:   nop     len=0
  Inst 30093:   nop     len=0
  Inst 30094:   nop     len=0
  Inst 30095:   nop     len=0
  Inst 30096:   nop     len=0
  Inst 30097:   nop     len=0
  Inst 30098:   nop     len=0
  Inst 30099:   jmp     label824
Block 824:
  (original IR block: block412)
  (successor: Block 825)
  (successor: Block 826)
  (instruction range: 30100 .. 30111)
  Inst 30100:   movq    rsp(2064 + virtual offset), %rsi
  Inst 30101:   movq    8(%rsi), %rdi
  Inst 30102:   movq    rsp(2048 + virtual offset), %rsi
  Inst 30103:   load_ext_name u0:2+0, %rax
  Inst 30104:   movq    %rsi, rsp(1408 + virtual offset)
  Inst 30105:   movq    %rdi, rsp(1424 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30106:   call    *%rax
  Inst 30107:   movq    %rax, %r15
  Inst 30108:   movq    %rdx, %r14
  Inst 30109:   testq   %r14, %r14
  Inst 30110:   jz      label825; j label826
Block 825:
  (successor: Block 828)
  (instruction range: 30111 .. 30216)
  Inst 30111:   movq    %r15, rsp(1928 + virtual offset)
  Inst 30112:   nop     len=0
  Inst 30113:   nop     len=0
  Inst 30114:   nop     len=0
  Inst 30115:   nop     len=0
  Inst 30116:   nop     len=0
  Inst 30117:   nop     len=0
  Inst 30118:   nop     len=0
  Inst 30119:   nop     len=0
  Inst 30120:   nop     len=0
  Inst 30121:   nop     len=0
  Inst 30122:   nop     len=0
  Inst 30123:   nop     len=0
  Inst 30124:   nop     len=0
  Inst 30125:   nop     len=0
  Inst 30126:   nop     len=0
  Inst 30127:   nop     len=0
  Inst 30128:   nop     len=0
  Inst 30129:   nop     len=0
  Inst 30130:   nop     len=0
  Inst 30131:   nop     len=0
  Inst 30132:   nop     len=0
  Inst 30133:   nop     len=0
  Inst 30134:   nop     len=0
  Inst 30135:   nop     len=0
  Inst 30136:   nop     len=0
  Inst 30137:   nop     len=0
  Inst 30138:   nop     len=0
  Inst 30139:   nop     len=0
  Inst 30140:   nop     len=0
  Inst 30141:   nop     len=0
  Inst 30142:   nop     len=0
  Inst 30143:   nop     len=0
  Inst 30144:   nop     len=0
  Inst 30145:   nop     len=0
  Inst 30146:   nop     len=0
  Inst 30147:   nop     len=0
  Inst 30148:   nop     len=0
  Inst 30149:   nop     len=0
  Inst 30150:   nop     len=0
  Inst 30151:   nop     len=0
  Inst 30152:   nop     len=0
  Inst 30153:   nop     len=0
  Inst 30154:   nop     len=0
  Inst 30155:   nop     len=0
  Inst 30156:   nop     len=0
  Inst 30157:   nop     len=0
  Inst 30158:   nop     len=0
  Inst 30159:   nop     len=0
  Inst 30160:   nop     len=0
  Inst 30161:   nop     len=0
  Inst 30162:   nop     len=0
  Inst 30163:   nop     len=0
  Inst 30164:   nop     len=0
  Inst 30165:   nop     len=0
  Inst 30166:   nop     len=0
  Inst 30167:   nop     len=0
  Inst 30168:   nop     len=0
  Inst 30169:   nop     len=0
  Inst 30170:   nop     len=0
  Inst 30171:   nop     len=0
  Inst 30172:   nop     len=0
  Inst 30173:   nop     len=0
  Inst 30174:   nop     len=0
  Inst 30175:   nop     len=0
  Inst 30176:   nop     len=0
  Inst 30177:   nop     len=0
  Inst 30178:   nop     len=0
  Inst 30179:   nop     len=0
  Inst 30180:   nop     len=0
  Inst 30181:   nop     len=0
  Inst 30182:   nop     len=0
  Inst 30183:   nop     len=0
  Inst 30184:   nop     len=0
  Inst 30185:   nop     len=0
  Inst 30186:   nop     len=0
  Inst 30187:   nop     len=0
  Inst 30188:   nop     len=0
  Inst 30189:   nop     len=0
  Inst 30190:   nop     len=0
  Inst 30191:   nop     len=0
  Inst 30192:   nop     len=0
  Inst 30193:   nop     len=0
  Inst 30194:   nop     len=0
  Inst 30195:   nop     len=0
  Inst 30196:   nop     len=0
  Inst 30197:   nop     len=0
  Inst 30198:   nop     len=0
  Inst 30199:   nop     len=0
  Inst 30200:   nop     len=0
  Inst 30201:   nop     len=0
  Inst 30202:   nop     len=0
  Inst 30203:   nop     len=0
  Inst 30204:   nop     len=0
  Inst 30205:   nop     len=0
  Inst 30206:   nop     len=0
  Inst 30207:   nop     len=0
  Inst 30208:   nop     len=0
  Inst 30209:   nop     len=0
  Inst 30210:   nop     len=0
  Inst 30211:   nop     len=0
  Inst 30212:   nop     len=0
  Inst 30213:   nop     len=0
  Inst 30214:   nop     len=0
  Inst 30215:   jmp     label828
Block 826:
  (original IR block: block415)
  (successor: Block 827)
  (instruction range: 30216 .. 30245)
  Inst 30216:   movq    rsp(2072 + virtual offset), %rsi
  Inst 30217:   movq    152(%rsi), %r13
  Inst 30218:   movq    %r14, %rbx
  Inst 30219:   addq    $-1, %rbx
  Inst 30220:   movq    %r14, %rdx
  Inst 30221:   shlq    $3, %rdx
  Inst 30222:   movq    %r13, %r12
  Inst 30223:   addq    %rdx, %r12
  Inst 30224:   movq    %r13, %rdi
  Inst 30225:   addq    $-24, %rdi
  Inst 30226:   movq    %r13, %rsi
  Inst 30227:   load_ext_name %Memmove+0, %rax
  Inst 30228:   movq    %r15, rsp(1408 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30229:   call    *%rax
  Inst 30230:   movq    rsp(1408 + virtual offset), %r15
  Inst 30231:   load_ext_name u1:1+0, %rsi
  Inst 30232:   movl    $1, %edi
  Inst 30233:   movq    %rdi, -8(%r13,%r14,8)
  Inst 30234:   movl    $1, %edi
  Inst 30235:   movq    %rdi, -16(%r13,%r14,8)
  Inst 30236:   movq    %rsi, -24(%r13,%r14,8)
  Inst 30237:   movq    rsp(2072 + virtual offset), %rsi
  Inst 30238:   movq    %r12, 152(%rsi)
  Inst 30239:   movq    %r15, %rdi
  Inst 30240:   movq    %rbx, %rsi
  Inst 30241:   load_ext_name u0:3+0, %rax
  Inst 30242:   movq    %rdi, rsp(1408 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30243:   call    *%rax
  Inst 30244:   jmp     label827
Block 827:
  (successor: Block 828)
  (instruction range: 30245 .. 30350)
  Inst 30245:   movq    %rax, rsp(1928 + virtual offset)
  Inst 30246:   nop     len=0
  Inst 30247:   nop     len=0
  Inst 30248:   nop     len=0
  Inst 30249:   nop     len=0
  Inst 30250:   nop     len=0
  Inst 30251:   nop     len=0
  Inst 30252:   nop     len=0
  Inst 30253:   nop     len=0
  Inst 30254:   nop     len=0
  Inst 30255:   nop     len=0
  Inst 30256:   nop     len=0
  Inst 30257:   nop     len=0
  Inst 30258:   nop     len=0
  Inst 30259:   nop     len=0
  Inst 30260:   nop     len=0
  Inst 30261:   nop     len=0
  Inst 30262:   nop     len=0
  Inst 30263:   nop     len=0
  Inst 30264:   nop     len=0
  Inst 30265:   nop     len=0
  Inst 30266:   nop     len=0
  Inst 30267:   nop     len=0
  Inst 30268:   nop     len=0
  Inst 30269:   nop     len=0
  Inst 30270:   nop     len=0
  Inst 30271:   nop     len=0
  Inst 30272:   nop     len=0
  Inst 30273:   nop     len=0
  Inst 30274:   nop     len=0
  Inst 30275:   nop     len=0
  Inst 30276:   nop     len=0
  Inst 30277:   nop     len=0
  Inst 30278:   nop     len=0
  Inst 30279:   nop     len=0
  Inst 30280:   nop     len=0
  Inst 30281:   nop     len=0
  Inst 30282:   nop     len=0
  Inst 30283:   nop     len=0
  Inst 30284:   nop     len=0
  Inst 30285:   nop     len=0
  Inst 30286:   nop     len=0
  Inst 30287:   nop     len=0
  Inst 30288:   nop     len=0
  Inst 30289:   nop     len=0
  Inst 30290:   nop     len=0
  Inst 30291:   nop     len=0
  Inst 30292:   nop     len=0
  Inst 30293:   nop     len=0
  Inst 30294:   nop     len=0
  Inst 30295:   nop     len=0
  Inst 30296:   nop     len=0
  Inst 30297:   nop     len=0
  Inst 30298:   nop     len=0
  Inst 30299:   nop     len=0
  Inst 30300:   nop     len=0
  Inst 30301:   nop     len=0
  Inst 30302:   nop     len=0
  Inst 30303:   nop     len=0
  Inst 30304:   nop     len=0
  Inst 30305:   nop     len=0
  Inst 30306:   nop     len=0
  Inst 30307:   nop     len=0
  Inst 30308:   nop     len=0
  Inst 30309:   nop     len=0
  Inst 30310:   nop     len=0
  Inst 30311:   nop     len=0
  Inst 30312:   nop     len=0
  Inst 30313:   nop     len=0
  Inst 30314:   nop     len=0
  Inst 30315:   nop     len=0
  Inst 30316:   nop     len=0
  Inst 30317:   nop     len=0
  Inst 30318:   nop     len=0
  Inst 30319:   nop     len=0
  Inst 30320:   nop     len=0
  Inst 30321:   nop     len=0
  Inst 30322:   nop     len=0
  Inst 30323:   nop     len=0
  Inst 30324:   nop     len=0
  Inst 30325:   nop     len=0
  Inst 30326:   nop     len=0
  Inst 30327:   nop     len=0
  Inst 30328:   nop     len=0
  Inst 30329:   nop     len=0
  Inst 30330:   nop     len=0
  Inst 30331:   nop     len=0
  Inst 30332:   nop     len=0
  Inst 30333:   nop     len=0
  Inst 30334:   nop     len=0
  Inst 30335:   nop     len=0
  Inst 30336:   nop     len=0
  Inst 30337:   nop     len=0
  Inst 30338:   nop     len=0
  Inst 30339:   nop     len=0
  Inst 30340:   nop     len=0
  Inst 30341:   nop     len=0
  Inst 30342:   nop     len=0
  Inst 30343:   nop     len=0
  Inst 30344:   nop     len=0
  Inst 30345:   nop     len=0
  Inst 30346:   nop     len=0
  Inst 30347:   nop     len=0
  Inst 30348:   nop     len=0
  Inst 30349:   jmp     label828
Block 828:
  (original IR block: block414)
  (successor: Block 829)
  (successor: Block 830)
  (instruction range: 30350 .. 30361)
  Inst 30350:   movq    rsp(2064 + virtual offset), %rsi
  Inst 30351:   movq    8(%rsi), %rdi
  Inst 30352:   movq    rsp(2048 + virtual offset), %rsi
  Inst 30353:   load_ext_name u0:2+0, %rax
  Inst 30354:   movq    %rsi, rsp(1408 + virtual offset)
  Inst 30355:   movq    %rdi, rsp(1424 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30356:   call    *%rax
  Inst 30357:   movq    %rax, %rbx
  Inst 30358:   movq    %rdx, %r14
  Inst 30359:   testq   %r14, %r14
  Inst 30360:   jz      label829; j label830
Block 829:
  (successor: Block 832)
  (instruction range: 30361 .. 30466)
  Inst 30361:   movq    %rbx, rsp(1408 + virtual offset)
  Inst 30362:   nop     len=0
  Inst 30363:   nop     len=0
  Inst 30364:   nop     len=0
  Inst 30365:   nop     len=0
  Inst 30366:   nop     len=0
  Inst 30367:   nop     len=0
  Inst 30368:   nop     len=0
  Inst 30369:   nop     len=0
  Inst 30370:   nop     len=0
  Inst 30371:   nop     len=0
  Inst 30372:   nop     len=0
  Inst 30373:   nop     len=0
  Inst 30374:   nop     len=0
  Inst 30375:   nop     len=0
  Inst 30376:   nop     len=0
  Inst 30377:   nop     len=0
  Inst 30378:   nop     len=0
  Inst 30379:   nop     len=0
  Inst 30380:   nop     len=0
  Inst 30381:   nop     len=0
  Inst 30382:   nop     len=0
  Inst 30383:   nop     len=0
  Inst 30384:   nop     len=0
  Inst 30385:   nop     len=0
  Inst 30386:   nop     len=0
  Inst 30387:   nop     len=0
  Inst 30388:   nop     len=0
  Inst 30389:   nop     len=0
  Inst 30390:   nop     len=0
  Inst 30391:   nop     len=0
  Inst 30392:   nop     len=0
  Inst 30393:   nop     len=0
  Inst 30394:   nop     len=0
  Inst 30395:   nop     len=0
  Inst 30396:   nop     len=0
  Inst 30397:   nop     len=0
  Inst 30398:   nop     len=0
  Inst 30399:   nop     len=0
  Inst 30400:   nop     len=0
  Inst 30401:   nop     len=0
  Inst 30402:   nop     len=0
  Inst 30403:   nop     len=0
  Inst 30404:   nop     len=0
  Inst 30405:   nop     len=0
  Inst 30406:   nop     len=0
  Inst 30407:   nop     len=0
  Inst 30408:   nop     len=0
  Inst 30409:   nop     len=0
  Inst 30410:   nop     len=0
  Inst 30411:   nop     len=0
  Inst 30412:   nop     len=0
  Inst 30413:   nop     len=0
  Inst 30414:   nop     len=0
  Inst 30415:   nop     len=0
  Inst 30416:   nop     len=0
  Inst 30417:   nop     len=0
  Inst 30418:   nop     len=0
  Inst 30419:   nop     len=0
  Inst 30420:   nop     len=0
  Inst 30421:   nop     len=0
  Inst 30422:   nop     len=0
  Inst 30423:   nop     len=0
  Inst 30424:   nop     len=0
  Inst 30425:   nop     len=0
  Inst 30426:   nop     len=0
  Inst 30427:   nop     len=0
  Inst 30428:   nop     len=0
  Inst 30429:   nop     len=0
  Inst 30430:   nop     len=0
  Inst 30431:   nop     len=0
  Inst 30432:   nop     len=0
  Inst 30433:   nop     len=0
  Inst 30434:   nop     len=0
  Inst 30435:   nop     len=0
  Inst 30436:   nop     len=0
  Inst 30437:   nop     len=0
  Inst 30438:   nop     len=0
  Inst 30439:   nop     len=0
  Inst 30440:   nop     len=0
  Inst 30441:   nop     len=0
  Inst 30442:   nop     len=0
  Inst 30443:   nop     len=0
  Inst 30444:   nop     len=0
  Inst 30445:   nop     len=0
  Inst 30446:   nop     len=0
  Inst 30447:   nop     len=0
  Inst 30448:   nop     len=0
  Inst 30449:   nop     len=0
  Inst 30450:   nop     len=0
  Inst 30451:   nop     len=0
  Inst 30452:   nop     len=0
  Inst 30453:   nop     len=0
  Inst 30454:   nop     len=0
  Inst 30455:   nop     len=0
  Inst 30456:   nop     len=0
  Inst 30457:   nop     len=0
  Inst 30458:   nop     len=0
  Inst 30459:   nop     len=0
  Inst 30460:   nop     len=0
  Inst 30461:   nop     len=0
  Inst 30462:   nop     len=0
  Inst 30463:   nop     len=0
  Inst 30464:   nop     len=0
  Inst 30465:   jmp     label832
Block 830:
  (original IR block: block417)
  (successor: Block 831)
  (instruction range: 30466 .. 30495)
  Inst 30466:   movq    rsp(2072 + virtual offset), %rsi
  Inst 30467:   movq    152(%rsi), %r13
  Inst 30468:   movq    %r14, %r15
  Inst 30469:   addq    $-1, %r15
  Inst 30470:   movq    %r14, %rdx
  Inst 30471:   shlq    $3, %rdx
  Inst 30472:   movq    %r13, %r12
  Inst 30473:   addq    %rdx, %r12
  Inst 30474:   movq    %r13, %rdi
  Inst 30475:   addq    $-24, %rdi
  Inst 30476:   movq    %r13, %rsi
  Inst 30477:   load_ext_name %Memmove+0, %rax
  Inst 30478:   movq    %rbx, rsp(1424 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S177, S178, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30479:   call    *%rax
  Inst 30480:   movq    rsp(1424 + virtual offset), %rbx
  Inst 30481:   load_ext_name u1:1+0, %rsi
  Inst 30482:   movl    $1, %edi
  Inst 30483:   movq    %rdi, -8(%r13,%r14,8)
  Inst 30484:   movl    $1, %edi
  Inst 30485:   movq    %rdi, -16(%r13,%r14,8)
  Inst 30486:   movq    %rsi, -24(%r13,%r14,8)
  Inst 30487:   movq    rsp(2072 + virtual offset), %rsi
  Inst 30488:   movq    %r12, 152(%rsi)
  Inst 30489:   movq    %rbx, %rdi
  Inst 30490:   movq    %r15, %rsi
  Inst 30491:   load_ext_name u0:3+0, %rax
  Inst 30492:   movq    %rdi, rsp(1408 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30493:   call    *%rax
  Inst 30494:   jmp     label831
Block 831:
  (successor: Block 832)
  (instruction range: 30495 .. 30600)
  Inst 30495:   movq    %rax, rsp(1408 + virtual offset)
  Inst 30496:   nop     len=0
  Inst 30497:   nop     len=0
  Inst 30498:   nop     len=0
  Inst 30499:   nop     len=0
  Inst 30500:   nop     len=0
  Inst 30501:   nop     len=0
  Inst 30502:   nop     len=0
  Inst 30503:   nop     len=0
  Inst 30504:   nop     len=0
  Inst 30505:   nop     len=0
  Inst 30506:   nop     len=0
  Inst 30507:   nop     len=0
  Inst 30508:   nop     len=0
  Inst 30509:   nop     len=0
  Inst 30510:   nop     len=0
  Inst 30511:   nop     len=0
  Inst 30512:   nop     len=0
  Inst 30513:   nop     len=0
  Inst 30514:   nop     len=0
  Inst 30515:   nop     len=0
  Inst 30516:   nop     len=0
  Inst 30517:   nop     len=0
  Inst 30518:   nop     len=0
  Inst 30519:   nop     len=0
  Inst 30520:   nop     len=0
  Inst 30521:   nop     len=0
  Inst 30522:   nop     len=0
  Inst 30523:   nop     len=0
  Inst 30524:   nop     len=0
  Inst 30525:   nop     len=0
  Inst 30526:   nop     len=0
  Inst 30527:   nop     len=0
  Inst 30528:   nop     len=0
  Inst 30529:   nop     len=0
  Inst 30530:   nop     len=0
  Inst 30531:   nop     len=0
  Inst 30532:   nop     len=0
  Inst 30533:   nop     len=0
  Inst 30534:   nop     len=0
  Inst 30535:   nop     len=0
  Inst 30536:   nop     len=0
  Inst 30537:   nop     len=0
  Inst 30538:   nop     len=0
  Inst 30539:   nop     len=0
  Inst 30540:   nop     len=0
  Inst 30541:   nop     len=0
  Inst 30542:   nop     len=0
  Inst 30543:   nop     len=0
  Inst 30544:   nop     len=0
  Inst 30545:   nop     len=0
  Inst 30546:   nop     len=0
  Inst 30547:   nop     len=0
  Inst 30548:   nop     len=0
  Inst 30549:   nop     len=0
  Inst 30550:   nop     len=0
  Inst 30551:   nop     len=0
  Inst 30552:   nop     len=0
  Inst 30553:   nop     len=0
  Inst 30554:   nop     len=0
  Inst 30555:   nop     len=0
  Inst 30556:   nop     len=0
  Inst 30557:   nop     len=0
  Inst 30558:   nop     len=0
  Inst 30559:   nop     len=0
  Inst 30560:   nop     len=0
  Inst 30561:   nop     len=0
  Inst 30562:   nop     len=0
  Inst 30563:   nop     len=0
  Inst 30564:   nop     len=0
  Inst 30565:   nop     len=0
  Inst 30566:   nop     len=0
  Inst 30567:   nop     len=0
  Inst 30568:   nop     len=0
  Inst 30569:   nop     len=0
  Inst 30570:   nop     len=0
  Inst 30571:   nop     len=0
  Inst 30572:   nop     len=0
  Inst 30573:   nop     len=0
  Inst 30574:   nop     len=0
  Inst 30575:   nop     len=0
  Inst 30576:   nop     len=0
  Inst 30577:   nop     len=0
  Inst 30578:   nop     len=0
  Inst 30579:   nop     len=0
  Inst 30580:   nop     len=0
  Inst 30581:   nop     len=0
  Inst 30582:   nop     len=0
  Inst 30583:   nop     len=0
  Inst 30584:   nop     len=0
  Inst 30585:   nop     len=0
  Inst 30586:   nop     len=0
  Inst 30587:   nop     len=0
  Inst 30588:   nop     len=0
  Inst 30589:   nop     len=0
  Inst 30590:   nop     len=0
  Inst 30591:   nop     len=0
  Inst 30592:   nop     len=0
  Inst 30593:   nop     len=0
  Inst 30594:   nop     len=0
  Inst 30595:   nop     len=0
  Inst 30596:   nop     len=0
  Inst 30597:   nop     len=0
  Inst 30598:   nop     len=0
  Inst 30599:   jmp     label832
Block 832:
  (original IR block: block416)
  (successor: Block 833)
  (successor: Block 834)
  (instruction range: 30600 .. 30611)
  Inst 30600:   movq    rsp(2064 + virtual offset), %rsi
  Inst 30601:   movq    8(%rsi), %rdi
  Inst 30602:   movq    rsp(2048 + virtual offset), %rsi
  Inst 30603:   load_ext_name u0:2+0, %rax
  Inst 30604:   movq    %rsi, rsp(1424 + virtual offset)
  Inst 30605:   movq    %rdi, rsp(1440 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30606:   call    *%rax
  Inst 30607:   movq    %rax, %rbx
  Inst 30608:   movq    %rdx, %r14
  Inst 30609:   testq   %r14, %r14
  Inst 30610:   jz      label833; j label834
Block 833:
  (successor: Block 836)
  (instruction range: 30611 .. 30717)
  Inst 30611:   movq    %rbx, rsp(1920 + virtual offset)
  Inst 30612:   nop     len=0
  Inst 30613:   nop     len=0
  Inst 30614:   nop     len=0
  Inst 30615:   nop     len=0
  Inst 30616:   nop     len=0
  Inst 30617:   nop     len=0
  Inst 30618:   nop     len=0
  Inst 30619:   nop     len=0
  Inst 30620:   nop     len=0
  Inst 30621:   nop     len=0
  Inst 30622:   nop     len=0
  Inst 30623:   nop     len=0
  Inst 30624:   nop     len=0
  Inst 30625:   nop     len=0
  Inst 30626:   nop     len=0
  Inst 30627:   nop     len=0
  Inst 30628:   nop     len=0
  Inst 30629:   nop     len=0
  Inst 30630:   nop     len=0
  Inst 30631:   nop     len=0
  Inst 30632:   nop     len=0
  Inst 30633:   nop     len=0
  Inst 30634:   nop     len=0
  Inst 30635:   nop     len=0
  Inst 30636:   nop     len=0
  Inst 30637:   nop     len=0
  Inst 30638:   nop     len=0
  Inst 30639:   nop     len=0
  Inst 30640:   nop     len=0
  Inst 30641:   nop     len=0
  Inst 30642:   nop     len=0
  Inst 30643:   nop     len=0
  Inst 30644:   nop     len=0
  Inst 30645:   nop     len=0
  Inst 30646:   nop     len=0
  Inst 30647:   nop     len=0
  Inst 30648:   nop     len=0
  Inst 30649:   nop     len=0
  Inst 30650:   nop     len=0
  Inst 30651:   nop     len=0
  Inst 30652:   nop     len=0
  Inst 30653:   nop     len=0
  Inst 30654:   nop     len=0
  Inst 30655:   nop     len=0
  Inst 30656:   nop     len=0
  Inst 30657:   nop     len=0
  Inst 30658:   nop     len=0
  Inst 30659:   nop     len=0
  Inst 30660:   nop     len=0
  Inst 30661:   nop     len=0
  Inst 30662:   nop     len=0
  Inst 30663:   nop     len=0
  Inst 30664:   nop     len=0
  Inst 30665:   nop     len=0
  Inst 30666:   nop     len=0
  Inst 30667:   nop     len=0
  Inst 30668:   nop     len=0
  Inst 30669:   nop     len=0
  Inst 30670:   nop     len=0
  Inst 30671:   nop     len=0
  Inst 30672:   nop     len=0
  Inst 30673:   nop     len=0
  Inst 30674:   nop     len=0
  Inst 30675:   nop     len=0
  Inst 30676:   nop     len=0
  Inst 30677:   nop     len=0
  Inst 30678:   nop     len=0
  Inst 30679:   nop     len=0
  Inst 30680:   nop     len=0
  Inst 30681:   nop     len=0
  Inst 30682:   nop     len=0
  Inst 30683:   nop     len=0
  Inst 30684:   nop     len=0
  Inst 30685:   nop     len=0
  Inst 30686:   nop     len=0
  Inst 30687:   nop     len=0
  Inst 30688:   nop     len=0
  Inst 30689:   nop     len=0
  Inst 30690:   nop     len=0
  Inst 30691:   nop     len=0
  Inst 30692:   nop     len=0
  Inst 30693:   nop     len=0
  Inst 30694:   nop     len=0
  Inst 30695:   nop     len=0
  Inst 30696:   nop     len=0
  Inst 30697:   nop     len=0
  Inst 30698:   nop     len=0
  Inst 30699:   nop     len=0
  Inst 30700:   nop     len=0
  Inst 30701:   nop     len=0
  Inst 30702:   nop     len=0
  Inst 30703:   nop     len=0
  Inst 30704:   nop     len=0
  Inst 30705:   nop     len=0
  Inst 30706:   nop     len=0
  Inst 30707:   nop     len=0
  Inst 30708:   nop     len=0
  Inst 30709:   nop     len=0
  Inst 30710:   nop     len=0
  Inst 30711:   nop     len=0
  Inst 30712:   nop     len=0
  Inst 30713:   nop     len=0
  Inst 30714:   nop     len=0
  Inst 30715:   nop     len=0
  Inst 30716:   jmp     label836
Block 834:
  (original IR block: block419)
  (successor: Block 835)
  (instruction range: 30717 .. 30746)
  Inst 30717:   movq    rsp(2072 + virtual offset), %rsi
  Inst 30718:   movq    152(%rsi), %r13
  Inst 30719:   movq    %r14, %r15
  Inst 30720:   addq    $-1, %r15
  Inst 30721:   movq    %r14, %rdx
  Inst 30722:   shlq    $3, %rdx
  Inst 30723:   movq    %r13, %r12
  Inst 30724:   addq    %rdx, %r12
  Inst 30725:   movq    %r13, %rdi
  Inst 30726:   addq    $-24, %rdi
  Inst 30727:   movq    %r13, %rsi
  Inst 30728:   load_ext_name %Memmove+0, %rax
  Inst 30729:   movq    %rbx, rsp(1424 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30730:   call    *%rax
  Inst 30731:   movq    rsp(1424 + virtual offset), %rbx
  Inst 30732:   load_ext_name u1:1+0, %rsi
  Inst 30733:   movl    $1, %edi
  Inst 30734:   movq    %rdi, -8(%r13,%r14,8)
  Inst 30735:   movl    $1, %edi
  Inst 30736:   movq    %rdi, -16(%r13,%r14,8)
  Inst 30737:   movq    %rsi, -24(%r13,%r14,8)
  Inst 30738:   movq    rsp(2072 + virtual offset), %rsi
  Inst 30739:   movq    %r12, 152(%rsi)
  Inst 30740:   movq    %rbx, %rdi
  Inst 30741:   movq    %r15, %rsi
  Inst 30742:   load_ext_name u0:3+0, %rax
  Inst 30743:   movq    %rdi, rsp(1424 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30744:   call    *%rax
  Inst 30745:   jmp     label835
Block 835:
  (successor: Block 836)
  (instruction range: 30746 .. 30852)
  Inst 30746:   movq    %rax, rsp(1920 + virtual offset)
  Inst 30747:   nop     len=0
  Inst 30748:   nop     len=0
  Inst 30749:   nop     len=0
  Inst 30750:   nop     len=0
  Inst 30751:   nop     len=0
  Inst 30752:   nop     len=0
  Inst 30753:   nop     len=0
  Inst 30754:   nop     len=0
  Inst 30755:   nop     len=0
  Inst 30756:   nop     len=0
  Inst 30757:   nop     len=0
  Inst 30758:   nop     len=0
  Inst 30759:   nop     len=0
  Inst 30760:   nop     len=0
  Inst 30761:   nop     len=0
  Inst 30762:   nop     len=0
  Inst 30763:   nop     len=0
  Inst 30764:   nop     len=0
  Inst 30765:   nop     len=0
  Inst 30766:   nop     len=0
  Inst 30767:   nop     len=0
  Inst 30768:   nop     len=0
  Inst 30769:   nop     len=0
  Inst 30770:   nop     len=0
  Inst 30771:   nop     len=0
  Inst 30772:   nop     len=0
  Inst 30773:   nop     len=0
  Inst 30774:   nop     len=0
  Inst 30775:   nop     len=0
  Inst 30776:   nop     len=0
  Inst 30777:   nop     len=0
  Inst 30778:   nop     len=0
  Inst 30779:   nop     len=0
  Inst 30780:   nop     len=0
  Inst 30781:   nop     len=0
  Inst 30782:   nop     len=0
  Inst 30783:   nop     len=0
  Inst 30784:   nop     len=0
  Inst 30785:   nop     len=0
  Inst 30786:   nop     len=0
  Inst 30787:   nop     len=0
  Inst 30788:   nop     len=0
  Inst 30789:   nop     len=0
  Inst 30790:   nop     len=0
  Inst 30791:   nop     len=0
  Inst 30792:   nop     len=0
  Inst 30793:   nop     len=0
  Inst 30794:   nop     len=0
  Inst 30795:   nop     len=0
  Inst 30796:   nop     len=0
  Inst 30797:   nop     len=0
  Inst 30798:   nop     len=0
  Inst 30799:   nop     len=0
  Inst 30800:   nop     len=0
  Inst 30801:   nop     len=0
  Inst 30802:   nop     len=0
  Inst 30803:   nop     len=0
  Inst 30804:   nop     len=0
  Inst 30805:   nop     len=0
  Inst 30806:   nop     len=0
  Inst 30807:   nop     len=0
  Inst 30808:   nop     len=0
  Inst 30809:   nop     len=0
  Inst 30810:   nop     len=0
  Inst 30811:   nop     len=0
  Inst 30812:   nop     len=0
  Inst 30813:   nop     len=0
  Inst 30814:   nop     len=0
  Inst 30815:   nop     len=0
  Inst 30816:   nop     len=0
  Inst 30817:   nop     len=0
  Inst 30818:   nop     len=0
  Inst 30819:   nop     len=0
  Inst 30820:   nop     len=0
  Inst 30821:   nop     len=0
  Inst 30822:   nop     len=0
  Inst 30823:   nop     len=0
  Inst 30824:   nop     len=0
  Inst 30825:   nop     len=0
  Inst 30826:   nop     len=0
  Inst 30827:   nop     len=0
  Inst 30828:   nop     len=0
  Inst 30829:   nop     len=0
  Inst 30830:   nop     len=0
  Inst 30831:   nop     len=0
  Inst 30832:   nop     len=0
  Inst 30833:   nop     len=0
  Inst 30834:   nop     len=0
  Inst 30835:   nop     len=0
  Inst 30836:   nop     len=0
  Inst 30837:   nop     len=0
  Inst 30838:   nop     len=0
  Inst 30839:   nop     len=0
  Inst 30840:   nop     len=0
  Inst 30841:   nop     len=0
  Inst 30842:   nop     len=0
  Inst 30843:   nop     len=0
  Inst 30844:   nop     len=0
  Inst 30845:   nop     len=0
  Inst 30846:   nop     len=0
  Inst 30847:   nop     len=0
  Inst 30848:   nop     len=0
  Inst 30849:   nop     len=0
  Inst 30850:   nop     len=0
  Inst 30851:   jmp     label836
Block 836:
  (original IR block: block418)
  (successor: Block 837)
  (successor: Block 838)
  (instruction range: 30852 .. 30863)
  Inst 30852:   movq    rsp(2064 + virtual offset), %rsi
  Inst 30853:   movq    8(%rsi), %rdi
  Inst 30854:   movq    rsp(2048 + virtual offset), %rsi
  Inst 30855:   load_ext_name u0:2+0, %rax
  Inst 30856:   movq    %rsi, rsp(1424 + virtual offset)
  Inst 30857:   movq    %rdi, rsp(1440 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30858:   call    *%rax
  Inst 30859:   movq    %rax, %r15
  Inst 30860:   movq    %rdx, %r14
  Inst 30861:   testq   %r14, %r14
  Inst 30862:   jz      label837; j label838
Block 837:
  (successor: Block 840)
  (instruction range: 30863 .. 30969)
  Inst 30863:   movq    %r15, rsp(1424 + virtual offset)
  Inst 30864:   nop     len=0
  Inst 30865:   nop     len=0
  Inst 30866:   nop     len=0
  Inst 30867:   nop     len=0
  Inst 30868:   nop     len=0
  Inst 30869:   nop     len=0
  Inst 30870:   nop     len=0
  Inst 30871:   nop     len=0
  Inst 30872:   nop     len=0
  Inst 30873:   nop     len=0
  Inst 30874:   nop     len=0
  Inst 30875:   nop     len=0
  Inst 30876:   nop     len=0
  Inst 30877:   nop     len=0
  Inst 30878:   nop     len=0
  Inst 30879:   nop     len=0
  Inst 30880:   nop     len=0
  Inst 30881:   nop     len=0
  Inst 30882:   nop     len=0
  Inst 30883:   nop     len=0
  Inst 30884:   nop     len=0
  Inst 30885:   nop     len=0
  Inst 30886:   nop     len=0
  Inst 30887:   nop     len=0
  Inst 30888:   nop     len=0
  Inst 30889:   nop     len=0
  Inst 30890:   nop     len=0
  Inst 30891:   nop     len=0
  Inst 30892:   nop     len=0
  Inst 30893:   nop     len=0
  Inst 30894:   nop     len=0
  Inst 30895:   nop     len=0
  Inst 30896:   nop     len=0
  Inst 30897:   nop     len=0
  Inst 30898:   nop     len=0
  Inst 30899:   nop     len=0
  Inst 30900:   nop     len=0
  Inst 30901:   nop     len=0
  Inst 30902:   nop     len=0
  Inst 30903:   nop     len=0
  Inst 30904:   nop     len=0
  Inst 30905:   nop     len=0
  Inst 30906:   nop     len=0
  Inst 30907:   nop     len=0
  Inst 30908:   nop     len=0
  Inst 30909:   nop     len=0
  Inst 30910:   nop     len=0
  Inst 30911:   nop     len=0
  Inst 30912:   nop     len=0
  Inst 30913:   nop     len=0
  Inst 30914:   nop     len=0
  Inst 30915:   nop     len=0
  Inst 30916:   nop     len=0
  Inst 30917:   nop     len=0
  Inst 30918:   nop     len=0
  Inst 30919:   nop     len=0
  Inst 30920:   nop     len=0
  Inst 30921:   nop     len=0
  Inst 30922:   nop     len=0
  Inst 30923:   nop     len=0
  Inst 30924:   nop     len=0
  Inst 30925:   nop     len=0
  Inst 30926:   nop     len=0
  Inst 30927:   nop     len=0
  Inst 30928:   nop     len=0
  Inst 30929:   nop     len=0
  Inst 30930:   nop     len=0
  Inst 30931:   nop     len=0
  Inst 30932:   nop     len=0
  Inst 30933:   nop     len=0
  Inst 30934:   nop     len=0
  Inst 30935:   nop     len=0
  Inst 30936:   nop     len=0
  Inst 30937:   nop     len=0
  Inst 30938:   nop     len=0
  Inst 30939:   nop     len=0
  Inst 30940:   nop     len=0
  Inst 30941:   nop     len=0
  Inst 30942:   nop     len=0
  Inst 30943:   nop     len=0
  Inst 30944:   nop     len=0
  Inst 30945:   nop     len=0
  Inst 30946:   nop     len=0
  Inst 30947:   nop     len=0
  Inst 30948:   nop     len=0
  Inst 30949:   nop     len=0
  Inst 30950:   nop     len=0
  Inst 30951:   nop     len=0
  Inst 30952:   nop     len=0
  Inst 30953:   nop     len=0
  Inst 30954:   nop     len=0
  Inst 30955:   nop     len=0
  Inst 30956:   nop     len=0
  Inst 30957:   nop     len=0
  Inst 30958:   nop     len=0
  Inst 30959:   nop     len=0
  Inst 30960:   nop     len=0
  Inst 30961:   nop     len=0
  Inst 30962:   nop     len=0
  Inst 30963:   nop     len=0
  Inst 30964:   nop     len=0
  Inst 30965:   nop     len=0
  Inst 30966:   nop     len=0
  Inst 30967:   nop     len=0
  Inst 30968:   jmp     label840
Block 838:
  (original IR block: block421)
  (successor: Block 839)
  (instruction range: 30969 .. 30998)
  Inst 30969:   movq    rsp(2072 + virtual offset), %rsi
  Inst 30970:   movq    152(%rsi), %r13
  Inst 30971:   movq    %r14, %rbx
  Inst 30972:   addq    $-1, %rbx
  Inst 30973:   movq    %r14, %rdx
  Inst 30974:   shlq    $3, %rdx
  Inst 30975:   movq    %r13, %r12
  Inst 30976:   addq    %rdx, %r12
  Inst 30977:   movq    %r13, %rdi
  Inst 30978:   addq    $-24, %rdi
  Inst 30979:   movq    %r13, %rsi
  Inst 30980:   load_ext_name %Memmove+0, %rax
  Inst 30981:   movq    %r15, rsp(1440 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S179, S180, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30982:   call    *%rax
  Inst 30983:   movq    rsp(1440 + virtual offset), %r15
  Inst 30984:   load_ext_name u1:1+0, %rsi
  Inst 30985:   movl    $1, %edi
  Inst 30986:   movq    %rdi, -8(%r13,%r14,8)
  Inst 30987:   movl    $1, %edi
  Inst 30988:   movq    %rdi, -16(%r13,%r14,8)
  Inst 30989:   movq    %rsi, -24(%r13,%r14,8)
  Inst 30990:   movq    rsp(2072 + virtual offset), %rsi
  Inst 30991:   movq    %r12, 152(%rsi)
  Inst 30992:   movq    %r15, %rdi
  Inst 30993:   movq    %rbx, %rsi
  Inst 30994:   load_ext_name u0:3+0, %rax
  Inst 30995:   movq    %rdi, rsp(1424 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 30996:   call    *%rax
  Inst 30997:   jmp     label839
Block 839:
  (successor: Block 840)
  (instruction range: 30998 .. 31104)
  Inst 30998:   movq    %rax, rsp(1424 + virtual offset)
  Inst 30999:   nop     len=0
  Inst 31000:   nop     len=0
  Inst 31001:   nop     len=0
  Inst 31002:   nop     len=0
  Inst 31003:   nop     len=0
  Inst 31004:   nop     len=0
  Inst 31005:   nop     len=0
  Inst 31006:   nop     len=0
  Inst 31007:   nop     len=0
  Inst 31008:   nop     len=0
  Inst 31009:   nop     len=0
  Inst 31010:   nop     len=0
  Inst 31011:   nop     len=0
  Inst 31012:   nop     len=0
  Inst 31013:   nop     len=0
  Inst 31014:   nop     len=0
  Inst 31015:   nop     len=0
  Inst 31016:   nop     len=0
  Inst 31017:   nop     len=0
  Inst 31018:   nop     len=0
  Inst 31019:   nop     len=0
  Inst 31020:   nop     len=0
  Inst 31021:   nop     len=0
  Inst 31022:   nop     len=0
  Inst 31023:   nop     len=0
  Inst 31024:   nop     len=0
  Inst 31025:   nop     len=0
  Inst 31026:   nop     len=0
  Inst 31027:   nop     len=0
  Inst 31028:   nop     len=0
  Inst 31029:   nop     len=0
  Inst 31030:   nop     len=0
  Inst 31031:   nop     len=0
  Inst 31032:   nop     len=0
  Inst 31033:   nop     len=0
  Inst 31034:   nop     len=0
  Inst 31035:   nop     len=0
  Inst 31036:   nop     len=0
  Inst 31037:   nop     len=0
  Inst 31038:   nop     len=0
  Inst 31039:   nop     len=0
  Inst 31040:   nop     len=0
  Inst 31041:   nop     len=0
  Inst 31042:   nop     len=0
  Inst 31043:   nop     len=0
  Inst 31044:   nop     len=0
  Inst 31045:   nop     len=0
  Inst 31046:   nop     len=0
  Inst 31047:   nop     len=0
  Inst 31048:   nop     len=0
  Inst 31049:   nop     len=0
  Inst 31050:   nop     len=0
  Inst 31051:   nop     len=0
  Inst 31052:   nop     len=0
  Inst 31053:   nop     len=0
  Inst 31054:   nop     len=0
  Inst 31055:   nop     len=0
  Inst 31056:   nop     len=0
  Inst 31057:   nop     len=0
  Inst 31058:   nop     len=0
  Inst 31059:   nop     len=0
  Inst 31060:   nop     len=0
  Inst 31061:   nop     len=0
  Inst 31062:   nop     len=0
  Inst 31063:   nop     len=0
  Inst 31064:   nop     len=0
  Inst 31065:   nop     len=0
  Inst 31066:   nop     len=0
  Inst 31067:   nop     len=0
  Inst 31068:   nop     len=0
  Inst 31069:   nop     len=0
  Inst 31070:   nop     len=0
  Inst 31071:   nop     len=0
  Inst 31072:   nop     len=0
  Inst 31073:   nop     len=0
  Inst 31074:   nop     len=0
  Inst 31075:   nop     len=0
  Inst 31076:   nop     len=0
  Inst 31077:   nop     len=0
  Inst 31078:   nop     len=0
  Inst 31079:   nop     len=0
  Inst 31080:   nop     len=0
  Inst 31081:   nop     len=0
  Inst 31082:   nop     len=0
  Inst 31083:   nop     len=0
  Inst 31084:   nop     len=0
  Inst 31085:   nop     len=0
  Inst 31086:   nop     len=0
  Inst 31087:   nop     len=0
  Inst 31088:   nop     len=0
  Inst 31089:   nop     len=0
  Inst 31090:   nop     len=0
  Inst 31091:   nop     len=0
  Inst 31092:   nop     len=0
  Inst 31093:   nop     len=0
  Inst 31094:   nop     len=0
  Inst 31095:   nop     len=0
  Inst 31096:   nop     len=0
  Inst 31097:   nop     len=0
  Inst 31098:   nop     len=0
  Inst 31099:   nop     len=0
  Inst 31100:   nop     len=0
  Inst 31101:   nop     len=0
  Inst 31102:   nop     len=0
  Inst 31103:   jmp     label840
Block 840:
  (original IR block: block420)
  (successor: Block 841)
  (successor: Block 842)
  (instruction range: 31104 .. 31115)
  Inst 31104:   movq    rsp(2064 + virtual offset), %rsi
  Inst 31105:   movq    8(%rsi), %rdi
  Inst 31106:   movq    rsp(2048 + virtual offset), %rsi
  Inst 31107:   load_ext_name u0:2+0, %rax
  Inst 31108:   movq    %rsi, rsp(1440 + virtual offset)
  Inst 31109:   movq    %rdi, rsp(1456 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31110:   call    *%rax
  Inst 31111:   movq    %rax, %rbx
  Inst 31112:   movq    %rdx, %r14
  Inst 31113:   testq   %r14, %r14
  Inst 31114:   jz      label841; j label842
Block 841:
  (successor: Block 844)
  (instruction range: 31115 .. 31222)
  Inst 31115:   movq    %rbx, rsp(1912 + virtual offset)
  Inst 31116:   nop     len=0
  Inst 31117:   nop     len=0
  Inst 31118:   nop     len=0
  Inst 31119:   nop     len=0
  Inst 31120:   nop     len=0
  Inst 31121:   nop     len=0
  Inst 31122:   nop     len=0
  Inst 31123:   nop     len=0
  Inst 31124:   nop     len=0
  Inst 31125:   nop     len=0
  Inst 31126:   nop     len=0
  Inst 31127:   nop     len=0
  Inst 31128:   nop     len=0
  Inst 31129:   nop     len=0
  Inst 31130:   nop     len=0
  Inst 31131:   nop     len=0
  Inst 31132:   nop     len=0
  Inst 31133:   nop     len=0
  Inst 31134:   nop     len=0
  Inst 31135:   nop     len=0
  Inst 31136:   nop     len=0
  Inst 31137:   nop     len=0
  Inst 31138:   nop     len=0
  Inst 31139:   nop     len=0
  Inst 31140:   nop     len=0
  Inst 31141:   nop     len=0
  Inst 31142:   nop     len=0
  Inst 31143:   nop     len=0
  Inst 31144:   nop     len=0
  Inst 31145:   nop     len=0
  Inst 31146:   nop     len=0
  Inst 31147:   nop     len=0
  Inst 31148:   nop     len=0
  Inst 31149:   nop     len=0
  Inst 31150:   nop     len=0
  Inst 31151:   nop     len=0
  Inst 31152:   nop     len=0
  Inst 31153:   nop     len=0
  Inst 31154:   nop     len=0
  Inst 31155:   nop     len=0
  Inst 31156:   nop     len=0
  Inst 31157:   nop     len=0
  Inst 31158:   nop     len=0
  Inst 31159:   nop     len=0
  Inst 31160:   nop     len=0
  Inst 31161:   nop     len=0
  Inst 31162:   nop     len=0
  Inst 31163:   nop     len=0
  Inst 31164:   nop     len=0
  Inst 31165:   nop     len=0
  Inst 31166:   nop     len=0
  Inst 31167:   nop     len=0
  Inst 31168:   nop     len=0
  Inst 31169:   nop     len=0
  Inst 31170:   nop     len=0
  Inst 31171:   nop     len=0
  Inst 31172:   nop     len=0
  Inst 31173:   nop     len=0
  Inst 31174:   nop     len=0
  Inst 31175:   nop     len=0
  Inst 31176:   nop     len=0
  Inst 31177:   nop     len=0
  Inst 31178:   nop     len=0
  Inst 31179:   nop     len=0
  Inst 31180:   nop     len=0
  Inst 31181:   nop     len=0
  Inst 31182:   nop     len=0
  Inst 31183:   nop     len=0
  Inst 31184:   nop     len=0
  Inst 31185:   nop     len=0
  Inst 31186:   nop     len=0
  Inst 31187:   nop     len=0
  Inst 31188:   nop     len=0
  Inst 31189:   nop     len=0
  Inst 31190:   nop     len=0
  Inst 31191:   nop     len=0
  Inst 31192:   nop     len=0
  Inst 31193:   nop     len=0
  Inst 31194:   nop     len=0
  Inst 31195:   nop     len=0
  Inst 31196:   nop     len=0
  Inst 31197:   nop     len=0
  Inst 31198:   nop     len=0
  Inst 31199:   nop     len=0
  Inst 31200:   nop     len=0
  Inst 31201:   nop     len=0
  Inst 31202:   nop     len=0
  Inst 31203:   nop     len=0
  Inst 31204:   nop     len=0
  Inst 31205:   nop     len=0
  Inst 31206:   nop     len=0
  Inst 31207:   nop     len=0
  Inst 31208:   nop     len=0
  Inst 31209:   nop     len=0
  Inst 31210:   nop     len=0
  Inst 31211:   nop     len=0
  Inst 31212:   nop     len=0
  Inst 31213:   nop     len=0
  Inst 31214:   nop     len=0
  Inst 31215:   nop     len=0
  Inst 31216:   nop     len=0
  Inst 31217:   nop     len=0
  Inst 31218:   nop     len=0
  Inst 31219:   nop     len=0
  Inst 31220:   nop     len=0
  Inst 31221:   jmp     label844
Block 842:
  (original IR block: block423)
  (successor: Block 843)
  (instruction range: 31222 .. 31251)
  Inst 31222:   movq    rsp(2072 + virtual offset), %rsi
  Inst 31223:   movq    152(%rsi), %r13
  Inst 31224:   movq    %r14, %r15
  Inst 31225:   addq    $-1, %r15
  Inst 31226:   movq    %r14, %rdx
  Inst 31227:   shlq    $3, %rdx
  Inst 31228:   movq    %r13, %r12
  Inst 31229:   addq    %rdx, %r12
  Inst 31230:   movq    %r13, %rdi
  Inst 31231:   addq    $-24, %rdi
  Inst 31232:   movq    %r13, %rsi
  Inst 31233:   load_ext_name %Memmove+0, %rax
  Inst 31234:   movq    %rbx, rsp(1440 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31235:   call    *%rax
  Inst 31236:   movq    rsp(1440 + virtual offset), %rbx
  Inst 31237:   load_ext_name u1:1+0, %rsi
  Inst 31238:   movl    $1, %edi
  Inst 31239:   movq    %rdi, -8(%r13,%r14,8)
  Inst 31240:   movl    $1, %edi
  Inst 31241:   movq    %rdi, -16(%r13,%r14,8)
  Inst 31242:   movq    %rsi, -24(%r13,%r14,8)
  Inst 31243:   movq    rsp(2072 + virtual offset), %rsi
  Inst 31244:   movq    %r12, 152(%rsi)
  Inst 31245:   movq    %rbx, %rdi
  Inst 31246:   movq    %r15, %rsi
  Inst 31247:   load_ext_name u0:3+0, %rax
  Inst 31248:   movq    %rdi, rsp(1440 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31249:   call    *%rax
  Inst 31250:   jmp     label843
Block 843:
  (successor: Block 844)
  (instruction range: 31251 .. 31358)
  Inst 31251:   movq    %rax, rsp(1912 + virtual offset)
  Inst 31252:   nop     len=0
  Inst 31253:   nop     len=0
  Inst 31254:   nop     len=0
  Inst 31255:   nop     len=0
  Inst 31256:   nop     len=0
  Inst 31257:   nop     len=0
  Inst 31258:   nop     len=0
  Inst 31259:   nop     len=0
  Inst 31260:   nop     len=0
  Inst 31261:   nop     len=0
  Inst 31262:   nop     len=0
  Inst 31263:   nop     len=0
  Inst 31264:   nop     len=0
  Inst 31265:   nop     len=0
  Inst 31266:   nop     len=0
  Inst 31267:   nop     len=0
  Inst 31268:   nop     len=0
  Inst 31269:   nop     len=0
  Inst 31270:   nop     len=0
  Inst 31271:   nop     len=0
  Inst 31272:   nop     len=0
  Inst 31273:   nop     len=0
  Inst 31274:   nop     len=0
  Inst 31275:   nop     len=0
  Inst 31276:   nop     len=0
  Inst 31277:   nop     len=0
  Inst 31278:   nop     len=0
  Inst 31279:   nop     len=0
  Inst 31280:   nop     len=0
  Inst 31281:   nop     len=0
  Inst 31282:   nop     len=0
  Inst 31283:   nop     len=0
  Inst 31284:   nop     len=0
  Inst 31285:   nop     len=0
  Inst 31286:   nop     len=0
  Inst 31287:   nop     len=0
  Inst 31288:   nop     len=0
  Inst 31289:   nop     len=0
  Inst 31290:   nop     len=0
  Inst 31291:   nop     len=0
  Inst 31292:   nop     len=0
  Inst 31293:   nop     len=0
  Inst 31294:   nop     len=0
  Inst 31295:   nop     len=0
  Inst 31296:   nop     len=0
  Inst 31297:   nop     len=0
  Inst 31298:   nop     len=0
  Inst 31299:   nop     len=0
  Inst 31300:   nop     len=0
  Inst 31301:   nop     len=0
  Inst 31302:   nop     len=0
  Inst 31303:   nop     len=0
  Inst 31304:   nop     len=0
  Inst 31305:   nop     len=0
  Inst 31306:   nop     len=0
  Inst 31307:   nop     len=0
  Inst 31308:   nop     len=0
  Inst 31309:   nop     len=0
  Inst 31310:   nop     len=0
  Inst 31311:   nop     len=0
  Inst 31312:   nop     len=0
  Inst 31313:   nop     len=0
  Inst 31314:   nop     len=0
  Inst 31315:   nop     len=0
  Inst 31316:   nop     len=0
  Inst 31317:   nop     len=0
  Inst 31318:   nop     len=0
  Inst 31319:   nop     len=0
  Inst 31320:   nop     len=0
  Inst 31321:   nop     len=0
  Inst 31322:   nop     len=0
  Inst 31323:   nop     len=0
  Inst 31324:   nop     len=0
  Inst 31325:   nop     len=0
  Inst 31326:   nop     len=0
  Inst 31327:   nop     len=0
  Inst 31328:   nop     len=0
  Inst 31329:   nop     len=0
  Inst 31330:   nop     len=0
  Inst 31331:   nop     len=0
  Inst 31332:   nop     len=0
  Inst 31333:   nop     len=0
  Inst 31334:   nop     len=0
  Inst 31335:   nop     len=0
  Inst 31336:   nop     len=0
  Inst 31337:   nop     len=0
  Inst 31338:   nop     len=0
  Inst 31339:   nop     len=0
  Inst 31340:   nop     len=0
  Inst 31341:   nop     len=0
  Inst 31342:   nop     len=0
  Inst 31343:   nop     len=0
  Inst 31344:   nop     len=0
  Inst 31345:   nop     len=0
  Inst 31346:   nop     len=0
  Inst 31347:   nop     len=0
  Inst 31348:   nop     len=0
  Inst 31349:   nop     len=0
  Inst 31350:   nop     len=0
  Inst 31351:   nop     len=0
  Inst 31352:   nop     len=0
  Inst 31353:   nop     len=0
  Inst 31354:   nop     len=0
  Inst 31355:   nop     len=0
  Inst 31356:   nop     len=0
  Inst 31357:   jmp     label844
Block 844:
  (original IR block: block422)
  (successor: Block 845)
  (successor: Block 846)
  (instruction range: 31358 .. 31369)
  Inst 31358:   movq    rsp(2064 + virtual offset), %rsi
  Inst 31359:   movq    8(%rsi), %rdi
  Inst 31360:   movq    rsp(2048 + virtual offset), %rsi
  Inst 31361:   load_ext_name u0:2+0, %rax
  Inst 31362:   movq    %rsi, rsp(1440 + virtual offset)
  Inst 31363:   movq    %rdi, rsp(1456 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31364:   call    *%rax
  Inst 31365:   movq    %rax, %rbx
  Inst 31366:   movq    %rdx, %r14
  Inst 31367:   testq   %r14, %r14
  Inst 31368:   jz      label845; j label846
Block 845:
  (successor: Block 848)
  (instruction range: 31369 .. 31476)
  Inst 31369:   movq    %rbx, rsp(1440 + virtual offset)
  Inst 31370:   nop     len=0
  Inst 31371:   nop     len=0
  Inst 31372:   nop     len=0
  Inst 31373:   nop     len=0
  Inst 31374:   nop     len=0
  Inst 31375:   nop     len=0
  Inst 31376:   nop     len=0
  Inst 31377:   nop     len=0
  Inst 31378:   nop     len=0
  Inst 31379:   nop     len=0
  Inst 31380:   nop     len=0
  Inst 31381:   nop     len=0
  Inst 31382:   nop     len=0
  Inst 31383:   nop     len=0
  Inst 31384:   nop     len=0
  Inst 31385:   nop     len=0
  Inst 31386:   nop     len=0
  Inst 31387:   nop     len=0
  Inst 31388:   nop     len=0
  Inst 31389:   nop     len=0
  Inst 31390:   nop     len=0
  Inst 31391:   nop     len=0
  Inst 31392:   nop     len=0
  Inst 31393:   nop     len=0
  Inst 31394:   nop     len=0
  Inst 31395:   nop     len=0
  Inst 31396:   nop     len=0
  Inst 31397:   nop     len=0
  Inst 31398:   nop     len=0
  Inst 31399:   nop     len=0
  Inst 31400:   nop     len=0
  Inst 31401:   nop     len=0
  Inst 31402:   nop     len=0
  Inst 31403:   nop     len=0
  Inst 31404:   nop     len=0
  Inst 31405:   nop     len=0
  Inst 31406:   nop     len=0
  Inst 31407:   nop     len=0
  Inst 31408:   nop     len=0
  Inst 31409:   nop     len=0
  Inst 31410:   nop     len=0
  Inst 31411:   nop     len=0
  Inst 31412:   nop     len=0
  Inst 31413:   nop     len=0
  Inst 31414:   nop     len=0
  Inst 31415:   nop     len=0
  Inst 31416:   nop     len=0
  Inst 31417:   nop     len=0
  Inst 31418:   nop     len=0
  Inst 31419:   nop     len=0
  Inst 31420:   nop     len=0
  Inst 31421:   nop     len=0
  Inst 31422:   nop     len=0
  Inst 31423:   nop     len=0
  Inst 31424:   nop     len=0
  Inst 31425:   nop     len=0
  Inst 31426:   nop     len=0
  Inst 31427:   nop     len=0
  Inst 31428:   nop     len=0
  Inst 31429:   nop     len=0
  Inst 31430:   nop     len=0
  Inst 31431:   nop     len=0
  Inst 31432:   nop     len=0
  Inst 31433:   nop     len=0
  Inst 31434:   nop     len=0
  Inst 31435:   nop     len=0
  Inst 31436:   nop     len=0
  Inst 31437:   nop     len=0
  Inst 31438:   nop     len=0
  Inst 31439:   nop     len=0
  Inst 31440:   nop     len=0
  Inst 31441:   nop     len=0
  Inst 31442:   nop     len=0
  Inst 31443:   nop     len=0
  Inst 31444:   nop     len=0
  Inst 31445:   nop     len=0
  Inst 31446:   nop     len=0
  Inst 31447:   nop     len=0
  Inst 31448:   nop     len=0
  Inst 31449:   nop     len=0
  Inst 31450:   nop     len=0
  Inst 31451:   nop     len=0
  Inst 31452:   nop     len=0
  Inst 31453:   nop     len=0
  Inst 31454:   nop     len=0
  Inst 31455:   nop     len=0
  Inst 31456:   nop     len=0
  Inst 31457:   nop     len=0
  Inst 31458:   nop     len=0
  Inst 31459:   nop     len=0
  Inst 31460:   nop     len=0
  Inst 31461:   nop     len=0
  Inst 31462:   nop     len=0
  Inst 31463:   nop     len=0
  Inst 31464:   nop     len=0
  Inst 31465:   nop     len=0
  Inst 31466:   nop     len=0
  Inst 31467:   nop     len=0
  Inst 31468:   nop     len=0
  Inst 31469:   nop     len=0
  Inst 31470:   nop     len=0
  Inst 31471:   nop     len=0
  Inst 31472:   nop     len=0
  Inst 31473:   nop     len=0
  Inst 31474:   nop     len=0
  Inst 31475:   jmp     label848
Block 846:
  (original IR block: block425)
  (successor: Block 847)
  (instruction range: 31476 .. 31505)
  Inst 31476:   movq    rsp(2072 + virtual offset), %rsi
  Inst 31477:   movq    152(%rsi), %r13
  Inst 31478:   movq    %r14, %r15
  Inst 31479:   addq    $-1, %r15
  Inst 31480:   movq    %r14, %rdx
  Inst 31481:   shlq    $3, %rdx
  Inst 31482:   movq    %r13, %r12
  Inst 31483:   addq    %rdx, %r12
  Inst 31484:   movq    %r13, %rdi
  Inst 31485:   addq    $-24, %rdi
  Inst 31486:   movq    %r13, %rsi
  Inst 31487:   load_ext_name %Memmove+0, %rax
  Inst 31488:   movq    %rbx, rsp(1456 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S181, S182, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31489:   call    *%rax
  Inst 31490:   movq    rsp(1456 + virtual offset), %rbx
  Inst 31491:   load_ext_name u1:1+0, %rsi
  Inst 31492:   movl    $1, %edi
  Inst 31493:   movq    %rdi, -8(%r13,%r14,8)
  Inst 31494:   movl    $1, %edi
  Inst 31495:   movq    %rdi, -16(%r13,%r14,8)
  Inst 31496:   movq    %rsi, -24(%r13,%r14,8)
  Inst 31497:   movq    rsp(2072 + virtual offset), %rsi
  Inst 31498:   movq    %r12, 152(%rsi)
  Inst 31499:   movq    %rbx, %rdi
  Inst 31500:   movq    %r15, %rsi
  Inst 31501:   load_ext_name u0:3+0, %rax
  Inst 31502:   movq    %rdi, rsp(1440 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31503:   call    *%rax
  Inst 31504:   jmp     label847
Block 847:
  (successor: Block 848)
  (instruction range: 31505 .. 31612)
  Inst 31505:   movq    %rax, rsp(1440 + virtual offset)
  Inst 31506:   nop     len=0
  Inst 31507:   nop     len=0
  Inst 31508:   nop     len=0
  Inst 31509:   nop     len=0
  Inst 31510:   nop     len=0
  Inst 31511:   nop     len=0
  Inst 31512:   nop     len=0
  Inst 31513:   nop     len=0
  Inst 31514:   nop     len=0
  Inst 31515:   nop     len=0
  Inst 31516:   nop     len=0
  Inst 31517:   nop     len=0
  Inst 31518:   nop     len=0
  Inst 31519:   nop     len=0
  Inst 31520:   nop     len=0
  Inst 31521:   nop     len=0
  Inst 31522:   nop     len=0
  Inst 31523:   nop     len=0
  Inst 31524:   nop     len=0
  Inst 31525:   nop     len=0
  Inst 31526:   nop     len=0
  Inst 31527:   nop     len=0
  Inst 31528:   nop     len=0
  Inst 31529:   nop     len=0
  Inst 31530:   nop     len=0
  Inst 31531:   nop     len=0
  Inst 31532:   nop     len=0
  Inst 31533:   nop     len=0
  Inst 31534:   nop     len=0
  Inst 31535:   nop     len=0
  Inst 31536:   nop     len=0
  Inst 31537:   nop     len=0
  Inst 31538:   nop     len=0
  Inst 31539:   nop     len=0
  Inst 31540:   nop     len=0
  Inst 31541:   nop     len=0
  Inst 31542:   nop     len=0
  Inst 31543:   nop     len=0
  Inst 31544:   nop     len=0
  Inst 31545:   nop     len=0
  Inst 31546:   nop     len=0
  Inst 31547:   nop     len=0
  Inst 31548:   nop     len=0
  Inst 31549:   nop     len=0
  Inst 31550:   nop     len=0
  Inst 31551:   nop     len=0
  Inst 31552:   nop     len=0
  Inst 31553:   nop     len=0
  Inst 31554:   nop     len=0
  Inst 31555:   nop     len=0
  Inst 31556:   nop     len=0
  Inst 31557:   nop     len=0
  Inst 31558:   nop     len=0
  Inst 31559:   nop     len=0
  Inst 31560:   nop     len=0
  Inst 31561:   nop     len=0
  Inst 31562:   nop     len=0
  Inst 31563:   nop     len=0
  Inst 31564:   nop     len=0
  Inst 31565:   nop     len=0
  Inst 31566:   nop     len=0
  Inst 31567:   nop     len=0
  Inst 31568:   nop     len=0
  Inst 31569:   nop     len=0
  Inst 31570:   nop     len=0
  Inst 31571:   nop     len=0
  Inst 31572:   nop     len=0
  Inst 31573:   nop     len=0
  Inst 31574:   nop     len=0
  Inst 31575:   nop     len=0
  Inst 31576:   nop     len=0
  Inst 31577:   nop     len=0
  Inst 31578:   nop     len=0
  Inst 31579:   nop     len=0
  Inst 31580:   nop     len=0
  Inst 31581:   nop     len=0
  Inst 31582:   nop     len=0
  Inst 31583:   nop     len=0
  Inst 31584:   nop     len=0
  Inst 31585:   nop     len=0
  Inst 31586:   nop     len=0
  Inst 31587:   nop     len=0
  Inst 31588:   nop     len=0
  Inst 31589:   nop     len=0
  Inst 31590:   nop     len=0
  Inst 31591:   nop     len=0
  Inst 31592:   nop     len=0
  Inst 31593:   nop     len=0
  Inst 31594:   nop     len=0
  Inst 31595:   nop     len=0
  Inst 31596:   nop     len=0
  Inst 31597:   nop     len=0
  Inst 31598:   nop     len=0
  Inst 31599:   nop     len=0
  Inst 31600:   nop     len=0
  Inst 31601:   nop     len=0
  Inst 31602:   nop     len=0
  Inst 31603:   nop     len=0
  Inst 31604:   nop     len=0
  Inst 31605:   nop     len=0
  Inst 31606:   nop     len=0
  Inst 31607:   nop     len=0
  Inst 31608:   nop     len=0
  Inst 31609:   nop     len=0
  Inst 31610:   nop     len=0
  Inst 31611:   jmp     label848
Block 848:
  (original IR block: block424)
  (successor: Block 849)
  (successor: Block 850)
  (instruction range: 31612 .. 31623)
  Inst 31612:   movq    rsp(2064 + virtual offset), %rsi
  Inst 31613:   movq    8(%rsi), %rdi
  Inst 31614:   movq    rsp(2048 + virtual offset), %rsi
  Inst 31615:   load_ext_name u0:2+0, %rax
  Inst 31616:   movq    %rsi, rsp(1456 + virtual offset)
  Inst 31617:   movq    %rdi, rsp(1472 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31618:   call    *%rax
  Inst 31619:   movq    %rax, %r15
  Inst 31620:   movq    %rdx, %r14
  Inst 31621:   testq   %r14, %r14
  Inst 31622:   jz      label849; j label850
Block 849:
  (successor: Block 852)
  (instruction range: 31623 .. 31731)
  Inst 31623:   movq    %r15, rsp(1904 + virtual offset)
  Inst 31624:   nop     len=0
  Inst 31625:   nop     len=0
  Inst 31626:   nop     len=0
  Inst 31627:   nop     len=0
  Inst 31628:   nop     len=0
  Inst 31629:   nop     len=0
  Inst 31630:   nop     len=0
  Inst 31631:   nop     len=0
  Inst 31632:   nop     len=0
  Inst 31633:   nop     len=0
  Inst 31634:   nop     len=0
  Inst 31635:   nop     len=0
  Inst 31636:   nop     len=0
  Inst 31637:   nop     len=0
  Inst 31638:   nop     len=0
  Inst 31639:   nop     len=0
  Inst 31640:   nop     len=0
  Inst 31641:   nop     len=0
  Inst 31642:   nop     len=0
  Inst 31643:   nop     len=0
  Inst 31644:   nop     len=0
  Inst 31645:   nop     len=0
  Inst 31646:   nop     len=0
  Inst 31647:   nop     len=0
  Inst 31648:   nop     len=0
  Inst 31649:   nop     len=0
  Inst 31650:   nop     len=0
  Inst 31651:   nop     len=0
  Inst 31652:   nop     len=0
  Inst 31653:   nop     len=0
  Inst 31654:   nop     len=0
  Inst 31655:   nop     len=0
  Inst 31656:   nop     len=0
  Inst 31657:   nop     len=0
  Inst 31658:   nop     len=0
  Inst 31659:   nop     len=0
  Inst 31660:   nop     len=0
  Inst 31661:   nop     len=0
  Inst 31662:   nop     len=0
  Inst 31663:   nop     len=0
  Inst 31664:   nop     len=0
  Inst 31665:   nop     len=0
  Inst 31666:   nop     len=0
  Inst 31667:   nop     len=0
  Inst 31668:   nop     len=0
  Inst 31669:   nop     len=0
  Inst 31670:   nop     len=0
  Inst 31671:   nop     len=0
  Inst 31672:   nop     len=0
  Inst 31673:   nop     len=0
  Inst 31674:   nop     len=0
  Inst 31675:   nop     len=0
  Inst 31676:   nop     len=0
  Inst 31677:   nop     len=0
  Inst 31678:   nop     len=0
  Inst 31679:   nop     len=0
  Inst 31680:   nop     len=0
  Inst 31681:   nop     len=0
  Inst 31682:   nop     len=0
  Inst 31683:   nop     len=0
  Inst 31684:   nop     len=0
  Inst 31685:   nop     len=0
  Inst 31686:   nop     len=0
  Inst 31687:   nop     len=0
  Inst 31688:   nop     len=0
  Inst 31689:   nop     len=0
  Inst 31690:   nop     len=0
  Inst 31691:   nop     len=0
  Inst 31692:   nop     len=0
  Inst 31693:   nop     len=0
  Inst 31694:   nop     len=0
  Inst 31695:   nop     len=0
  Inst 31696:   nop     len=0
  Inst 31697:   nop     len=0
  Inst 31698:   nop     len=0
  Inst 31699:   nop     len=0
  Inst 31700:   nop     len=0
  Inst 31701:   nop     len=0
  Inst 31702:   nop     len=0
  Inst 31703:   nop     len=0
  Inst 31704:   nop     len=0
  Inst 31705:   nop     len=0
  Inst 31706:   nop     len=0
  Inst 31707:   nop     len=0
  Inst 31708:   nop     len=0
  Inst 31709:   nop     len=0
  Inst 31710:   nop     len=0
  Inst 31711:   nop     len=0
  Inst 31712:   nop     len=0
  Inst 31713:   nop     len=0
  Inst 31714:   nop     len=0
  Inst 31715:   nop     len=0
  Inst 31716:   nop     len=0
  Inst 31717:   nop     len=0
  Inst 31718:   nop     len=0
  Inst 31719:   nop     len=0
  Inst 31720:   nop     len=0
  Inst 31721:   nop     len=0
  Inst 31722:   nop     len=0
  Inst 31723:   nop     len=0
  Inst 31724:   nop     len=0
  Inst 31725:   nop     len=0
  Inst 31726:   nop     len=0
  Inst 31727:   nop     len=0
  Inst 31728:   nop     len=0
  Inst 31729:   nop     len=0
  Inst 31730:   jmp     label852
Block 850:
  (original IR block: block427)
  (successor: Block 851)
  (instruction range: 31731 .. 31760)
  Inst 31731:   movq    rsp(2072 + virtual offset), %rsi
  Inst 31732:   movq    152(%rsi), %r13
  Inst 31733:   movq    %r14, %rbx
  Inst 31734:   addq    $-1, %rbx
  Inst 31735:   movq    %r14, %rdx
  Inst 31736:   shlq    $3, %rdx
  Inst 31737:   movq    %r13, %r12
  Inst 31738:   addq    %rdx, %r12
  Inst 31739:   movq    %r13, %rdi
  Inst 31740:   addq    $-24, %rdi
  Inst 31741:   movq    %r13, %rsi
  Inst 31742:   load_ext_name %Memmove+0, %rax
  Inst 31743:   movq    %r15, rsp(1456 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31744:   call    *%rax
  Inst 31745:   movq    rsp(1456 + virtual offset), %r15
  Inst 31746:   load_ext_name u1:1+0, %rsi
  Inst 31747:   movl    $1, %edi
  Inst 31748:   movq    %rdi, -8(%r13,%r14,8)
  Inst 31749:   movl    $1, %edi
  Inst 31750:   movq    %rdi, -16(%r13,%r14,8)
  Inst 31751:   movq    %rsi, -24(%r13,%r14,8)
  Inst 31752:   movq    rsp(2072 + virtual offset), %rsi
  Inst 31753:   movq    %r12, 152(%rsi)
  Inst 31754:   movq    %r15, %rdi
  Inst 31755:   movq    %rbx, %rsi
  Inst 31756:   load_ext_name u0:3+0, %rax
  Inst 31757:   movq    %rdi, rsp(1456 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31758:   call    *%rax
  Inst 31759:   jmp     label851
Block 851:
  (successor: Block 852)
  (instruction range: 31760 .. 31868)
  Inst 31760:   movq    %rax, rsp(1904 + virtual offset)
  Inst 31761:   nop     len=0
  Inst 31762:   nop     len=0
  Inst 31763:   nop     len=0
  Inst 31764:   nop     len=0
  Inst 31765:   nop     len=0
  Inst 31766:   nop     len=0
  Inst 31767:   nop     len=0
  Inst 31768:   nop     len=0
  Inst 31769:   nop     len=0
  Inst 31770:   nop     len=0
  Inst 31771:   nop     len=0
  Inst 31772:   nop     len=0
  Inst 31773:   nop     len=0
  Inst 31774:   nop     len=0
  Inst 31775:   nop     len=0
  Inst 31776:   nop     len=0
  Inst 31777:   nop     len=0
  Inst 31778:   nop     len=0
  Inst 31779:   nop     len=0
  Inst 31780:   nop     len=0
  Inst 31781:   nop     len=0
  Inst 31782:   nop     len=0
  Inst 31783:   nop     len=0
  Inst 31784:   nop     len=0
  Inst 31785:   nop     len=0
  Inst 31786:   nop     len=0
  Inst 31787:   nop     len=0
  Inst 31788:   nop     len=0
  Inst 31789:   nop     len=0
  Inst 31790:   nop     len=0
  Inst 31791:   nop     len=0
  Inst 31792:   nop     len=0
  Inst 31793:   nop     len=0
  Inst 31794:   nop     len=0
  Inst 31795:   nop     len=0
  Inst 31796:   nop     len=0
  Inst 31797:   nop     len=0
  Inst 31798:   nop     len=0
  Inst 31799:   nop     len=0
  Inst 31800:   nop     len=0
  Inst 31801:   nop     len=0
  Inst 31802:   nop     len=0
  Inst 31803:   nop     len=0
  Inst 31804:   nop     len=0
  Inst 31805:   nop     len=0
  Inst 31806:   nop     len=0
  Inst 31807:   nop     len=0
  Inst 31808:   nop     len=0
  Inst 31809:   nop     len=0
  Inst 31810:   nop     len=0
  Inst 31811:   nop     len=0
  Inst 31812:   nop     len=0
  Inst 31813:   nop     len=0
  Inst 31814:   nop     len=0
  Inst 31815:   nop     len=0
  Inst 31816:   nop     len=0
  Inst 31817:   nop     len=0
  Inst 31818:   nop     len=0
  Inst 31819:   nop     len=0
  Inst 31820:   nop     len=0
  Inst 31821:   nop     len=0
  Inst 31822:   nop     len=0
  Inst 31823:   nop     len=0
  Inst 31824:   nop     len=0
  Inst 31825:   nop     len=0
  Inst 31826:   nop     len=0
  Inst 31827:   nop     len=0
  Inst 31828:   nop     len=0
  Inst 31829:   nop     len=0
  Inst 31830:   nop     len=0
  Inst 31831:   nop     len=0
  Inst 31832:   nop     len=0
  Inst 31833:   nop     len=0
  Inst 31834:   nop     len=0
  Inst 31835:   nop     len=0
  Inst 31836:   nop     len=0
  Inst 31837:   nop     len=0
  Inst 31838:   nop     len=0
  Inst 31839:   nop     len=0
  Inst 31840:   nop     len=0
  Inst 31841:   nop     len=0
  Inst 31842:   nop     len=0
  Inst 31843:   nop     len=0
  Inst 31844:   nop     len=0
  Inst 31845:   nop     len=0
  Inst 31846:   nop     len=0
  Inst 31847:   nop     len=0
  Inst 31848:   nop     len=0
  Inst 31849:   nop     len=0
  Inst 31850:   nop     len=0
  Inst 31851:   nop     len=0
  Inst 31852:   nop     len=0
  Inst 31853:   nop     len=0
  Inst 31854:   nop     len=0
  Inst 31855:   nop     len=0
  Inst 31856:   nop     len=0
  Inst 31857:   nop     len=0
  Inst 31858:   nop     len=0
  Inst 31859:   nop     len=0
  Inst 31860:   nop     len=0
  Inst 31861:   nop     len=0
  Inst 31862:   nop     len=0
  Inst 31863:   nop     len=0
  Inst 31864:   nop     len=0
  Inst 31865:   nop     len=0
  Inst 31866:   nop     len=0
  Inst 31867:   jmp     label852
Block 852:
  (original IR block: block426)
  (successor: Block 853)
  (successor: Block 854)
  (instruction range: 31868 .. 31879)
  Inst 31868:   movq    rsp(2064 + virtual offset), %rsi
  Inst 31869:   movq    8(%rsi), %rdi
  Inst 31870:   movq    rsp(2048 + virtual offset), %rsi
  Inst 31871:   load_ext_name u0:2+0, %rax
  Inst 31872:   movq    %rsi, rsp(1456 + virtual offset)
  Inst 31873:   movq    %rdi, rsp(1472 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 31874:   call    *%rax
  Inst 31875:   movq    %rax, %rbx
  Inst 31876:   movq    %rdx, %r14
  Inst 31877:   testq   %r14, %r14
  Inst 31878:   jz      label853; j label854
Block 853:
  (successor: Block 856)
  (instruction range: 31879 .. 31987)
  Inst 31879:   movq    %rbx, rsp(1456 + virtual offset)
  Inst 31880:   nop     len=0
  Inst 31881:   nop     len=0
  Inst 31882:   nop     len=0
  Inst 31883:   nop     len=0
  Inst 31884:   nop     len=0
  Inst 31885:   nop     len=0
  Inst 31886:   nop     len=0
  Inst 31887:   nop     len=0
  Inst 31888:   nop     len=0
  Inst 31889:   nop     len=0
  Inst 31890:   nop     len=0
  Inst 31891:   nop     len=0
  Inst 31892:   nop     len=0
  Inst 31893:   nop     len=0
  Inst 31894:   nop     len=0
  Inst 31895:   nop     len=0
  Inst 31896:   nop     len=0
  Inst 31897:   nop     len=0
  Inst 31898:   nop     len=0
  Inst 31899:   nop     len=0
  Inst 31900:   nop     len=0
  Inst 31901:   nop     len=0
  Inst 31902:   nop     len=0
  Inst 31903:   nop     len=0
  Inst 31904:   nop     len=0
  Inst 31905:   nop     len=0
  Inst 31906:   nop     len=0
  Inst 31907:   nop     len=0
  Inst 31908:   nop     len=0
  Inst 31909:   nop     len=0
  Inst 31910:   nop     len=0
  Inst 31911:   nop     len=0
  Inst 31912:   nop     len=0
  Inst 31913:   nop     len=0
  Inst 31914:   nop     len=0
  Inst 31915:   nop     len=0
  Inst 31916:   nop     len=0
  Inst 31917:   nop     len=0
  Inst 31918:   nop     len=0
  Inst 31919:   nop     len=0
  Inst 31920:   nop     len=0
  Inst 31921:   nop     len=0
  Inst 31922:   nop     len=0
  Inst 31923:   nop     len=0
  Inst 31924:   nop     len=0
  Inst 31925:   nop     len=0
  Inst 31926:   nop     len=0
  Inst 31927:   nop     len=0
  Inst 31928:   nop     len=0
  Inst 31929:   nop     len=0
  Inst 31930:   nop     len=0
  Inst 31931:   nop     len=0
  Inst 31932:   nop     len=0
  Inst 31933:   nop     len=0
  Inst 31934:   nop     len=0
  Inst 31935:   nop     len=0
  Inst 31936:   nop     len=0
  Inst 31937:   nop     len=0
  Inst 31938:   nop     len=0
  Inst 31939:   nop     len=0
  Inst 31940:   nop     len=0
  Inst 31941:   nop     len=0
  Inst 31942:   nop     len=0
  Inst 31943:   nop     len=0
  Inst 31944:   nop     len=0
  Inst 31945:   nop     len=0
  Inst 31946:   nop     len=0
  Inst 31947:   nop     len=0
  Inst 31948:   nop     len=0
  Inst 31949:   nop     len=0
  Inst 31950:   nop     len=0
  Inst 31951:   nop     len=0
  Inst 31952:   nop     len=0
  Inst 31953:   nop     len=0
  Inst 31954:   nop     len=0
  Inst 31955:   nop     len=0
  Inst 31956:   nop     len=0
  Inst 31957:   nop     len=0
  Inst 31958:   nop     len=0
  Inst 31959:   nop     len=0
  Inst 31960:   nop     len=0
  Inst 31961:   nop     len=0
  Inst 31962:   nop     len=0
  Inst 31963:   nop     len=0
  Inst 31964:   nop     len=0
  Inst 31965:   nop     len=0
  Inst 31966:   nop     len=0
  Inst 31967:   nop     len=0
  Inst 31968:   nop     len=0
  Inst 31969:   nop     len=0
  Inst 31970:   nop     len=0
  Inst 31971:   nop     len=0
  Inst 31972:   nop     len=0
  Inst 31973:   nop     len=0
  Inst 31974:   nop     len=0
  Inst 31975:   nop     len=0
  Inst 31976:   nop     len=0
  Inst 31977:   nop     len=0
  Inst 31978:   nop     len=0
  Inst 31979:   nop     len=0
  Inst 31980:   nop     len=0
  Inst 31981:   nop     len=0
  Inst 31982:   nop     len=0
  Inst 31983:   nop     len=0
  Inst 31984:   nop     len=0
  Inst 31985:   nop     len=0
  Inst 31986:   jmp     label856
Block 854:
  (original IR block: block429)
  (successor: Block 855)
  (instruction range: 31987 .. 32016)
  Inst 31987:   movq    rsp(2072 + virtual offset), %rsi
  Inst 31988:   movq    152(%rsi), %r13
  Inst 31989:   movq    %r14, %r15
  Inst 31990:   addq    $-1, %r15
  Inst 31991:   movq    %r14, %rdx
  Inst 31992:   shlq    $3, %rdx
  Inst 31993:   movq    %r13, %r12
  Inst 31994:   addq    %rdx, %r12
  Inst 31995:   movq    %r13, %rdi
  Inst 31996:   addq    $-24, %rdi
  Inst 31997:   movq    %r13, %rsi
  Inst 31998:   load_ext_name %Memmove+0, %rax
  Inst 31999:   movq    %rbx, rsp(1472 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S183, S184, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32000:   call    *%rax
  Inst 32001:   movq    rsp(1472 + virtual offset), %rbx
  Inst 32002:   load_ext_name u1:1+0, %rsi
  Inst 32003:   movl    $1, %edi
  Inst 32004:   movq    %rdi, -8(%r13,%r14,8)
  Inst 32005:   movl    $1, %edi
  Inst 32006:   movq    %rdi, -16(%r13,%r14,8)
  Inst 32007:   movq    %rsi, -24(%r13,%r14,8)
  Inst 32008:   movq    rsp(2072 + virtual offset), %rsi
  Inst 32009:   movq    %r12, 152(%rsi)
  Inst 32010:   movq    %rbx, %rdi
  Inst 32011:   movq    %r15, %rsi
  Inst 32012:   load_ext_name u0:3+0, %rax
  Inst 32013:   movq    %rdi, rsp(1456 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32014:   call    *%rax
  Inst 32015:   jmp     label855
Block 855:
  (successor: Block 856)
  (instruction range: 32016 .. 32124)
  Inst 32016:   movq    %rax, rsp(1456 + virtual offset)
  Inst 32017:   nop     len=0
  Inst 32018:   nop     len=0
  Inst 32019:   nop     len=0
  Inst 32020:   nop     len=0
  Inst 32021:   nop     len=0
  Inst 32022:   nop     len=0
  Inst 32023:   nop     len=0
  Inst 32024:   nop     len=0
  Inst 32025:   nop     len=0
  Inst 32026:   nop     len=0
  Inst 32027:   nop     len=0
  Inst 32028:   nop     len=0
  Inst 32029:   nop     len=0
  Inst 32030:   nop     len=0
  Inst 32031:   nop     len=0
  Inst 32032:   nop     len=0
  Inst 32033:   nop     len=0
  Inst 32034:   nop     len=0
  Inst 32035:   nop     len=0
  Inst 32036:   nop     len=0
  Inst 32037:   nop     len=0
  Inst 32038:   nop     len=0
  Inst 32039:   nop     len=0
  Inst 32040:   nop     len=0
  Inst 32041:   nop     len=0
  Inst 32042:   nop     len=0
  Inst 32043:   nop     len=0
  Inst 32044:   nop     len=0
  Inst 32045:   nop     len=0
  Inst 32046:   nop     len=0
  Inst 32047:   nop     len=0
  Inst 32048:   nop     len=0
  Inst 32049:   nop     len=0
  Inst 32050:   nop     len=0
  Inst 32051:   nop     len=0
  Inst 32052:   nop     len=0
  Inst 32053:   nop     len=0
  Inst 32054:   nop     len=0
  Inst 32055:   nop     len=0
  Inst 32056:   nop     len=0
  Inst 32057:   nop     len=0
  Inst 32058:   nop     len=0
  Inst 32059:   nop     len=0
  Inst 32060:   nop     len=0
  Inst 32061:   nop     len=0
  Inst 32062:   nop     len=0
  Inst 32063:   nop     len=0
  Inst 32064:   nop     len=0
  Inst 32065:   nop     len=0
  Inst 32066:   nop     len=0
  Inst 32067:   nop     len=0
  Inst 32068:   nop     len=0
  Inst 32069:   nop     len=0
  Inst 32070:   nop     len=0
  Inst 32071:   nop     len=0
  Inst 32072:   nop     len=0
  Inst 32073:   nop     len=0
  Inst 32074:   nop     len=0
  Inst 32075:   nop     len=0
  Inst 32076:   nop     len=0
  Inst 32077:   nop     len=0
  Inst 32078:   nop     len=0
  Inst 32079:   nop     len=0
  Inst 32080:   nop     len=0
  Inst 32081:   nop     len=0
  Inst 32082:   nop     len=0
  Inst 32083:   nop     len=0
  Inst 32084:   nop     len=0
  Inst 32085:   nop     len=0
  Inst 32086:   nop     len=0
  Inst 32087:   nop     len=0
  Inst 32088:   nop     len=0
  Inst 32089:   nop     len=0
  Inst 32090:   nop     len=0
  Inst 32091:   nop     len=0
  Inst 32092:   nop     len=0
  Inst 32093:   nop     len=0
  Inst 32094:   nop     len=0
  Inst 32095:   nop     len=0
  Inst 32096:   nop     len=0
  Inst 32097:   nop     len=0
  Inst 32098:   nop     len=0
  Inst 32099:   nop     len=0
  Inst 32100:   nop     len=0
  Inst 32101:   nop     len=0
  Inst 32102:   nop     len=0
  Inst 32103:   nop     len=0
  Inst 32104:   nop     len=0
  Inst 32105:   nop     len=0
  Inst 32106:   nop     len=0
  Inst 32107:   nop     len=0
  Inst 32108:   nop     len=0
  Inst 32109:   nop     len=0
  Inst 32110:   nop     len=0
  Inst 32111:   nop     len=0
  Inst 32112:   nop     len=0
  Inst 32113:   nop     len=0
  Inst 32114:   nop     len=0
  Inst 32115:   nop     len=0
  Inst 32116:   nop     len=0
  Inst 32117:   nop     len=0
  Inst 32118:   nop     len=0
  Inst 32119:   nop     len=0
  Inst 32120:   nop     len=0
  Inst 32121:   nop     len=0
  Inst 32122:   nop     len=0
  Inst 32123:   jmp     label856
Block 856:
  (original IR block: block428)
  (successor: Block 857)
  (successor: Block 858)
  (instruction range: 32124 .. 32135)
  Inst 32124:   movq    rsp(2064 + virtual offset), %rsi
  Inst 32125:   movq    8(%rsi), %rdi
  Inst 32126:   movq    rsp(2048 + virtual offset), %rsi
  Inst 32127:   load_ext_name u0:2+0, %rax
  Inst 32128:   movq    %rsi, rsp(1472 + virtual offset)
  Inst 32129:   movq    %rdi, rsp(1488 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32130:   call    *%rax
  Inst 32131:   movq    %rax, %rbx
  Inst 32132:   movq    %rdx, %r14
  Inst 32133:   testq   %r14, %r14
  Inst 32134:   jz      label857; j label858
Block 857:
  (successor: Block 860)
  (instruction range: 32135 .. 32244)
  Inst 32135:   movq    %rbx, rsp(1896 + virtual offset)
  Inst 32136:   nop     len=0
  Inst 32137:   nop     len=0
  Inst 32138:   nop     len=0
  Inst 32139:   nop     len=0
  Inst 32140:   nop     len=0
  Inst 32141:   nop     len=0
  Inst 32142:   nop     len=0
  Inst 32143:   nop     len=0
  Inst 32144:   nop     len=0
  Inst 32145:   nop     len=0
  Inst 32146:   nop     len=0
  Inst 32147:   nop     len=0
  Inst 32148:   nop     len=0
  Inst 32149:   nop     len=0
  Inst 32150:   nop     len=0
  Inst 32151:   nop     len=0
  Inst 32152:   nop     len=0
  Inst 32153:   nop     len=0
  Inst 32154:   nop     len=0
  Inst 32155:   nop     len=0
  Inst 32156:   nop     len=0
  Inst 32157:   nop     len=0
  Inst 32158:   nop     len=0
  Inst 32159:   nop     len=0
  Inst 32160:   nop     len=0
  Inst 32161:   nop     len=0
  Inst 32162:   nop     len=0
  Inst 32163:   nop     len=0
  Inst 32164:   nop     len=0
  Inst 32165:   nop     len=0
  Inst 32166:   nop     len=0
  Inst 32167:   nop     len=0
  Inst 32168:   nop     len=0
  Inst 32169:   nop     len=0
  Inst 32170:   nop     len=0
  Inst 32171:   nop     len=0
  Inst 32172:   nop     len=0
  Inst 32173:   nop     len=0
  Inst 32174:   nop     len=0
  Inst 32175:   nop     len=0
  Inst 32176:   nop     len=0
  Inst 32177:   nop     len=0
  Inst 32178:   nop     len=0
  Inst 32179:   nop     len=0
  Inst 32180:   nop     len=0
  Inst 32181:   nop     len=0
  Inst 32182:   nop     len=0
  Inst 32183:   nop     len=0
  Inst 32184:   nop     len=0
  Inst 32185:   nop     len=0
  Inst 32186:   nop     len=0
  Inst 32187:   nop     len=0
  Inst 32188:   nop     len=0
  Inst 32189:   nop     len=0
  Inst 32190:   nop     len=0
  Inst 32191:   nop     len=0
  Inst 32192:   nop     len=0
  Inst 32193:   nop     len=0
  Inst 32194:   nop     len=0
  Inst 32195:   nop     len=0
  Inst 32196:   nop     len=0
  Inst 32197:   nop     len=0
  Inst 32198:   nop     len=0
  Inst 32199:   nop     len=0
  Inst 32200:   nop     len=0
  Inst 32201:   nop     len=0
  Inst 32202:   nop     len=0
  Inst 32203:   nop     len=0
  Inst 32204:   nop     len=0
  Inst 32205:   nop     len=0
  Inst 32206:   nop     len=0
  Inst 32207:   nop     len=0
  Inst 32208:   nop     len=0
  Inst 32209:   nop     len=0
  Inst 32210:   nop     len=0
  Inst 32211:   nop     len=0
  Inst 32212:   nop     len=0
  Inst 32213:   nop     len=0
  Inst 32214:   nop     len=0
  Inst 32215:   nop     len=0
  Inst 32216:   nop     len=0
  Inst 32217:   nop     len=0
  Inst 32218:   nop     len=0
  Inst 32219:   nop     len=0
  Inst 32220:   nop     len=0
  Inst 32221:   nop     len=0
  Inst 32222:   nop     len=0
  Inst 32223:   nop     len=0
  Inst 32224:   nop     len=0
  Inst 32225:   nop     len=0
  Inst 32226:   nop     len=0
  Inst 32227:   nop     len=0
  Inst 32228:   nop     len=0
  Inst 32229:   nop     len=0
  Inst 32230:   nop     len=0
  Inst 32231:   nop     len=0
  Inst 32232:   nop     len=0
  Inst 32233:   nop     len=0
  Inst 32234:   nop     len=0
  Inst 32235:   nop     len=0
  Inst 32236:   nop     len=0
  Inst 32237:   nop     len=0
  Inst 32238:   nop     len=0
  Inst 32239:   nop     len=0
  Inst 32240:   nop     len=0
  Inst 32241:   nop     len=0
  Inst 32242:   nop     len=0
  Inst 32243:   jmp     label860
Block 858:
  (original IR block: block431)
  (successor: Block 859)
  (instruction range: 32244 .. 32273)
  Inst 32244:   movq    rsp(2072 + virtual offset), %rsi
  Inst 32245:   movq    152(%rsi), %r13
  Inst 32246:   movq    %r14, %r15
  Inst 32247:   addq    $-1, %r15
  Inst 32248:   movq    %r14, %rdx
  Inst 32249:   shlq    $3, %rdx
  Inst 32250:   movq    %r13, %r12
  Inst 32251:   addq    %rdx, %r12
  Inst 32252:   movq    %r13, %rdi
  Inst 32253:   addq    $-24, %rdi
  Inst 32254:   movq    %r13, %rsi
  Inst 32255:   load_ext_name %Memmove+0, %rax
  Inst 32256:   movq    %rbx, rsp(1472 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32257:   call    *%rax
  Inst 32258:   movq    rsp(1472 + virtual offset), %rbx
  Inst 32259:   load_ext_name u1:1+0, %rsi
  Inst 32260:   movl    $1, %edi
  Inst 32261:   movq    %rdi, -8(%r13,%r14,8)
  Inst 32262:   movl    $1, %edi
  Inst 32263:   movq    %rdi, -16(%r13,%r14,8)
  Inst 32264:   movq    %rsi, -24(%r13,%r14,8)
  Inst 32265:   movq    rsp(2072 + virtual offset), %rsi
  Inst 32266:   movq    %r12, 152(%rsi)
  Inst 32267:   movq    %rbx, %rdi
  Inst 32268:   movq    %r15, %rsi
  Inst 32269:   load_ext_name u0:3+0, %rax
  Inst 32270:   movq    %rdi, rsp(1472 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32271:   call    *%rax
  Inst 32272:   jmp     label859
Block 859:
  (successor: Block 860)
  (instruction range: 32273 .. 32382)
  Inst 32273:   movq    %rax, rsp(1896 + virtual offset)
  Inst 32274:   nop     len=0
  Inst 32275:   nop     len=0
  Inst 32276:   nop     len=0
  Inst 32277:   nop     len=0
  Inst 32278:   nop     len=0
  Inst 32279:   nop     len=0
  Inst 32280:   nop     len=0
  Inst 32281:   nop     len=0
  Inst 32282:   nop     len=0
  Inst 32283:   nop     len=0
  Inst 32284:   nop     len=0
  Inst 32285:   nop     len=0
  Inst 32286:   nop     len=0
  Inst 32287:   nop     len=0
  Inst 32288:   nop     len=0
  Inst 32289:   nop     len=0
  Inst 32290:   nop     len=0
  Inst 32291:   nop     len=0
  Inst 32292:   nop     len=0
  Inst 32293:   nop     len=0
  Inst 32294:   nop     len=0
  Inst 32295:   nop     len=0
  Inst 32296:   nop     len=0
  Inst 32297:   nop     len=0
  Inst 32298:   nop     len=0
  Inst 32299:   nop     len=0
  Inst 32300:   nop     len=0
  Inst 32301:   nop     len=0
  Inst 32302:   nop     len=0
  Inst 32303:   nop     len=0
  Inst 32304:   nop     len=0
  Inst 32305:   nop     len=0
  Inst 32306:   nop     len=0
  Inst 32307:   nop     len=0
  Inst 32308:   nop     len=0
  Inst 32309:   nop     len=0
  Inst 32310:   nop     len=0
  Inst 32311:   nop     len=0
  Inst 32312:   nop     len=0
  Inst 32313:   nop     len=0
  Inst 32314:   nop     len=0
  Inst 32315:   nop     len=0
  Inst 32316:   nop     len=0
  Inst 32317:   nop     len=0
  Inst 32318:   nop     len=0
  Inst 32319:   nop     len=0
  Inst 32320:   nop     len=0
  Inst 32321:   nop     len=0
  Inst 32322:   nop     len=0
  Inst 32323:   nop     len=0
  Inst 32324:   nop     len=0
  Inst 32325:   nop     len=0
  Inst 32326:   nop     len=0
  Inst 32327:   nop     len=0
  Inst 32328:   nop     len=0
  Inst 32329:   nop     len=0
  Inst 32330:   nop     len=0
  Inst 32331:   nop     len=0
  Inst 32332:   nop     len=0
  Inst 32333:   nop     len=0
  Inst 32334:   nop     len=0
  Inst 32335:   nop     len=0
  Inst 32336:   nop     len=0
  Inst 32337:   nop     len=0
  Inst 32338:   nop     len=0
  Inst 32339:   nop     len=0
  Inst 32340:   nop     len=0
  Inst 32341:   nop     len=0
  Inst 32342:   nop     len=0
  Inst 32343:   nop     len=0
  Inst 32344:   nop     len=0
  Inst 32345:   nop     len=0
  Inst 32346:   nop     len=0
  Inst 32347:   nop     len=0
  Inst 32348:   nop     len=0
  Inst 32349:   nop     len=0
  Inst 32350:   nop     len=0
  Inst 32351:   nop     len=0
  Inst 32352:   nop     len=0
  Inst 32353:   nop     len=0
  Inst 32354:   nop     len=0
  Inst 32355:   nop     len=0
  Inst 32356:   nop     len=0
  Inst 32357:   nop     len=0
  Inst 32358:   nop     len=0
  Inst 32359:   nop     len=0
  Inst 32360:   nop     len=0
  Inst 32361:   nop     len=0
  Inst 32362:   nop     len=0
  Inst 32363:   nop     len=0
  Inst 32364:   nop     len=0
  Inst 32365:   nop     len=0
  Inst 32366:   nop     len=0
  Inst 32367:   nop     len=0
  Inst 32368:   nop     len=0
  Inst 32369:   nop     len=0
  Inst 32370:   nop     len=0
  Inst 32371:   nop     len=0
  Inst 32372:   nop     len=0
  Inst 32373:   nop     len=0
  Inst 32374:   nop     len=0
  Inst 32375:   nop     len=0
  Inst 32376:   nop     len=0
  Inst 32377:   nop     len=0
  Inst 32378:   nop     len=0
  Inst 32379:   nop     len=0
  Inst 32380:   nop     len=0
  Inst 32381:   jmp     label860
Block 860:
  (original IR block: block430)
  (successor: Block 861)
  (successor: Block 862)
  (instruction range: 32382 .. 32393)
  Inst 32382:   movq    rsp(2064 + virtual offset), %rsi
  Inst 32383:   movq    8(%rsi), %rdi
  Inst 32384:   movq    rsp(2048 + virtual offset), %rsi
  Inst 32385:   load_ext_name u0:2+0, %rax
  Inst 32386:   movq    %rsi, rsp(1472 + virtual offset)
  Inst 32387:   movq    %rdi, rsp(1488 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32388:   call    *%rax
  Inst 32389:   movq    %rax, %r15
  Inst 32390:   movq    %rdx, %r14
  Inst 32391:   testq   %r14, %r14
  Inst 32392:   jz      label861; j label862
Block 861:
  (successor: Block 864)
  (instruction range: 32393 .. 32502)
  Inst 32393:   movq    %r15, rsp(1472 + virtual offset)
  Inst 32394:   nop     len=0
  Inst 32395:   nop     len=0
  Inst 32396:   nop     len=0
  Inst 32397:   nop     len=0
  Inst 32398:   nop     len=0
  Inst 32399:   nop     len=0
  Inst 32400:   nop     len=0
  Inst 32401:   nop     len=0
  Inst 32402:   nop     len=0
  Inst 32403:   nop     len=0
  Inst 32404:   nop     len=0
  Inst 32405:   nop     len=0
  Inst 32406:   nop     len=0
  Inst 32407:   nop     len=0
  Inst 32408:   nop     len=0
  Inst 32409:   nop     len=0
  Inst 32410:   nop     len=0
  Inst 32411:   nop     len=0
  Inst 32412:   nop     len=0
  Inst 32413:   nop     len=0
  Inst 32414:   nop     len=0
  Inst 32415:   nop     len=0
  Inst 32416:   nop     len=0
  Inst 32417:   nop     len=0
  Inst 32418:   nop     len=0
  Inst 32419:   nop     len=0
  Inst 32420:   nop     len=0
  Inst 32421:   nop     len=0
  Inst 32422:   nop     len=0
  Inst 32423:   nop     len=0
  Inst 32424:   nop     len=0
  Inst 32425:   nop     len=0
  Inst 32426:   nop     len=0
  Inst 32427:   nop     len=0
  Inst 32428:   nop     len=0
  Inst 32429:   nop     len=0
  Inst 32430:   nop     len=0
  Inst 32431:   nop     len=0
  Inst 32432:   nop     len=0
  Inst 32433:   nop     len=0
  Inst 32434:   nop     len=0
  Inst 32435:   nop     len=0
  Inst 32436:   nop     len=0
  Inst 32437:   nop     len=0
  Inst 32438:   nop     len=0
  Inst 32439:   nop     len=0
  Inst 32440:   nop     len=0
  Inst 32441:   nop     len=0
  Inst 32442:   nop     len=0
  Inst 32443:   nop     len=0
  Inst 32444:   nop     len=0
  Inst 32445:   nop     len=0
  Inst 32446:   nop     len=0
  Inst 32447:   nop     len=0
  Inst 32448:   nop     len=0
  Inst 32449:   nop     len=0
  Inst 32450:   nop     len=0
  Inst 32451:   nop     len=0
  Inst 32452:   nop     len=0
  Inst 32453:   nop     len=0
  Inst 32454:   nop     len=0
  Inst 32455:   nop     len=0
  Inst 32456:   nop     len=0
  Inst 32457:   nop     len=0
  Inst 32458:   nop     len=0
  Inst 32459:   nop     len=0
  Inst 32460:   nop     len=0
  Inst 32461:   nop     len=0
  Inst 32462:   nop     len=0
  Inst 32463:   nop     len=0
  Inst 32464:   nop     len=0
  Inst 32465:   nop     len=0
  Inst 32466:   nop     len=0
  Inst 32467:   nop     len=0
  Inst 32468:   nop     len=0
  Inst 32469:   nop     len=0
  Inst 32470:   nop     len=0
  Inst 32471:   nop     len=0
  Inst 32472:   nop     len=0
  Inst 32473:   nop     len=0
  Inst 32474:   nop     len=0
  Inst 32475:   nop     len=0
  Inst 32476:   nop     len=0
  Inst 32477:   nop     len=0
  Inst 32478:   nop     len=0
  Inst 32479:   nop     len=0
  Inst 32480:   nop     len=0
  Inst 32481:   nop     len=0
  Inst 32482:   nop     len=0
  Inst 32483:   nop     len=0
  Inst 32484:   nop     len=0
  Inst 32485:   nop     len=0
  Inst 32486:   nop     len=0
  Inst 32487:   nop     len=0
  Inst 32488:   nop     len=0
  Inst 32489:   nop     len=0
  Inst 32490:   nop     len=0
  Inst 32491:   nop     len=0
  Inst 32492:   nop     len=0
  Inst 32493:   nop     len=0
  Inst 32494:   nop     len=0
  Inst 32495:   nop     len=0
  Inst 32496:   nop     len=0
  Inst 32497:   nop     len=0
  Inst 32498:   nop     len=0
  Inst 32499:   nop     len=0
  Inst 32500:   nop     len=0
  Inst 32501:   jmp     label864
Block 862:
  (original IR block: block433)
  (successor: Block 863)
  (instruction range: 32502 .. 32531)
  Inst 32502:   movq    rsp(2072 + virtual offset), %rsi
  Inst 32503:   movq    152(%rsi), %r13
  Inst 32504:   movq    %r14, %rbx
  Inst 32505:   addq    $-1, %rbx
  Inst 32506:   movq    %r14, %rdx
  Inst 32507:   shlq    $3, %rdx
  Inst 32508:   movq    %r13, %r12
  Inst 32509:   addq    %rdx, %r12
  Inst 32510:   movq    %r13, %rdi
  Inst 32511:   addq    $-24, %rdi
  Inst 32512:   movq    %r13, %rsi
  Inst 32513:   load_ext_name %Memmove+0, %rax
  Inst 32514:   movq    %r15, rsp(1488 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S185, S186, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32515:   call    *%rax
  Inst 32516:   movq    rsp(1488 + virtual offset), %r15
  Inst 32517:   load_ext_name u1:1+0, %rsi
  Inst 32518:   movl    $1, %edi
  Inst 32519:   movq    %rdi, -8(%r13,%r14,8)
  Inst 32520:   movl    $1, %edi
  Inst 32521:   movq    %rdi, -16(%r13,%r14,8)
  Inst 32522:   movq    %rsi, -24(%r13,%r14,8)
  Inst 32523:   movq    rsp(2072 + virtual offset), %rsi
  Inst 32524:   movq    %r12, 152(%rsi)
  Inst 32525:   movq    %r15, %rdi
  Inst 32526:   movq    %rbx, %rsi
  Inst 32527:   load_ext_name u0:3+0, %rax
  Inst 32528:   movq    %rdi, rsp(1472 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32529:   call    *%rax
  Inst 32530:   jmp     label863
Block 863:
  (successor: Block 864)
  (instruction range: 32531 .. 32640)
  Inst 32531:   movq    %rax, rsp(1472 + virtual offset)
  Inst 32532:   nop     len=0
  Inst 32533:   nop     len=0
  Inst 32534:   nop     len=0
  Inst 32535:   nop     len=0
  Inst 32536:   nop     len=0
  Inst 32537:   nop     len=0
  Inst 32538:   nop     len=0
  Inst 32539:   nop     len=0
  Inst 32540:   nop     len=0
  Inst 32541:   nop     len=0
  Inst 32542:   nop     len=0
  Inst 32543:   nop     len=0
  Inst 32544:   nop     len=0
  Inst 32545:   nop     len=0
  Inst 32546:   nop     len=0
  Inst 32547:   nop     len=0
  Inst 32548:   nop     len=0
  Inst 32549:   nop     len=0
  Inst 32550:   nop     len=0
  Inst 32551:   nop     len=0
  Inst 32552:   nop     len=0
  Inst 32553:   nop     len=0
  Inst 32554:   nop     len=0
  Inst 32555:   nop     len=0
  Inst 32556:   nop     len=0
  Inst 32557:   nop     len=0
  Inst 32558:   nop     len=0
  Inst 32559:   nop     len=0
  Inst 32560:   nop     len=0
  Inst 32561:   nop     len=0
  Inst 32562:   nop     len=0
  Inst 32563:   nop     len=0
  Inst 32564:   nop     len=0
  Inst 32565:   nop     len=0
  Inst 32566:   nop     len=0
  Inst 32567:   nop     len=0
  Inst 32568:   nop     len=0
  Inst 32569:   nop     len=0
  Inst 32570:   nop     len=0
  Inst 32571:   nop     len=0
  Inst 32572:   nop     len=0
  Inst 32573:   nop     len=0
  Inst 32574:   nop     len=0
  Inst 32575:   nop     len=0
  Inst 32576:   nop     len=0
  Inst 32577:   nop     len=0
  Inst 32578:   nop     len=0
  Inst 32579:   nop     len=0
  Inst 32580:   nop     len=0
  Inst 32581:   nop     len=0
  Inst 32582:   nop     len=0
  Inst 32583:   nop     len=0
  Inst 32584:   nop     len=0
  Inst 32585:   nop     len=0
  Inst 32586:   nop     len=0
  Inst 32587:   nop     len=0
  Inst 32588:   nop     len=0
  Inst 32589:   nop     len=0
  Inst 32590:   nop     len=0
  Inst 32591:   nop     len=0
  Inst 32592:   nop     len=0
  Inst 32593:   nop     len=0
  Inst 32594:   nop     len=0
  Inst 32595:   nop     len=0
  Inst 32596:   nop     len=0
  Inst 32597:   nop     len=0
  Inst 32598:   nop     len=0
  Inst 32599:   nop     len=0
  Inst 32600:   nop     len=0
  Inst 32601:   nop     len=0
  Inst 32602:   nop     len=0
  Inst 32603:   nop     len=0
  Inst 32604:   nop     len=0
  Inst 32605:   nop     len=0
  Inst 32606:   nop     len=0
  Inst 32607:   nop     len=0
  Inst 32608:   nop     len=0
  Inst 32609:   nop     len=0
  Inst 32610:   nop     len=0
  Inst 32611:   nop     len=0
  Inst 32612:   nop     len=0
  Inst 32613:   nop     len=0
  Inst 32614:   nop     len=0
  Inst 32615:   nop     len=0
  Inst 32616:   nop     len=0
  Inst 32617:   nop     len=0
  Inst 32618:   nop     len=0
  Inst 32619:   nop     len=0
  Inst 32620:   nop     len=0
  Inst 32621:   nop     len=0
  Inst 32622:   nop     len=0
  Inst 32623:   nop     len=0
  Inst 32624:   nop     len=0
  Inst 32625:   nop     len=0
  Inst 32626:   nop     len=0
  Inst 32627:   nop     len=0
  Inst 32628:   nop     len=0
  Inst 32629:   nop     len=0
  Inst 32630:   nop     len=0
  Inst 32631:   nop     len=0
  Inst 32632:   nop     len=0
  Inst 32633:   nop     len=0
  Inst 32634:   nop     len=0
  Inst 32635:   nop     len=0
  Inst 32636:   nop     len=0
  Inst 32637:   nop     len=0
  Inst 32638:   nop     len=0
  Inst 32639:   jmp     label864
Block 864:
  (original IR block: block432)
  (successor: Block 865)
  (successor: Block 866)
  (instruction range: 32640 .. 32651)
  Inst 32640:   movq    rsp(2064 + virtual offset), %rsi
  Inst 32641:   movq    8(%rsi), %rdi
  Inst 32642:   movq    rsp(2048 + virtual offset), %rsi
  Inst 32643:   load_ext_name u0:2+0, %rax
  Inst 32644:   movq    %rsi, rsp(1488 + virtual offset)
  Inst 32645:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32646:   call    *%rax
  Inst 32647:   movq    %rax, %rbx
  Inst 32648:   movq    %rdx, %r14
  Inst 32649:   testq   %r14, %r14
  Inst 32650:   jz      label865; j label866
Block 865:
  (successor: Block 868)
  (instruction range: 32651 .. 32761)
  Inst 32651:   movq    %rbx, rsp(1888 + virtual offset)
  Inst 32652:   nop     len=0
  Inst 32653:   nop     len=0
  Inst 32654:   nop     len=0
  Inst 32655:   nop     len=0
  Inst 32656:   nop     len=0
  Inst 32657:   nop     len=0
  Inst 32658:   nop     len=0
  Inst 32659:   nop     len=0
  Inst 32660:   nop     len=0
  Inst 32661:   nop     len=0
  Inst 32662:   nop     len=0
  Inst 32663:   nop     len=0
  Inst 32664:   nop     len=0
  Inst 32665:   nop     len=0
  Inst 32666:   nop     len=0
  Inst 32667:   nop     len=0
  Inst 32668:   nop     len=0
  Inst 32669:   nop     len=0
  Inst 32670:   nop     len=0
  Inst 32671:   nop     len=0
  Inst 32672:   nop     len=0
  Inst 32673:   nop     len=0
  Inst 32674:   nop     len=0
  Inst 32675:   nop     len=0
  Inst 32676:   nop     len=0
  Inst 32677:   nop     len=0
  Inst 32678:   nop     len=0
  Inst 32679:   nop     len=0
  Inst 32680:   nop     len=0
  Inst 32681:   nop     len=0
  Inst 32682:   nop     len=0
  Inst 32683:   nop     len=0
  Inst 32684:   nop     len=0
  Inst 32685:   nop     len=0
  Inst 32686:   nop     len=0
  Inst 32687:   nop     len=0
  Inst 32688:   nop     len=0
  Inst 32689:   nop     len=0
  Inst 32690:   nop     len=0
  Inst 32691:   nop     len=0
  Inst 32692:   nop     len=0
  Inst 32693:   nop     len=0
  Inst 32694:   nop     len=0
  Inst 32695:   nop     len=0
  Inst 32696:   nop     len=0
  Inst 32697:   nop     len=0
  Inst 32698:   nop     len=0
  Inst 32699:   nop     len=0
  Inst 32700:   nop     len=0
  Inst 32701:   nop     len=0
  Inst 32702:   nop     len=0
  Inst 32703:   nop     len=0
  Inst 32704:   nop     len=0
  Inst 32705:   nop     len=0
  Inst 32706:   nop     len=0
  Inst 32707:   nop     len=0
  Inst 32708:   nop     len=0
  Inst 32709:   nop     len=0
  Inst 32710:   nop     len=0
  Inst 32711:   nop     len=0
  Inst 32712:   nop     len=0
  Inst 32713:   nop     len=0
  Inst 32714:   nop     len=0
  Inst 32715:   nop     len=0
  Inst 32716:   nop     len=0
  Inst 32717:   nop     len=0
  Inst 32718:   nop     len=0
  Inst 32719:   nop     len=0
  Inst 32720:   nop     len=0
  Inst 32721:   nop     len=0
  Inst 32722:   nop     len=0
  Inst 32723:   nop     len=0
  Inst 32724:   nop     len=0
  Inst 32725:   nop     len=0
  Inst 32726:   nop     len=0
  Inst 32727:   nop     len=0
  Inst 32728:   nop     len=0
  Inst 32729:   nop     len=0
  Inst 32730:   nop     len=0
  Inst 32731:   nop     len=0
  Inst 32732:   nop     len=0
  Inst 32733:   nop     len=0
  Inst 32734:   nop     len=0
  Inst 32735:   nop     len=0
  Inst 32736:   nop     len=0
  Inst 32737:   nop     len=0
  Inst 32738:   nop     len=0
  Inst 32739:   nop     len=0
  Inst 32740:   nop     len=0
  Inst 32741:   nop     len=0
  Inst 32742:   nop     len=0
  Inst 32743:   nop     len=0
  Inst 32744:   nop     len=0
  Inst 32745:   nop     len=0
  Inst 32746:   nop     len=0
  Inst 32747:   nop     len=0
  Inst 32748:   nop     len=0
  Inst 32749:   nop     len=0
  Inst 32750:   nop     len=0
  Inst 32751:   nop     len=0
  Inst 32752:   nop     len=0
  Inst 32753:   nop     len=0
  Inst 32754:   nop     len=0
  Inst 32755:   nop     len=0
  Inst 32756:   nop     len=0
  Inst 32757:   nop     len=0
  Inst 32758:   nop     len=0
  Inst 32759:   nop     len=0
  Inst 32760:   jmp     label868
Block 866:
  (original IR block: block435)
  (successor: Block 867)
  (instruction range: 32761 .. 32790)
  Inst 32761:   movq    rsp(2072 + virtual offset), %rsi
  Inst 32762:   movq    152(%rsi), %r13
  Inst 32763:   movq    %r14, %r15
  Inst 32764:   addq    $-1, %r15
  Inst 32765:   movq    %r14, %rdx
  Inst 32766:   shlq    $3, %rdx
  Inst 32767:   movq    %r13, %r12
  Inst 32768:   addq    %rdx, %r12
  Inst 32769:   movq    %r13, %rdi
  Inst 32770:   addq    $-24, %rdi
  Inst 32771:   movq    %r13, %rsi
  Inst 32772:   load_ext_name %Memmove+0, %rax
  Inst 32773:   movq    %rbx, rsp(1488 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32774:   call    *%rax
  Inst 32775:   movq    rsp(1488 + virtual offset), %rbx
  Inst 32776:   load_ext_name u1:1+0, %rsi
  Inst 32777:   movl    $1, %edi
  Inst 32778:   movq    %rdi, -8(%r13,%r14,8)
  Inst 32779:   movl    $1, %edi
  Inst 32780:   movq    %rdi, -16(%r13,%r14,8)
  Inst 32781:   movq    %rsi, -24(%r13,%r14,8)
  Inst 32782:   movq    rsp(2072 + virtual offset), %rsi
  Inst 32783:   movq    %r12, 152(%rsi)
  Inst 32784:   movq    %rbx, %rdi
  Inst 32785:   movq    %r15, %rsi
  Inst 32786:   load_ext_name u0:3+0, %rax
  Inst 32787:   movq    %rdi, rsp(1488 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32788:   call    *%rax
  Inst 32789:   jmp     label867
Block 867:
  (successor: Block 868)
  (instruction range: 32790 .. 32900)
  Inst 32790:   movq    %rax, rsp(1888 + virtual offset)
  Inst 32791:   nop     len=0
  Inst 32792:   nop     len=0
  Inst 32793:   nop     len=0
  Inst 32794:   nop     len=0
  Inst 32795:   nop     len=0
  Inst 32796:   nop     len=0
  Inst 32797:   nop     len=0
  Inst 32798:   nop     len=0
  Inst 32799:   nop     len=0
  Inst 32800:   nop     len=0
  Inst 32801:   nop     len=0
  Inst 32802:   nop     len=0
  Inst 32803:   nop     len=0
  Inst 32804:   nop     len=0
  Inst 32805:   nop     len=0
  Inst 32806:   nop     len=0
  Inst 32807:   nop     len=0
  Inst 32808:   nop     len=0
  Inst 32809:   nop     len=0
  Inst 32810:   nop     len=0
  Inst 32811:   nop     len=0
  Inst 32812:   nop     len=0
  Inst 32813:   nop     len=0
  Inst 32814:   nop     len=0
  Inst 32815:   nop     len=0
  Inst 32816:   nop     len=0
  Inst 32817:   nop     len=0
  Inst 32818:   nop     len=0
  Inst 32819:   nop     len=0
  Inst 32820:   nop     len=0
  Inst 32821:   nop     len=0
  Inst 32822:   nop     len=0
  Inst 32823:   nop     len=0
  Inst 32824:   nop     len=0
  Inst 32825:   nop     len=0
  Inst 32826:   nop     len=0
  Inst 32827:   nop     len=0
  Inst 32828:   nop     len=0
  Inst 32829:   nop     len=0
  Inst 32830:   nop     len=0
  Inst 32831:   nop     len=0
  Inst 32832:   nop     len=0
  Inst 32833:   nop     len=0
  Inst 32834:   nop     len=0
  Inst 32835:   nop     len=0
  Inst 32836:   nop     len=0
  Inst 32837:   nop     len=0
  Inst 32838:   nop     len=0
  Inst 32839:   nop     len=0
  Inst 32840:   nop     len=0
  Inst 32841:   nop     len=0
  Inst 32842:   nop     len=0
  Inst 32843:   nop     len=0
  Inst 32844:   nop     len=0
  Inst 32845:   nop     len=0
  Inst 32846:   nop     len=0
  Inst 32847:   nop     len=0
  Inst 32848:   nop     len=0
  Inst 32849:   nop     len=0
  Inst 32850:   nop     len=0
  Inst 32851:   nop     len=0
  Inst 32852:   nop     len=0
  Inst 32853:   nop     len=0
  Inst 32854:   nop     len=0
  Inst 32855:   nop     len=0
  Inst 32856:   nop     len=0
  Inst 32857:   nop     len=0
  Inst 32858:   nop     len=0
  Inst 32859:   nop     len=0
  Inst 32860:   nop     len=0
  Inst 32861:   nop     len=0
  Inst 32862:   nop     len=0
  Inst 32863:   nop     len=0
  Inst 32864:   nop     len=0
  Inst 32865:   nop     len=0
  Inst 32866:   nop     len=0
  Inst 32867:   nop     len=0
  Inst 32868:   nop     len=0
  Inst 32869:   nop     len=0
  Inst 32870:   nop     len=0
  Inst 32871:   nop     len=0
  Inst 32872:   nop     len=0
  Inst 32873:   nop     len=0
  Inst 32874:   nop     len=0
  Inst 32875:   nop     len=0
  Inst 32876:   nop     len=0
  Inst 32877:   nop     len=0
  Inst 32878:   nop     len=0
  Inst 32879:   nop     len=0
  Inst 32880:   nop     len=0
  Inst 32881:   nop     len=0
  Inst 32882:   nop     len=0
  Inst 32883:   nop     len=0
  Inst 32884:   nop     len=0
  Inst 32885:   nop     len=0
  Inst 32886:   nop     len=0
  Inst 32887:   nop     len=0
  Inst 32888:   nop     len=0
  Inst 32889:   nop     len=0
  Inst 32890:   nop     len=0
  Inst 32891:   nop     len=0
  Inst 32892:   nop     len=0
  Inst 32893:   nop     len=0
  Inst 32894:   nop     len=0
  Inst 32895:   nop     len=0
  Inst 32896:   nop     len=0
  Inst 32897:   nop     len=0
  Inst 32898:   nop     len=0
  Inst 32899:   jmp     label868
Block 868:
  (original IR block: block434)
  (successor: Block 869)
  (successor: Block 870)
  (instruction range: 32900 .. 32911)
  Inst 32900:   movq    rsp(2064 + virtual offset), %rsi
  Inst 32901:   movq    8(%rsi), %rdi
  Inst 32902:   movq    rsp(2048 + virtual offset), %rsi
  Inst 32903:   load_ext_name u0:2+0, %rax
  Inst 32904:   movq    %rsi, rsp(1488 + virtual offset)
  Inst 32905:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 32906:   call    *%rax
  Inst 32907:   movq    %rax, %rbx
  Inst 32908:   movq    %rdx, %r14
  Inst 32909:   testq   %r14, %r14
  Inst 32910:   jz      label869; j label870
Block 869:
  (successor: Block 872)
  (instruction range: 32911 .. 33021)
  Inst 32911:   movq    %rbx, rsp(1488 + virtual offset)
  Inst 32912:   nop     len=0
  Inst 32913:   nop     len=0
  Inst 32914:   nop     len=0
  Inst 32915:   nop     len=0
  Inst 32916:   nop     len=0
  Inst 32917:   nop     len=0
  Inst 32918:   nop     len=0
  Inst 32919:   nop     len=0
  Inst 32920:   nop     len=0
  Inst 32921:   nop     len=0
  Inst 32922:   nop     len=0
  Inst 32923:   nop     len=0
  Inst 32924:   nop     len=0
  Inst 32925:   nop     len=0
  Inst 32926:   nop     len=0
  Inst 32927:   nop     len=0
  Inst 32928:   nop     len=0
  Inst 32929:   nop     len=0
  Inst 32930:   nop     len=0
  Inst 32931:   nop     len=0
  Inst 32932:   nop     len=0
  Inst 32933:   nop     len=0
  Inst 32934:   nop     len=0
  Inst 32935:   nop     len=0
  Inst 32936:   nop     len=0
  Inst 32937:   nop     len=0
  Inst 32938:   nop     len=0
  Inst 32939:   nop     len=0
  Inst 32940:   nop     len=0
  Inst 32941:   nop     len=0
  Inst 32942:   nop     len=0
  Inst 32943:   nop     len=0
  Inst 32944:   nop     len=0
  Inst 32945:   nop     len=0
  Inst 32946:   nop     len=0
  Inst 32947:   nop     len=0
  Inst 32948:   nop     len=0
  Inst 32949:   nop     len=0
  Inst 32950:   nop     len=0
  Inst 32951:   nop     len=0
  Inst 32952:   nop     len=0
  Inst 32953:   nop     len=0
  Inst 32954:   nop     len=0
  Inst 32955:   nop     len=0
  Inst 32956:   nop     len=0
  Inst 32957:   nop     len=0
  Inst 32958:   nop     len=0
  Inst 32959:   nop     len=0
  Inst 32960:   nop     len=0
  Inst 32961:   nop     len=0
  Inst 32962:   nop     len=0
  Inst 32963:   nop     len=0
  Inst 32964:   nop     len=0
  Inst 32965:   nop     len=0
  Inst 32966:   nop     len=0
  Inst 32967:   nop     len=0
  Inst 32968:   nop     len=0
  Inst 32969:   nop     len=0
  Inst 32970:   nop     len=0
  Inst 32971:   nop     len=0
  Inst 32972:   nop     len=0
  Inst 32973:   nop     len=0
  Inst 32974:   nop     len=0
  Inst 32975:   nop     len=0
  Inst 32976:   nop     len=0
  Inst 32977:   nop     len=0
  Inst 32978:   nop     len=0
  Inst 32979:   nop     len=0
  Inst 32980:   nop     len=0
  Inst 32981:   nop     len=0
  Inst 32982:   nop     len=0
  Inst 32983:   nop     len=0
  Inst 32984:   nop     len=0
  Inst 32985:   nop     len=0
  Inst 32986:   nop     len=0
  Inst 32987:   nop     len=0
  Inst 32988:   nop     len=0
  Inst 32989:   nop     len=0
  Inst 32990:   nop     len=0
  Inst 32991:   nop     len=0
  Inst 32992:   nop     len=0
  Inst 32993:   nop     len=0
  Inst 32994:   nop     len=0
  Inst 32995:   nop     len=0
  Inst 32996:   nop     len=0
  Inst 32997:   nop     len=0
  Inst 32998:   nop     len=0
  Inst 32999:   nop     len=0
  Inst 33000:   nop     len=0
  Inst 33001:   nop     len=0
  Inst 33002:   nop     len=0
  Inst 33003:   nop     len=0
  Inst 33004:   nop     len=0
  Inst 33005:   nop     len=0
  Inst 33006:   nop     len=0
  Inst 33007:   nop     len=0
  Inst 33008:   nop     len=0
  Inst 33009:   nop     len=0
  Inst 33010:   nop     len=0
  Inst 33011:   nop     len=0
  Inst 33012:   nop     len=0
  Inst 33013:   nop     len=0
  Inst 33014:   nop     len=0
  Inst 33015:   nop     len=0
  Inst 33016:   nop     len=0
  Inst 33017:   nop     len=0
  Inst 33018:   nop     len=0
  Inst 33019:   nop     len=0
  Inst 33020:   jmp     label872
Block 870:
  (original IR block: block437)
  (successor: Block 871)
  (instruction range: 33021 .. 33050)
  Inst 33021:   movq    rsp(2072 + virtual offset), %rsi
  Inst 33022:   movq    152(%rsi), %r13
  Inst 33023:   movq    %r14, %r15
  Inst 33024:   addq    $-1, %r15
  Inst 33025:   movq    %r14, %rdx
  Inst 33026:   shlq    $3, %rdx
  Inst 33027:   movq    %r13, %r12
  Inst 33028:   addq    %rdx, %r12
  Inst 33029:   movq    %r13, %rdi
  Inst 33030:   addq    $-24, %rdi
  Inst 33031:   movq    %r13, %rsi
  Inst 33032:   load_ext_name %Memmove+0, %rax
  Inst 33033:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33034:   call    *%rax
  Inst 33035:   movq    rsp(1496 + virtual offset), %rbx
  Inst 33036:   load_ext_name u1:1+0, %rsi
  Inst 33037:   movl    $1, %edi
  Inst 33038:   movq    %rdi, -8(%r13,%r14,8)
  Inst 33039:   movl    $1, %edi
  Inst 33040:   movq    %rdi, -16(%r13,%r14,8)
  Inst 33041:   movq    %rsi, -24(%r13,%r14,8)
  Inst 33042:   movq    rsp(2072 + virtual offset), %rsi
  Inst 33043:   movq    %r12, 152(%rsi)
  Inst 33044:   movq    %rbx, %rdi
  Inst 33045:   movq    %r15, %rsi
  Inst 33046:   load_ext_name u0:3+0, %rax
  Inst 33047:   movq    %rdi, rsp(1488 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33048:   call    *%rax
  Inst 33049:   jmp     label871
Block 871:
  (successor: Block 872)
  (instruction range: 33050 .. 33160)
  Inst 33050:   movq    %rax, rsp(1488 + virtual offset)
  Inst 33051:   nop     len=0
  Inst 33052:   nop     len=0
  Inst 33053:   nop     len=0
  Inst 33054:   nop     len=0
  Inst 33055:   nop     len=0
  Inst 33056:   nop     len=0
  Inst 33057:   nop     len=0
  Inst 33058:   nop     len=0
  Inst 33059:   nop     len=0
  Inst 33060:   nop     len=0
  Inst 33061:   nop     len=0
  Inst 33062:   nop     len=0
  Inst 33063:   nop     len=0
  Inst 33064:   nop     len=0
  Inst 33065:   nop     len=0
  Inst 33066:   nop     len=0
  Inst 33067:   nop     len=0
  Inst 33068:   nop     len=0
  Inst 33069:   nop     len=0
  Inst 33070:   nop     len=0
  Inst 33071:   nop     len=0
  Inst 33072:   nop     len=0
  Inst 33073:   nop     len=0
  Inst 33074:   nop     len=0
  Inst 33075:   nop     len=0
  Inst 33076:   nop     len=0
  Inst 33077:   nop     len=0
  Inst 33078:   nop     len=0
  Inst 33079:   nop     len=0
  Inst 33080:   nop     len=0
  Inst 33081:   nop     len=0
  Inst 33082:   nop     len=0
  Inst 33083:   nop     len=0
  Inst 33084:   nop     len=0
  Inst 33085:   nop     len=0
  Inst 33086:   nop     len=0
  Inst 33087:   nop     len=0
  Inst 33088:   nop     len=0
  Inst 33089:   nop     len=0
  Inst 33090:   nop     len=0
  Inst 33091:   nop     len=0
  Inst 33092:   nop     len=0
  Inst 33093:   nop     len=0
  Inst 33094:   nop     len=0
  Inst 33095:   nop     len=0
  Inst 33096:   nop     len=0
  Inst 33097:   nop     len=0
  Inst 33098:   nop     len=0
  Inst 33099:   nop     len=0
  Inst 33100:   nop     len=0
  Inst 33101:   nop     len=0
  Inst 33102:   nop     len=0
  Inst 33103:   nop     len=0
  Inst 33104:   nop     len=0
  Inst 33105:   nop     len=0
  Inst 33106:   nop     len=0
  Inst 33107:   nop     len=0
  Inst 33108:   nop     len=0
  Inst 33109:   nop     len=0
  Inst 33110:   nop     len=0
  Inst 33111:   nop     len=0
  Inst 33112:   nop     len=0
  Inst 33113:   nop     len=0
  Inst 33114:   nop     len=0
  Inst 33115:   nop     len=0
  Inst 33116:   nop     len=0
  Inst 33117:   nop     len=0
  Inst 33118:   nop     len=0
  Inst 33119:   nop     len=0
  Inst 33120:   nop     len=0
  Inst 33121:   nop     len=0
  Inst 33122:   nop     len=0
  Inst 33123:   nop     len=0
  Inst 33124:   nop     len=0
  Inst 33125:   nop     len=0
  Inst 33126:   nop     len=0
  Inst 33127:   nop     len=0
  Inst 33128:   nop     len=0
  Inst 33129:   nop     len=0
  Inst 33130:   nop     len=0
  Inst 33131:   nop     len=0
  Inst 33132:   nop     len=0
  Inst 33133:   nop     len=0
  Inst 33134:   nop     len=0
  Inst 33135:   nop     len=0
  Inst 33136:   nop     len=0
  Inst 33137:   nop     len=0
  Inst 33138:   nop     len=0
  Inst 33139:   nop     len=0
  Inst 33140:   nop     len=0
  Inst 33141:   nop     len=0
  Inst 33142:   nop     len=0
  Inst 33143:   nop     len=0
  Inst 33144:   nop     len=0
  Inst 33145:   nop     len=0
  Inst 33146:   nop     len=0
  Inst 33147:   nop     len=0
  Inst 33148:   nop     len=0
  Inst 33149:   nop     len=0
  Inst 33150:   nop     len=0
  Inst 33151:   nop     len=0
  Inst 33152:   nop     len=0
  Inst 33153:   nop     len=0
  Inst 33154:   nop     len=0
  Inst 33155:   nop     len=0
  Inst 33156:   nop     len=0
  Inst 33157:   nop     len=0
  Inst 33158:   nop     len=0
  Inst 33159:   jmp     label872
Block 872:
  (original IR block: block436)
  (successor: Block 873)
  (successor: Block 874)
  (instruction range: 33160 .. 33171)
  Inst 33160:   movq    rsp(2064 + virtual offset), %rsi
  Inst 33161:   movq    8(%rsi), %rdi
  Inst 33162:   movq    rsp(2048 + virtual offset), %rsi
  Inst 33163:   load_ext_name u0:2+0, %rax
  Inst 33164:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 33165:   movq    %rdi, rsp(1504 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33166:   call    *%rax
  Inst 33167:   movq    %rax, %r15
  Inst 33168:   movq    %rdx, %r14
  Inst 33169:   testq   %r14, %r14
  Inst 33170:   jz      label873; j label874
Block 873:
  (successor: Block 876)
  (instruction range: 33171 .. 33282)
  Inst 33171:   movq    %r15, rsp(1880 + virtual offset)
  Inst 33172:   nop     len=0
  Inst 33173:   nop     len=0
  Inst 33174:   nop     len=0
  Inst 33175:   nop     len=0
  Inst 33176:   nop     len=0
  Inst 33177:   nop     len=0
  Inst 33178:   nop     len=0
  Inst 33179:   nop     len=0
  Inst 33180:   nop     len=0
  Inst 33181:   nop     len=0
  Inst 33182:   nop     len=0
  Inst 33183:   nop     len=0
  Inst 33184:   nop     len=0
  Inst 33185:   nop     len=0
  Inst 33186:   nop     len=0
  Inst 33187:   nop     len=0
  Inst 33188:   nop     len=0
  Inst 33189:   nop     len=0
  Inst 33190:   nop     len=0
  Inst 33191:   nop     len=0
  Inst 33192:   nop     len=0
  Inst 33193:   nop     len=0
  Inst 33194:   nop     len=0
  Inst 33195:   nop     len=0
  Inst 33196:   nop     len=0
  Inst 33197:   nop     len=0
  Inst 33198:   nop     len=0
  Inst 33199:   nop     len=0
  Inst 33200:   nop     len=0
  Inst 33201:   nop     len=0
  Inst 33202:   nop     len=0
  Inst 33203:   nop     len=0
  Inst 33204:   nop     len=0
  Inst 33205:   nop     len=0
  Inst 33206:   nop     len=0
  Inst 33207:   nop     len=0
  Inst 33208:   nop     len=0
  Inst 33209:   nop     len=0
  Inst 33210:   nop     len=0
  Inst 33211:   nop     len=0
  Inst 33212:   nop     len=0
  Inst 33213:   nop     len=0
  Inst 33214:   nop     len=0
  Inst 33215:   nop     len=0
  Inst 33216:   nop     len=0
  Inst 33217:   nop     len=0
  Inst 33218:   nop     len=0
  Inst 33219:   nop     len=0
  Inst 33220:   nop     len=0
  Inst 33221:   nop     len=0
  Inst 33222:   nop     len=0
  Inst 33223:   nop     len=0
  Inst 33224:   nop     len=0
  Inst 33225:   nop     len=0
  Inst 33226:   nop     len=0
  Inst 33227:   nop     len=0
  Inst 33228:   nop     len=0
  Inst 33229:   nop     len=0
  Inst 33230:   nop     len=0
  Inst 33231:   nop     len=0
  Inst 33232:   nop     len=0
  Inst 33233:   nop     len=0
  Inst 33234:   nop     len=0
  Inst 33235:   nop     len=0
  Inst 33236:   nop     len=0
  Inst 33237:   nop     len=0
  Inst 33238:   nop     len=0
  Inst 33239:   nop     len=0
  Inst 33240:   nop     len=0
  Inst 33241:   nop     len=0
  Inst 33242:   nop     len=0
  Inst 33243:   nop     len=0
  Inst 33244:   nop     len=0
  Inst 33245:   nop     len=0
  Inst 33246:   nop     len=0
  Inst 33247:   nop     len=0
  Inst 33248:   nop     len=0
  Inst 33249:   nop     len=0
  Inst 33250:   nop     len=0
  Inst 33251:   nop     len=0
  Inst 33252:   nop     len=0
  Inst 33253:   nop     len=0
  Inst 33254:   nop     len=0
  Inst 33255:   nop     len=0
  Inst 33256:   nop     len=0
  Inst 33257:   nop     len=0
  Inst 33258:   nop     len=0
  Inst 33259:   nop     len=0
  Inst 33260:   nop     len=0
  Inst 33261:   nop     len=0
  Inst 33262:   nop     len=0
  Inst 33263:   nop     len=0
  Inst 33264:   nop     len=0
  Inst 33265:   nop     len=0
  Inst 33266:   nop     len=0
  Inst 33267:   nop     len=0
  Inst 33268:   nop     len=0
  Inst 33269:   nop     len=0
  Inst 33270:   nop     len=0
  Inst 33271:   nop     len=0
  Inst 33272:   nop     len=0
  Inst 33273:   nop     len=0
  Inst 33274:   nop     len=0
  Inst 33275:   nop     len=0
  Inst 33276:   nop     len=0
  Inst 33277:   nop     len=0
  Inst 33278:   nop     len=0
  Inst 33279:   nop     len=0
  Inst 33280:   nop     len=0
  Inst 33281:   jmp     label876
Block 874:
  (original IR block: block439)
  (successor: Block 875)
  (instruction range: 33282 .. 33311)
  Inst 33282:   movq    rsp(2072 + virtual offset), %rsi
  Inst 33283:   movq    152(%rsi), %r13
  Inst 33284:   movq    %r14, %rbx
  Inst 33285:   addq    $-1, %rbx
  Inst 33286:   movq    %r14, %rdx
  Inst 33287:   shlq    $3, %rdx
  Inst 33288:   movq    %r13, %r12
  Inst 33289:   addq    %rdx, %r12
  Inst 33290:   movq    %r13, %rdi
  Inst 33291:   addq    $-24, %rdi
  Inst 33292:   movq    %r13, %rsi
  Inst 33293:   load_ext_name %Memmove+0, %rax
  Inst 33294:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33295:   call    *%rax
  Inst 33296:   movq    rsp(1496 + virtual offset), %r15
  Inst 33297:   load_ext_name u1:1+0, %rsi
  Inst 33298:   movl    $1, %edi
  Inst 33299:   movq    %rdi, -8(%r13,%r14,8)
  Inst 33300:   movl    $1, %edi
  Inst 33301:   movq    %rdi, -16(%r13,%r14,8)
  Inst 33302:   movq    %rsi, -24(%r13,%r14,8)
  Inst 33303:   movq    rsp(2072 + virtual offset), %rsi
  Inst 33304:   movq    %r12, 152(%rsi)
  Inst 33305:   movq    %r15, %rdi
  Inst 33306:   movq    %rbx, %rsi
  Inst 33307:   load_ext_name u0:3+0, %rax
  Inst 33308:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33309:   call    *%rax
  Inst 33310:   jmp     label875
Block 875:
  (successor: Block 876)
  (instruction range: 33311 .. 33422)
  Inst 33311:   movq    %rax, rsp(1880 + virtual offset)
  Inst 33312:   nop     len=0
  Inst 33313:   nop     len=0
  Inst 33314:   nop     len=0
  Inst 33315:   nop     len=0
  Inst 33316:   nop     len=0
  Inst 33317:   nop     len=0
  Inst 33318:   nop     len=0
  Inst 33319:   nop     len=0
  Inst 33320:   nop     len=0
  Inst 33321:   nop     len=0
  Inst 33322:   nop     len=0
  Inst 33323:   nop     len=0
  Inst 33324:   nop     len=0
  Inst 33325:   nop     len=0
  Inst 33326:   nop     len=0
  Inst 33327:   nop     len=0
  Inst 33328:   nop     len=0
  Inst 33329:   nop     len=0
  Inst 33330:   nop     len=0
  Inst 33331:   nop     len=0
  Inst 33332:   nop     len=0
  Inst 33333:   nop     len=0
  Inst 33334:   nop     len=0
  Inst 33335:   nop     len=0
  Inst 33336:   nop     len=0
  Inst 33337:   nop     len=0
  Inst 33338:   nop     len=0
  Inst 33339:   nop     len=0
  Inst 33340:   nop     len=0
  Inst 33341:   nop     len=0
  Inst 33342:   nop     len=0
  Inst 33343:   nop     len=0
  Inst 33344:   nop     len=0
  Inst 33345:   nop     len=0
  Inst 33346:   nop     len=0
  Inst 33347:   nop     len=0
  Inst 33348:   nop     len=0
  Inst 33349:   nop     len=0
  Inst 33350:   nop     len=0
  Inst 33351:   nop     len=0
  Inst 33352:   nop     len=0
  Inst 33353:   nop     len=0
  Inst 33354:   nop     len=0
  Inst 33355:   nop     len=0
  Inst 33356:   nop     len=0
  Inst 33357:   nop     len=0
  Inst 33358:   nop     len=0
  Inst 33359:   nop     len=0
  Inst 33360:   nop     len=0
  Inst 33361:   nop     len=0
  Inst 33362:   nop     len=0
  Inst 33363:   nop     len=0
  Inst 33364:   nop     len=0
  Inst 33365:   nop     len=0
  Inst 33366:   nop     len=0
  Inst 33367:   nop     len=0
  Inst 33368:   nop     len=0
  Inst 33369:   nop     len=0
  Inst 33370:   nop     len=0
  Inst 33371:   nop     len=0
  Inst 33372:   nop     len=0
  Inst 33373:   nop     len=0
  Inst 33374:   nop     len=0
  Inst 33375:   nop     len=0
  Inst 33376:   nop     len=0
  Inst 33377:   nop     len=0
  Inst 33378:   nop     len=0
  Inst 33379:   nop     len=0
  Inst 33380:   nop     len=0
  Inst 33381:   nop     len=0
  Inst 33382:   nop     len=0
  Inst 33383:   nop     len=0
  Inst 33384:   nop     len=0
  Inst 33385:   nop     len=0
  Inst 33386:   nop     len=0
  Inst 33387:   nop     len=0
  Inst 33388:   nop     len=0
  Inst 33389:   nop     len=0
  Inst 33390:   nop     len=0
  Inst 33391:   nop     len=0
  Inst 33392:   nop     len=0
  Inst 33393:   nop     len=0
  Inst 33394:   nop     len=0
  Inst 33395:   nop     len=0
  Inst 33396:   nop     len=0
  Inst 33397:   nop     len=0
  Inst 33398:   nop     len=0
  Inst 33399:   nop     len=0
  Inst 33400:   nop     len=0
  Inst 33401:   nop     len=0
  Inst 33402:   nop     len=0
  Inst 33403:   nop     len=0
  Inst 33404:   nop     len=0
  Inst 33405:   nop     len=0
  Inst 33406:   nop     len=0
  Inst 33407:   nop     len=0
  Inst 33408:   nop     len=0
  Inst 33409:   nop     len=0
  Inst 33410:   nop     len=0
  Inst 33411:   nop     len=0
  Inst 33412:   nop     len=0
  Inst 33413:   nop     len=0
  Inst 33414:   nop     len=0
  Inst 33415:   nop     len=0
  Inst 33416:   nop     len=0
  Inst 33417:   nop     len=0
  Inst 33418:   nop     len=0
  Inst 33419:   nop     len=0
  Inst 33420:   nop     len=0
  Inst 33421:   jmp     label876
Block 876:
  (original IR block: block438)
  (successor: Block 877)
  (successor: Block 878)
  (instruction range: 33422 .. 33433)
  Inst 33422:   movq    rsp(2064 + virtual offset), %rsi
  Inst 33423:   movq    8(%rsi), %rdi
  Inst 33424:   movq    rsp(2048 + virtual offset), %rsi
  Inst 33425:   load_ext_name u0:2+0, %rax
  Inst 33426:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 33427:   movq    %rdi, rsp(1504 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33428:   call    *%rax
  Inst 33429:   movq    %rax, %rbx
  Inst 33430:   movq    %rdx, %r14
  Inst 33431:   testq   %r14, %r14
  Inst 33432:   jz      label877; j label878
Block 877:
  (successor: Block 880)
  (instruction range: 33433 .. 33544)
  Inst 33433:   movq    %rbx, rsp(1504 + virtual offset)
  Inst 33434:   nop     len=0
  Inst 33435:   nop     len=0
  Inst 33436:   nop     len=0
  Inst 33437:   nop     len=0
  Inst 33438:   nop     len=0
  Inst 33439:   nop     len=0
  Inst 33440:   nop     len=0
  Inst 33441:   nop     len=0
  Inst 33442:   nop     len=0
  Inst 33443:   nop     len=0
  Inst 33444:   nop     len=0
  Inst 33445:   nop     len=0
  Inst 33446:   nop     len=0
  Inst 33447:   nop     len=0
  Inst 33448:   nop     len=0
  Inst 33449:   nop     len=0
  Inst 33450:   nop     len=0
  Inst 33451:   nop     len=0
  Inst 33452:   nop     len=0
  Inst 33453:   nop     len=0
  Inst 33454:   nop     len=0
  Inst 33455:   nop     len=0
  Inst 33456:   nop     len=0
  Inst 33457:   nop     len=0
  Inst 33458:   nop     len=0
  Inst 33459:   nop     len=0
  Inst 33460:   nop     len=0
  Inst 33461:   nop     len=0
  Inst 33462:   nop     len=0
  Inst 33463:   nop     len=0
  Inst 33464:   nop     len=0
  Inst 33465:   nop     len=0
  Inst 33466:   nop     len=0
  Inst 33467:   nop     len=0
  Inst 33468:   nop     len=0
  Inst 33469:   nop     len=0
  Inst 33470:   nop     len=0
  Inst 33471:   nop     len=0
  Inst 33472:   nop     len=0
  Inst 33473:   nop     len=0
  Inst 33474:   nop     len=0
  Inst 33475:   nop     len=0
  Inst 33476:   nop     len=0
  Inst 33477:   nop     len=0
  Inst 33478:   nop     len=0
  Inst 33479:   nop     len=0
  Inst 33480:   nop     len=0
  Inst 33481:   nop     len=0
  Inst 33482:   nop     len=0
  Inst 33483:   nop     len=0
  Inst 33484:   nop     len=0
  Inst 33485:   nop     len=0
  Inst 33486:   nop     len=0
  Inst 33487:   nop     len=0
  Inst 33488:   nop     len=0
  Inst 33489:   nop     len=0
  Inst 33490:   nop     len=0
  Inst 33491:   nop     len=0
  Inst 33492:   nop     len=0
  Inst 33493:   nop     len=0
  Inst 33494:   nop     len=0
  Inst 33495:   nop     len=0
  Inst 33496:   nop     len=0
  Inst 33497:   nop     len=0
  Inst 33498:   nop     len=0
  Inst 33499:   nop     len=0
  Inst 33500:   nop     len=0
  Inst 33501:   nop     len=0
  Inst 33502:   nop     len=0
  Inst 33503:   nop     len=0
  Inst 33504:   nop     len=0
  Inst 33505:   nop     len=0
  Inst 33506:   nop     len=0
  Inst 33507:   nop     len=0
  Inst 33508:   nop     len=0
  Inst 33509:   nop     len=0
  Inst 33510:   nop     len=0
  Inst 33511:   nop     len=0
  Inst 33512:   nop     len=0
  Inst 33513:   nop     len=0
  Inst 33514:   nop     len=0
  Inst 33515:   nop     len=0
  Inst 33516:   nop     len=0
  Inst 33517:   nop     len=0
  Inst 33518:   nop     len=0
  Inst 33519:   nop     len=0
  Inst 33520:   nop     len=0
  Inst 33521:   nop     len=0
  Inst 33522:   nop     len=0
  Inst 33523:   nop     len=0
  Inst 33524:   nop     len=0
  Inst 33525:   nop     len=0
  Inst 33526:   nop     len=0
  Inst 33527:   nop     len=0
  Inst 33528:   nop     len=0
  Inst 33529:   nop     len=0
  Inst 33530:   nop     len=0
  Inst 33531:   nop     len=0
  Inst 33532:   nop     len=0
  Inst 33533:   nop     len=0
  Inst 33534:   nop     len=0
  Inst 33535:   nop     len=0
  Inst 33536:   nop     len=0
  Inst 33537:   nop     len=0
  Inst 33538:   nop     len=0
  Inst 33539:   nop     len=0
  Inst 33540:   nop     len=0
  Inst 33541:   nop     len=0
  Inst 33542:   nop     len=0
  Inst 33543:   jmp     label880
Block 878:
  (original IR block: block441)
  (successor: Block 879)
  (instruction range: 33544 .. 33573)
  Inst 33544:   movq    rsp(2072 + virtual offset), %rsi
  Inst 33545:   movq    152(%rsi), %r13
  Inst 33546:   movq    %r14, %r15
  Inst 33547:   addq    $-1, %r15
  Inst 33548:   movq    %r14, %rdx
  Inst 33549:   shlq    $3, %rdx
  Inst 33550:   movq    %r13, %r12
  Inst 33551:   addq    %rdx, %r12
  Inst 33552:   movq    %r13, %rdi
  Inst 33553:   addq    $-24, %rdi
  Inst 33554:   movq    %r13, %rsi
  Inst 33555:   load_ext_name %Memmove+0, %rax
  Inst 33556:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33557:   call    *%rax
  Inst 33558:   movq    rsp(1496 + virtual offset), %rbx
  Inst 33559:   load_ext_name u1:1+0, %rsi
  Inst 33560:   movl    $1, %edi
  Inst 33561:   movq    %rdi, -8(%r13,%r14,8)
  Inst 33562:   movl    $1, %edi
  Inst 33563:   movq    %rdi, -16(%r13,%r14,8)
  Inst 33564:   movq    %rsi, -24(%r13,%r14,8)
  Inst 33565:   movq    rsp(2072 + virtual offset), %rsi
  Inst 33566:   movq    %r12, 152(%rsi)
  Inst 33567:   movq    %rbx, %rdi
  Inst 33568:   movq    %r15, %rsi
  Inst 33569:   load_ext_name u0:3+0, %rax
  Inst 33570:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33571:   call    *%rax
  Inst 33572:   jmp     label879
Block 879:
  (successor: Block 880)
  (instruction range: 33573 .. 33684)
  Inst 33573:   movq    %rax, rsp(1504 + virtual offset)
  Inst 33574:   nop     len=0
  Inst 33575:   nop     len=0
  Inst 33576:   nop     len=0
  Inst 33577:   nop     len=0
  Inst 33578:   nop     len=0
  Inst 33579:   nop     len=0
  Inst 33580:   nop     len=0
  Inst 33581:   nop     len=0
  Inst 33582:   nop     len=0
  Inst 33583:   nop     len=0
  Inst 33584:   nop     len=0
  Inst 33585:   nop     len=0
  Inst 33586:   nop     len=0
  Inst 33587:   nop     len=0
  Inst 33588:   nop     len=0
  Inst 33589:   nop     len=0
  Inst 33590:   nop     len=0
  Inst 33591:   nop     len=0
  Inst 33592:   nop     len=0
  Inst 33593:   nop     len=0
  Inst 33594:   nop     len=0
  Inst 33595:   nop     len=0
  Inst 33596:   nop     len=0
  Inst 33597:   nop     len=0
  Inst 33598:   nop     len=0
  Inst 33599:   nop     len=0
  Inst 33600:   nop     len=0
  Inst 33601:   nop     len=0
  Inst 33602:   nop     len=0
  Inst 33603:   nop     len=0
  Inst 33604:   nop     len=0
  Inst 33605:   nop     len=0
  Inst 33606:   nop     len=0
  Inst 33607:   nop     len=0
  Inst 33608:   nop     len=0
  Inst 33609:   nop     len=0
  Inst 33610:   nop     len=0
  Inst 33611:   nop     len=0
  Inst 33612:   nop     len=0
  Inst 33613:   nop     len=0
  Inst 33614:   nop     len=0
  Inst 33615:   nop     len=0
  Inst 33616:   nop     len=0
  Inst 33617:   nop     len=0
  Inst 33618:   nop     len=0
  Inst 33619:   nop     len=0
  Inst 33620:   nop     len=0
  Inst 33621:   nop     len=0
  Inst 33622:   nop     len=0
  Inst 33623:   nop     len=0
  Inst 33624:   nop     len=0
  Inst 33625:   nop     len=0
  Inst 33626:   nop     len=0
  Inst 33627:   nop     len=0
  Inst 33628:   nop     len=0
  Inst 33629:   nop     len=0
  Inst 33630:   nop     len=0
  Inst 33631:   nop     len=0
  Inst 33632:   nop     len=0
  Inst 33633:   nop     len=0
  Inst 33634:   nop     len=0
  Inst 33635:   nop     len=0
  Inst 33636:   nop     len=0
  Inst 33637:   nop     len=0
  Inst 33638:   nop     len=0
  Inst 33639:   nop     len=0
  Inst 33640:   nop     len=0
  Inst 33641:   nop     len=0
  Inst 33642:   nop     len=0
  Inst 33643:   nop     len=0
  Inst 33644:   nop     len=0
  Inst 33645:   nop     len=0
  Inst 33646:   nop     len=0
  Inst 33647:   nop     len=0
  Inst 33648:   nop     len=0
  Inst 33649:   nop     len=0
  Inst 33650:   nop     len=0
  Inst 33651:   nop     len=0
  Inst 33652:   nop     len=0
  Inst 33653:   nop     len=0
  Inst 33654:   nop     len=0
  Inst 33655:   nop     len=0
  Inst 33656:   nop     len=0
  Inst 33657:   nop     len=0
  Inst 33658:   nop     len=0
  Inst 33659:   nop     len=0
  Inst 33660:   nop     len=0
  Inst 33661:   nop     len=0
  Inst 33662:   nop     len=0
  Inst 33663:   nop     len=0
  Inst 33664:   nop     len=0
  Inst 33665:   nop     len=0
  Inst 33666:   nop     len=0
  Inst 33667:   nop     len=0
  Inst 33668:   nop     len=0
  Inst 33669:   nop     len=0
  Inst 33670:   nop     len=0
  Inst 33671:   nop     len=0
  Inst 33672:   nop     len=0
  Inst 33673:   nop     len=0
  Inst 33674:   nop     len=0
  Inst 33675:   nop     len=0
  Inst 33676:   nop     len=0
  Inst 33677:   nop     len=0
  Inst 33678:   nop     len=0
  Inst 33679:   nop     len=0
  Inst 33680:   nop     len=0
  Inst 33681:   nop     len=0
  Inst 33682:   nop     len=0
  Inst 33683:   jmp     label880
Block 880:
  (original IR block: block440)
  (successor: Block 881)
  (successor: Block 882)
  (instruction range: 33684 .. 33695)
  Inst 33684:   movq    rsp(2064 + virtual offset), %rsi
  Inst 33685:   movq    8(%rsi), %rdi
  Inst 33686:   movq    rsp(2048 + virtual offset), %rsi
  Inst 33687:   load_ext_name u0:2+0, %rax
  Inst 33688:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 33689:   movq    %rdi, rsp(1520 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33690:   call    *%rax
  Inst 33691:   movq    %rax, %rbx
  Inst 33692:   movq    %rdx, %r14
  Inst 33693:   testq   %r14, %r14
  Inst 33694:   jz      label881; j label882
Block 881:
  (successor: Block 884)
  (instruction range: 33695 .. 33807)
  Inst 33695:   movq    %rbx, rsp(1872 + virtual offset)
  Inst 33696:   nop     len=0
  Inst 33697:   nop     len=0
  Inst 33698:   nop     len=0
  Inst 33699:   nop     len=0
  Inst 33700:   nop     len=0
  Inst 33701:   nop     len=0
  Inst 33702:   nop     len=0
  Inst 33703:   nop     len=0
  Inst 33704:   nop     len=0
  Inst 33705:   nop     len=0
  Inst 33706:   nop     len=0
  Inst 33707:   nop     len=0
  Inst 33708:   nop     len=0
  Inst 33709:   nop     len=0
  Inst 33710:   nop     len=0
  Inst 33711:   nop     len=0
  Inst 33712:   nop     len=0
  Inst 33713:   nop     len=0
  Inst 33714:   nop     len=0
  Inst 33715:   nop     len=0
  Inst 33716:   nop     len=0
  Inst 33717:   nop     len=0
  Inst 33718:   nop     len=0
  Inst 33719:   nop     len=0
  Inst 33720:   nop     len=0
  Inst 33721:   nop     len=0
  Inst 33722:   nop     len=0
  Inst 33723:   nop     len=0
  Inst 33724:   nop     len=0
  Inst 33725:   nop     len=0
  Inst 33726:   nop     len=0
  Inst 33727:   nop     len=0
  Inst 33728:   nop     len=0
  Inst 33729:   nop     len=0
  Inst 33730:   nop     len=0
  Inst 33731:   nop     len=0
  Inst 33732:   nop     len=0
  Inst 33733:   nop     len=0
  Inst 33734:   nop     len=0
  Inst 33735:   nop     len=0
  Inst 33736:   nop     len=0
  Inst 33737:   nop     len=0
  Inst 33738:   nop     len=0
  Inst 33739:   nop     len=0
  Inst 33740:   nop     len=0
  Inst 33741:   nop     len=0
  Inst 33742:   nop     len=0
  Inst 33743:   nop     len=0
  Inst 33744:   nop     len=0
  Inst 33745:   nop     len=0
  Inst 33746:   nop     len=0
  Inst 33747:   nop     len=0
  Inst 33748:   nop     len=0
  Inst 33749:   nop     len=0
  Inst 33750:   nop     len=0
  Inst 33751:   nop     len=0
  Inst 33752:   nop     len=0
  Inst 33753:   nop     len=0
  Inst 33754:   nop     len=0
  Inst 33755:   nop     len=0
  Inst 33756:   nop     len=0
  Inst 33757:   nop     len=0
  Inst 33758:   nop     len=0
  Inst 33759:   nop     len=0
  Inst 33760:   nop     len=0
  Inst 33761:   nop     len=0
  Inst 33762:   nop     len=0
  Inst 33763:   nop     len=0
  Inst 33764:   nop     len=0
  Inst 33765:   nop     len=0
  Inst 33766:   nop     len=0
  Inst 33767:   nop     len=0
  Inst 33768:   nop     len=0
  Inst 33769:   nop     len=0
  Inst 33770:   nop     len=0
  Inst 33771:   nop     len=0
  Inst 33772:   nop     len=0
  Inst 33773:   nop     len=0
  Inst 33774:   nop     len=0
  Inst 33775:   nop     len=0
  Inst 33776:   nop     len=0
  Inst 33777:   nop     len=0
  Inst 33778:   nop     len=0
  Inst 33779:   nop     len=0
  Inst 33780:   nop     len=0
  Inst 33781:   nop     len=0
  Inst 33782:   nop     len=0
  Inst 33783:   nop     len=0
  Inst 33784:   nop     len=0
  Inst 33785:   nop     len=0
  Inst 33786:   nop     len=0
  Inst 33787:   nop     len=0
  Inst 33788:   nop     len=0
  Inst 33789:   nop     len=0
  Inst 33790:   nop     len=0
  Inst 33791:   nop     len=0
  Inst 33792:   nop     len=0
  Inst 33793:   nop     len=0
  Inst 33794:   nop     len=0
  Inst 33795:   nop     len=0
  Inst 33796:   nop     len=0
  Inst 33797:   nop     len=0
  Inst 33798:   nop     len=0
  Inst 33799:   nop     len=0
  Inst 33800:   nop     len=0
  Inst 33801:   nop     len=0
  Inst 33802:   nop     len=0
  Inst 33803:   nop     len=0
  Inst 33804:   nop     len=0
  Inst 33805:   nop     len=0
  Inst 33806:   jmp     label884
Block 882:
  (original IR block: block443)
  (successor: Block 883)
  (instruction range: 33807 .. 33836)
  Inst 33807:   movq    rsp(2072 + virtual offset), %rsi
  Inst 33808:   movq    152(%rsi), %r13
  Inst 33809:   movq    %r14, %r15
  Inst 33810:   addq    $-1, %r15
  Inst 33811:   movq    %r14, %rdx
  Inst 33812:   shlq    $3, %rdx
  Inst 33813:   movq    %r13, %r12
  Inst 33814:   addq    %rdx, %r12
  Inst 33815:   movq    %r13, %rdi
  Inst 33816:   addq    $-24, %rdi
  Inst 33817:   movq    %r13, %rsi
  Inst 33818:   load_ext_name %Memmove+0, %rax
  Inst 33819:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33820:   call    *%rax
  Inst 33821:   movq    rsp(1496 + virtual offset), %rbx
  Inst 33822:   load_ext_name u1:1+0, %rsi
  Inst 33823:   movl    $1, %edi
  Inst 33824:   movq    %rdi, -8(%r13,%r14,8)
  Inst 33825:   movl    $1, %edi
  Inst 33826:   movq    %rdi, -16(%r13,%r14,8)
  Inst 33827:   movq    %rsi, -24(%r13,%r14,8)
  Inst 33828:   movq    rsp(2072 + virtual offset), %rsi
  Inst 33829:   movq    %r12, 152(%rsi)
  Inst 33830:   movq    %rbx, %rdi
  Inst 33831:   movq    %r15, %rsi
  Inst 33832:   load_ext_name u0:3+0, %rax
  Inst 33833:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33834:   call    *%rax
  Inst 33835:   jmp     label883
Block 883:
  (successor: Block 884)
  (instruction range: 33836 .. 33948)
  Inst 33836:   movq    %rax, rsp(1872 + virtual offset)
  Inst 33837:   nop     len=0
  Inst 33838:   nop     len=0
  Inst 33839:   nop     len=0
  Inst 33840:   nop     len=0
  Inst 33841:   nop     len=0
  Inst 33842:   nop     len=0
  Inst 33843:   nop     len=0
  Inst 33844:   nop     len=0
  Inst 33845:   nop     len=0
  Inst 33846:   nop     len=0
  Inst 33847:   nop     len=0
  Inst 33848:   nop     len=0
  Inst 33849:   nop     len=0
  Inst 33850:   nop     len=0
  Inst 33851:   nop     len=0
  Inst 33852:   nop     len=0
  Inst 33853:   nop     len=0
  Inst 33854:   nop     len=0
  Inst 33855:   nop     len=0
  Inst 33856:   nop     len=0
  Inst 33857:   nop     len=0
  Inst 33858:   nop     len=0
  Inst 33859:   nop     len=0
  Inst 33860:   nop     len=0
  Inst 33861:   nop     len=0
  Inst 33862:   nop     len=0
  Inst 33863:   nop     len=0
  Inst 33864:   nop     len=0
  Inst 33865:   nop     len=0
  Inst 33866:   nop     len=0
  Inst 33867:   nop     len=0
  Inst 33868:   nop     len=0
  Inst 33869:   nop     len=0
  Inst 33870:   nop     len=0
  Inst 33871:   nop     len=0
  Inst 33872:   nop     len=0
  Inst 33873:   nop     len=0
  Inst 33874:   nop     len=0
  Inst 33875:   nop     len=0
  Inst 33876:   nop     len=0
  Inst 33877:   nop     len=0
  Inst 33878:   nop     len=0
  Inst 33879:   nop     len=0
  Inst 33880:   nop     len=0
  Inst 33881:   nop     len=0
  Inst 33882:   nop     len=0
  Inst 33883:   nop     len=0
  Inst 33884:   nop     len=0
  Inst 33885:   nop     len=0
  Inst 33886:   nop     len=0
  Inst 33887:   nop     len=0
  Inst 33888:   nop     len=0
  Inst 33889:   nop     len=0
  Inst 33890:   nop     len=0
  Inst 33891:   nop     len=0
  Inst 33892:   nop     len=0
  Inst 33893:   nop     len=0
  Inst 33894:   nop     len=0
  Inst 33895:   nop     len=0
  Inst 33896:   nop     len=0
  Inst 33897:   nop     len=0
  Inst 33898:   nop     len=0
  Inst 33899:   nop     len=0
  Inst 33900:   nop     len=0
  Inst 33901:   nop     len=0
  Inst 33902:   nop     len=0
  Inst 33903:   nop     len=0
  Inst 33904:   nop     len=0
  Inst 33905:   nop     len=0
  Inst 33906:   nop     len=0
  Inst 33907:   nop     len=0
  Inst 33908:   nop     len=0
  Inst 33909:   nop     len=0
  Inst 33910:   nop     len=0
  Inst 33911:   nop     len=0
  Inst 33912:   nop     len=0
  Inst 33913:   nop     len=0
  Inst 33914:   nop     len=0
  Inst 33915:   nop     len=0
  Inst 33916:   nop     len=0
  Inst 33917:   nop     len=0
  Inst 33918:   nop     len=0
  Inst 33919:   nop     len=0
  Inst 33920:   nop     len=0
  Inst 33921:   nop     len=0
  Inst 33922:   nop     len=0
  Inst 33923:   nop     len=0
  Inst 33924:   nop     len=0
  Inst 33925:   nop     len=0
  Inst 33926:   nop     len=0
  Inst 33927:   nop     len=0
  Inst 33928:   nop     len=0
  Inst 33929:   nop     len=0
  Inst 33930:   nop     len=0
  Inst 33931:   nop     len=0
  Inst 33932:   nop     len=0
  Inst 33933:   nop     len=0
  Inst 33934:   nop     len=0
  Inst 33935:   nop     len=0
  Inst 33936:   nop     len=0
  Inst 33937:   nop     len=0
  Inst 33938:   nop     len=0
  Inst 33939:   nop     len=0
  Inst 33940:   nop     len=0
  Inst 33941:   nop     len=0
  Inst 33942:   nop     len=0
  Inst 33943:   nop     len=0
  Inst 33944:   nop     len=0
  Inst 33945:   nop     len=0
  Inst 33946:   nop     len=0
  Inst 33947:   jmp     label884
Block 884:
  (original IR block: block442)
  (successor: Block 885)
  (successor: Block 886)
  (instruction range: 33948 .. 33959)
  Inst 33948:   movq    rsp(2064 + virtual offset), %rsi
  Inst 33949:   movq    8(%rsi), %rdi
  Inst 33950:   movq    rsp(2048 + virtual offset), %rsi
  Inst 33951:   load_ext_name u0:2+0, %rax
  Inst 33952:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 33953:   movq    %rdi, rsp(1520 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 33954:   call    *%rax
  Inst 33955:   movq    %rax, %r15
  Inst 33956:   movq    %rdx, %r14
  Inst 33957:   testq   %r14, %r14
  Inst 33958:   jz      label885; j label886
Block 885:
  (successor: Block 888)
  (instruction range: 33959 .. 34071)
  Inst 33959:   movq    %r15, rsp(1520 + virtual offset)
  Inst 33960:   nop     len=0
  Inst 33961:   nop     len=0
  Inst 33962:   nop     len=0
  Inst 33963:   nop     len=0
  Inst 33964:   nop     len=0
  Inst 33965:   nop     len=0
  Inst 33966:   nop     len=0
  Inst 33967:   nop     len=0
  Inst 33968:   nop     len=0
  Inst 33969:   nop     len=0
  Inst 33970:   nop     len=0
  Inst 33971:   nop     len=0
  Inst 33972:   nop     len=0
  Inst 33973:   nop     len=0
  Inst 33974:   nop     len=0
  Inst 33975:   nop     len=0
  Inst 33976:   nop     len=0
  Inst 33977:   nop     len=0
  Inst 33978:   nop     len=0
  Inst 33979:   nop     len=0
  Inst 33980:   nop     len=0
  Inst 33981:   nop     len=0
  Inst 33982:   nop     len=0
  Inst 33983:   nop     len=0
  Inst 33984:   nop     len=0
  Inst 33985:   nop     len=0
  Inst 33986:   nop     len=0
  Inst 33987:   nop     len=0
  Inst 33988:   nop     len=0
  Inst 33989:   nop     len=0
  Inst 33990:   nop     len=0
  Inst 33991:   nop     len=0
  Inst 33992:   nop     len=0
  Inst 33993:   nop     len=0
  Inst 33994:   nop     len=0
  Inst 33995:   nop     len=0
  Inst 33996:   nop     len=0
  Inst 33997:   nop     len=0
  Inst 33998:   nop     len=0
  Inst 33999:   nop     len=0
  Inst 34000:   nop     len=0
  Inst 34001:   nop     len=0
  Inst 34002:   nop     len=0
  Inst 34003:   nop     len=0
  Inst 34004:   nop     len=0
  Inst 34005:   nop     len=0
  Inst 34006:   nop     len=0
  Inst 34007:   nop     len=0
  Inst 34008:   nop     len=0
  Inst 34009:   nop     len=0
  Inst 34010:   nop     len=0
  Inst 34011:   nop     len=0
  Inst 34012:   nop     len=0
  Inst 34013:   nop     len=0
  Inst 34014:   nop     len=0
  Inst 34015:   nop     len=0
  Inst 34016:   nop     len=0
  Inst 34017:   nop     len=0
  Inst 34018:   nop     len=0
  Inst 34019:   nop     len=0
  Inst 34020:   nop     len=0
  Inst 34021:   nop     len=0
  Inst 34022:   nop     len=0
  Inst 34023:   nop     len=0
  Inst 34024:   nop     len=0
  Inst 34025:   nop     len=0
  Inst 34026:   nop     len=0
  Inst 34027:   nop     len=0
  Inst 34028:   nop     len=0
  Inst 34029:   nop     len=0
  Inst 34030:   nop     len=0
  Inst 34031:   nop     len=0
  Inst 34032:   nop     len=0
  Inst 34033:   nop     len=0
  Inst 34034:   nop     len=0
  Inst 34035:   nop     len=0
  Inst 34036:   nop     len=0
  Inst 34037:   nop     len=0
  Inst 34038:   nop     len=0
  Inst 34039:   nop     len=0
  Inst 34040:   nop     len=0
  Inst 34041:   nop     len=0
  Inst 34042:   nop     len=0
  Inst 34043:   nop     len=0
  Inst 34044:   nop     len=0
  Inst 34045:   nop     len=0
  Inst 34046:   nop     len=0
  Inst 34047:   nop     len=0
  Inst 34048:   nop     len=0
  Inst 34049:   nop     len=0
  Inst 34050:   nop     len=0
  Inst 34051:   nop     len=0
  Inst 34052:   nop     len=0
  Inst 34053:   nop     len=0
  Inst 34054:   nop     len=0
  Inst 34055:   nop     len=0
  Inst 34056:   nop     len=0
  Inst 34057:   nop     len=0
  Inst 34058:   nop     len=0
  Inst 34059:   nop     len=0
  Inst 34060:   nop     len=0
  Inst 34061:   nop     len=0
  Inst 34062:   nop     len=0
  Inst 34063:   nop     len=0
  Inst 34064:   nop     len=0
  Inst 34065:   nop     len=0
  Inst 34066:   nop     len=0
  Inst 34067:   nop     len=0
  Inst 34068:   nop     len=0
  Inst 34069:   nop     len=0
  Inst 34070:   jmp     label888
Block 886:
  (original IR block: block445)
  (successor: Block 887)
  (instruction range: 34071 .. 34100)
  Inst 34071:   movq    rsp(2072 + virtual offset), %rsi
  Inst 34072:   movq    152(%rsi), %r13
  Inst 34073:   movq    %r14, %rbx
  Inst 34074:   addq    $-1, %rbx
  Inst 34075:   movq    %r14, %rdx
  Inst 34076:   shlq    $3, %rdx
  Inst 34077:   movq    %r13, %r12
  Inst 34078:   addq    %rdx, %r12
  Inst 34079:   movq    %r13, %rdi
  Inst 34080:   addq    $-24, %rdi
  Inst 34081:   movq    %r13, %rsi
  Inst 34082:   load_ext_name %Memmove+0, %rax
  Inst 34083:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34084:   call    *%rax
  Inst 34085:   movq    rsp(1496 + virtual offset), %r15
  Inst 34086:   load_ext_name u1:1+0, %rsi
  Inst 34087:   movl    $1, %edi
  Inst 34088:   movq    %rdi, -8(%r13,%r14,8)
  Inst 34089:   movl    $1, %edi
  Inst 34090:   movq    %rdi, -16(%r13,%r14,8)
  Inst 34091:   movq    %rsi, -24(%r13,%r14,8)
  Inst 34092:   movq    rsp(2072 + virtual offset), %rsi
  Inst 34093:   movq    %r12, 152(%rsi)
  Inst 34094:   movq    %r15, %rdi
  Inst 34095:   movq    %rbx, %rsi
  Inst 34096:   load_ext_name u0:3+0, %rax
  Inst 34097:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34098:   call    *%rax
  Inst 34099:   jmp     label887
Block 887:
  (successor: Block 888)
  (instruction range: 34100 .. 34212)
  Inst 34100:   movq    %rax, rsp(1520 + virtual offset)
  Inst 34101:   nop     len=0
  Inst 34102:   nop     len=0
  Inst 34103:   nop     len=0
  Inst 34104:   nop     len=0
  Inst 34105:   nop     len=0
  Inst 34106:   nop     len=0
  Inst 34107:   nop     len=0
  Inst 34108:   nop     len=0
  Inst 34109:   nop     len=0
  Inst 34110:   nop     len=0
  Inst 34111:   nop     len=0
  Inst 34112:   nop     len=0
  Inst 34113:   nop     len=0
  Inst 34114:   nop     len=0
  Inst 34115:   nop     len=0
  Inst 34116:   nop     len=0
  Inst 34117:   nop     len=0
  Inst 34118:   nop     len=0
  Inst 34119:   nop     len=0
  Inst 34120:   nop     len=0
  Inst 34121:   nop     len=0
  Inst 34122:   nop     len=0
  Inst 34123:   nop     len=0
  Inst 34124:   nop     len=0
  Inst 34125:   nop     len=0
  Inst 34126:   nop     len=0
  Inst 34127:   nop     len=0
  Inst 34128:   nop     len=0
  Inst 34129:   nop     len=0
  Inst 34130:   nop     len=0
  Inst 34131:   nop     len=0
  Inst 34132:   nop     len=0
  Inst 34133:   nop     len=0
  Inst 34134:   nop     len=0
  Inst 34135:   nop     len=0
  Inst 34136:   nop     len=0
  Inst 34137:   nop     len=0
  Inst 34138:   nop     len=0
  Inst 34139:   nop     len=0
  Inst 34140:   nop     len=0
  Inst 34141:   nop     len=0
  Inst 34142:   nop     len=0
  Inst 34143:   nop     len=0
  Inst 34144:   nop     len=0
  Inst 34145:   nop     len=0
  Inst 34146:   nop     len=0
  Inst 34147:   nop     len=0
  Inst 34148:   nop     len=0
  Inst 34149:   nop     len=0
  Inst 34150:   nop     len=0
  Inst 34151:   nop     len=0
  Inst 34152:   nop     len=0
  Inst 34153:   nop     len=0
  Inst 34154:   nop     len=0
  Inst 34155:   nop     len=0
  Inst 34156:   nop     len=0
  Inst 34157:   nop     len=0
  Inst 34158:   nop     len=0
  Inst 34159:   nop     len=0
  Inst 34160:   nop     len=0
  Inst 34161:   nop     len=0
  Inst 34162:   nop     len=0
  Inst 34163:   nop     len=0
  Inst 34164:   nop     len=0
  Inst 34165:   nop     len=0
  Inst 34166:   nop     len=0
  Inst 34167:   nop     len=0
  Inst 34168:   nop     len=0
  Inst 34169:   nop     len=0
  Inst 34170:   nop     len=0
  Inst 34171:   nop     len=0
  Inst 34172:   nop     len=0
  Inst 34173:   nop     len=0
  Inst 34174:   nop     len=0
  Inst 34175:   nop     len=0
  Inst 34176:   nop     len=0
  Inst 34177:   nop     len=0
  Inst 34178:   nop     len=0
  Inst 34179:   nop     len=0
  Inst 34180:   nop     len=0
  Inst 34181:   nop     len=0
  Inst 34182:   nop     len=0
  Inst 34183:   nop     len=0
  Inst 34184:   nop     len=0
  Inst 34185:   nop     len=0
  Inst 34186:   nop     len=0
  Inst 34187:   nop     len=0
  Inst 34188:   nop     len=0
  Inst 34189:   nop     len=0
  Inst 34190:   nop     len=0
  Inst 34191:   nop     len=0
  Inst 34192:   nop     len=0
  Inst 34193:   nop     len=0
  Inst 34194:   nop     len=0
  Inst 34195:   nop     len=0
  Inst 34196:   nop     len=0
  Inst 34197:   nop     len=0
  Inst 34198:   nop     len=0
  Inst 34199:   nop     len=0
  Inst 34200:   nop     len=0
  Inst 34201:   nop     len=0
  Inst 34202:   nop     len=0
  Inst 34203:   nop     len=0
  Inst 34204:   nop     len=0
  Inst 34205:   nop     len=0
  Inst 34206:   nop     len=0
  Inst 34207:   nop     len=0
  Inst 34208:   nop     len=0
  Inst 34209:   nop     len=0
  Inst 34210:   nop     len=0
  Inst 34211:   jmp     label888
Block 888:
  (original IR block: block444)
  (successor: Block 889)
  (successor: Block 890)
  (instruction range: 34212 .. 34223)
  Inst 34212:   movq    rsp(2064 + virtual offset), %rsi
  Inst 34213:   movq    8(%rsi), %rdi
  Inst 34214:   movq    rsp(2048 + virtual offset), %rsi
  Inst 34215:   load_ext_name u0:2+0, %rax
  Inst 34216:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 34217:   movq    %rdi, rsp(1536 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34218:   call    *%rax
  Inst 34219:   movq    %rax, %rbx
  Inst 34220:   movq    %rdx, %r14
  Inst 34221:   testq   %r14, %r14
  Inst 34222:   jz      label889; j label890
Block 889:
  (successor: Block 892)
  (instruction range: 34223 .. 34336)
  Inst 34223:   movq    %rbx, rsp(1864 + virtual offset)
  Inst 34224:   nop     len=0
  Inst 34225:   nop     len=0
  Inst 34226:   nop     len=0
  Inst 34227:   nop     len=0
  Inst 34228:   nop     len=0
  Inst 34229:   nop     len=0
  Inst 34230:   nop     len=0
  Inst 34231:   nop     len=0
  Inst 34232:   nop     len=0
  Inst 34233:   nop     len=0
  Inst 34234:   nop     len=0
  Inst 34235:   nop     len=0
  Inst 34236:   nop     len=0
  Inst 34237:   nop     len=0
  Inst 34238:   nop     len=0
  Inst 34239:   nop     len=0
  Inst 34240:   nop     len=0
  Inst 34241:   nop     len=0
  Inst 34242:   nop     len=0
  Inst 34243:   nop     len=0
  Inst 34244:   nop     len=0
  Inst 34245:   nop     len=0
  Inst 34246:   nop     len=0
  Inst 34247:   nop     len=0
  Inst 34248:   nop     len=0
  Inst 34249:   nop     len=0
  Inst 34250:   nop     len=0
  Inst 34251:   nop     len=0
  Inst 34252:   nop     len=0
  Inst 34253:   nop     len=0
  Inst 34254:   nop     len=0
  Inst 34255:   nop     len=0
  Inst 34256:   nop     len=0
  Inst 34257:   nop     len=0
  Inst 34258:   nop     len=0
  Inst 34259:   nop     len=0
  Inst 34260:   nop     len=0
  Inst 34261:   nop     len=0
  Inst 34262:   nop     len=0
  Inst 34263:   nop     len=0
  Inst 34264:   nop     len=0
  Inst 34265:   nop     len=0
  Inst 34266:   nop     len=0
  Inst 34267:   nop     len=0
  Inst 34268:   nop     len=0
  Inst 34269:   nop     len=0
  Inst 34270:   nop     len=0
  Inst 34271:   nop     len=0
  Inst 34272:   nop     len=0
  Inst 34273:   nop     len=0
  Inst 34274:   nop     len=0
  Inst 34275:   nop     len=0
  Inst 34276:   nop     len=0
  Inst 34277:   nop     len=0
  Inst 34278:   nop     len=0
  Inst 34279:   nop     len=0
  Inst 34280:   nop     len=0
  Inst 34281:   nop     len=0
  Inst 34282:   nop     len=0
  Inst 34283:   nop     len=0
  Inst 34284:   nop     len=0
  Inst 34285:   nop     len=0
  Inst 34286:   nop     len=0
  Inst 34287:   nop     len=0
  Inst 34288:   nop     len=0
  Inst 34289:   nop     len=0
  Inst 34290:   nop     len=0
  Inst 34291:   nop     len=0
  Inst 34292:   nop     len=0
  Inst 34293:   nop     len=0
  Inst 34294:   nop     len=0
  Inst 34295:   nop     len=0
  Inst 34296:   nop     len=0
  Inst 34297:   nop     len=0
  Inst 34298:   nop     len=0
  Inst 34299:   nop     len=0
  Inst 34300:   nop     len=0
  Inst 34301:   nop     len=0
  Inst 34302:   nop     len=0
  Inst 34303:   nop     len=0
  Inst 34304:   nop     len=0
  Inst 34305:   nop     len=0
  Inst 34306:   nop     len=0
  Inst 34307:   nop     len=0
  Inst 34308:   nop     len=0
  Inst 34309:   nop     len=0
  Inst 34310:   nop     len=0
  Inst 34311:   nop     len=0
  Inst 34312:   nop     len=0
  Inst 34313:   nop     len=0
  Inst 34314:   nop     len=0
  Inst 34315:   nop     len=0
  Inst 34316:   nop     len=0
  Inst 34317:   nop     len=0
  Inst 34318:   nop     len=0
  Inst 34319:   nop     len=0
  Inst 34320:   nop     len=0
  Inst 34321:   nop     len=0
  Inst 34322:   nop     len=0
  Inst 34323:   nop     len=0
  Inst 34324:   nop     len=0
  Inst 34325:   nop     len=0
  Inst 34326:   nop     len=0
  Inst 34327:   nop     len=0
  Inst 34328:   nop     len=0
  Inst 34329:   nop     len=0
  Inst 34330:   nop     len=0
  Inst 34331:   nop     len=0
  Inst 34332:   nop     len=0
  Inst 34333:   nop     len=0
  Inst 34334:   nop     len=0
  Inst 34335:   jmp     label892
Block 890:
  (original IR block: block447)
  (successor: Block 891)
  (instruction range: 34336 .. 34365)
  Inst 34336:   movq    rsp(2072 + virtual offset), %rsi
  Inst 34337:   movq    152(%rsi), %r13
  Inst 34338:   movq    %r14, %r15
  Inst 34339:   addq    $-1, %r15
  Inst 34340:   movq    %r14, %rdx
  Inst 34341:   shlq    $3, %rdx
  Inst 34342:   movq    %r13, %r12
  Inst 34343:   addq    %rdx, %r12
  Inst 34344:   movq    %r13, %rdi
  Inst 34345:   addq    $-24, %rdi
  Inst 34346:   movq    %r13, %rsi
  Inst 34347:   load_ext_name %Memmove+0, %rax
  Inst 34348:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34349:   call    *%rax
  Inst 34350:   movq    rsp(1496 + virtual offset), %rbx
  Inst 34351:   load_ext_name u1:1+0, %rsi
  Inst 34352:   movl    $1, %edi
  Inst 34353:   movq    %rdi, -8(%r13,%r14,8)
  Inst 34354:   movl    $1, %edi
  Inst 34355:   movq    %rdi, -16(%r13,%r14,8)
  Inst 34356:   movq    %rsi, -24(%r13,%r14,8)
  Inst 34357:   movq    rsp(2072 + virtual offset), %rsi
  Inst 34358:   movq    %r12, 152(%rsi)
  Inst 34359:   movq    %rbx, %rdi
  Inst 34360:   movq    %r15, %rsi
  Inst 34361:   load_ext_name u0:3+0, %rax
  Inst 34362:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34363:   call    *%rax
  Inst 34364:   jmp     label891
Block 891:
  (successor: Block 892)
  (instruction range: 34365 .. 34478)
  Inst 34365:   movq    %rax, rsp(1864 + virtual offset)
  Inst 34366:   nop     len=0
  Inst 34367:   nop     len=0
  Inst 34368:   nop     len=0
  Inst 34369:   nop     len=0
  Inst 34370:   nop     len=0
  Inst 34371:   nop     len=0
  Inst 34372:   nop     len=0
  Inst 34373:   nop     len=0
  Inst 34374:   nop     len=0
  Inst 34375:   nop     len=0
  Inst 34376:   nop     len=0
  Inst 34377:   nop     len=0
  Inst 34378:   nop     len=0
  Inst 34379:   nop     len=0
  Inst 34380:   nop     len=0
  Inst 34381:   nop     len=0
  Inst 34382:   nop     len=0
  Inst 34383:   nop     len=0
  Inst 34384:   nop     len=0
  Inst 34385:   nop     len=0
  Inst 34386:   nop     len=0
  Inst 34387:   nop     len=0
  Inst 34388:   nop     len=0
  Inst 34389:   nop     len=0
  Inst 34390:   nop     len=0
  Inst 34391:   nop     len=0
  Inst 34392:   nop     len=0
  Inst 34393:   nop     len=0
  Inst 34394:   nop     len=0
  Inst 34395:   nop     len=0
  Inst 34396:   nop     len=0
  Inst 34397:   nop     len=0
  Inst 34398:   nop     len=0
  Inst 34399:   nop     len=0
  Inst 34400:   nop     len=0
  Inst 34401:   nop     len=0
  Inst 34402:   nop     len=0
  Inst 34403:   nop     len=0
  Inst 34404:   nop     len=0
  Inst 34405:   nop     len=0
  Inst 34406:   nop     len=0
  Inst 34407:   nop     len=0
  Inst 34408:   nop     len=0
  Inst 34409:   nop     len=0
  Inst 34410:   nop     len=0
  Inst 34411:   nop     len=0
  Inst 34412:   nop     len=0
  Inst 34413:   nop     len=0
  Inst 34414:   nop     len=0
  Inst 34415:   nop     len=0
  Inst 34416:   nop     len=0
  Inst 34417:   nop     len=0
  Inst 34418:   nop     len=0
  Inst 34419:   nop     len=0
  Inst 34420:   nop     len=0
  Inst 34421:   nop     len=0
  Inst 34422:   nop     len=0
  Inst 34423:   nop     len=0
  Inst 34424:   nop     len=0
  Inst 34425:   nop     len=0
  Inst 34426:   nop     len=0
  Inst 34427:   nop     len=0
  Inst 34428:   nop     len=0
  Inst 34429:   nop     len=0
  Inst 34430:   nop     len=0
  Inst 34431:   nop     len=0
  Inst 34432:   nop     len=0
  Inst 34433:   nop     len=0
  Inst 34434:   nop     len=0
  Inst 34435:   nop     len=0
  Inst 34436:   nop     len=0
  Inst 34437:   nop     len=0
  Inst 34438:   nop     len=0
  Inst 34439:   nop     len=0
  Inst 34440:   nop     len=0
  Inst 34441:   nop     len=0
  Inst 34442:   nop     len=0
  Inst 34443:   nop     len=0
  Inst 34444:   nop     len=0
  Inst 34445:   nop     len=0
  Inst 34446:   nop     len=0
  Inst 34447:   nop     len=0
  Inst 34448:   nop     len=0
  Inst 34449:   nop     len=0
  Inst 34450:   nop     len=0
  Inst 34451:   nop     len=0
  Inst 34452:   nop     len=0
  Inst 34453:   nop     len=0
  Inst 34454:   nop     len=0
  Inst 34455:   nop     len=0
  Inst 34456:   nop     len=0
  Inst 34457:   nop     len=0
  Inst 34458:   nop     len=0
  Inst 34459:   nop     len=0
  Inst 34460:   nop     len=0
  Inst 34461:   nop     len=0
  Inst 34462:   nop     len=0
  Inst 34463:   nop     len=0
  Inst 34464:   nop     len=0
  Inst 34465:   nop     len=0
  Inst 34466:   nop     len=0
  Inst 34467:   nop     len=0
  Inst 34468:   nop     len=0
  Inst 34469:   nop     len=0
  Inst 34470:   nop     len=0
  Inst 34471:   nop     len=0
  Inst 34472:   nop     len=0
  Inst 34473:   nop     len=0
  Inst 34474:   nop     len=0
  Inst 34475:   nop     len=0
  Inst 34476:   nop     len=0
  Inst 34477:   jmp     label892
Block 892:
  (original IR block: block446)
  (successor: Block 893)
  (successor: Block 894)
  (instruction range: 34478 .. 34489)
  Inst 34478:   movq    rsp(2064 + virtual offset), %rsi
  Inst 34479:   movq    8(%rsi), %rdi
  Inst 34480:   movq    rsp(2048 + virtual offset), %rsi
  Inst 34481:   load_ext_name u0:2+0, %rax
  Inst 34482:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 34483:   movq    %rdi, rsp(1536 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34484:   call    *%rax
  Inst 34485:   movq    %rax, %rbx
  Inst 34486:   movq    %rdx, %r14
  Inst 34487:   testq   %r14, %r14
  Inst 34488:   jz      label893; j label894
Block 893:
  (successor: Block 896)
  (instruction range: 34489 .. 34602)
  Inst 34489:   movq    %rbx, rsp(1536 + virtual offset)
  Inst 34490:   nop     len=0
  Inst 34491:   nop     len=0
  Inst 34492:   nop     len=0
  Inst 34493:   nop     len=0
  Inst 34494:   nop     len=0
  Inst 34495:   nop     len=0
  Inst 34496:   nop     len=0
  Inst 34497:   nop     len=0
  Inst 34498:   nop     len=0
  Inst 34499:   nop     len=0
  Inst 34500:   nop     len=0
  Inst 34501:   nop     len=0
  Inst 34502:   nop     len=0
  Inst 34503:   nop     len=0
  Inst 34504:   nop     len=0
  Inst 34505:   nop     len=0
  Inst 34506:   nop     len=0
  Inst 34507:   nop     len=0
  Inst 34508:   nop     len=0
  Inst 34509:   nop     len=0
  Inst 34510:   nop     len=0
  Inst 34511:   nop     len=0
  Inst 34512:   nop     len=0
  Inst 34513:   nop     len=0
  Inst 34514:   nop     len=0
  Inst 34515:   nop     len=0
  Inst 34516:   nop     len=0
  Inst 34517:   nop     len=0
  Inst 34518:   nop     len=0
  Inst 34519:   nop     len=0
  Inst 34520:   nop     len=0
  Inst 34521:   nop     len=0
  Inst 34522:   nop     len=0
  Inst 34523:   nop     len=0
  Inst 34524:   nop     len=0
  Inst 34525:   nop     len=0
  Inst 34526:   nop     len=0
  Inst 34527:   nop     len=0
  Inst 34528:   nop     len=0
  Inst 34529:   nop     len=0
  Inst 34530:   nop     len=0
  Inst 34531:   nop     len=0
  Inst 34532:   nop     len=0
  Inst 34533:   nop     len=0
  Inst 34534:   nop     len=0
  Inst 34535:   nop     len=0
  Inst 34536:   nop     len=0
  Inst 34537:   nop     len=0
  Inst 34538:   nop     len=0
  Inst 34539:   nop     len=0
  Inst 34540:   nop     len=0
  Inst 34541:   nop     len=0
  Inst 34542:   nop     len=0
  Inst 34543:   nop     len=0
  Inst 34544:   nop     len=0
  Inst 34545:   nop     len=0
  Inst 34546:   nop     len=0
  Inst 34547:   nop     len=0
  Inst 34548:   nop     len=0
  Inst 34549:   nop     len=0
  Inst 34550:   nop     len=0
  Inst 34551:   nop     len=0
  Inst 34552:   nop     len=0
  Inst 34553:   nop     len=0
  Inst 34554:   nop     len=0
  Inst 34555:   nop     len=0
  Inst 34556:   nop     len=0
  Inst 34557:   nop     len=0
  Inst 34558:   nop     len=0
  Inst 34559:   nop     len=0
  Inst 34560:   nop     len=0
  Inst 34561:   nop     len=0
  Inst 34562:   nop     len=0
  Inst 34563:   nop     len=0
  Inst 34564:   nop     len=0
  Inst 34565:   nop     len=0
  Inst 34566:   nop     len=0
  Inst 34567:   nop     len=0
  Inst 34568:   nop     len=0
  Inst 34569:   nop     len=0
  Inst 34570:   nop     len=0
  Inst 34571:   nop     len=0
  Inst 34572:   nop     len=0
  Inst 34573:   nop     len=0
  Inst 34574:   nop     len=0
  Inst 34575:   nop     len=0
  Inst 34576:   nop     len=0
  Inst 34577:   nop     len=0
  Inst 34578:   nop     len=0
  Inst 34579:   nop     len=0
  Inst 34580:   nop     len=0
  Inst 34581:   nop     len=0
  Inst 34582:   nop     len=0
  Inst 34583:   nop     len=0
  Inst 34584:   nop     len=0
  Inst 34585:   nop     len=0
  Inst 34586:   nop     len=0
  Inst 34587:   nop     len=0
  Inst 34588:   nop     len=0
  Inst 34589:   nop     len=0
  Inst 34590:   nop     len=0
  Inst 34591:   nop     len=0
  Inst 34592:   nop     len=0
  Inst 34593:   nop     len=0
  Inst 34594:   nop     len=0
  Inst 34595:   nop     len=0
  Inst 34596:   nop     len=0
  Inst 34597:   nop     len=0
  Inst 34598:   nop     len=0
  Inst 34599:   nop     len=0
  Inst 34600:   nop     len=0
  Inst 34601:   jmp     label896
Block 894:
  (original IR block: block449)
  (successor: Block 895)
  (instruction range: 34602 .. 34631)
  Inst 34602:   movq    rsp(2072 + virtual offset), %rsi
  Inst 34603:   movq    152(%rsi), %r13
  Inst 34604:   movq    %r14, %r15
  Inst 34605:   addq    $-1, %r15
  Inst 34606:   movq    %r14, %rdx
  Inst 34607:   shlq    $3, %rdx
  Inst 34608:   movq    %r13, %r12
  Inst 34609:   addq    %rdx, %r12
  Inst 34610:   movq    %r13, %rdi
  Inst 34611:   addq    $-24, %rdi
  Inst 34612:   movq    %r13, %rsi
  Inst 34613:   load_ext_name %Memmove+0, %rax
  Inst 34614:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34615:   call    *%rax
  Inst 34616:   movq    rsp(1496 + virtual offset), %rbx
  Inst 34617:   load_ext_name u1:1+0, %rsi
  Inst 34618:   movl    $1, %edi
  Inst 34619:   movq    %rdi, -8(%r13,%r14,8)
  Inst 34620:   movl    $1, %edi
  Inst 34621:   movq    %rdi, -16(%r13,%r14,8)
  Inst 34622:   movq    %rsi, -24(%r13,%r14,8)
  Inst 34623:   movq    rsp(2072 + virtual offset), %rsi
  Inst 34624:   movq    %r12, 152(%rsi)
  Inst 34625:   movq    %rbx, %rdi
  Inst 34626:   movq    %r15, %rsi
  Inst 34627:   load_ext_name u0:3+0, %rax
  Inst 34628:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34629:   call    *%rax
  Inst 34630:   jmp     label895
Block 895:
  (successor: Block 896)
  (instruction range: 34631 .. 34744)
  Inst 34631:   movq    %rax, rsp(1536 + virtual offset)
  Inst 34632:   nop     len=0
  Inst 34633:   nop     len=0
  Inst 34634:   nop     len=0
  Inst 34635:   nop     len=0
  Inst 34636:   nop     len=0
  Inst 34637:   nop     len=0
  Inst 34638:   nop     len=0
  Inst 34639:   nop     len=0
  Inst 34640:   nop     len=0
  Inst 34641:   nop     len=0
  Inst 34642:   nop     len=0
  Inst 34643:   nop     len=0
  Inst 34644:   nop     len=0
  Inst 34645:   nop     len=0
  Inst 34646:   nop     len=0
  Inst 34647:   nop     len=0
  Inst 34648:   nop     len=0
  Inst 34649:   nop     len=0
  Inst 34650:   nop     len=0
  Inst 34651:   nop     len=0
  Inst 34652:   nop     len=0
  Inst 34653:   nop     len=0
  Inst 34654:   nop     len=0
  Inst 34655:   nop     len=0
  Inst 34656:   nop     len=0
  Inst 34657:   nop     len=0
  Inst 34658:   nop     len=0
  Inst 34659:   nop     len=0
  Inst 34660:   nop     len=0
  Inst 34661:   nop     len=0
  Inst 34662:   nop     len=0
  Inst 34663:   nop     len=0
  Inst 34664:   nop     len=0
  Inst 34665:   nop     len=0
  Inst 34666:   nop     len=0
  Inst 34667:   nop     len=0
  Inst 34668:   nop     len=0
  Inst 34669:   nop     len=0
  Inst 34670:   nop     len=0
  Inst 34671:   nop     len=0
  Inst 34672:   nop     len=0
  Inst 34673:   nop     len=0
  Inst 34674:   nop     len=0
  Inst 34675:   nop     len=0
  Inst 34676:   nop     len=0
  Inst 34677:   nop     len=0
  Inst 34678:   nop     len=0
  Inst 34679:   nop     len=0
  Inst 34680:   nop     len=0
  Inst 34681:   nop     len=0
  Inst 34682:   nop     len=0
  Inst 34683:   nop     len=0
  Inst 34684:   nop     len=0
  Inst 34685:   nop     len=0
  Inst 34686:   nop     len=0
  Inst 34687:   nop     len=0
  Inst 34688:   nop     len=0
  Inst 34689:   nop     len=0
  Inst 34690:   nop     len=0
  Inst 34691:   nop     len=0
  Inst 34692:   nop     len=0
  Inst 34693:   nop     len=0
  Inst 34694:   nop     len=0
  Inst 34695:   nop     len=0
  Inst 34696:   nop     len=0
  Inst 34697:   nop     len=0
  Inst 34698:   nop     len=0
  Inst 34699:   nop     len=0
  Inst 34700:   nop     len=0
  Inst 34701:   nop     len=0
  Inst 34702:   nop     len=0
  Inst 34703:   nop     len=0
  Inst 34704:   nop     len=0
  Inst 34705:   nop     len=0
  Inst 34706:   nop     len=0
  Inst 34707:   nop     len=0
  Inst 34708:   nop     len=0
  Inst 34709:   nop     len=0
  Inst 34710:   nop     len=0
  Inst 34711:   nop     len=0
  Inst 34712:   nop     len=0
  Inst 34713:   nop     len=0
  Inst 34714:   nop     len=0
  Inst 34715:   nop     len=0
  Inst 34716:   nop     len=0
  Inst 34717:   nop     len=0
  Inst 34718:   nop     len=0
  Inst 34719:   nop     len=0
  Inst 34720:   nop     len=0
  Inst 34721:   nop     len=0
  Inst 34722:   nop     len=0
  Inst 34723:   nop     len=0
  Inst 34724:   nop     len=0
  Inst 34725:   nop     len=0
  Inst 34726:   nop     len=0
  Inst 34727:   nop     len=0
  Inst 34728:   nop     len=0
  Inst 34729:   nop     len=0
  Inst 34730:   nop     len=0
  Inst 34731:   nop     len=0
  Inst 34732:   nop     len=0
  Inst 34733:   nop     len=0
  Inst 34734:   nop     len=0
  Inst 34735:   nop     len=0
  Inst 34736:   nop     len=0
  Inst 34737:   nop     len=0
  Inst 34738:   nop     len=0
  Inst 34739:   nop     len=0
  Inst 34740:   nop     len=0
  Inst 34741:   nop     len=0
  Inst 34742:   nop     len=0
  Inst 34743:   jmp     label896
Block 896:
  (original IR block: block448)
  (successor: Block 897)
  (successor: Block 898)
  (instruction range: 34744 .. 34755)
  Inst 34744:   movq    rsp(2064 + virtual offset), %rsi
  Inst 34745:   movq    8(%rsi), %rdi
  Inst 34746:   movq    rsp(2048 + virtual offset), %rsi
  Inst 34747:   load_ext_name u0:2+0, %rax
  Inst 34748:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 34749:   movq    %rdi, rsp(1552 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34750:   call    *%rax
  Inst 34751:   movq    %rax, %r15
  Inst 34752:   movq    %rdx, %r14
  Inst 34753:   testq   %r14, %r14
  Inst 34754:   jz      label897; j label898
Block 897:
  (successor: Block 900)
  (instruction range: 34755 .. 34869)
  Inst 34755:   movq    %r15, rsp(1856 + virtual offset)
  Inst 34756:   nop     len=0
  Inst 34757:   nop     len=0
  Inst 34758:   nop     len=0
  Inst 34759:   nop     len=0
  Inst 34760:   nop     len=0
  Inst 34761:   nop     len=0
  Inst 34762:   nop     len=0
  Inst 34763:   nop     len=0
  Inst 34764:   nop     len=0
  Inst 34765:   nop     len=0
  Inst 34766:   nop     len=0
  Inst 34767:   nop     len=0
  Inst 34768:   nop     len=0
  Inst 34769:   nop     len=0
  Inst 34770:   nop     len=0
  Inst 34771:   nop     len=0
  Inst 34772:   nop     len=0
  Inst 34773:   nop     len=0
  Inst 34774:   nop     len=0
  Inst 34775:   nop     len=0
  Inst 34776:   nop     len=0
  Inst 34777:   nop     len=0
  Inst 34778:   nop     len=0
  Inst 34779:   nop     len=0
  Inst 34780:   nop     len=0
  Inst 34781:   nop     len=0
  Inst 34782:   nop     len=0
  Inst 34783:   nop     len=0
  Inst 34784:   nop     len=0
  Inst 34785:   nop     len=0
  Inst 34786:   nop     len=0
  Inst 34787:   nop     len=0
  Inst 34788:   nop     len=0
  Inst 34789:   nop     len=0
  Inst 34790:   nop     len=0
  Inst 34791:   nop     len=0
  Inst 34792:   nop     len=0
  Inst 34793:   nop     len=0
  Inst 34794:   nop     len=0
  Inst 34795:   nop     len=0
  Inst 34796:   nop     len=0
  Inst 34797:   nop     len=0
  Inst 34798:   nop     len=0
  Inst 34799:   nop     len=0
  Inst 34800:   nop     len=0
  Inst 34801:   nop     len=0
  Inst 34802:   nop     len=0
  Inst 34803:   nop     len=0
  Inst 34804:   nop     len=0
  Inst 34805:   nop     len=0
  Inst 34806:   nop     len=0
  Inst 34807:   nop     len=0
  Inst 34808:   nop     len=0
  Inst 34809:   nop     len=0
  Inst 34810:   nop     len=0
  Inst 34811:   nop     len=0
  Inst 34812:   nop     len=0
  Inst 34813:   nop     len=0
  Inst 34814:   nop     len=0
  Inst 34815:   nop     len=0
  Inst 34816:   nop     len=0
  Inst 34817:   nop     len=0
  Inst 34818:   nop     len=0
  Inst 34819:   nop     len=0
  Inst 34820:   nop     len=0
  Inst 34821:   nop     len=0
  Inst 34822:   nop     len=0
  Inst 34823:   nop     len=0
  Inst 34824:   nop     len=0
  Inst 34825:   nop     len=0
  Inst 34826:   nop     len=0
  Inst 34827:   nop     len=0
  Inst 34828:   nop     len=0
  Inst 34829:   nop     len=0
  Inst 34830:   nop     len=0
  Inst 34831:   nop     len=0
  Inst 34832:   nop     len=0
  Inst 34833:   nop     len=0
  Inst 34834:   nop     len=0
  Inst 34835:   nop     len=0
  Inst 34836:   nop     len=0
  Inst 34837:   nop     len=0
  Inst 34838:   nop     len=0
  Inst 34839:   nop     len=0
  Inst 34840:   nop     len=0
  Inst 34841:   nop     len=0
  Inst 34842:   nop     len=0
  Inst 34843:   nop     len=0
  Inst 34844:   nop     len=0
  Inst 34845:   nop     len=0
  Inst 34846:   nop     len=0
  Inst 34847:   nop     len=0
  Inst 34848:   nop     len=0
  Inst 34849:   nop     len=0
  Inst 34850:   nop     len=0
  Inst 34851:   nop     len=0
  Inst 34852:   nop     len=0
  Inst 34853:   nop     len=0
  Inst 34854:   nop     len=0
  Inst 34855:   nop     len=0
  Inst 34856:   nop     len=0
  Inst 34857:   nop     len=0
  Inst 34858:   nop     len=0
  Inst 34859:   nop     len=0
  Inst 34860:   nop     len=0
  Inst 34861:   nop     len=0
  Inst 34862:   nop     len=0
  Inst 34863:   nop     len=0
  Inst 34864:   nop     len=0
  Inst 34865:   nop     len=0
  Inst 34866:   nop     len=0
  Inst 34867:   nop     len=0
  Inst 34868:   jmp     label900
Block 898:
  (original IR block: block451)
  (successor: Block 899)
  (instruction range: 34869 .. 34898)
  Inst 34869:   movq    rsp(2072 + virtual offset), %rsi
  Inst 34870:   movq    152(%rsi), %r13
  Inst 34871:   movq    %r14, %rbx
  Inst 34872:   addq    $-1, %rbx
  Inst 34873:   movq    %r14, %rdx
  Inst 34874:   shlq    $3, %rdx
  Inst 34875:   movq    %r13, %r12
  Inst 34876:   addq    %rdx, %r12
  Inst 34877:   movq    %r13, %rdi
  Inst 34878:   addq    $-24, %rdi
  Inst 34879:   movq    %r13, %rsi
  Inst 34880:   load_ext_name %Memmove+0, %rax
  Inst 34881:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34882:   call    *%rax
  Inst 34883:   movq    rsp(1496 + virtual offset), %r15
  Inst 34884:   load_ext_name u1:1+0, %rsi
  Inst 34885:   movl    $1, %edi
  Inst 34886:   movq    %rdi, -8(%r13,%r14,8)
  Inst 34887:   movl    $1, %edi
  Inst 34888:   movq    %rdi, -16(%r13,%r14,8)
  Inst 34889:   movq    %rsi, -24(%r13,%r14,8)
  Inst 34890:   movq    rsp(2072 + virtual offset), %rsi
  Inst 34891:   movq    %r12, 152(%rsi)
  Inst 34892:   movq    %r15, %rdi
  Inst 34893:   movq    %rbx, %rsi
  Inst 34894:   load_ext_name u0:3+0, %rax
  Inst 34895:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 34896:   call    *%rax
  Inst 34897:   jmp     label899
Block 899:
  (successor: Block 900)
  (instruction range: 34898 .. 35012)
  Inst 34898:   movq    %rax, rsp(1856 + virtual offset)
  Inst 34899:   nop     len=0
  Inst 34900:   nop     len=0
  Inst 34901:   nop     len=0
  Inst 34902:   nop     len=0
  Inst 34903:   nop     len=0
  Inst 34904:   nop     len=0
  Inst 34905:   nop     len=0
  Inst 34906:   nop     len=0
  Inst 34907:   nop     len=0
  Inst 34908:   nop     len=0
  Inst 34909:   nop     len=0
  Inst 34910:   nop     len=0
  Inst 34911:   nop     len=0
  Inst 34912:   nop     len=0
  Inst 34913:   nop     len=0
  Inst 34914:   nop     len=0
  Inst 34915:   nop     len=0
  Inst 34916:   nop     len=0
  Inst 34917:   nop     len=0
  Inst 34918:   nop     len=0
  Inst 34919:   nop     len=0
  Inst 34920:   nop     len=0
  Inst 34921:   nop     len=0
  Inst 34922:   nop     len=0
  Inst 34923:   nop     len=0
  Inst 34924:   nop     len=0
  Inst 34925:   nop     len=0
  Inst 34926:   nop     len=0
  Inst 34927:   nop     len=0
  Inst 34928:   nop     len=0
  Inst 34929:   nop     len=0
  Inst 34930:   nop     len=0
  Inst 34931:   nop     len=0
  Inst 34932:   nop     len=0
  Inst 34933:   nop     len=0
  Inst 34934:   nop     len=0
  Inst 34935:   nop     len=0
  Inst 34936:   nop     len=0
  Inst 34937:   nop     len=0
  Inst 34938:   nop     len=0
  Inst 34939:   nop     len=0
  Inst 34940:   nop     len=0
  Inst 34941:   nop     len=0
  Inst 34942:   nop     len=0
  Inst 34943:   nop     len=0
  Inst 34944:   nop     len=0
  Inst 34945:   nop     len=0
  Inst 34946:   nop     len=0
  Inst 34947:   nop     len=0
  Inst 34948:   nop     len=0
  Inst 34949:   nop     len=0
  Inst 34950:   nop     len=0
  Inst 34951:   nop     len=0
  Inst 34952:   nop     len=0
  Inst 34953:   nop     len=0
  Inst 34954:   nop     len=0
  Inst 34955:   nop     len=0
  Inst 34956:   nop     len=0
  Inst 34957:   nop     len=0
  Inst 34958:   nop     len=0
  Inst 34959:   nop     len=0
  Inst 34960:   nop     len=0
  Inst 34961:   nop     len=0
  Inst 34962:   nop     len=0
  Inst 34963:   nop     len=0
  Inst 34964:   nop     len=0
  Inst 34965:   nop     len=0
  Inst 34966:   nop     len=0
  Inst 34967:   nop     len=0
  Inst 34968:   nop     len=0
  Inst 34969:   nop     len=0
  Inst 34970:   nop     len=0
  Inst 34971:   nop     len=0
  Inst 34972:   nop     len=0
  Inst 34973:   nop     len=0
  Inst 34974:   nop     len=0
  Inst 34975:   nop     len=0
  Inst 34976:   nop     len=0
  Inst 34977:   nop     len=0
  Inst 34978:   nop     len=0
  Inst 34979:   nop     len=0
  Inst 34980:   nop     len=0
  Inst 34981:   nop     len=0
  Inst 34982:   nop     len=0
  Inst 34983:   nop     len=0
  Inst 34984:   nop     len=0
  Inst 34985:   nop     len=0
  Inst 34986:   nop     len=0
  Inst 34987:   nop     len=0
  Inst 34988:   nop     len=0
  Inst 34989:   nop     len=0
  Inst 34990:   nop     len=0
  Inst 34991:   nop     len=0
  Inst 34992:   nop     len=0
  Inst 34993:   nop     len=0
  Inst 34994:   nop     len=0
  Inst 34995:   nop     len=0
  Inst 34996:   nop     len=0
  Inst 34997:   nop     len=0
  Inst 34998:   nop     len=0
  Inst 34999:   nop     len=0
  Inst 35000:   nop     len=0
  Inst 35001:   nop     len=0
  Inst 35002:   nop     len=0
  Inst 35003:   nop     len=0
  Inst 35004:   nop     len=0
  Inst 35005:   nop     len=0
  Inst 35006:   nop     len=0
  Inst 35007:   nop     len=0
  Inst 35008:   nop     len=0
  Inst 35009:   nop     len=0
  Inst 35010:   nop     len=0
  Inst 35011:   jmp     label900
Block 900:
  (original IR block: block450)
  (successor: Block 901)
  (successor: Block 902)
  (instruction range: 35012 .. 35023)
  Inst 35012:   movq    rsp(2064 + virtual offset), %rsi
  Inst 35013:   movq    8(%rsi), %rdi
  Inst 35014:   movq    rsp(2048 + virtual offset), %rsi
  Inst 35015:   load_ext_name u0:2+0, %rax
  Inst 35016:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 35017:   movq    %rdi, rsp(1552 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35018:   call    *%rax
  Inst 35019:   movq    %rax, %rbx
  Inst 35020:   movq    %rdx, %r14
  Inst 35021:   testq   %r14, %r14
  Inst 35022:   jz      label901; j label902
Block 901:
  (successor: Block 904)
  (instruction range: 35023 .. 35137)
  Inst 35023:   movq    %rbx, rsp(1552 + virtual offset)
  Inst 35024:   nop     len=0
  Inst 35025:   nop     len=0
  Inst 35026:   nop     len=0
  Inst 35027:   nop     len=0
  Inst 35028:   nop     len=0
  Inst 35029:   nop     len=0
  Inst 35030:   nop     len=0
  Inst 35031:   nop     len=0
  Inst 35032:   nop     len=0
  Inst 35033:   nop     len=0
  Inst 35034:   nop     len=0
  Inst 35035:   nop     len=0
  Inst 35036:   nop     len=0
  Inst 35037:   nop     len=0
  Inst 35038:   nop     len=0
  Inst 35039:   nop     len=0
  Inst 35040:   nop     len=0
  Inst 35041:   nop     len=0
  Inst 35042:   nop     len=0
  Inst 35043:   nop     len=0
  Inst 35044:   nop     len=0
  Inst 35045:   nop     len=0
  Inst 35046:   nop     len=0
  Inst 35047:   nop     len=0
  Inst 35048:   nop     len=0
  Inst 35049:   nop     len=0
  Inst 35050:   nop     len=0
  Inst 35051:   nop     len=0
  Inst 35052:   nop     len=0
  Inst 35053:   nop     len=0
  Inst 35054:   nop     len=0
  Inst 35055:   nop     len=0
  Inst 35056:   nop     len=0
  Inst 35057:   nop     len=0
  Inst 35058:   nop     len=0
  Inst 35059:   nop     len=0
  Inst 35060:   nop     len=0
  Inst 35061:   nop     len=0
  Inst 35062:   nop     len=0
  Inst 35063:   nop     len=0
  Inst 35064:   nop     len=0
  Inst 35065:   nop     len=0
  Inst 35066:   nop     len=0
  Inst 35067:   nop     len=0
  Inst 35068:   nop     len=0
  Inst 35069:   nop     len=0
  Inst 35070:   nop     len=0
  Inst 35071:   nop     len=0
  Inst 35072:   nop     len=0
  Inst 35073:   nop     len=0
  Inst 35074:   nop     len=0
  Inst 35075:   nop     len=0
  Inst 35076:   nop     len=0
  Inst 35077:   nop     len=0
  Inst 35078:   nop     len=0
  Inst 35079:   nop     len=0
  Inst 35080:   nop     len=0
  Inst 35081:   nop     len=0
  Inst 35082:   nop     len=0
  Inst 35083:   nop     len=0
  Inst 35084:   nop     len=0
  Inst 35085:   nop     len=0
  Inst 35086:   nop     len=0
  Inst 35087:   nop     len=0
  Inst 35088:   nop     len=0
  Inst 35089:   nop     len=0
  Inst 35090:   nop     len=0
  Inst 35091:   nop     len=0
  Inst 35092:   nop     len=0
  Inst 35093:   nop     len=0
  Inst 35094:   nop     len=0
  Inst 35095:   nop     len=0
  Inst 35096:   nop     len=0
  Inst 35097:   nop     len=0
  Inst 35098:   nop     len=0
  Inst 35099:   nop     len=0
  Inst 35100:   nop     len=0
  Inst 35101:   nop     len=0
  Inst 35102:   nop     len=0
  Inst 35103:   nop     len=0
  Inst 35104:   nop     len=0
  Inst 35105:   nop     len=0
  Inst 35106:   nop     len=0
  Inst 35107:   nop     len=0
  Inst 35108:   nop     len=0
  Inst 35109:   nop     len=0
  Inst 35110:   nop     len=0
  Inst 35111:   nop     len=0
  Inst 35112:   nop     len=0
  Inst 35113:   nop     len=0
  Inst 35114:   nop     len=0
  Inst 35115:   nop     len=0
  Inst 35116:   nop     len=0
  Inst 35117:   nop     len=0
  Inst 35118:   nop     len=0
  Inst 35119:   nop     len=0
  Inst 35120:   nop     len=0
  Inst 35121:   nop     len=0
  Inst 35122:   nop     len=0
  Inst 35123:   nop     len=0
  Inst 35124:   nop     len=0
  Inst 35125:   nop     len=0
  Inst 35126:   nop     len=0
  Inst 35127:   nop     len=0
  Inst 35128:   nop     len=0
  Inst 35129:   nop     len=0
  Inst 35130:   nop     len=0
  Inst 35131:   nop     len=0
  Inst 35132:   nop     len=0
  Inst 35133:   nop     len=0
  Inst 35134:   nop     len=0
  Inst 35135:   nop     len=0
  Inst 35136:   jmp     label904
Block 902:
  (original IR block: block453)
  (successor: Block 903)
  (instruction range: 35137 .. 35166)
  Inst 35137:   movq    rsp(2072 + virtual offset), %rsi
  Inst 35138:   movq    152(%rsi), %r13
  Inst 35139:   movq    %r14, %r15
  Inst 35140:   addq    $-1, %r15
  Inst 35141:   movq    %r14, %rdx
  Inst 35142:   shlq    $3, %rdx
  Inst 35143:   movq    %r13, %r12
  Inst 35144:   addq    %rdx, %r12
  Inst 35145:   movq    %r13, %rdi
  Inst 35146:   addq    $-24, %rdi
  Inst 35147:   movq    %r13, %rsi
  Inst 35148:   load_ext_name %Memmove+0, %rax
  Inst 35149:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35150:   call    *%rax
  Inst 35151:   movq    rsp(1496 + virtual offset), %rbx
  Inst 35152:   load_ext_name u1:1+0, %rsi
  Inst 35153:   movl    $1, %edi
  Inst 35154:   movq    %rdi, -8(%r13,%r14,8)
  Inst 35155:   movl    $1, %edi
  Inst 35156:   movq    %rdi, -16(%r13,%r14,8)
  Inst 35157:   movq    %rsi, -24(%r13,%r14,8)
  Inst 35158:   movq    rsp(2072 + virtual offset), %rsi
  Inst 35159:   movq    %r12, 152(%rsi)
  Inst 35160:   movq    %rbx, %rdi
  Inst 35161:   movq    %r15, %rsi
  Inst 35162:   load_ext_name u0:3+0, %rax
  Inst 35163:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35164:   call    *%rax
  Inst 35165:   jmp     label903
Block 903:
  (successor: Block 904)
  (instruction range: 35166 .. 35280)
  Inst 35166:   movq    %rax, rsp(1552 + virtual offset)
  Inst 35167:   nop     len=0
  Inst 35168:   nop     len=0
  Inst 35169:   nop     len=0
  Inst 35170:   nop     len=0
  Inst 35171:   nop     len=0
  Inst 35172:   nop     len=0
  Inst 35173:   nop     len=0
  Inst 35174:   nop     len=0
  Inst 35175:   nop     len=0
  Inst 35176:   nop     len=0
  Inst 35177:   nop     len=0
  Inst 35178:   nop     len=0
  Inst 35179:   nop     len=0
  Inst 35180:   nop     len=0
  Inst 35181:   nop     len=0
  Inst 35182:   nop     len=0
  Inst 35183:   nop     len=0
  Inst 35184:   nop     len=0
  Inst 35185:   nop     len=0
  Inst 35186:   nop     len=0
  Inst 35187:   nop     len=0
  Inst 35188:   nop     len=0
  Inst 35189:   nop     len=0
  Inst 35190:   nop     len=0
  Inst 35191:   nop     len=0
  Inst 35192:   nop     len=0
  Inst 35193:   nop     len=0
  Inst 35194:   nop     len=0
  Inst 35195:   nop     len=0
  Inst 35196:   nop     len=0
  Inst 35197:   nop     len=0
  Inst 35198:   nop     len=0
  Inst 35199:   nop     len=0
  Inst 35200:   nop     len=0
  Inst 35201:   nop     len=0
  Inst 35202:   nop     len=0
  Inst 35203:   nop     len=0
  Inst 35204:   nop     len=0
  Inst 35205:   nop     len=0
  Inst 35206:   nop     len=0
  Inst 35207:   nop     len=0
  Inst 35208:   nop     len=0
  Inst 35209:   nop     len=0
  Inst 35210:   nop     len=0
  Inst 35211:   nop     len=0
  Inst 35212:   nop     len=0
  Inst 35213:   nop     len=0
  Inst 35214:   nop     len=0
  Inst 35215:   nop     len=0
  Inst 35216:   nop     len=0
  Inst 35217:   nop     len=0
  Inst 35218:   nop     len=0
  Inst 35219:   nop     len=0
  Inst 35220:   nop     len=0
  Inst 35221:   nop     len=0
  Inst 35222:   nop     len=0
  Inst 35223:   nop     len=0
  Inst 35224:   nop     len=0
  Inst 35225:   nop     len=0
  Inst 35226:   nop     len=0
  Inst 35227:   nop     len=0
  Inst 35228:   nop     len=0
  Inst 35229:   nop     len=0
  Inst 35230:   nop     len=0
  Inst 35231:   nop     len=0
  Inst 35232:   nop     len=0
  Inst 35233:   nop     len=0
  Inst 35234:   nop     len=0
  Inst 35235:   nop     len=0
  Inst 35236:   nop     len=0
  Inst 35237:   nop     len=0
  Inst 35238:   nop     len=0
  Inst 35239:   nop     len=0
  Inst 35240:   nop     len=0
  Inst 35241:   nop     len=0
  Inst 35242:   nop     len=0
  Inst 35243:   nop     len=0
  Inst 35244:   nop     len=0
  Inst 35245:   nop     len=0
  Inst 35246:   nop     len=0
  Inst 35247:   nop     len=0
  Inst 35248:   nop     len=0
  Inst 35249:   nop     len=0
  Inst 35250:   nop     len=0
  Inst 35251:   nop     len=0
  Inst 35252:   nop     len=0
  Inst 35253:   nop     len=0
  Inst 35254:   nop     len=0
  Inst 35255:   nop     len=0
  Inst 35256:   nop     len=0
  Inst 35257:   nop     len=0
  Inst 35258:   nop     len=0
  Inst 35259:   nop     len=0
  Inst 35260:   nop     len=0
  Inst 35261:   nop     len=0
  Inst 35262:   nop     len=0
  Inst 35263:   nop     len=0
  Inst 35264:   nop     len=0
  Inst 35265:   nop     len=0
  Inst 35266:   nop     len=0
  Inst 35267:   nop     len=0
  Inst 35268:   nop     len=0
  Inst 35269:   nop     len=0
  Inst 35270:   nop     len=0
  Inst 35271:   nop     len=0
  Inst 35272:   nop     len=0
  Inst 35273:   nop     len=0
  Inst 35274:   nop     len=0
  Inst 35275:   nop     len=0
  Inst 35276:   nop     len=0
  Inst 35277:   nop     len=0
  Inst 35278:   nop     len=0
  Inst 35279:   jmp     label904
Block 904:
  (original IR block: block452)
  (successor: Block 905)
  (successor: Block 906)
  (instruction range: 35280 .. 35291)
  Inst 35280:   movq    rsp(2064 + virtual offset), %rsi
  Inst 35281:   movq    8(%rsi), %rdi
  Inst 35282:   movq    rsp(2048 + virtual offset), %rsi
  Inst 35283:   load_ext_name u0:2+0, %rax
  Inst 35284:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 35285:   movq    %rdi, rsp(1568 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35286:   call    *%rax
  Inst 35287:   movq    %rax, %rbx
  Inst 35288:   movq    %rdx, %r14
  Inst 35289:   testq   %r14, %r14
  Inst 35290:   jz      label905; j label906
Block 905:
  (successor: Block 908)
  (instruction range: 35291 .. 35406)
  Inst 35291:   movq    %rbx, rsp(1848 + virtual offset)
  Inst 35292:   nop     len=0
  Inst 35293:   nop     len=0
  Inst 35294:   nop     len=0
  Inst 35295:   nop     len=0
  Inst 35296:   nop     len=0
  Inst 35297:   nop     len=0
  Inst 35298:   nop     len=0
  Inst 35299:   nop     len=0
  Inst 35300:   nop     len=0
  Inst 35301:   nop     len=0
  Inst 35302:   nop     len=0
  Inst 35303:   nop     len=0
  Inst 35304:   nop     len=0
  Inst 35305:   nop     len=0
  Inst 35306:   nop     len=0
  Inst 35307:   nop     len=0
  Inst 35308:   nop     len=0
  Inst 35309:   nop     len=0
  Inst 35310:   nop     len=0
  Inst 35311:   nop     len=0
  Inst 35312:   nop     len=0
  Inst 35313:   nop     len=0
  Inst 35314:   nop     len=0
  Inst 35315:   nop     len=0
  Inst 35316:   nop     len=0
  Inst 35317:   nop     len=0
  Inst 35318:   nop     len=0
  Inst 35319:   nop     len=0
  Inst 35320:   nop     len=0
  Inst 35321:   nop     len=0
  Inst 35322:   nop     len=0
  Inst 35323:   nop     len=0
  Inst 35324:   nop     len=0
  Inst 35325:   nop     len=0
  Inst 35326:   nop     len=0
  Inst 35327:   nop     len=0
  Inst 35328:   nop     len=0
  Inst 35329:   nop     len=0
  Inst 35330:   nop     len=0
  Inst 35331:   nop     len=0
  Inst 35332:   nop     len=0
  Inst 35333:   nop     len=0
  Inst 35334:   nop     len=0
  Inst 35335:   nop     len=0
  Inst 35336:   nop     len=0
  Inst 35337:   nop     len=0
  Inst 35338:   nop     len=0
  Inst 35339:   nop     len=0
  Inst 35340:   nop     len=0
  Inst 35341:   nop     len=0
  Inst 35342:   nop     len=0
  Inst 35343:   nop     len=0
  Inst 35344:   nop     len=0
  Inst 35345:   nop     len=0
  Inst 35346:   nop     len=0
  Inst 35347:   nop     len=0
  Inst 35348:   nop     len=0
  Inst 35349:   nop     len=0
  Inst 35350:   nop     len=0
  Inst 35351:   nop     len=0
  Inst 35352:   nop     len=0
  Inst 35353:   nop     len=0
  Inst 35354:   nop     len=0
  Inst 35355:   nop     len=0
  Inst 35356:   nop     len=0
  Inst 35357:   nop     len=0
  Inst 35358:   nop     len=0
  Inst 35359:   nop     len=0
  Inst 35360:   nop     len=0
  Inst 35361:   nop     len=0
  Inst 35362:   nop     len=0
  Inst 35363:   nop     len=0
  Inst 35364:   nop     len=0
  Inst 35365:   nop     len=0
  Inst 35366:   nop     len=0
  Inst 35367:   nop     len=0
  Inst 35368:   nop     len=0
  Inst 35369:   nop     len=0
  Inst 35370:   nop     len=0
  Inst 35371:   nop     len=0
  Inst 35372:   nop     len=0
  Inst 35373:   nop     len=0
  Inst 35374:   nop     len=0
  Inst 35375:   nop     len=0
  Inst 35376:   nop     len=0
  Inst 35377:   nop     len=0
  Inst 35378:   nop     len=0
  Inst 35379:   nop     len=0
  Inst 35380:   nop     len=0
  Inst 35381:   nop     len=0
  Inst 35382:   nop     len=0
  Inst 35383:   nop     len=0
  Inst 35384:   nop     len=0
  Inst 35385:   nop     len=0
  Inst 35386:   nop     len=0
  Inst 35387:   nop     len=0
  Inst 35388:   nop     len=0
  Inst 35389:   nop     len=0
  Inst 35390:   nop     len=0
  Inst 35391:   nop     len=0
  Inst 35392:   nop     len=0
  Inst 35393:   nop     len=0
  Inst 35394:   nop     len=0
  Inst 35395:   nop     len=0
  Inst 35396:   nop     len=0
  Inst 35397:   nop     len=0
  Inst 35398:   nop     len=0
  Inst 35399:   nop     len=0
  Inst 35400:   nop     len=0
  Inst 35401:   nop     len=0
  Inst 35402:   nop     len=0
  Inst 35403:   nop     len=0
  Inst 35404:   nop     len=0
  Inst 35405:   jmp     label908
Block 906:
  (original IR block: block455)
  (successor: Block 907)
  (instruction range: 35406 .. 35435)
  Inst 35406:   movq    rsp(2072 + virtual offset), %rsi
  Inst 35407:   movq    152(%rsi), %r13
  Inst 35408:   movq    %r14, %r15
  Inst 35409:   addq    $-1, %r15
  Inst 35410:   movq    %r14, %rdx
  Inst 35411:   shlq    $3, %rdx
  Inst 35412:   movq    %r13, %r12
  Inst 35413:   addq    %rdx, %r12
  Inst 35414:   movq    %r13, %rdi
  Inst 35415:   addq    $-24, %rdi
  Inst 35416:   movq    %r13, %rsi
  Inst 35417:   load_ext_name %Memmove+0, %rax
  Inst 35418:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35419:   call    *%rax
  Inst 35420:   movq    rsp(1496 + virtual offset), %rbx
  Inst 35421:   load_ext_name u1:1+0, %rsi
  Inst 35422:   movl    $1, %edi
  Inst 35423:   movq    %rdi, -8(%r13,%r14,8)
  Inst 35424:   movl    $1, %edi
  Inst 35425:   movq    %rdi, -16(%r13,%r14,8)
  Inst 35426:   movq    %rsi, -24(%r13,%r14,8)
  Inst 35427:   movq    rsp(2072 + virtual offset), %rsi
  Inst 35428:   movq    %r12, 152(%rsi)
  Inst 35429:   movq    %rbx, %rdi
  Inst 35430:   movq    %r15, %rsi
  Inst 35431:   load_ext_name u0:3+0, %rax
  Inst 35432:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35433:   call    *%rax
  Inst 35434:   jmp     label907
Block 907:
  (successor: Block 908)
  (instruction range: 35435 .. 35550)
  Inst 35435:   movq    %rax, rsp(1848 + virtual offset)
  Inst 35436:   nop     len=0
  Inst 35437:   nop     len=0
  Inst 35438:   nop     len=0
  Inst 35439:   nop     len=0
  Inst 35440:   nop     len=0
  Inst 35441:   nop     len=0
  Inst 35442:   nop     len=0
  Inst 35443:   nop     len=0
  Inst 35444:   nop     len=0
  Inst 35445:   nop     len=0
  Inst 35446:   nop     len=0
  Inst 35447:   nop     len=0
  Inst 35448:   nop     len=0
  Inst 35449:   nop     len=0
  Inst 35450:   nop     len=0
  Inst 35451:   nop     len=0
  Inst 35452:   nop     len=0
  Inst 35453:   nop     len=0
  Inst 35454:   nop     len=0
  Inst 35455:   nop     len=0
  Inst 35456:   nop     len=0
  Inst 35457:   nop     len=0
  Inst 35458:   nop     len=0
  Inst 35459:   nop     len=0
  Inst 35460:   nop     len=0
  Inst 35461:   nop     len=0
  Inst 35462:   nop     len=0
  Inst 35463:   nop     len=0
  Inst 35464:   nop     len=0
  Inst 35465:   nop     len=0
  Inst 35466:   nop     len=0
  Inst 35467:   nop     len=0
  Inst 35468:   nop     len=0
  Inst 35469:   nop     len=0
  Inst 35470:   nop     len=0
  Inst 35471:   nop     len=0
  Inst 35472:   nop     len=0
  Inst 35473:   nop     len=0
  Inst 35474:   nop     len=0
  Inst 35475:   nop     len=0
  Inst 35476:   nop     len=0
  Inst 35477:   nop     len=0
  Inst 35478:   nop     len=0
  Inst 35479:   nop     len=0
  Inst 35480:   nop     len=0
  Inst 35481:   nop     len=0
  Inst 35482:   nop     len=0
  Inst 35483:   nop     len=0
  Inst 35484:   nop     len=0
  Inst 35485:   nop     len=0
  Inst 35486:   nop     len=0
  Inst 35487:   nop     len=0
  Inst 35488:   nop     len=0
  Inst 35489:   nop     len=0
  Inst 35490:   nop     len=0
  Inst 35491:   nop     len=0
  Inst 35492:   nop     len=0
  Inst 35493:   nop     len=0
  Inst 35494:   nop     len=0
  Inst 35495:   nop     len=0
  Inst 35496:   nop     len=0
  Inst 35497:   nop     len=0
  Inst 35498:   nop     len=0
  Inst 35499:   nop     len=0
  Inst 35500:   nop     len=0
  Inst 35501:   nop     len=0
  Inst 35502:   nop     len=0
  Inst 35503:   nop     len=0
  Inst 35504:   nop     len=0
  Inst 35505:   nop     len=0
  Inst 35506:   nop     len=0
  Inst 35507:   nop     len=0
  Inst 35508:   nop     len=0
  Inst 35509:   nop     len=0
  Inst 35510:   nop     len=0
  Inst 35511:   nop     len=0
  Inst 35512:   nop     len=0
  Inst 35513:   nop     len=0
  Inst 35514:   nop     len=0
  Inst 35515:   nop     len=0
  Inst 35516:   nop     len=0
  Inst 35517:   nop     len=0
  Inst 35518:   nop     len=0
  Inst 35519:   nop     len=0
  Inst 35520:   nop     len=0
  Inst 35521:   nop     len=0
  Inst 35522:   nop     len=0
  Inst 35523:   nop     len=0
  Inst 35524:   nop     len=0
  Inst 35525:   nop     len=0
  Inst 35526:   nop     len=0
  Inst 35527:   nop     len=0
  Inst 35528:   nop     len=0
  Inst 35529:   nop     len=0
  Inst 35530:   nop     len=0
  Inst 35531:   nop     len=0
  Inst 35532:   nop     len=0
  Inst 35533:   nop     len=0
  Inst 35534:   nop     len=0
  Inst 35535:   nop     len=0
  Inst 35536:   nop     len=0
  Inst 35537:   nop     len=0
  Inst 35538:   nop     len=0
  Inst 35539:   nop     len=0
  Inst 35540:   nop     len=0
  Inst 35541:   nop     len=0
  Inst 35542:   nop     len=0
  Inst 35543:   nop     len=0
  Inst 35544:   nop     len=0
  Inst 35545:   nop     len=0
  Inst 35546:   nop     len=0
  Inst 35547:   nop     len=0
  Inst 35548:   nop     len=0
  Inst 35549:   jmp     label908
Block 908:
  (original IR block: block454)
  (successor: Block 909)
  (successor: Block 910)
  (instruction range: 35550 .. 35561)
  Inst 35550:   movq    rsp(2064 + virtual offset), %rsi
  Inst 35551:   movq    8(%rsi), %rdi
  Inst 35552:   movq    rsp(2048 + virtual offset), %rsi
  Inst 35553:   load_ext_name u0:2+0, %rax
  Inst 35554:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 35555:   movq    %rdi, rsp(1568 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35556:   call    *%rax
  Inst 35557:   movq    %rax, %r15
  Inst 35558:   movq    %rdx, %r14
  Inst 35559:   testq   %r14, %r14
  Inst 35560:   jz      label909; j label910
Block 909:
  (successor: Block 912)
  (instruction range: 35561 .. 35676)
  Inst 35561:   movq    %r15, rsp(1568 + virtual offset)
  Inst 35562:   nop     len=0
  Inst 35563:   nop     len=0
  Inst 35564:   nop     len=0
  Inst 35565:   nop     len=0
  Inst 35566:   nop     len=0
  Inst 35567:   nop     len=0
  Inst 35568:   nop     len=0
  Inst 35569:   nop     len=0
  Inst 35570:   nop     len=0
  Inst 35571:   nop     len=0
  Inst 35572:   nop     len=0
  Inst 35573:   nop     len=0
  Inst 35574:   nop     len=0
  Inst 35575:   nop     len=0
  Inst 35576:   nop     len=0
  Inst 35577:   nop     len=0
  Inst 35578:   nop     len=0
  Inst 35579:   nop     len=0
  Inst 35580:   nop     len=0
  Inst 35581:   nop     len=0
  Inst 35582:   nop     len=0
  Inst 35583:   nop     len=0
  Inst 35584:   nop     len=0
  Inst 35585:   nop     len=0
  Inst 35586:   nop     len=0
  Inst 35587:   nop     len=0
  Inst 35588:   nop     len=0
  Inst 35589:   nop     len=0
  Inst 35590:   nop     len=0
  Inst 35591:   nop     len=0
  Inst 35592:   nop     len=0
  Inst 35593:   nop     len=0
  Inst 35594:   nop     len=0
  Inst 35595:   nop     len=0
  Inst 35596:   nop     len=0
  Inst 35597:   nop     len=0
  Inst 35598:   nop     len=0
  Inst 35599:   nop     len=0
  Inst 35600:   nop     len=0
  Inst 35601:   nop     len=0
  Inst 35602:   nop     len=0
  Inst 35603:   nop     len=0
  Inst 35604:   nop     len=0
  Inst 35605:   nop     len=0
  Inst 35606:   nop     len=0
  Inst 35607:   nop     len=0
  Inst 35608:   nop     len=0
  Inst 35609:   nop     len=0
  Inst 35610:   nop     len=0
  Inst 35611:   nop     len=0
  Inst 35612:   nop     len=0
  Inst 35613:   nop     len=0
  Inst 35614:   nop     len=0
  Inst 35615:   nop     len=0
  Inst 35616:   nop     len=0
  Inst 35617:   nop     len=0
  Inst 35618:   nop     len=0
  Inst 35619:   nop     len=0
  Inst 35620:   nop     len=0
  Inst 35621:   nop     len=0
  Inst 35622:   nop     len=0
  Inst 35623:   nop     len=0
  Inst 35624:   nop     len=0
  Inst 35625:   nop     len=0
  Inst 35626:   nop     len=0
  Inst 35627:   nop     len=0
  Inst 35628:   nop     len=0
  Inst 35629:   nop     len=0
  Inst 35630:   nop     len=0
  Inst 35631:   nop     len=0
  Inst 35632:   nop     len=0
  Inst 35633:   nop     len=0
  Inst 35634:   nop     len=0
  Inst 35635:   nop     len=0
  Inst 35636:   nop     len=0
  Inst 35637:   nop     len=0
  Inst 35638:   nop     len=0
  Inst 35639:   nop     len=0
  Inst 35640:   nop     len=0
  Inst 35641:   nop     len=0
  Inst 35642:   nop     len=0
  Inst 35643:   nop     len=0
  Inst 35644:   nop     len=0
  Inst 35645:   nop     len=0
  Inst 35646:   nop     len=0
  Inst 35647:   nop     len=0
  Inst 35648:   nop     len=0
  Inst 35649:   nop     len=0
  Inst 35650:   nop     len=0
  Inst 35651:   nop     len=0
  Inst 35652:   nop     len=0
  Inst 35653:   nop     len=0
  Inst 35654:   nop     len=0
  Inst 35655:   nop     len=0
  Inst 35656:   nop     len=0
  Inst 35657:   nop     len=0
  Inst 35658:   nop     len=0
  Inst 35659:   nop     len=0
  Inst 35660:   nop     len=0
  Inst 35661:   nop     len=0
  Inst 35662:   nop     len=0
  Inst 35663:   nop     len=0
  Inst 35664:   nop     len=0
  Inst 35665:   nop     len=0
  Inst 35666:   nop     len=0
  Inst 35667:   nop     len=0
  Inst 35668:   nop     len=0
  Inst 35669:   nop     len=0
  Inst 35670:   nop     len=0
  Inst 35671:   nop     len=0
  Inst 35672:   nop     len=0
  Inst 35673:   nop     len=0
  Inst 35674:   nop     len=0
  Inst 35675:   jmp     label912
Block 910:
  (original IR block: block457)
  (successor: Block 911)
  (instruction range: 35676 .. 35705)
  Inst 35676:   movq    rsp(2072 + virtual offset), %rsi
  Inst 35677:   movq    152(%rsi), %r13
  Inst 35678:   movq    %r14, %rbx
  Inst 35679:   addq    $-1, %rbx
  Inst 35680:   movq    %r14, %rdx
  Inst 35681:   shlq    $3, %rdx
  Inst 35682:   movq    %r13, %r12
  Inst 35683:   addq    %rdx, %r12
  Inst 35684:   movq    %r13, %rdi
  Inst 35685:   addq    $-24, %rdi
  Inst 35686:   movq    %r13, %rsi
  Inst 35687:   load_ext_name %Memmove+0, %rax
  Inst 35688:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35689:   call    *%rax
  Inst 35690:   movq    rsp(1496 + virtual offset), %r15
  Inst 35691:   load_ext_name u1:1+0, %rsi
  Inst 35692:   movl    $1, %edi
  Inst 35693:   movq    %rdi, -8(%r13,%r14,8)
  Inst 35694:   movl    $1, %edi
  Inst 35695:   movq    %rdi, -16(%r13,%r14,8)
  Inst 35696:   movq    %rsi, -24(%r13,%r14,8)
  Inst 35697:   movq    rsp(2072 + virtual offset), %rsi
  Inst 35698:   movq    %r12, 152(%rsi)
  Inst 35699:   movq    %r15, %rdi
  Inst 35700:   movq    %rbx, %rsi
  Inst 35701:   load_ext_name u0:3+0, %rax
  Inst 35702:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35703:   call    *%rax
  Inst 35704:   jmp     label911
Block 911:
  (successor: Block 912)
  (instruction range: 35705 .. 35820)
  Inst 35705:   movq    %rax, rsp(1568 + virtual offset)
  Inst 35706:   nop     len=0
  Inst 35707:   nop     len=0
  Inst 35708:   nop     len=0
  Inst 35709:   nop     len=0
  Inst 35710:   nop     len=0
  Inst 35711:   nop     len=0
  Inst 35712:   nop     len=0
  Inst 35713:   nop     len=0
  Inst 35714:   nop     len=0
  Inst 35715:   nop     len=0
  Inst 35716:   nop     len=0
  Inst 35717:   nop     len=0
  Inst 35718:   nop     len=0
  Inst 35719:   nop     len=0
  Inst 35720:   nop     len=0
  Inst 35721:   nop     len=0
  Inst 35722:   nop     len=0
  Inst 35723:   nop     len=0
  Inst 35724:   nop     len=0
  Inst 35725:   nop     len=0
  Inst 35726:   nop     len=0
  Inst 35727:   nop     len=0
  Inst 35728:   nop     len=0
  Inst 35729:   nop     len=0
  Inst 35730:   nop     len=0
  Inst 35731:   nop     len=0
  Inst 35732:   nop     len=0
  Inst 35733:   nop     len=0
  Inst 35734:   nop     len=0
  Inst 35735:   nop     len=0
  Inst 35736:   nop     len=0
  Inst 35737:   nop     len=0
  Inst 35738:   nop     len=0
  Inst 35739:   nop     len=0
  Inst 35740:   nop     len=0
  Inst 35741:   nop     len=0
  Inst 35742:   nop     len=0
  Inst 35743:   nop     len=0
  Inst 35744:   nop     len=0
  Inst 35745:   nop     len=0
  Inst 35746:   nop     len=0
  Inst 35747:   nop     len=0
  Inst 35748:   nop     len=0
  Inst 35749:   nop     len=0
  Inst 35750:   nop     len=0
  Inst 35751:   nop     len=0
  Inst 35752:   nop     len=0
  Inst 35753:   nop     len=0
  Inst 35754:   nop     len=0
  Inst 35755:   nop     len=0
  Inst 35756:   nop     len=0
  Inst 35757:   nop     len=0
  Inst 35758:   nop     len=0
  Inst 35759:   nop     len=0
  Inst 35760:   nop     len=0
  Inst 35761:   nop     len=0
  Inst 35762:   nop     len=0
  Inst 35763:   nop     len=0
  Inst 35764:   nop     len=0
  Inst 35765:   nop     len=0
  Inst 35766:   nop     len=0
  Inst 35767:   nop     len=0
  Inst 35768:   nop     len=0
  Inst 35769:   nop     len=0
  Inst 35770:   nop     len=0
  Inst 35771:   nop     len=0
  Inst 35772:   nop     len=0
  Inst 35773:   nop     len=0
  Inst 35774:   nop     len=0
  Inst 35775:   nop     len=0
  Inst 35776:   nop     len=0
  Inst 35777:   nop     len=0
  Inst 35778:   nop     len=0
  Inst 35779:   nop     len=0
  Inst 35780:   nop     len=0
  Inst 35781:   nop     len=0
  Inst 35782:   nop     len=0
  Inst 35783:   nop     len=0
  Inst 35784:   nop     len=0
  Inst 35785:   nop     len=0
  Inst 35786:   nop     len=0
  Inst 35787:   nop     len=0
  Inst 35788:   nop     len=0
  Inst 35789:   nop     len=0
  Inst 35790:   nop     len=0
  Inst 35791:   nop     len=0
  Inst 35792:   nop     len=0
  Inst 35793:   nop     len=0
  Inst 35794:   nop     len=0
  Inst 35795:   nop     len=0
  Inst 35796:   nop     len=0
  Inst 35797:   nop     len=0
  Inst 35798:   nop     len=0
  Inst 35799:   nop     len=0
  Inst 35800:   nop     len=0
  Inst 35801:   nop     len=0
  Inst 35802:   nop     len=0
  Inst 35803:   nop     len=0
  Inst 35804:   nop     len=0
  Inst 35805:   nop     len=0
  Inst 35806:   nop     len=0
  Inst 35807:   nop     len=0
  Inst 35808:   nop     len=0
  Inst 35809:   nop     len=0
  Inst 35810:   nop     len=0
  Inst 35811:   nop     len=0
  Inst 35812:   nop     len=0
  Inst 35813:   nop     len=0
  Inst 35814:   nop     len=0
  Inst 35815:   nop     len=0
  Inst 35816:   nop     len=0
  Inst 35817:   nop     len=0
  Inst 35818:   nop     len=0
  Inst 35819:   jmp     label912
Block 912:
  (original IR block: block456)
  (successor: Block 913)
  (successor: Block 914)
  (instruction range: 35820 .. 35831)
  Inst 35820:   movq    rsp(2064 + virtual offset), %rsi
  Inst 35821:   movq    8(%rsi), %rdi
  Inst 35822:   movq    rsp(2048 + virtual offset), %rsi
  Inst 35823:   load_ext_name u0:2+0, %rax
  Inst 35824:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 35825:   movq    %rdi, rsp(1584 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35826:   call    *%rax
  Inst 35827:   movq    %rax, %rbx
  Inst 35828:   movq    %rdx, %r14
  Inst 35829:   testq   %r14, %r14
  Inst 35830:   jz      label913; j label914
Block 913:
  (successor: Block 916)
  (instruction range: 35831 .. 35947)
  Inst 35831:   movq    %rbx, rsp(1840 + virtual offset)
  Inst 35832:   nop     len=0
  Inst 35833:   nop     len=0
  Inst 35834:   nop     len=0
  Inst 35835:   nop     len=0
  Inst 35836:   nop     len=0
  Inst 35837:   nop     len=0
  Inst 35838:   nop     len=0
  Inst 35839:   nop     len=0
  Inst 35840:   nop     len=0
  Inst 35841:   nop     len=0
  Inst 35842:   nop     len=0
  Inst 35843:   nop     len=0
  Inst 35844:   nop     len=0
  Inst 35845:   nop     len=0
  Inst 35846:   nop     len=0
  Inst 35847:   nop     len=0
  Inst 35848:   nop     len=0
  Inst 35849:   nop     len=0
  Inst 35850:   nop     len=0
  Inst 35851:   nop     len=0
  Inst 35852:   nop     len=0
  Inst 35853:   nop     len=0
  Inst 35854:   nop     len=0
  Inst 35855:   nop     len=0
  Inst 35856:   nop     len=0
  Inst 35857:   nop     len=0
  Inst 35858:   nop     len=0
  Inst 35859:   nop     len=0
  Inst 35860:   nop     len=0
  Inst 35861:   nop     len=0
  Inst 35862:   nop     len=0
  Inst 35863:   nop     len=0
  Inst 35864:   nop     len=0
  Inst 35865:   nop     len=0
  Inst 35866:   nop     len=0
  Inst 35867:   nop     len=0
  Inst 35868:   nop     len=0
  Inst 35869:   nop     len=0
  Inst 35870:   nop     len=0
  Inst 35871:   nop     len=0
  Inst 35872:   nop     len=0
  Inst 35873:   nop     len=0
  Inst 35874:   nop     len=0
  Inst 35875:   nop     len=0
  Inst 35876:   nop     len=0
  Inst 35877:   nop     len=0
  Inst 35878:   nop     len=0
  Inst 35879:   nop     len=0
  Inst 35880:   nop     len=0
  Inst 35881:   nop     len=0
  Inst 35882:   nop     len=0
  Inst 35883:   nop     len=0
  Inst 35884:   nop     len=0
  Inst 35885:   nop     len=0
  Inst 35886:   nop     len=0
  Inst 35887:   nop     len=0
  Inst 35888:   nop     len=0
  Inst 35889:   nop     len=0
  Inst 35890:   nop     len=0
  Inst 35891:   nop     len=0
  Inst 35892:   nop     len=0
  Inst 35893:   nop     len=0
  Inst 35894:   nop     len=0
  Inst 35895:   nop     len=0
  Inst 35896:   nop     len=0
  Inst 35897:   nop     len=0
  Inst 35898:   nop     len=0
  Inst 35899:   nop     len=0
  Inst 35900:   nop     len=0
  Inst 35901:   nop     len=0
  Inst 35902:   nop     len=0
  Inst 35903:   nop     len=0
  Inst 35904:   nop     len=0
  Inst 35905:   nop     len=0
  Inst 35906:   nop     len=0
  Inst 35907:   nop     len=0
  Inst 35908:   nop     len=0
  Inst 35909:   nop     len=0
  Inst 35910:   nop     len=0
  Inst 35911:   nop     len=0
  Inst 35912:   nop     len=0
  Inst 35913:   nop     len=0
  Inst 35914:   nop     len=0
  Inst 35915:   nop     len=0
  Inst 35916:   nop     len=0
  Inst 35917:   nop     len=0
  Inst 35918:   nop     len=0
  Inst 35919:   nop     len=0
  Inst 35920:   nop     len=0
  Inst 35921:   nop     len=0
  Inst 35922:   nop     len=0
  Inst 35923:   nop     len=0
  Inst 35924:   nop     len=0
  Inst 35925:   nop     len=0
  Inst 35926:   nop     len=0
  Inst 35927:   nop     len=0
  Inst 35928:   nop     len=0
  Inst 35929:   nop     len=0
  Inst 35930:   nop     len=0
  Inst 35931:   nop     len=0
  Inst 35932:   nop     len=0
  Inst 35933:   nop     len=0
  Inst 35934:   nop     len=0
  Inst 35935:   nop     len=0
  Inst 35936:   nop     len=0
  Inst 35937:   nop     len=0
  Inst 35938:   nop     len=0
  Inst 35939:   nop     len=0
  Inst 35940:   nop     len=0
  Inst 35941:   nop     len=0
  Inst 35942:   nop     len=0
  Inst 35943:   nop     len=0
  Inst 35944:   nop     len=0
  Inst 35945:   nop     len=0
  Inst 35946:   jmp     label916
Block 914:
  (original IR block: block459)
  (successor: Block 915)
  (instruction range: 35947 .. 35976)
  Inst 35947:   movq    rsp(2072 + virtual offset), %rsi
  Inst 35948:   movq    152(%rsi), %r13
  Inst 35949:   movq    %r14, %r15
  Inst 35950:   addq    $-1, %r15
  Inst 35951:   movq    %r14, %rdx
  Inst 35952:   shlq    $3, %rdx
  Inst 35953:   movq    %r13, %r12
  Inst 35954:   addq    %rdx, %r12
  Inst 35955:   movq    %r13, %rdi
  Inst 35956:   addq    $-24, %rdi
  Inst 35957:   movq    %r13, %rsi
  Inst 35958:   load_ext_name %Memmove+0, %rax
  Inst 35959:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35960:   call    *%rax
  Inst 35961:   movq    rsp(1496 + virtual offset), %rbx
  Inst 35962:   load_ext_name u1:1+0, %rsi
  Inst 35963:   movl    $1, %edi
  Inst 35964:   movq    %rdi, -8(%r13,%r14,8)
  Inst 35965:   movl    $1, %edi
  Inst 35966:   movq    %rdi, -16(%r13,%r14,8)
  Inst 35967:   movq    %rsi, -24(%r13,%r14,8)
  Inst 35968:   movq    rsp(2072 + virtual offset), %rsi
  Inst 35969:   movq    %r12, 152(%rsi)
  Inst 35970:   movq    %rbx, %rdi
  Inst 35971:   movq    %r15, %rsi
  Inst 35972:   load_ext_name u0:3+0, %rax
  Inst 35973:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 35974:   call    *%rax
  Inst 35975:   jmp     label915
Block 915:
  (successor: Block 916)
  (instruction range: 35976 .. 36092)
  Inst 35976:   movq    %rax, rsp(1840 + virtual offset)
  Inst 35977:   nop     len=0
  Inst 35978:   nop     len=0
  Inst 35979:   nop     len=0
  Inst 35980:   nop     len=0
  Inst 35981:   nop     len=0
  Inst 35982:   nop     len=0
  Inst 35983:   nop     len=0
  Inst 35984:   nop     len=0
  Inst 35985:   nop     len=0
  Inst 35986:   nop     len=0
  Inst 35987:   nop     len=0
  Inst 35988:   nop     len=0
  Inst 35989:   nop     len=0
  Inst 35990:   nop     len=0
  Inst 35991:   nop     len=0
  Inst 35992:   nop     len=0
  Inst 35993:   nop     len=0
  Inst 35994:   nop     len=0
  Inst 35995:   nop     len=0
  Inst 35996:   nop     len=0
  Inst 35997:   nop     len=0
  Inst 35998:   nop     len=0
  Inst 35999:   nop     len=0
  Inst 36000:   nop     len=0
  Inst 36001:   nop     len=0
  Inst 36002:   nop     len=0
  Inst 36003:   nop     len=0
  Inst 36004:   nop     len=0
  Inst 36005:   nop     len=0
  Inst 36006:   nop     len=0
  Inst 36007:   nop     len=0
  Inst 36008:   nop     len=0
  Inst 36009:   nop     len=0
  Inst 36010:   nop     len=0
  Inst 36011:   nop     len=0
  Inst 36012:   nop     len=0
  Inst 36013:   nop     len=0
  Inst 36014:   nop     len=0
  Inst 36015:   nop     len=0
  Inst 36016:   nop     len=0
  Inst 36017:   nop     len=0
  Inst 36018:   nop     len=0
  Inst 36019:   nop     len=0
  Inst 36020:   nop     len=0
  Inst 36021:   nop     len=0
  Inst 36022:   nop     len=0
  Inst 36023:   nop     len=0
  Inst 36024:   nop     len=0
  Inst 36025:   nop     len=0
  Inst 36026:   nop     len=0
  Inst 36027:   nop     len=0
  Inst 36028:   nop     len=0
  Inst 36029:   nop     len=0
  Inst 36030:   nop     len=0
  Inst 36031:   nop     len=0
  Inst 36032:   nop     len=0
  Inst 36033:   nop     len=0
  Inst 36034:   nop     len=0
  Inst 36035:   nop     len=0
  Inst 36036:   nop     len=0
  Inst 36037:   nop     len=0
  Inst 36038:   nop     len=0
  Inst 36039:   nop     len=0
  Inst 36040:   nop     len=0
  Inst 36041:   nop     len=0
  Inst 36042:   nop     len=0
  Inst 36043:   nop     len=0
  Inst 36044:   nop     len=0
  Inst 36045:   nop     len=0
  Inst 36046:   nop     len=0
  Inst 36047:   nop     len=0
  Inst 36048:   nop     len=0
  Inst 36049:   nop     len=0
  Inst 36050:   nop     len=0
  Inst 36051:   nop     len=0
  Inst 36052:   nop     len=0
  Inst 36053:   nop     len=0
  Inst 36054:   nop     len=0
  Inst 36055:   nop     len=0
  Inst 36056:   nop     len=0
  Inst 36057:   nop     len=0
  Inst 36058:   nop     len=0
  Inst 36059:   nop     len=0
  Inst 36060:   nop     len=0
  Inst 36061:   nop     len=0
  Inst 36062:   nop     len=0
  Inst 36063:   nop     len=0
  Inst 36064:   nop     len=0
  Inst 36065:   nop     len=0
  Inst 36066:   nop     len=0
  Inst 36067:   nop     len=0
  Inst 36068:   nop     len=0
  Inst 36069:   nop     len=0
  Inst 36070:   nop     len=0
  Inst 36071:   nop     len=0
  Inst 36072:   nop     len=0
  Inst 36073:   nop     len=0
  Inst 36074:   nop     len=0
  Inst 36075:   nop     len=0
  Inst 36076:   nop     len=0
  Inst 36077:   nop     len=0
  Inst 36078:   nop     len=0
  Inst 36079:   nop     len=0
  Inst 36080:   nop     len=0
  Inst 36081:   nop     len=0
  Inst 36082:   nop     len=0
  Inst 36083:   nop     len=0
  Inst 36084:   nop     len=0
  Inst 36085:   nop     len=0
  Inst 36086:   nop     len=0
  Inst 36087:   nop     len=0
  Inst 36088:   nop     len=0
  Inst 36089:   nop     len=0
  Inst 36090:   nop     len=0
  Inst 36091:   jmp     label916
Block 916:
  (original IR block: block458)
  (successor: Block 917)
  (successor: Block 918)
  (instruction range: 36092 .. 36103)
  Inst 36092:   movq    rsp(2064 + virtual offset), %rsi
  Inst 36093:   movq    8(%rsi), %rdi
  Inst 36094:   movq    rsp(2048 + virtual offset), %rsi
  Inst 36095:   load_ext_name u0:2+0, %rax
  Inst 36096:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 36097:   movq    %rdi, rsp(1584 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36098:   call    *%rax
  Inst 36099:   movq    %rax, %rbx
  Inst 36100:   movq    %rdx, %r14
  Inst 36101:   testq   %r14, %r14
  Inst 36102:   jz      label917; j label918
Block 917:
  (successor: Block 920)
  (instruction range: 36103 .. 36219)
  Inst 36103:   movq    %rbx, rsp(1584 + virtual offset)
  Inst 36104:   nop     len=0
  Inst 36105:   nop     len=0
  Inst 36106:   nop     len=0
  Inst 36107:   nop     len=0
  Inst 36108:   nop     len=0
  Inst 36109:   nop     len=0
  Inst 36110:   nop     len=0
  Inst 36111:   nop     len=0
  Inst 36112:   nop     len=0
  Inst 36113:   nop     len=0
  Inst 36114:   nop     len=0
  Inst 36115:   nop     len=0
  Inst 36116:   nop     len=0
  Inst 36117:   nop     len=0
  Inst 36118:   nop     len=0
  Inst 36119:   nop     len=0
  Inst 36120:   nop     len=0
  Inst 36121:   nop     len=0
  Inst 36122:   nop     len=0
  Inst 36123:   nop     len=0
  Inst 36124:   nop     len=0
  Inst 36125:   nop     len=0
  Inst 36126:   nop     len=0
  Inst 36127:   nop     len=0
  Inst 36128:   nop     len=0
  Inst 36129:   nop     len=0
  Inst 36130:   nop     len=0
  Inst 36131:   nop     len=0
  Inst 36132:   nop     len=0
  Inst 36133:   nop     len=0
  Inst 36134:   nop     len=0
  Inst 36135:   nop     len=0
  Inst 36136:   nop     len=0
  Inst 36137:   nop     len=0
  Inst 36138:   nop     len=0
  Inst 36139:   nop     len=0
  Inst 36140:   nop     len=0
  Inst 36141:   nop     len=0
  Inst 36142:   nop     len=0
  Inst 36143:   nop     len=0
  Inst 36144:   nop     len=0
  Inst 36145:   nop     len=0
  Inst 36146:   nop     len=0
  Inst 36147:   nop     len=0
  Inst 36148:   nop     len=0
  Inst 36149:   nop     len=0
  Inst 36150:   nop     len=0
  Inst 36151:   nop     len=0
  Inst 36152:   nop     len=0
  Inst 36153:   nop     len=0
  Inst 36154:   nop     len=0
  Inst 36155:   nop     len=0
  Inst 36156:   nop     len=0
  Inst 36157:   nop     len=0
  Inst 36158:   nop     len=0
  Inst 36159:   nop     len=0
  Inst 36160:   nop     len=0
  Inst 36161:   nop     len=0
  Inst 36162:   nop     len=0
  Inst 36163:   nop     len=0
  Inst 36164:   nop     len=0
  Inst 36165:   nop     len=0
  Inst 36166:   nop     len=0
  Inst 36167:   nop     len=0
  Inst 36168:   nop     len=0
  Inst 36169:   nop     len=0
  Inst 36170:   nop     len=0
  Inst 36171:   nop     len=0
  Inst 36172:   nop     len=0
  Inst 36173:   nop     len=0
  Inst 36174:   nop     len=0
  Inst 36175:   nop     len=0
  Inst 36176:   nop     len=0
  Inst 36177:   nop     len=0
  Inst 36178:   nop     len=0
  Inst 36179:   nop     len=0
  Inst 36180:   nop     len=0
  Inst 36181:   nop     len=0
  Inst 36182:   nop     len=0
  Inst 36183:   nop     len=0
  Inst 36184:   nop     len=0
  Inst 36185:   nop     len=0
  Inst 36186:   nop     len=0
  Inst 36187:   nop     len=0
  Inst 36188:   nop     len=0
  Inst 36189:   nop     len=0
  Inst 36190:   nop     len=0
  Inst 36191:   nop     len=0
  Inst 36192:   nop     len=0
  Inst 36193:   nop     len=0
  Inst 36194:   nop     len=0
  Inst 36195:   nop     len=0
  Inst 36196:   nop     len=0
  Inst 36197:   nop     len=0
  Inst 36198:   nop     len=0
  Inst 36199:   nop     len=0
  Inst 36200:   nop     len=0
  Inst 36201:   nop     len=0
  Inst 36202:   nop     len=0
  Inst 36203:   nop     len=0
  Inst 36204:   nop     len=0
  Inst 36205:   nop     len=0
  Inst 36206:   nop     len=0
  Inst 36207:   nop     len=0
  Inst 36208:   nop     len=0
  Inst 36209:   nop     len=0
  Inst 36210:   nop     len=0
  Inst 36211:   nop     len=0
  Inst 36212:   nop     len=0
  Inst 36213:   nop     len=0
  Inst 36214:   nop     len=0
  Inst 36215:   nop     len=0
  Inst 36216:   nop     len=0
  Inst 36217:   nop     len=0
  Inst 36218:   jmp     label920
Block 918:
  (original IR block: block461)
  (successor: Block 919)
  (instruction range: 36219 .. 36248)
  Inst 36219:   movq    rsp(2072 + virtual offset), %rsi
  Inst 36220:   movq    152(%rsi), %r13
  Inst 36221:   movq    %r14, %r15
  Inst 36222:   addq    $-1, %r15
  Inst 36223:   movq    %r14, %rdx
  Inst 36224:   shlq    $3, %rdx
  Inst 36225:   movq    %r13, %r12
  Inst 36226:   addq    %rdx, %r12
  Inst 36227:   movq    %r13, %rdi
  Inst 36228:   addq    $-24, %rdi
  Inst 36229:   movq    %r13, %rsi
  Inst 36230:   load_ext_name %Memmove+0, %rax
  Inst 36231:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36232:   call    *%rax
  Inst 36233:   movq    rsp(1496 + virtual offset), %rbx
  Inst 36234:   load_ext_name u1:1+0, %rsi
  Inst 36235:   movl    $1, %edi
  Inst 36236:   movq    %rdi, -8(%r13,%r14,8)
  Inst 36237:   movl    $1, %edi
  Inst 36238:   movq    %rdi, -16(%r13,%r14,8)
  Inst 36239:   movq    %rsi, -24(%r13,%r14,8)
  Inst 36240:   movq    rsp(2072 + virtual offset), %rsi
  Inst 36241:   movq    %r12, 152(%rsi)
  Inst 36242:   movq    %rbx, %rdi
  Inst 36243:   movq    %r15, %rsi
  Inst 36244:   load_ext_name u0:3+0, %rax
  Inst 36245:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36246:   call    *%rax
  Inst 36247:   jmp     label919
Block 919:
  (successor: Block 920)
  (instruction range: 36248 .. 36364)
  Inst 36248:   movq    %rax, rsp(1584 + virtual offset)
  Inst 36249:   nop     len=0
  Inst 36250:   nop     len=0
  Inst 36251:   nop     len=0
  Inst 36252:   nop     len=0
  Inst 36253:   nop     len=0
  Inst 36254:   nop     len=0
  Inst 36255:   nop     len=0
  Inst 36256:   nop     len=0
  Inst 36257:   nop     len=0
  Inst 36258:   nop     len=0
  Inst 36259:   nop     len=0
  Inst 36260:   nop     len=0
  Inst 36261:   nop     len=0
  Inst 36262:   nop     len=0
  Inst 36263:   nop     len=0
  Inst 36264:   nop     len=0
  Inst 36265:   nop     len=0
  Inst 36266:   nop     len=0
  Inst 36267:   nop     len=0
  Inst 36268:   nop     len=0
  Inst 36269:   nop     len=0
  Inst 36270:   nop     len=0
  Inst 36271:   nop     len=0
  Inst 36272:   nop     len=0
  Inst 36273:   nop     len=0
  Inst 36274:   nop     len=0
  Inst 36275:   nop     len=0
  Inst 36276:   nop     len=0
  Inst 36277:   nop     len=0
  Inst 36278:   nop     len=0
  Inst 36279:   nop     len=0
  Inst 36280:   nop     len=0
  Inst 36281:   nop     len=0
  Inst 36282:   nop     len=0
  Inst 36283:   nop     len=0
  Inst 36284:   nop     len=0
  Inst 36285:   nop     len=0
  Inst 36286:   nop     len=0
  Inst 36287:   nop     len=0
  Inst 36288:   nop     len=0
  Inst 36289:   nop     len=0
  Inst 36290:   nop     len=0
  Inst 36291:   nop     len=0
  Inst 36292:   nop     len=0
  Inst 36293:   nop     len=0
  Inst 36294:   nop     len=0
  Inst 36295:   nop     len=0
  Inst 36296:   nop     len=0
  Inst 36297:   nop     len=0
  Inst 36298:   nop     len=0
  Inst 36299:   nop     len=0
  Inst 36300:   nop     len=0
  Inst 36301:   nop     len=0
  Inst 36302:   nop     len=0
  Inst 36303:   nop     len=0
  Inst 36304:   nop     len=0
  Inst 36305:   nop     len=0
  Inst 36306:   nop     len=0
  Inst 36307:   nop     len=0
  Inst 36308:   nop     len=0
  Inst 36309:   nop     len=0
  Inst 36310:   nop     len=0
  Inst 36311:   nop     len=0
  Inst 36312:   nop     len=0
  Inst 36313:   nop     len=0
  Inst 36314:   nop     len=0
  Inst 36315:   nop     len=0
  Inst 36316:   nop     len=0
  Inst 36317:   nop     len=0
  Inst 36318:   nop     len=0
  Inst 36319:   nop     len=0
  Inst 36320:   nop     len=0
  Inst 36321:   nop     len=0
  Inst 36322:   nop     len=0
  Inst 36323:   nop     len=0
  Inst 36324:   nop     len=0
  Inst 36325:   nop     len=0
  Inst 36326:   nop     len=0
  Inst 36327:   nop     len=0
  Inst 36328:   nop     len=0
  Inst 36329:   nop     len=0
  Inst 36330:   nop     len=0
  Inst 36331:   nop     len=0
  Inst 36332:   nop     len=0
  Inst 36333:   nop     len=0
  Inst 36334:   nop     len=0
  Inst 36335:   nop     len=0
  Inst 36336:   nop     len=0
  Inst 36337:   nop     len=0
  Inst 36338:   nop     len=0
  Inst 36339:   nop     len=0
  Inst 36340:   nop     len=0
  Inst 36341:   nop     len=0
  Inst 36342:   nop     len=0
  Inst 36343:   nop     len=0
  Inst 36344:   nop     len=0
  Inst 36345:   nop     len=0
  Inst 36346:   nop     len=0
  Inst 36347:   nop     len=0
  Inst 36348:   nop     len=0
  Inst 36349:   nop     len=0
  Inst 36350:   nop     len=0
  Inst 36351:   nop     len=0
  Inst 36352:   nop     len=0
  Inst 36353:   nop     len=0
  Inst 36354:   nop     len=0
  Inst 36355:   nop     len=0
  Inst 36356:   nop     len=0
  Inst 36357:   nop     len=0
  Inst 36358:   nop     len=0
  Inst 36359:   nop     len=0
  Inst 36360:   nop     len=0
  Inst 36361:   nop     len=0
  Inst 36362:   nop     len=0
  Inst 36363:   jmp     label920
Block 920:
  (original IR block: block460)
  (successor: Block 921)
  (successor: Block 922)
  (instruction range: 36364 .. 36375)
  Inst 36364:   movq    rsp(2064 + virtual offset), %rsi
  Inst 36365:   movq    8(%rsi), %rdi
  Inst 36366:   movq    rsp(2048 + virtual offset), %rsi
  Inst 36367:   load_ext_name u0:2+0, %rax
  Inst 36368:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 36369:   movq    %rdi, rsp(1600 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S203, S205, S207, S209, S211, S213, S215, S217, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36370:   call    *%rax
  Inst 36371:   movq    %rax, %r15
  Inst 36372:   movq    %rdx, %r14
  Inst 36373:   testq   %r14, %r14
  Inst 36374:   jz      label921; j label922
Block 921:
  (successor: Block 924)
  (instruction range: 36375 .. 36492)
  Inst 36375:   movq    %r15, rsp(1832 + virtual offset)
  Inst 36376:   nop     len=0
  Inst 36377:   nop     len=0
  Inst 36378:   nop     len=0
  Inst 36379:   nop     len=0
  Inst 36380:   nop     len=0
  Inst 36381:   nop     len=0
  Inst 36382:   nop     len=0
  Inst 36383:   nop     len=0
  Inst 36384:   nop     len=0
  Inst 36385:   nop     len=0
  Inst 36386:   nop     len=0
  Inst 36387:   nop     len=0
  Inst 36388:   nop     len=0
  Inst 36389:   nop     len=0
  Inst 36390:   nop     len=0
  Inst 36391:   nop     len=0
  Inst 36392:   nop     len=0
  Inst 36393:   nop     len=0
  Inst 36394:   nop     len=0
  Inst 36395:   nop     len=0
  Inst 36396:   nop     len=0
  Inst 36397:   nop     len=0
  Inst 36398:   nop     len=0
  Inst 36399:   nop     len=0
  Inst 36400:   nop     len=0
  Inst 36401:   nop     len=0
  Inst 36402:   nop     len=0
  Inst 36403:   nop     len=0
  Inst 36404:   nop     len=0
  Inst 36405:   nop     len=0
  Inst 36406:   nop     len=0
  Inst 36407:   nop     len=0
  Inst 36408:   nop     len=0
  Inst 36409:   nop     len=0
  Inst 36410:   nop     len=0
  Inst 36411:   nop     len=0
  Inst 36412:   nop     len=0
  Inst 36413:   nop     len=0
  Inst 36414:   nop     len=0
  Inst 36415:   nop     len=0
  Inst 36416:   nop     len=0
  Inst 36417:   nop     len=0
  Inst 36418:   nop     len=0
  Inst 36419:   nop     len=0
  Inst 36420:   nop     len=0
  Inst 36421:   nop     len=0
  Inst 36422:   nop     len=0
  Inst 36423:   nop     len=0
  Inst 36424:   nop     len=0
  Inst 36425:   nop     len=0
  Inst 36426:   nop     len=0
  Inst 36427:   nop     len=0
  Inst 36428:   nop     len=0
  Inst 36429:   nop     len=0
  Inst 36430:   nop     len=0
  Inst 36431:   nop     len=0
  Inst 36432:   nop     len=0
  Inst 36433:   nop     len=0
  Inst 36434:   nop     len=0
  Inst 36435:   nop     len=0
  Inst 36436:   nop     len=0
  Inst 36437:   nop     len=0
  Inst 36438:   nop     len=0
  Inst 36439:   nop     len=0
  Inst 36440:   nop     len=0
  Inst 36441:   nop     len=0
  Inst 36442:   nop     len=0
  Inst 36443:   nop     len=0
  Inst 36444:   nop     len=0
  Inst 36445:   nop     len=0
  Inst 36446:   nop     len=0
  Inst 36447:   nop     len=0
  Inst 36448:   nop     len=0
  Inst 36449:   nop     len=0
  Inst 36450:   nop     len=0
  Inst 36451:   nop     len=0
  Inst 36452:   nop     len=0
  Inst 36453:   nop     len=0
  Inst 36454:   nop     len=0
  Inst 36455:   nop     len=0
  Inst 36456:   nop     len=0
  Inst 36457:   nop     len=0
  Inst 36458:   nop     len=0
  Inst 36459:   nop     len=0
  Inst 36460:   nop     len=0
  Inst 36461:   nop     len=0
  Inst 36462:   nop     len=0
  Inst 36463:   nop     len=0
  Inst 36464:   nop     len=0
  Inst 36465:   nop     len=0
  Inst 36466:   nop     len=0
  Inst 36467:   nop     len=0
  Inst 36468:   nop     len=0
  Inst 36469:   nop     len=0
  Inst 36470:   nop     len=0
  Inst 36471:   nop     len=0
  Inst 36472:   nop     len=0
  Inst 36473:   nop     len=0
  Inst 36474:   nop     len=0
  Inst 36475:   nop     len=0
  Inst 36476:   nop     len=0
  Inst 36477:   nop     len=0
  Inst 36478:   nop     len=0
  Inst 36479:   nop     len=0
  Inst 36480:   nop     len=0
  Inst 36481:   nop     len=0
  Inst 36482:   nop     len=0
  Inst 36483:   nop     len=0
  Inst 36484:   nop     len=0
  Inst 36485:   nop     len=0
  Inst 36486:   nop     len=0
  Inst 36487:   nop     len=0
  Inst 36488:   nop     len=0
  Inst 36489:   nop     len=0
  Inst 36490:   nop     len=0
  Inst 36491:   jmp     label924
Block 922:
  (original IR block: block463)
  (successor: Block 923)
  (instruction range: 36492 .. 36521)
  Inst 36492:   movq    rsp(2072 + virtual offset), %rsi
  Inst 36493:   movq    152(%rsi), %r13
  Inst 36494:   movq    %r14, %rbx
  Inst 36495:   addq    $-1, %rbx
  Inst 36496:   movq    %r14, %rdx
  Inst 36497:   shlq    $3, %rdx
  Inst 36498:   movq    %r13, %r12
  Inst 36499:   addq    %rdx, %r12
  Inst 36500:   movq    %r13, %rdi
  Inst 36501:   addq    $-24, %rdi
  Inst 36502:   movq    %r13, %rsi
  Inst 36503:   load_ext_name %Memmove+0, %rax
  Inst 36504:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36505:   call    *%rax
  Inst 36506:   movq    rsp(1496 + virtual offset), %r15
  Inst 36507:   load_ext_name u1:1+0, %rsi
  Inst 36508:   movl    $1, %edi
  Inst 36509:   movq    %rdi, -8(%r13,%r14,8)
  Inst 36510:   movl    $1, %edi
  Inst 36511:   movq    %rdi, -16(%r13,%r14,8)
  Inst 36512:   movq    %rsi, -24(%r13,%r14,8)
  Inst 36513:   movq    rsp(2072 + virtual offset), %rsi
  Inst 36514:   movq    %r12, 152(%rsi)
  Inst 36515:   movq    %r15, %rdi
  Inst 36516:   movq    %rbx, %rsi
  Inst 36517:   load_ext_name u0:3+0, %rax
  Inst 36518:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36519:   call    *%rax
  Inst 36520:   jmp     label923
Block 923:
  (successor: Block 924)
  (instruction range: 36521 .. 36638)
  Inst 36521:   movq    %rax, rsp(1832 + virtual offset)
  Inst 36522:   nop     len=0
  Inst 36523:   nop     len=0
  Inst 36524:   nop     len=0
  Inst 36525:   nop     len=0
  Inst 36526:   nop     len=0
  Inst 36527:   nop     len=0
  Inst 36528:   nop     len=0
  Inst 36529:   nop     len=0
  Inst 36530:   nop     len=0
  Inst 36531:   nop     len=0
  Inst 36532:   nop     len=0
  Inst 36533:   nop     len=0
  Inst 36534:   nop     len=0
  Inst 36535:   nop     len=0
  Inst 36536:   nop     len=0
  Inst 36537:   nop     len=0
  Inst 36538:   nop     len=0
  Inst 36539:   nop     len=0
  Inst 36540:   nop     len=0
  Inst 36541:   nop     len=0
  Inst 36542:   nop     len=0
  Inst 36543:   nop     len=0
  Inst 36544:   nop     len=0
  Inst 36545:   nop     len=0
  Inst 36546:   nop     len=0
  Inst 36547:   nop     len=0
  Inst 36548:   nop     len=0
  Inst 36549:   nop     len=0
  Inst 36550:   nop     len=0
  Inst 36551:   nop     len=0
  Inst 36552:   nop     len=0
  Inst 36553:   nop     len=0
  Inst 36554:   nop     len=0
  Inst 36555:   nop     len=0
  Inst 36556:   nop     len=0
  Inst 36557:   nop     len=0
  Inst 36558:   nop     len=0
  Inst 36559:   nop     len=0
  Inst 36560:   nop     len=0
  Inst 36561:   nop     len=0
  Inst 36562:   nop     len=0
  Inst 36563:   nop     len=0
  Inst 36564:   nop     len=0
  Inst 36565:   nop     len=0
  Inst 36566:   nop     len=0
  Inst 36567:   nop     len=0
  Inst 36568:   nop     len=0
  Inst 36569:   nop     len=0
  Inst 36570:   nop     len=0
  Inst 36571:   nop     len=0
  Inst 36572:   nop     len=0
  Inst 36573:   nop     len=0
  Inst 36574:   nop     len=0
  Inst 36575:   nop     len=0
  Inst 36576:   nop     len=0
  Inst 36577:   nop     len=0
  Inst 36578:   nop     len=0
  Inst 36579:   nop     len=0
  Inst 36580:   nop     len=0
  Inst 36581:   nop     len=0
  Inst 36582:   nop     len=0
  Inst 36583:   nop     len=0
  Inst 36584:   nop     len=0
  Inst 36585:   nop     len=0
  Inst 36586:   nop     len=0
  Inst 36587:   nop     len=0
  Inst 36588:   nop     len=0
  Inst 36589:   nop     len=0
  Inst 36590:   nop     len=0
  Inst 36591:   nop     len=0
  Inst 36592:   nop     len=0
  Inst 36593:   nop     len=0
  Inst 36594:   nop     len=0
  Inst 36595:   nop     len=0
  Inst 36596:   nop     len=0
  Inst 36597:   nop     len=0
  Inst 36598:   nop     len=0
  Inst 36599:   nop     len=0
  Inst 36600:   nop     len=0
  Inst 36601:   nop     len=0
  Inst 36602:   nop     len=0
  Inst 36603:   nop     len=0
  Inst 36604:   nop     len=0
  Inst 36605:   nop     len=0
  Inst 36606:   nop     len=0
  Inst 36607:   nop     len=0
  Inst 36608:   nop     len=0
  Inst 36609:   nop     len=0
  Inst 36610:   nop     len=0
  Inst 36611:   nop     len=0
  Inst 36612:   nop     len=0
  Inst 36613:   nop     len=0
  Inst 36614:   nop     len=0
  Inst 36615:   nop     len=0
  Inst 36616:   nop     len=0
  Inst 36617:   nop     len=0
  Inst 36618:   nop     len=0
  Inst 36619:   nop     len=0
  Inst 36620:   nop     len=0
  Inst 36621:   nop     len=0
  Inst 36622:   nop     len=0
  Inst 36623:   nop     len=0
  Inst 36624:   nop     len=0
  Inst 36625:   nop     len=0
  Inst 36626:   nop     len=0
  Inst 36627:   nop     len=0
  Inst 36628:   nop     len=0
  Inst 36629:   nop     len=0
  Inst 36630:   nop     len=0
  Inst 36631:   nop     len=0
  Inst 36632:   nop     len=0
  Inst 36633:   nop     len=0
  Inst 36634:   nop     len=0
  Inst 36635:   nop     len=0
  Inst 36636:   nop     len=0
  Inst 36637:   jmp     label924
Block 924:
  (original IR block: block462)
  (successor: Block 925)
  (successor: Block 926)
  (instruction range: 36638 .. 36649)
  Inst 36638:   movq    rsp(2064 + virtual offset), %rsi
  Inst 36639:   movq    8(%rsi), %rdi
  Inst 36640:   movq    rsp(2048 + virtual offset), %rsi
  Inst 36641:   load_ext_name u0:2+0, %rax
  Inst 36642:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 36643:   movq    %rdi, rsp(1600 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S203, S205, S207, S209, S211, S213, S215, S217, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36644:   call    *%rax
  Inst 36645:   movq    %rax, %rbx
  Inst 36646:   movq    %rdx, %r14
  Inst 36647:   testq   %r14, %r14
  Inst 36648:   jz      label925; j label926
Block 925:
  (successor: Block 928)
  (instruction range: 36649 .. 36766)
  Inst 36649:   movq    %rbx, rsp(1600 + virtual offset)
  Inst 36650:   nop     len=0
  Inst 36651:   nop     len=0
  Inst 36652:   nop     len=0
  Inst 36653:   nop     len=0
  Inst 36654:   nop     len=0
  Inst 36655:   nop     len=0
  Inst 36656:   nop     len=0
  Inst 36657:   nop     len=0
  Inst 36658:   nop     len=0
  Inst 36659:   nop     len=0
  Inst 36660:   nop     len=0
  Inst 36661:   nop     len=0
  Inst 36662:   nop     len=0
  Inst 36663:   nop     len=0
  Inst 36664:   nop     len=0
  Inst 36665:   nop     len=0
  Inst 36666:   nop     len=0
  Inst 36667:   nop     len=0
  Inst 36668:   nop     len=0
  Inst 36669:   nop     len=0
  Inst 36670:   nop     len=0
  Inst 36671:   nop     len=0
  Inst 36672:   nop     len=0
  Inst 36673:   nop     len=0
  Inst 36674:   nop     len=0
  Inst 36675:   nop     len=0
  Inst 36676:   nop     len=0
  Inst 36677:   nop     len=0
  Inst 36678:   nop     len=0
  Inst 36679:   nop     len=0
  Inst 36680:   nop     len=0
  Inst 36681:   nop     len=0
  Inst 36682:   nop     len=0
  Inst 36683:   nop     len=0
  Inst 36684:   nop     len=0
  Inst 36685:   nop     len=0
  Inst 36686:   nop     len=0
  Inst 36687:   nop     len=0
  Inst 36688:   nop     len=0
  Inst 36689:   nop     len=0
  Inst 36690:   nop     len=0
  Inst 36691:   nop     len=0
  Inst 36692:   nop     len=0
  Inst 36693:   nop     len=0
  Inst 36694:   nop     len=0
  Inst 36695:   nop     len=0
  Inst 36696:   nop     len=0
  Inst 36697:   nop     len=0
  Inst 36698:   nop     len=0
  Inst 36699:   nop     len=0
  Inst 36700:   nop     len=0
  Inst 36701:   nop     len=0
  Inst 36702:   nop     len=0
  Inst 36703:   nop     len=0
  Inst 36704:   nop     len=0
  Inst 36705:   nop     len=0
  Inst 36706:   nop     len=0
  Inst 36707:   nop     len=0
  Inst 36708:   nop     len=0
  Inst 36709:   nop     len=0
  Inst 36710:   nop     len=0
  Inst 36711:   nop     len=0
  Inst 36712:   nop     len=0
  Inst 36713:   nop     len=0
  Inst 36714:   nop     len=0
  Inst 36715:   nop     len=0
  Inst 36716:   nop     len=0
  Inst 36717:   nop     len=0
  Inst 36718:   nop     len=0
  Inst 36719:   nop     len=0
  Inst 36720:   nop     len=0
  Inst 36721:   nop     len=0
  Inst 36722:   nop     len=0
  Inst 36723:   nop     len=0
  Inst 36724:   nop     len=0
  Inst 36725:   nop     len=0
  Inst 36726:   nop     len=0
  Inst 36727:   nop     len=0
  Inst 36728:   nop     len=0
  Inst 36729:   nop     len=0
  Inst 36730:   nop     len=0
  Inst 36731:   nop     len=0
  Inst 36732:   nop     len=0
  Inst 36733:   nop     len=0
  Inst 36734:   nop     len=0
  Inst 36735:   nop     len=0
  Inst 36736:   nop     len=0
  Inst 36737:   nop     len=0
  Inst 36738:   nop     len=0
  Inst 36739:   nop     len=0
  Inst 36740:   nop     len=0
  Inst 36741:   nop     len=0
  Inst 36742:   nop     len=0
  Inst 36743:   nop     len=0
  Inst 36744:   nop     len=0
  Inst 36745:   nop     len=0
  Inst 36746:   nop     len=0
  Inst 36747:   nop     len=0
  Inst 36748:   nop     len=0
  Inst 36749:   nop     len=0
  Inst 36750:   nop     len=0
  Inst 36751:   nop     len=0
  Inst 36752:   nop     len=0
  Inst 36753:   nop     len=0
  Inst 36754:   nop     len=0
  Inst 36755:   nop     len=0
  Inst 36756:   nop     len=0
  Inst 36757:   nop     len=0
  Inst 36758:   nop     len=0
  Inst 36759:   nop     len=0
  Inst 36760:   nop     len=0
  Inst 36761:   nop     len=0
  Inst 36762:   nop     len=0
  Inst 36763:   nop     len=0
  Inst 36764:   nop     len=0
  Inst 36765:   jmp     label928
Block 926:
  (original IR block: block465)
  (successor: Block 927)
  (instruction range: 36766 .. 36795)
  Inst 36766:   movq    rsp(2072 + virtual offset), %rsi
  Inst 36767:   movq    152(%rsi), %r13
  Inst 36768:   movq    %r14, %r15
  Inst 36769:   addq    $-1, %r15
  Inst 36770:   movq    %r14, %rdx
  Inst 36771:   shlq    $3, %rdx
  Inst 36772:   movq    %r13, %r12
  Inst 36773:   addq    %rdx, %r12
  Inst 36774:   movq    %r13, %rdi
  Inst 36775:   addq    $-24, %rdi
  Inst 36776:   movq    %r13, %rsi
  Inst 36777:   load_ext_name %Memmove+0, %rax
  Inst 36778:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36779:   call    *%rax
  Inst 36780:   movq    rsp(1496 + virtual offset), %rbx
  Inst 36781:   load_ext_name u1:1+0, %rsi
  Inst 36782:   movl    $1, %edi
  Inst 36783:   movq    %rdi, -8(%r13,%r14,8)
  Inst 36784:   movl    $1, %edi
  Inst 36785:   movq    %rdi, -16(%r13,%r14,8)
  Inst 36786:   movq    %rsi, -24(%r13,%r14,8)
  Inst 36787:   movq    rsp(2072 + virtual offset), %rsi
  Inst 36788:   movq    %r12, 152(%rsi)
  Inst 36789:   movq    %rbx, %rdi
  Inst 36790:   movq    %r15, %rsi
  Inst 36791:   load_ext_name u0:3+0, %rax
  Inst 36792:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36793:   call    *%rax
  Inst 36794:   jmp     label927
Block 927:
  (successor: Block 928)
  (instruction range: 36795 .. 36912)
  Inst 36795:   movq    %rax, rsp(1600 + virtual offset)
  Inst 36796:   nop     len=0
  Inst 36797:   nop     len=0
  Inst 36798:   nop     len=0
  Inst 36799:   nop     len=0
  Inst 36800:   nop     len=0
  Inst 36801:   nop     len=0
  Inst 36802:   nop     len=0
  Inst 36803:   nop     len=0
  Inst 36804:   nop     len=0
  Inst 36805:   nop     len=0
  Inst 36806:   nop     len=0
  Inst 36807:   nop     len=0
  Inst 36808:   nop     len=0
  Inst 36809:   nop     len=0
  Inst 36810:   nop     len=0
  Inst 36811:   nop     len=0
  Inst 36812:   nop     len=0
  Inst 36813:   nop     len=0
  Inst 36814:   nop     len=0
  Inst 36815:   nop     len=0
  Inst 36816:   nop     len=0
  Inst 36817:   nop     len=0
  Inst 36818:   nop     len=0
  Inst 36819:   nop     len=0
  Inst 36820:   nop     len=0
  Inst 36821:   nop     len=0
  Inst 36822:   nop     len=0
  Inst 36823:   nop     len=0
  Inst 36824:   nop     len=0
  Inst 36825:   nop     len=0
  Inst 36826:   nop     len=0
  Inst 36827:   nop     len=0
  Inst 36828:   nop     len=0
  Inst 36829:   nop     len=0
  Inst 36830:   nop     len=0
  Inst 36831:   nop     len=0
  Inst 36832:   nop     len=0
  Inst 36833:   nop     len=0
  Inst 36834:   nop     len=0
  Inst 36835:   nop     len=0
  Inst 36836:   nop     len=0
  Inst 36837:   nop     len=0
  Inst 36838:   nop     len=0
  Inst 36839:   nop     len=0
  Inst 36840:   nop     len=0
  Inst 36841:   nop     len=0
  Inst 36842:   nop     len=0
  Inst 36843:   nop     len=0
  Inst 36844:   nop     len=0
  Inst 36845:   nop     len=0
  Inst 36846:   nop     len=0
  Inst 36847:   nop     len=0
  Inst 36848:   nop     len=0
  Inst 36849:   nop     len=0
  Inst 36850:   nop     len=0
  Inst 36851:   nop     len=0
  Inst 36852:   nop     len=0
  Inst 36853:   nop     len=0
  Inst 36854:   nop     len=0
  Inst 36855:   nop     len=0
  Inst 36856:   nop     len=0
  Inst 36857:   nop     len=0
  Inst 36858:   nop     len=0
  Inst 36859:   nop     len=0
  Inst 36860:   nop     len=0
  Inst 36861:   nop     len=0
  Inst 36862:   nop     len=0
  Inst 36863:   nop     len=0
  Inst 36864:   nop     len=0
  Inst 36865:   nop     len=0
  Inst 36866:   nop     len=0
  Inst 36867:   nop     len=0
  Inst 36868:   nop     len=0
  Inst 36869:   nop     len=0
  Inst 36870:   nop     len=0
  Inst 36871:   nop     len=0
  Inst 36872:   nop     len=0
  Inst 36873:   nop     len=0
  Inst 36874:   nop     len=0
  Inst 36875:   nop     len=0
  Inst 36876:   nop     len=0
  Inst 36877:   nop     len=0
  Inst 36878:   nop     len=0
  Inst 36879:   nop     len=0
  Inst 36880:   nop     len=0
  Inst 36881:   nop     len=0
  Inst 36882:   nop     len=0
  Inst 36883:   nop     len=0
  Inst 36884:   nop     len=0
  Inst 36885:   nop     len=0
  Inst 36886:   nop     len=0
  Inst 36887:   nop     len=0
  Inst 36888:   nop     len=0
  Inst 36889:   nop     len=0
  Inst 36890:   nop     len=0
  Inst 36891:   nop     len=0
  Inst 36892:   nop     len=0
  Inst 36893:   nop     len=0
  Inst 36894:   nop     len=0
  Inst 36895:   nop     len=0
  Inst 36896:   nop     len=0
  Inst 36897:   nop     len=0
  Inst 36898:   nop     len=0
  Inst 36899:   nop     len=0
  Inst 36900:   nop     len=0
  Inst 36901:   nop     len=0
  Inst 36902:   nop     len=0
  Inst 36903:   nop     len=0
  Inst 36904:   nop     len=0
  Inst 36905:   nop     len=0
  Inst 36906:   nop     len=0
  Inst 36907:   nop     len=0
  Inst 36908:   nop     len=0
  Inst 36909:   nop     len=0
  Inst 36910:   nop     len=0
  Inst 36911:   jmp     label928
Block 928:
  (original IR block: block464)
  (successor: Block 929)
  (successor: Block 930)
  (instruction range: 36912 .. 36923)
  Inst 36912:   movq    rsp(2064 + virtual offset), %rsi
  Inst 36913:   movq    8(%rsi), %rdi
  Inst 36914:   movq    rsp(2048 + virtual offset), %rsi
  Inst 36915:   load_ext_name u0:2+0, %rax
  Inst 36916:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 36917:   movq    %rdi, rsp(1616 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S205, S207, S209, S211, S213, S215, S217, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 36918:   call    *%rax
  Inst 36919:   movq    %rax, %rbx
  Inst 36920:   movq    %rdx, %r14
  Inst 36921:   testq   %r14, %r14
  Inst 36922:   jz      label929; j label930
Block 929:
  (successor: Block 932)
  (instruction range: 36923 .. 37041)
  Inst 36923:   movq    %rbx, rsp(1824 + virtual offset)
  Inst 36924:   nop     len=0
  Inst 36925:   nop     len=0
  Inst 36926:   nop     len=0
  Inst 36927:   nop     len=0
  Inst 36928:   nop     len=0
  Inst 36929:   nop     len=0
  Inst 36930:   nop     len=0
  Inst 36931:   nop     len=0
  Inst 36932:   nop     len=0
  Inst 36933:   nop     len=0
  Inst 36934:   nop     len=0
  Inst 36935:   nop     len=0
  Inst 36936:   nop     len=0
  Inst 36937:   nop     len=0
  Inst 36938:   nop     len=0
  Inst 36939:   nop     len=0
  Inst 36940:   nop     len=0
  Inst 36941:   nop     len=0
  Inst 36942:   nop     len=0
  Inst 36943:   nop     len=0
  Inst 36944:   nop     len=0
  Inst 36945:   nop     len=0
  Inst 36946:   nop     len=0
  Inst 36947:   nop     len=0
  Inst 36948:   nop     len=0
  Inst 36949:   nop     len=0
  Inst 36950:   nop     len=0
  Inst 36951:   nop     len=0
  Inst 36952:   nop     len=0
  Inst 36953:   nop     len=0
  Inst 36954:   nop     len=0
  Inst 36955:   nop     len=0
  Inst 36956:   nop     len=0
  Inst 36957:   nop     len=0
  Inst 36958:   nop     len=0
  Inst 36959:   nop     len=0
  Inst 36960:   nop     len=0
  Inst 36961:   nop     len=0
  Inst 36962:   nop     len=0
  Inst 36963:   nop     len=0
  Inst 36964:   nop     len=0
  Inst 36965:   nop     len=0
  Inst 36966:   nop     len=0
  Inst 36967:   nop     len=0
  Inst 36968:   nop     len=0
  Inst 36969:   nop     len=0
  Inst 36970:   nop     len=0
  Inst 36971:   nop     len=0
  Inst 36972:   nop     len=0
  Inst 36973:   nop     len=0
  Inst 36974:   nop     len=0
  Inst 36975:   nop     len=0
  Inst 36976:   nop     len=0
  Inst 36977:   nop     len=0
  Inst 36978:   nop     len=0
  Inst 36979:   nop     len=0
  Inst 36980:   nop     len=0
  Inst 36981:   nop     len=0
  Inst 36982:   nop     len=0
  Inst 36983:   nop     len=0
  Inst 36984:   nop     len=0
  Inst 36985:   nop     len=0
  Inst 36986:   nop     len=0
  Inst 36987:   nop     len=0
  Inst 36988:   nop     len=0
  Inst 36989:   nop     len=0
  Inst 36990:   nop     len=0
  Inst 36991:   nop     len=0
  Inst 36992:   nop     len=0
  Inst 36993:   nop     len=0
  Inst 36994:   nop     len=0
  Inst 36995:   nop     len=0
  Inst 36996:   nop     len=0
  Inst 36997:   nop     len=0
  Inst 36998:   nop     len=0
  Inst 36999:   nop     len=0
  Inst 37000:   nop     len=0
  Inst 37001:   nop     len=0
  Inst 37002:   nop     len=0
  Inst 37003:   nop     len=0
  Inst 37004:   nop     len=0
  Inst 37005:   nop     len=0
  Inst 37006:   nop     len=0
  Inst 37007:   nop     len=0
  Inst 37008:   nop     len=0
  Inst 37009:   nop     len=0
  Inst 37010:   nop     len=0
  Inst 37011:   nop     len=0
  Inst 37012:   nop     len=0
  Inst 37013:   nop     len=0
  Inst 37014:   nop     len=0
  Inst 37015:   nop     len=0
  Inst 37016:   nop     len=0
  Inst 37017:   nop     len=0
  Inst 37018:   nop     len=0
  Inst 37019:   nop     len=0
  Inst 37020:   nop     len=0
  Inst 37021:   nop     len=0
  Inst 37022:   nop     len=0
  Inst 37023:   nop     len=0
  Inst 37024:   nop     len=0
  Inst 37025:   nop     len=0
  Inst 37026:   nop     len=0
  Inst 37027:   nop     len=0
  Inst 37028:   nop     len=0
  Inst 37029:   nop     len=0
  Inst 37030:   nop     len=0
  Inst 37031:   nop     len=0
  Inst 37032:   nop     len=0
  Inst 37033:   nop     len=0
  Inst 37034:   nop     len=0
  Inst 37035:   nop     len=0
  Inst 37036:   nop     len=0
  Inst 37037:   nop     len=0
  Inst 37038:   nop     len=0
  Inst 37039:   nop     len=0
  Inst 37040:   jmp     label932
Block 930:
  (original IR block: block467)
  (successor: Block 931)
  (instruction range: 37041 .. 37070)
  Inst 37041:   movq    rsp(2072 + virtual offset), %rsi
  Inst 37042:   movq    152(%rsi), %r13
  Inst 37043:   movq    %r14, %r15
  Inst 37044:   addq    $-1, %r15
  Inst 37045:   movq    %r14, %rdx
  Inst 37046:   shlq    $3, %rdx
  Inst 37047:   movq    %r13, %r12
  Inst 37048:   addq    %rdx, %r12
  Inst 37049:   movq    %r13, %rdi
  Inst 37050:   addq    $-24, %rdi
  Inst 37051:   movq    %r13, %rsi
  Inst 37052:   load_ext_name %Memmove+0, %rax
  Inst 37053:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S203, S205, S207, S209, S211, S213, S215, S217, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37054:   call    *%rax
  Inst 37055:   movq    rsp(1496 + virtual offset), %rbx
  Inst 37056:   load_ext_name u1:1+0, %rsi
  Inst 37057:   movl    $1, %edi
  Inst 37058:   movq    %rdi, -8(%r13,%r14,8)
  Inst 37059:   movl    $1, %edi
  Inst 37060:   movq    %rdi, -16(%r13,%r14,8)
  Inst 37061:   movq    %rsi, -24(%r13,%r14,8)
  Inst 37062:   movq    rsp(2072 + virtual offset), %rsi
  Inst 37063:   movq    %r12, 152(%rsi)
  Inst 37064:   movq    %rbx, %rdi
  Inst 37065:   movq    %r15, %rsi
  Inst 37066:   load_ext_name u0:3+0, %rax
  Inst 37067:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S203, S205, S207, S209, S211, S213, S215, S217, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37068:   call    *%rax
  Inst 37069:   jmp     label931
Block 931:
  (successor: Block 932)
  (instruction range: 37070 .. 37188)
  Inst 37070:   movq    %rax, rsp(1824 + virtual offset)
  Inst 37071:   nop     len=0
  Inst 37072:   nop     len=0
  Inst 37073:   nop     len=0
  Inst 37074:   nop     len=0
  Inst 37075:   nop     len=0
  Inst 37076:   nop     len=0
  Inst 37077:   nop     len=0
  Inst 37078:   nop     len=0
  Inst 37079:   nop     len=0
  Inst 37080:   nop     len=0
  Inst 37081:   nop     len=0
  Inst 37082:   nop     len=0
  Inst 37083:   nop     len=0
  Inst 37084:   nop     len=0
  Inst 37085:   nop     len=0
  Inst 37086:   nop     len=0
  Inst 37087:   nop     len=0
  Inst 37088:   nop     len=0
  Inst 37089:   nop     len=0
  Inst 37090:   nop     len=0
  Inst 37091:   nop     len=0
  Inst 37092:   nop     len=0
  Inst 37093:   nop     len=0
  Inst 37094:   nop     len=0
  Inst 37095:   nop     len=0
  Inst 37096:   nop     len=0
  Inst 37097:   nop     len=0
  Inst 37098:   nop     len=0
  Inst 37099:   nop     len=0
  Inst 37100:   nop     len=0
  Inst 37101:   nop     len=0
  Inst 37102:   nop     len=0
  Inst 37103:   nop     len=0
  Inst 37104:   nop     len=0
  Inst 37105:   nop     len=0
  Inst 37106:   nop     len=0
  Inst 37107:   nop     len=0
  Inst 37108:   nop     len=0
  Inst 37109:   nop     len=0
  Inst 37110:   nop     len=0
  Inst 37111:   nop     len=0
  Inst 37112:   nop     len=0
  Inst 37113:   nop     len=0
  Inst 37114:   nop     len=0
  Inst 37115:   nop     len=0
  Inst 37116:   nop     len=0
  Inst 37117:   nop     len=0
  Inst 37118:   nop     len=0
  Inst 37119:   nop     len=0
  Inst 37120:   nop     len=0
  Inst 37121:   nop     len=0
  Inst 37122:   nop     len=0
  Inst 37123:   nop     len=0
  Inst 37124:   nop     len=0
  Inst 37125:   nop     len=0
  Inst 37126:   nop     len=0
  Inst 37127:   nop     len=0
  Inst 37128:   nop     len=0
  Inst 37129:   nop     len=0
  Inst 37130:   nop     len=0
  Inst 37131:   nop     len=0
  Inst 37132:   nop     len=0
  Inst 37133:   nop     len=0
  Inst 37134:   nop     len=0
  Inst 37135:   nop     len=0
  Inst 37136:   nop     len=0
  Inst 37137:   nop     len=0
  Inst 37138:   nop     len=0
  Inst 37139:   nop     len=0
  Inst 37140:   nop     len=0
  Inst 37141:   nop     len=0
  Inst 37142:   nop     len=0
  Inst 37143:   nop     len=0
  Inst 37144:   nop     len=0
  Inst 37145:   nop     len=0
  Inst 37146:   nop     len=0
  Inst 37147:   nop     len=0
  Inst 37148:   nop     len=0
  Inst 37149:   nop     len=0
  Inst 37150:   nop     len=0
  Inst 37151:   nop     len=0
  Inst 37152:   nop     len=0
  Inst 37153:   nop     len=0
  Inst 37154:   nop     len=0
  Inst 37155:   nop     len=0
  Inst 37156:   nop     len=0
  Inst 37157:   nop     len=0
  Inst 37158:   nop     len=0
  Inst 37159:   nop     len=0
  Inst 37160:   nop     len=0
  Inst 37161:   nop     len=0
  Inst 37162:   nop     len=0
  Inst 37163:   nop     len=0
  Inst 37164:   nop     len=0
  Inst 37165:   nop     len=0
  Inst 37166:   nop     len=0
  Inst 37167:   nop     len=0
  Inst 37168:   nop     len=0
  Inst 37169:   nop     len=0
  Inst 37170:   nop     len=0
  Inst 37171:   nop     len=0
  Inst 37172:   nop     len=0
  Inst 37173:   nop     len=0
  Inst 37174:   nop     len=0
  Inst 37175:   nop     len=0
  Inst 37176:   nop     len=0
  Inst 37177:   nop     len=0
  Inst 37178:   nop     len=0
  Inst 37179:   nop     len=0
  Inst 37180:   nop     len=0
  Inst 37181:   nop     len=0
  Inst 37182:   nop     len=0
  Inst 37183:   nop     len=0
  Inst 37184:   nop     len=0
  Inst 37185:   nop     len=0
  Inst 37186:   nop     len=0
  Inst 37187:   jmp     label932
Block 932:
  (original IR block: block466)
  (successor: Block 933)
  (successor: Block 934)
  (instruction range: 37188 .. 37199)
  Inst 37188:   movq    rsp(2064 + virtual offset), %rsi
  Inst 37189:   movq    8(%rsi), %rdi
  Inst 37190:   movq    rsp(2048 + virtual offset), %rsi
  Inst 37191:   load_ext_name u0:2+0, %rax
  Inst 37192:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 37193:   movq    %rdi, rsp(1616 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S205, S207, S209, S211, S213, S215, S217, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37194:   call    *%rax
  Inst 37195:   movq    %rax, %r15
  Inst 37196:   movq    %rdx, %r14
  Inst 37197:   testq   %r14, %r14
  Inst 37198:   jz      label933; j label934
Block 933:
  (successor: Block 936)
  (instruction range: 37199 .. 37317)
  Inst 37199:   movq    %r15, rsp(1616 + virtual offset)
  Inst 37200:   nop     len=0
  Inst 37201:   nop     len=0
  Inst 37202:   nop     len=0
  Inst 37203:   nop     len=0
  Inst 37204:   nop     len=0
  Inst 37205:   nop     len=0
  Inst 37206:   nop     len=0
  Inst 37207:   nop     len=0
  Inst 37208:   nop     len=0
  Inst 37209:   nop     len=0
  Inst 37210:   nop     len=0
  Inst 37211:   nop     len=0
  Inst 37212:   nop     len=0
  Inst 37213:   nop     len=0
  Inst 37214:   nop     len=0
  Inst 37215:   nop     len=0
  Inst 37216:   nop     len=0
  Inst 37217:   nop     len=0
  Inst 37218:   nop     len=0
  Inst 37219:   nop     len=0
  Inst 37220:   nop     len=0
  Inst 37221:   nop     len=0
  Inst 37222:   nop     len=0
  Inst 37223:   nop     len=0
  Inst 37224:   nop     len=0
  Inst 37225:   nop     len=0
  Inst 37226:   nop     len=0
  Inst 37227:   nop     len=0
  Inst 37228:   nop     len=0
  Inst 37229:   nop     len=0
  Inst 37230:   nop     len=0
  Inst 37231:   nop     len=0
  Inst 37232:   nop     len=0
  Inst 37233:   nop     len=0
  Inst 37234:   nop     len=0
  Inst 37235:   nop     len=0
  Inst 37236:   nop     len=0
  Inst 37237:   nop     len=0
  Inst 37238:   nop     len=0
  Inst 37239:   nop     len=0
  Inst 37240:   nop     len=0
  Inst 37241:   nop     len=0
  Inst 37242:   nop     len=0
  Inst 37243:   nop     len=0
  Inst 37244:   nop     len=0
  Inst 37245:   nop     len=0
  Inst 37246:   nop     len=0
  Inst 37247:   nop     len=0
  Inst 37248:   nop     len=0
  Inst 37249:   nop     len=0
  Inst 37250:   nop     len=0
  Inst 37251:   nop     len=0
  Inst 37252:   nop     len=0
  Inst 37253:   nop     len=0
  Inst 37254:   nop     len=0
  Inst 37255:   nop     len=0
  Inst 37256:   nop     len=0
  Inst 37257:   nop     len=0
  Inst 37258:   nop     len=0
  Inst 37259:   nop     len=0
  Inst 37260:   nop     len=0
  Inst 37261:   nop     len=0
  Inst 37262:   nop     len=0
  Inst 37263:   nop     len=0
  Inst 37264:   nop     len=0
  Inst 37265:   nop     len=0
  Inst 37266:   nop     len=0
  Inst 37267:   nop     len=0
  Inst 37268:   nop     len=0
  Inst 37269:   nop     len=0
  Inst 37270:   nop     len=0
  Inst 37271:   nop     len=0
  Inst 37272:   nop     len=0
  Inst 37273:   nop     len=0
  Inst 37274:   nop     len=0
  Inst 37275:   nop     len=0
  Inst 37276:   nop     len=0
  Inst 37277:   nop     len=0
  Inst 37278:   nop     len=0
  Inst 37279:   nop     len=0
  Inst 37280:   nop     len=0
  Inst 37281:   nop     len=0
  Inst 37282:   nop     len=0
  Inst 37283:   nop     len=0
  Inst 37284:   nop     len=0
  Inst 37285:   nop     len=0
  Inst 37286:   nop     len=0
  Inst 37287:   nop     len=0
  Inst 37288:   nop     len=0
  Inst 37289:   nop     len=0
  Inst 37290:   nop     len=0
  Inst 37291:   nop     len=0
  Inst 37292:   nop     len=0
  Inst 37293:   nop     len=0
  Inst 37294:   nop     len=0
  Inst 37295:   nop     len=0
  Inst 37296:   nop     len=0
  Inst 37297:   nop     len=0
  Inst 37298:   nop     len=0
  Inst 37299:   nop     len=0
  Inst 37300:   nop     len=0
  Inst 37301:   nop     len=0
  Inst 37302:   nop     len=0
  Inst 37303:   nop     len=0
  Inst 37304:   nop     len=0
  Inst 37305:   nop     len=0
  Inst 37306:   nop     len=0
  Inst 37307:   nop     len=0
  Inst 37308:   nop     len=0
  Inst 37309:   nop     len=0
  Inst 37310:   nop     len=0
  Inst 37311:   nop     len=0
  Inst 37312:   nop     len=0
  Inst 37313:   nop     len=0
  Inst 37314:   nop     len=0
  Inst 37315:   nop     len=0
  Inst 37316:   jmp     label936
Block 934:
  (original IR block: block469)
  (successor: Block 935)
  (instruction range: 37317 .. 37346)
  Inst 37317:   movq    rsp(2072 + virtual offset), %rsi
  Inst 37318:   movq    152(%rsi), %r13
  Inst 37319:   movq    %r14, %rbx
  Inst 37320:   addq    $-1, %rbx
  Inst 37321:   movq    %r14, %rdx
  Inst 37322:   shlq    $3, %rdx
  Inst 37323:   movq    %r13, %r12
  Inst 37324:   addq    %rdx, %r12
  Inst 37325:   movq    %r13, %rdi
  Inst 37326:   addq    $-24, %rdi
  Inst 37327:   movq    %r13, %rsi
  Inst 37328:   load_ext_name %Memmove+0, %rax
  Inst 37329:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S203, S205, S207, S209, S211, S213, S215, S217, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37330:   call    *%rax
  Inst 37331:   movq    rsp(1496 + virtual offset), %r15
  Inst 37332:   load_ext_name u1:1+0, %rsi
  Inst 37333:   movl    $1, %edi
  Inst 37334:   movq    %rdi, -8(%r13,%r14,8)
  Inst 37335:   movl    $1, %edi
  Inst 37336:   movq    %rdi, -16(%r13,%r14,8)
  Inst 37337:   movq    %rsi, -24(%r13,%r14,8)
  Inst 37338:   movq    rsp(2072 + virtual offset), %rsi
  Inst 37339:   movq    %r12, 152(%rsi)
  Inst 37340:   movq    %r15, %rdi
  Inst 37341:   movq    %rbx, %rsi
  Inst 37342:   load_ext_name u0:3+0, %rax
  Inst 37343:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S203, S205, S207, S209, S211, S213, S215, S217, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37344:   call    *%rax
  Inst 37345:   jmp     label935
Block 935:
  (successor: Block 936)
  (instruction range: 37346 .. 37464)
  Inst 37346:   movq    %rax, rsp(1616 + virtual offset)
  Inst 37347:   nop     len=0
  Inst 37348:   nop     len=0
  Inst 37349:   nop     len=0
  Inst 37350:   nop     len=0
  Inst 37351:   nop     len=0
  Inst 37352:   nop     len=0
  Inst 37353:   nop     len=0
  Inst 37354:   nop     len=0
  Inst 37355:   nop     len=0
  Inst 37356:   nop     len=0
  Inst 37357:   nop     len=0
  Inst 37358:   nop     len=0
  Inst 37359:   nop     len=0
  Inst 37360:   nop     len=0
  Inst 37361:   nop     len=0
  Inst 37362:   nop     len=0
  Inst 37363:   nop     len=0
  Inst 37364:   nop     len=0
  Inst 37365:   nop     len=0
  Inst 37366:   nop     len=0
  Inst 37367:   nop     len=0
  Inst 37368:   nop     len=0
  Inst 37369:   nop     len=0
  Inst 37370:   nop     len=0
  Inst 37371:   nop     len=0
  Inst 37372:   nop     len=0
  Inst 37373:   nop     len=0
  Inst 37374:   nop     len=0
  Inst 37375:   nop     len=0
  Inst 37376:   nop     len=0
  Inst 37377:   nop     len=0
  Inst 37378:   nop     len=0
  Inst 37379:   nop     len=0
  Inst 37380:   nop     len=0
  Inst 37381:   nop     len=0
  Inst 37382:   nop     len=0
  Inst 37383:   nop     len=0
  Inst 37384:   nop     len=0
  Inst 37385:   nop     len=0
  Inst 37386:   nop     len=0
  Inst 37387:   nop     len=0
  Inst 37388:   nop     len=0
  Inst 37389:   nop     len=0
  Inst 37390:   nop     len=0
  Inst 37391:   nop     len=0
  Inst 37392:   nop     len=0
  Inst 37393:   nop     len=0
  Inst 37394:   nop     len=0
  Inst 37395:   nop     len=0
  Inst 37396:   nop     len=0
  Inst 37397:   nop     len=0
  Inst 37398:   nop     len=0
  Inst 37399:   nop     len=0
  Inst 37400:   nop     len=0
  Inst 37401:   nop     len=0
  Inst 37402:   nop     len=0
  Inst 37403:   nop     len=0
  Inst 37404:   nop     len=0
  Inst 37405:   nop     len=0
  Inst 37406:   nop     len=0
  Inst 37407:   nop     len=0
  Inst 37408:   nop     len=0
  Inst 37409:   nop     len=0
  Inst 37410:   nop     len=0
  Inst 37411:   nop     len=0
  Inst 37412:   nop     len=0
  Inst 37413:   nop     len=0
  Inst 37414:   nop     len=0
  Inst 37415:   nop     len=0
  Inst 37416:   nop     len=0
  Inst 37417:   nop     len=0
  Inst 37418:   nop     len=0
  Inst 37419:   nop     len=0
  Inst 37420:   nop     len=0
  Inst 37421:   nop     len=0
  Inst 37422:   nop     len=0
  Inst 37423:   nop     len=0
  Inst 37424:   nop     len=0
  Inst 37425:   nop     len=0
  Inst 37426:   nop     len=0
  Inst 37427:   nop     len=0
  Inst 37428:   nop     len=0
  Inst 37429:   nop     len=0
  Inst 37430:   nop     len=0
  Inst 37431:   nop     len=0
  Inst 37432:   nop     len=0
  Inst 37433:   nop     len=0
  Inst 37434:   nop     len=0
  Inst 37435:   nop     len=0
  Inst 37436:   nop     len=0
  Inst 37437:   nop     len=0
  Inst 37438:   nop     len=0
  Inst 37439:   nop     len=0
  Inst 37440:   nop     len=0
  Inst 37441:   nop     len=0
  Inst 37442:   nop     len=0
  Inst 37443:   nop     len=0
  Inst 37444:   nop     len=0
  Inst 37445:   nop     len=0
  Inst 37446:   nop     len=0
  Inst 37447:   nop     len=0
  Inst 37448:   nop     len=0
  Inst 37449:   nop     len=0
  Inst 37450:   nop     len=0
  Inst 37451:   nop     len=0
  Inst 37452:   nop     len=0
  Inst 37453:   nop     len=0
  Inst 37454:   nop     len=0
  Inst 37455:   nop     len=0
  Inst 37456:   nop     len=0
  Inst 37457:   nop     len=0
  Inst 37458:   nop     len=0
  Inst 37459:   nop     len=0
  Inst 37460:   nop     len=0
  Inst 37461:   nop     len=0
  Inst 37462:   nop     len=0
  Inst 37463:   jmp     label936
Block 936:
  (original IR block: block468)
  (successor: Block 937)
  (successor: Block 938)
  (instruction range: 37464 .. 37475)
  Inst 37464:   movq    rsp(2064 + virtual offset), %rsi
  Inst 37465:   movq    8(%rsi), %rdi
  Inst 37466:   movq    rsp(2048 + virtual offset), %rsi
  Inst 37467:   load_ext_name u0:2+0, %rax
  Inst 37468:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 37469:   movq    %rdi, rsp(1632 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S207, S209, S211, S213, S215, S217, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37470:   call    *%rax
  Inst 37471:   movq    %rax, %rbx
  Inst 37472:   movq    %rdx, %r14
  Inst 37473:   testq   %r14, %r14
  Inst 37474:   jz      label937; j label938
Block 937:
  (successor: Block 940)
  (instruction range: 37475 .. 37594)
  Inst 37475:   movq    %rbx, rsp(1816 + virtual offset)
  Inst 37476:   nop     len=0
  Inst 37477:   nop     len=0
  Inst 37478:   nop     len=0
  Inst 37479:   nop     len=0
  Inst 37480:   nop     len=0
  Inst 37481:   nop     len=0
  Inst 37482:   nop     len=0
  Inst 37483:   nop     len=0
  Inst 37484:   nop     len=0
  Inst 37485:   nop     len=0
  Inst 37486:   nop     len=0
  Inst 37487:   nop     len=0
  Inst 37488:   nop     len=0
  Inst 37489:   nop     len=0
  Inst 37490:   nop     len=0
  Inst 37491:   nop     len=0
  Inst 37492:   nop     len=0
  Inst 37493:   nop     len=0
  Inst 37494:   nop     len=0
  Inst 37495:   nop     len=0
  Inst 37496:   nop     len=0
  Inst 37497:   nop     len=0
  Inst 37498:   nop     len=0
  Inst 37499:   nop     len=0
  Inst 37500:   nop     len=0
  Inst 37501:   nop     len=0
  Inst 37502:   nop     len=0
  Inst 37503:   nop     len=0
  Inst 37504:   nop     len=0
  Inst 37505:   nop     len=0
  Inst 37506:   nop     len=0
  Inst 37507:   nop     len=0
  Inst 37508:   nop     len=0
  Inst 37509:   nop     len=0
  Inst 37510:   nop     len=0
  Inst 37511:   nop     len=0
  Inst 37512:   nop     len=0
  Inst 37513:   nop     len=0
  Inst 37514:   nop     len=0
  Inst 37515:   nop     len=0
  Inst 37516:   nop     len=0
  Inst 37517:   nop     len=0
  Inst 37518:   nop     len=0
  Inst 37519:   nop     len=0
  Inst 37520:   nop     len=0
  Inst 37521:   nop     len=0
  Inst 37522:   nop     len=0
  Inst 37523:   nop     len=0
  Inst 37524:   nop     len=0
  Inst 37525:   nop     len=0
  Inst 37526:   nop     len=0
  Inst 37527:   nop     len=0
  Inst 37528:   nop     len=0
  Inst 37529:   nop     len=0
  Inst 37530:   nop     len=0
  Inst 37531:   nop     len=0
  Inst 37532:   nop     len=0
  Inst 37533:   nop     len=0
  Inst 37534:   nop     len=0
  Inst 37535:   nop     len=0
  Inst 37536:   nop     len=0
  Inst 37537:   nop     len=0
  Inst 37538:   nop     len=0
  Inst 37539:   nop     len=0
  Inst 37540:   nop     len=0
  Inst 37541:   nop     len=0
  Inst 37542:   nop     len=0
  Inst 37543:   nop     len=0
  Inst 37544:   nop     len=0
  Inst 37545:   nop     len=0
  Inst 37546:   nop     len=0
  Inst 37547:   nop     len=0
  Inst 37548:   nop     len=0
  Inst 37549:   nop     len=0
  Inst 37550:   nop     len=0
  Inst 37551:   nop     len=0
  Inst 37552:   nop     len=0
  Inst 37553:   nop     len=0
  Inst 37554:   nop     len=0
  Inst 37555:   nop     len=0
  Inst 37556:   nop     len=0
  Inst 37557:   nop     len=0
  Inst 37558:   nop     len=0
  Inst 37559:   nop     len=0
  Inst 37560:   nop     len=0
  Inst 37561:   nop     len=0
  Inst 37562:   nop     len=0
  Inst 37563:   nop     len=0
  Inst 37564:   nop     len=0
  Inst 37565:   nop     len=0
  Inst 37566:   nop     len=0
  Inst 37567:   nop     len=0
  Inst 37568:   nop     len=0
  Inst 37569:   nop     len=0
  Inst 37570:   nop     len=0
  Inst 37571:   nop     len=0
  Inst 37572:   nop     len=0
  Inst 37573:   nop     len=0
  Inst 37574:   nop     len=0
  Inst 37575:   nop     len=0
  Inst 37576:   nop     len=0
  Inst 37577:   nop     len=0
  Inst 37578:   nop     len=0
  Inst 37579:   nop     len=0
  Inst 37580:   nop     len=0
  Inst 37581:   nop     len=0
  Inst 37582:   nop     len=0
  Inst 37583:   nop     len=0
  Inst 37584:   nop     len=0
  Inst 37585:   nop     len=0
  Inst 37586:   nop     len=0
  Inst 37587:   nop     len=0
  Inst 37588:   nop     len=0
  Inst 37589:   nop     len=0
  Inst 37590:   nop     len=0
  Inst 37591:   nop     len=0
  Inst 37592:   nop     len=0
  Inst 37593:   jmp     label940
Block 938:
  (original IR block: block471)
  (successor: Block 939)
  (instruction range: 37594 .. 37623)
  Inst 37594:   movq    rsp(2072 + virtual offset), %rsi
  Inst 37595:   movq    152(%rsi), %r13
  Inst 37596:   movq    %r14, %r15
  Inst 37597:   addq    $-1, %r15
  Inst 37598:   movq    %r14, %rdx
  Inst 37599:   shlq    $3, %rdx
  Inst 37600:   movq    %r13, %r12
  Inst 37601:   addq    %rdx, %r12
  Inst 37602:   movq    %r13, %rdi
  Inst 37603:   addq    $-24, %rdi
  Inst 37604:   movq    %r13, %rsi
  Inst 37605:   load_ext_name %Memmove+0, %rax
  Inst 37606:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S205, S207, S209, S211, S213, S215, S217, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37607:   call    *%rax
  Inst 37608:   movq    rsp(1496 + virtual offset), %rbx
  Inst 37609:   load_ext_name u1:1+0, %rsi
  Inst 37610:   movl    $1, %edi
  Inst 37611:   movq    %rdi, -8(%r13,%r14,8)
  Inst 37612:   movl    $1, %edi
  Inst 37613:   movq    %rdi, -16(%r13,%r14,8)
  Inst 37614:   movq    %rsi, -24(%r13,%r14,8)
  Inst 37615:   movq    rsp(2072 + virtual offset), %rsi
  Inst 37616:   movq    %r12, 152(%rsi)
  Inst 37617:   movq    %rbx, %rdi
  Inst 37618:   movq    %r15, %rsi
  Inst 37619:   load_ext_name u0:3+0, %rax
  Inst 37620:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S205, S207, S209, S211, S213, S215, S217, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37621:   call    *%rax
  Inst 37622:   jmp     label939
Block 939:
  (successor: Block 940)
  (instruction range: 37623 .. 37742)
  Inst 37623:   movq    %rax, rsp(1816 + virtual offset)
  Inst 37624:   nop     len=0
  Inst 37625:   nop     len=0
  Inst 37626:   nop     len=0
  Inst 37627:   nop     len=0
  Inst 37628:   nop     len=0
  Inst 37629:   nop     len=0
  Inst 37630:   nop     len=0
  Inst 37631:   nop     len=0
  Inst 37632:   nop     len=0
  Inst 37633:   nop     len=0
  Inst 37634:   nop     len=0
  Inst 37635:   nop     len=0
  Inst 37636:   nop     len=0
  Inst 37637:   nop     len=0
  Inst 37638:   nop     len=0
  Inst 37639:   nop     len=0
  Inst 37640:   nop     len=0
  Inst 37641:   nop     len=0
  Inst 37642:   nop     len=0
  Inst 37643:   nop     len=0
  Inst 37644:   nop     len=0
  Inst 37645:   nop     len=0
  Inst 37646:   nop     len=0
  Inst 37647:   nop     len=0
  Inst 37648:   nop     len=0
  Inst 37649:   nop     len=0
  Inst 37650:   nop     len=0
  Inst 37651:   nop     len=0
  Inst 37652:   nop     len=0
  Inst 37653:   nop     len=0
  Inst 37654:   nop     len=0
  Inst 37655:   nop     len=0
  Inst 37656:   nop     len=0
  Inst 37657:   nop     len=0
  Inst 37658:   nop     len=0
  Inst 37659:   nop     len=0
  Inst 37660:   nop     len=0
  Inst 37661:   nop     len=0
  Inst 37662:   nop     len=0
  Inst 37663:   nop     len=0
  Inst 37664:   nop     len=0
  Inst 37665:   nop     len=0
  Inst 37666:   nop     len=0
  Inst 37667:   nop     len=0
  Inst 37668:   nop     len=0
  Inst 37669:   nop     len=0
  Inst 37670:   nop     len=0
  Inst 37671:   nop     len=0
  Inst 37672:   nop     len=0
  Inst 37673:   nop     len=0
  Inst 37674:   nop     len=0
  Inst 37675:   nop     len=0
  Inst 37676:   nop     len=0
  Inst 37677:   nop     len=0
  Inst 37678:   nop     len=0
  Inst 37679:   nop     len=0
  Inst 37680:   nop     len=0
  Inst 37681:   nop     len=0
  Inst 37682:   nop     len=0
  Inst 37683:   nop     len=0
  Inst 37684:   nop     len=0
  Inst 37685:   nop     len=0
  Inst 37686:   nop     len=0
  Inst 37687:   nop     len=0
  Inst 37688:   nop     len=0
  Inst 37689:   nop     len=0
  Inst 37690:   nop     len=0
  Inst 37691:   nop     len=0
  Inst 37692:   nop     len=0
  Inst 37693:   nop     len=0
  Inst 37694:   nop     len=0
  Inst 37695:   nop     len=0
  Inst 37696:   nop     len=0
  Inst 37697:   nop     len=0
  Inst 37698:   nop     len=0
  Inst 37699:   nop     len=0
  Inst 37700:   nop     len=0
  Inst 37701:   nop     len=0
  Inst 37702:   nop     len=0
  Inst 37703:   nop     len=0
  Inst 37704:   nop     len=0
  Inst 37705:   nop     len=0
  Inst 37706:   nop     len=0
  Inst 37707:   nop     len=0
  Inst 37708:   nop     len=0
  Inst 37709:   nop     len=0
  Inst 37710:   nop     len=0
  Inst 37711:   nop     len=0
  Inst 37712:   nop     len=0
  Inst 37713:   nop     len=0
  Inst 37714:   nop     len=0
  Inst 37715:   nop     len=0
  Inst 37716:   nop     len=0
  Inst 37717:   nop     len=0
  Inst 37718:   nop     len=0
  Inst 37719:   nop     len=0
  Inst 37720:   nop     len=0
  Inst 37721:   nop     len=0
  Inst 37722:   nop     len=0
  Inst 37723:   nop     len=0
  Inst 37724:   nop     len=0
  Inst 37725:   nop     len=0
  Inst 37726:   nop     len=0
  Inst 37727:   nop     len=0
  Inst 37728:   nop     len=0
  Inst 37729:   nop     len=0
  Inst 37730:   nop     len=0
  Inst 37731:   nop     len=0
  Inst 37732:   nop     len=0
  Inst 37733:   nop     len=0
  Inst 37734:   nop     len=0
  Inst 37735:   nop     len=0
  Inst 37736:   nop     len=0
  Inst 37737:   nop     len=0
  Inst 37738:   nop     len=0
  Inst 37739:   nop     len=0
  Inst 37740:   nop     len=0
  Inst 37741:   jmp     label940
Block 940:
  (original IR block: block470)
  (successor: Block 941)
  (successor: Block 942)
  (instruction range: 37742 .. 37753)
  Inst 37742:   movq    rsp(2064 + virtual offset), %rsi
  Inst 37743:   movq    8(%rsi), %rdi
  Inst 37744:   movq    rsp(2048 + virtual offset), %rsi
  Inst 37745:   load_ext_name u0:2+0, %rax
  Inst 37746:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 37747:   movq    %rdi, rsp(1632 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S207, S209, S211, S213, S215, S217, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37748:   call    *%rax
  Inst 37749:   movq    %rax, %rbx
  Inst 37750:   movq    %rdx, %r14
  Inst 37751:   testq   %r14, %r14
  Inst 37752:   jz      label941; j label942
Block 941:
  (successor: Block 944)
  (instruction range: 37753 .. 37872)
  Inst 37753:   movq    %rbx, rsp(1632 + virtual offset)
  Inst 37754:   nop     len=0
  Inst 37755:   nop     len=0
  Inst 37756:   nop     len=0
  Inst 37757:   nop     len=0
  Inst 37758:   nop     len=0
  Inst 37759:   nop     len=0
  Inst 37760:   nop     len=0
  Inst 37761:   nop     len=0
  Inst 37762:   nop     len=0
  Inst 37763:   nop     len=0
  Inst 37764:   nop     len=0
  Inst 37765:   nop     len=0
  Inst 37766:   nop     len=0
  Inst 37767:   nop     len=0
  Inst 37768:   nop     len=0
  Inst 37769:   nop     len=0
  Inst 37770:   nop     len=0
  Inst 37771:   nop     len=0
  Inst 37772:   nop     len=0
  Inst 37773:   nop     len=0
  Inst 37774:   nop     len=0
  Inst 37775:   nop     len=0
  Inst 37776:   nop     len=0
  Inst 37777:   nop     len=0
  Inst 37778:   nop     len=0
  Inst 37779:   nop     len=0
  Inst 37780:   nop     len=0
  Inst 37781:   nop     len=0
  Inst 37782:   nop     len=0
  Inst 37783:   nop     len=0
  Inst 37784:   nop     len=0
  Inst 37785:   nop     len=0
  Inst 37786:   nop     len=0
  Inst 37787:   nop     len=0
  Inst 37788:   nop     len=0
  Inst 37789:   nop     len=0
  Inst 37790:   nop     len=0
  Inst 37791:   nop     len=0
  Inst 37792:   nop     len=0
  Inst 37793:   nop     len=0
  Inst 37794:   nop     len=0
  Inst 37795:   nop     len=0
  Inst 37796:   nop     len=0
  Inst 37797:   nop     len=0
  Inst 37798:   nop     len=0
  Inst 37799:   nop     len=0
  Inst 37800:   nop     len=0
  Inst 37801:   nop     len=0
  Inst 37802:   nop     len=0
  Inst 37803:   nop     len=0
  Inst 37804:   nop     len=0
  Inst 37805:   nop     len=0
  Inst 37806:   nop     len=0
  Inst 37807:   nop     len=0
  Inst 37808:   nop     len=0
  Inst 37809:   nop     len=0
  Inst 37810:   nop     len=0
  Inst 37811:   nop     len=0
  Inst 37812:   nop     len=0
  Inst 37813:   nop     len=0
  Inst 37814:   nop     len=0
  Inst 37815:   nop     len=0
  Inst 37816:   nop     len=0
  Inst 37817:   nop     len=0
  Inst 37818:   nop     len=0
  Inst 37819:   nop     len=0
  Inst 37820:   nop     len=0
  Inst 37821:   nop     len=0
  Inst 37822:   nop     len=0
  Inst 37823:   nop     len=0
  Inst 37824:   nop     len=0
  Inst 37825:   nop     len=0
  Inst 37826:   nop     len=0
  Inst 37827:   nop     len=0
  Inst 37828:   nop     len=0
  Inst 37829:   nop     len=0
  Inst 37830:   nop     len=0
  Inst 37831:   nop     len=0
  Inst 37832:   nop     len=0
  Inst 37833:   nop     len=0
  Inst 37834:   nop     len=0
  Inst 37835:   nop     len=0
  Inst 37836:   nop     len=0
  Inst 37837:   nop     len=0
  Inst 37838:   nop     len=0
  Inst 37839:   nop     len=0
  Inst 37840:   nop     len=0
  Inst 37841:   nop     len=0
  Inst 37842:   nop     len=0
  Inst 37843:   nop     len=0
  Inst 37844:   nop     len=0
  Inst 37845:   nop     len=0
  Inst 37846:   nop     len=0
  Inst 37847:   nop     len=0
  Inst 37848:   nop     len=0
  Inst 37849:   nop     len=0
  Inst 37850:   nop     len=0
  Inst 37851:   nop     len=0
  Inst 37852:   nop     len=0
  Inst 37853:   nop     len=0
  Inst 37854:   nop     len=0
  Inst 37855:   nop     len=0
  Inst 37856:   nop     len=0
  Inst 37857:   nop     len=0
  Inst 37858:   nop     len=0
  Inst 37859:   nop     len=0
  Inst 37860:   nop     len=0
  Inst 37861:   nop     len=0
  Inst 37862:   nop     len=0
  Inst 37863:   nop     len=0
  Inst 37864:   nop     len=0
  Inst 37865:   nop     len=0
  Inst 37866:   nop     len=0
  Inst 37867:   nop     len=0
  Inst 37868:   nop     len=0
  Inst 37869:   nop     len=0
  Inst 37870:   nop     len=0
  Inst 37871:   jmp     label944
Block 942:
  (original IR block: block473)
  (successor: Block 943)
  (instruction range: 37872 .. 37901)
  Inst 37872:   movq    rsp(2072 + virtual offset), %rsi
  Inst 37873:   movq    152(%rsi), %r13
  Inst 37874:   movq    %r14, %r15
  Inst 37875:   addq    $-1, %r15
  Inst 37876:   movq    %r14, %rdx
  Inst 37877:   shlq    $3, %rdx
  Inst 37878:   movq    %r13, %r12
  Inst 37879:   addq    %rdx, %r12
  Inst 37880:   movq    %r13, %rdi
  Inst 37881:   addq    $-24, %rdi
  Inst 37882:   movq    %r13, %rsi
  Inst 37883:   load_ext_name %Memmove+0, %rax
  Inst 37884:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S205, S207, S209, S211, S213, S215, S217, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37885:   call    *%rax
  Inst 37886:   movq    rsp(1496 + virtual offset), %rbx
  Inst 37887:   load_ext_name u1:1+0, %rsi
  Inst 37888:   movl    $1, %edi
  Inst 37889:   movq    %rdi, -8(%r13,%r14,8)
  Inst 37890:   movl    $1, %edi
  Inst 37891:   movq    %rdi, -16(%r13,%r14,8)
  Inst 37892:   movq    %rsi, -24(%r13,%r14,8)
  Inst 37893:   movq    rsp(2072 + virtual offset), %rsi
  Inst 37894:   movq    %r12, 152(%rsi)
  Inst 37895:   movq    %rbx, %rdi
  Inst 37896:   movq    %r15, %rsi
  Inst 37897:   load_ext_name u0:3+0, %rax
  Inst 37898:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S205, S207, S209, S211, S213, S215, S217, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 37899:   call    *%rax
  Inst 37900:   jmp     label943
Block 943:
  (successor: Block 944)
  (instruction range: 37901 .. 38020)
  Inst 37901:   movq    %rax, rsp(1632 + virtual offset)
  Inst 37902:   nop     len=0
  Inst 37903:   nop     len=0
  Inst 37904:   nop     len=0
  Inst 37905:   nop     len=0
  Inst 37906:   nop     len=0
  Inst 37907:   nop     len=0
  Inst 37908:   nop     len=0
  Inst 37909:   nop     len=0
  Inst 37910:   nop     len=0
  Inst 37911:   nop     len=0
  Inst 37912:   nop     len=0
  Inst 37913:   nop     len=0
  Inst 37914:   nop     len=0
  Inst 37915:   nop     len=0
  Inst 37916:   nop     len=0
  Inst 37917:   nop     len=0
  Inst 37918:   nop     len=0
  Inst 37919:   nop     len=0
  Inst 37920:   nop     len=0
  Inst 37921:   nop     len=0
  Inst 37922:   nop     len=0
  Inst 37923:   nop     len=0
  Inst 37924:   nop     len=0
  Inst 37925:   nop     len=0
  Inst 37926:   nop     len=0
  Inst 37927:   nop     len=0
  Inst 37928:   nop     len=0
  Inst 37929:   nop     len=0
  Inst 37930:   nop     len=0
  Inst 37931:   nop     len=0
  Inst 37932:   nop     len=0
  Inst 37933:   nop     len=0
  Inst 37934:   nop     len=0
  Inst 37935:   nop     len=0
  Inst 37936:   nop     len=0
  Inst 37937:   nop     len=0
  Inst 37938:   nop     len=0
  Inst 37939:   nop     len=0
  Inst 37940:   nop     len=0
  Inst 37941:   nop     len=0
  Inst 37942:   nop     len=0
  Inst 37943:   nop     len=0
  Inst 37944:   nop     len=0
  Inst 37945:   nop     len=0
  Inst 37946:   nop     len=0
  Inst 37947:   nop     len=0
  Inst 37948:   nop     len=0
  Inst 37949:   nop     len=0
  Inst 37950:   nop     len=0
  Inst 37951:   nop     len=0
  Inst 37952:   nop     len=0
  Inst 37953:   nop     len=0
  Inst 37954:   nop     len=0
  Inst 37955:   nop     len=0
  Inst 37956:   nop     len=0
  Inst 37957:   nop     len=0
  Inst 37958:   nop     len=0
  Inst 37959:   nop     len=0
  Inst 37960:   nop     len=0
  Inst 37961:   nop     len=0
  Inst 37962:   nop     len=0
  Inst 37963:   nop     len=0
  Inst 37964:   nop     len=0
  Inst 37965:   nop     len=0
  Inst 37966:   nop     len=0
  Inst 37967:   nop     len=0
  Inst 37968:   nop     len=0
  Inst 37969:   nop     len=0
  Inst 37970:   nop     len=0
  Inst 37971:   nop     len=0
  Inst 37972:   nop     len=0
  Inst 37973:   nop     len=0
  Inst 37974:   nop     len=0
  Inst 37975:   nop     len=0
  Inst 37976:   nop     len=0
  Inst 37977:   nop     len=0
  Inst 37978:   nop     len=0
  Inst 37979:   nop     len=0
  Inst 37980:   nop     len=0
  Inst 37981:   nop     len=0
  Inst 37982:   nop     len=0
  Inst 37983:   nop     len=0
  Inst 37984:   nop     len=0
  Inst 37985:   nop     len=0
  Inst 37986:   nop     len=0
  Inst 37987:   nop     len=0
  Inst 37988:   nop     len=0
  Inst 37989:   nop     len=0
  Inst 37990:   nop     len=0
  Inst 37991:   nop     len=0
  Inst 37992:   nop     len=0
  Inst 37993:   nop     len=0
  Inst 37994:   nop     len=0
  Inst 37995:   nop     len=0
  Inst 37996:   nop     len=0
  Inst 37997:   nop     len=0
  Inst 37998:   nop     len=0
  Inst 37999:   nop     len=0
  Inst 38000:   nop     len=0
  Inst 38001:   nop     len=0
  Inst 38002:   nop     len=0
  Inst 38003:   nop     len=0
  Inst 38004:   nop     len=0
  Inst 38005:   nop     len=0
  Inst 38006:   nop     len=0
  Inst 38007:   nop     len=0
  Inst 38008:   nop     len=0
  Inst 38009:   nop     len=0
  Inst 38010:   nop     len=0
  Inst 38011:   nop     len=0
  Inst 38012:   nop     len=0
  Inst 38013:   nop     len=0
  Inst 38014:   nop     len=0
  Inst 38015:   nop     len=0
  Inst 38016:   nop     len=0
  Inst 38017:   nop     len=0
  Inst 38018:   nop     len=0
  Inst 38019:   jmp     label944
Block 944:
  (original IR block: block472)
  (successor: Block 945)
  (successor: Block 946)
  (instruction range: 38020 .. 38031)
  Inst 38020:   movq    rsp(2064 + virtual offset), %rsi
  Inst 38021:   movq    8(%rsi), %rdi
  Inst 38022:   movq    rsp(2048 + virtual offset), %rsi
  Inst 38023:   load_ext_name u0:2+0, %rax
  Inst 38024:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 38025:   movq    %rdi, rsp(1648 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S209, S211, S213, S215, S217, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38026:   call    *%rax
  Inst 38027:   movq    %rax, %r15
  Inst 38028:   movq    %rdx, %r14
  Inst 38029:   testq   %r14, %r14
  Inst 38030:   jz      label945; j label946
Block 945:
  (successor: Block 948)
  (instruction range: 38031 .. 38151)
  Inst 38031:   movq    %r15, rsp(1808 + virtual offset)
  Inst 38032:   nop     len=0
  Inst 38033:   nop     len=0
  Inst 38034:   nop     len=0
  Inst 38035:   nop     len=0
  Inst 38036:   nop     len=0
  Inst 38037:   nop     len=0
  Inst 38038:   nop     len=0
  Inst 38039:   nop     len=0
  Inst 38040:   nop     len=0
  Inst 38041:   nop     len=0
  Inst 38042:   nop     len=0
  Inst 38043:   nop     len=0
  Inst 38044:   nop     len=0
  Inst 38045:   nop     len=0
  Inst 38046:   nop     len=0
  Inst 38047:   nop     len=0
  Inst 38048:   nop     len=0
  Inst 38049:   nop     len=0
  Inst 38050:   nop     len=0
  Inst 38051:   nop     len=0
  Inst 38052:   nop     len=0
  Inst 38053:   nop     len=0
  Inst 38054:   nop     len=0
  Inst 38055:   nop     len=0
  Inst 38056:   nop     len=0
  Inst 38057:   nop     len=0
  Inst 38058:   nop     len=0
  Inst 38059:   nop     len=0
  Inst 38060:   nop     len=0
  Inst 38061:   nop     len=0
  Inst 38062:   nop     len=0
  Inst 38063:   nop     len=0
  Inst 38064:   nop     len=0
  Inst 38065:   nop     len=0
  Inst 38066:   nop     len=0
  Inst 38067:   nop     len=0
  Inst 38068:   nop     len=0
  Inst 38069:   nop     len=0
  Inst 38070:   nop     len=0
  Inst 38071:   nop     len=0
  Inst 38072:   nop     len=0
  Inst 38073:   nop     len=0
  Inst 38074:   nop     len=0
  Inst 38075:   nop     len=0
  Inst 38076:   nop     len=0
  Inst 38077:   nop     len=0
  Inst 38078:   nop     len=0
  Inst 38079:   nop     len=0
  Inst 38080:   nop     len=0
  Inst 38081:   nop     len=0
  Inst 38082:   nop     len=0
  Inst 38083:   nop     len=0
  Inst 38084:   nop     len=0
  Inst 38085:   nop     len=0
  Inst 38086:   nop     len=0
  Inst 38087:   nop     len=0
  Inst 38088:   nop     len=0
  Inst 38089:   nop     len=0
  Inst 38090:   nop     len=0
  Inst 38091:   nop     len=0
  Inst 38092:   nop     len=0
  Inst 38093:   nop     len=0
  Inst 38094:   nop     len=0
  Inst 38095:   nop     len=0
  Inst 38096:   nop     len=0
  Inst 38097:   nop     len=0
  Inst 38098:   nop     len=0
  Inst 38099:   nop     len=0
  Inst 38100:   nop     len=0
  Inst 38101:   nop     len=0
  Inst 38102:   nop     len=0
  Inst 38103:   nop     len=0
  Inst 38104:   nop     len=0
  Inst 38105:   nop     len=0
  Inst 38106:   nop     len=0
  Inst 38107:   nop     len=0
  Inst 38108:   nop     len=0
  Inst 38109:   nop     len=0
  Inst 38110:   nop     len=0
  Inst 38111:   nop     len=0
  Inst 38112:   nop     len=0
  Inst 38113:   nop     len=0
  Inst 38114:   nop     len=0
  Inst 38115:   nop     len=0
  Inst 38116:   nop     len=0
  Inst 38117:   nop     len=0
  Inst 38118:   nop     len=0
  Inst 38119:   nop     len=0
  Inst 38120:   nop     len=0
  Inst 38121:   nop     len=0
  Inst 38122:   nop     len=0
  Inst 38123:   nop     len=0
  Inst 38124:   nop     len=0
  Inst 38125:   nop     len=0
  Inst 38126:   nop     len=0
  Inst 38127:   nop     len=0
  Inst 38128:   nop     len=0
  Inst 38129:   nop     len=0
  Inst 38130:   nop     len=0
  Inst 38131:   nop     len=0
  Inst 38132:   nop     len=0
  Inst 38133:   nop     len=0
  Inst 38134:   nop     len=0
  Inst 38135:   nop     len=0
  Inst 38136:   nop     len=0
  Inst 38137:   nop     len=0
  Inst 38138:   nop     len=0
  Inst 38139:   nop     len=0
  Inst 38140:   nop     len=0
  Inst 38141:   nop     len=0
  Inst 38142:   nop     len=0
  Inst 38143:   nop     len=0
  Inst 38144:   nop     len=0
  Inst 38145:   nop     len=0
  Inst 38146:   nop     len=0
  Inst 38147:   nop     len=0
  Inst 38148:   nop     len=0
  Inst 38149:   nop     len=0
  Inst 38150:   jmp     label948
Block 946:
  (original IR block: block475)
  (successor: Block 947)
  (instruction range: 38151 .. 38180)
  Inst 38151:   movq    rsp(2072 + virtual offset), %rsi
  Inst 38152:   movq    152(%rsi), %r13
  Inst 38153:   movq    %r14, %rbx
  Inst 38154:   addq    $-1, %rbx
  Inst 38155:   movq    %r14, %rdx
  Inst 38156:   shlq    $3, %rdx
  Inst 38157:   movq    %r13, %r12
  Inst 38158:   addq    %rdx, %r12
  Inst 38159:   movq    %r13, %rdi
  Inst 38160:   addq    $-24, %rdi
  Inst 38161:   movq    %r13, %rsi
  Inst 38162:   load_ext_name %Memmove+0, %rax
  Inst 38163:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S207, S209, S211, S213, S215, S217, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38164:   call    *%rax
  Inst 38165:   movq    rsp(1496 + virtual offset), %r15
  Inst 38166:   load_ext_name u1:1+0, %rsi
  Inst 38167:   movl    $1, %edi
  Inst 38168:   movq    %rdi, -8(%r13,%r14,8)
  Inst 38169:   movl    $1, %edi
  Inst 38170:   movq    %rdi, -16(%r13,%r14,8)
  Inst 38171:   movq    %rsi, -24(%r13,%r14,8)
  Inst 38172:   movq    rsp(2072 + virtual offset), %rsi
  Inst 38173:   movq    %r12, 152(%rsi)
  Inst 38174:   movq    %r15, %rdi
  Inst 38175:   movq    %rbx, %rsi
  Inst 38176:   load_ext_name u0:3+0, %rax
  Inst 38177:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S207, S209, S211, S213, S215, S217, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38178:   call    *%rax
  Inst 38179:   jmp     label947
Block 947:
  (successor: Block 948)
  (instruction range: 38180 .. 38300)
  Inst 38180:   movq    %rax, rsp(1808 + virtual offset)
  Inst 38181:   nop     len=0
  Inst 38182:   nop     len=0
  Inst 38183:   nop     len=0
  Inst 38184:   nop     len=0
  Inst 38185:   nop     len=0
  Inst 38186:   nop     len=0
  Inst 38187:   nop     len=0
  Inst 38188:   nop     len=0
  Inst 38189:   nop     len=0
  Inst 38190:   nop     len=0
  Inst 38191:   nop     len=0
  Inst 38192:   nop     len=0
  Inst 38193:   nop     len=0
  Inst 38194:   nop     len=0
  Inst 38195:   nop     len=0
  Inst 38196:   nop     len=0
  Inst 38197:   nop     len=0
  Inst 38198:   nop     len=0
  Inst 38199:   nop     len=0
  Inst 38200:   nop     len=0
  Inst 38201:   nop     len=0
  Inst 38202:   nop     len=0
  Inst 38203:   nop     len=0
  Inst 38204:   nop     len=0
  Inst 38205:   nop     len=0
  Inst 38206:   nop     len=0
  Inst 38207:   nop     len=0
  Inst 38208:   nop     len=0
  Inst 38209:   nop     len=0
  Inst 38210:   nop     len=0
  Inst 38211:   nop     len=0
  Inst 38212:   nop     len=0
  Inst 38213:   nop     len=0
  Inst 38214:   nop     len=0
  Inst 38215:   nop     len=0
  Inst 38216:   nop     len=0
  Inst 38217:   nop     len=0
  Inst 38218:   nop     len=0
  Inst 38219:   nop     len=0
  Inst 38220:   nop     len=0
  Inst 38221:   nop     len=0
  Inst 38222:   nop     len=0
  Inst 38223:   nop     len=0
  Inst 38224:   nop     len=0
  Inst 38225:   nop     len=0
  Inst 38226:   nop     len=0
  Inst 38227:   nop     len=0
  Inst 38228:   nop     len=0
  Inst 38229:   nop     len=0
  Inst 38230:   nop     len=0
  Inst 38231:   nop     len=0
  Inst 38232:   nop     len=0
  Inst 38233:   nop     len=0
  Inst 38234:   nop     len=0
  Inst 38235:   nop     len=0
  Inst 38236:   nop     len=0
  Inst 38237:   nop     len=0
  Inst 38238:   nop     len=0
  Inst 38239:   nop     len=0
  Inst 38240:   nop     len=0
  Inst 38241:   nop     len=0
  Inst 38242:   nop     len=0
  Inst 38243:   nop     len=0
  Inst 38244:   nop     len=0
  Inst 38245:   nop     len=0
  Inst 38246:   nop     len=0
  Inst 38247:   nop     len=0
  Inst 38248:   nop     len=0
  Inst 38249:   nop     len=0
  Inst 38250:   nop     len=0
  Inst 38251:   nop     len=0
  Inst 38252:   nop     len=0
  Inst 38253:   nop     len=0
  Inst 38254:   nop     len=0
  Inst 38255:   nop     len=0
  Inst 38256:   nop     len=0
  Inst 38257:   nop     len=0
  Inst 38258:   nop     len=0
  Inst 38259:   nop     len=0
  Inst 38260:   nop     len=0
  Inst 38261:   nop     len=0
  Inst 38262:   nop     len=0
  Inst 38263:   nop     len=0
  Inst 38264:   nop     len=0
  Inst 38265:   nop     len=0
  Inst 38266:   nop     len=0
  Inst 38267:   nop     len=0
  Inst 38268:   nop     len=0
  Inst 38269:   nop     len=0
  Inst 38270:   nop     len=0
  Inst 38271:   nop     len=0
  Inst 38272:   nop     len=0
  Inst 38273:   nop     len=0
  Inst 38274:   nop     len=0
  Inst 38275:   nop     len=0
  Inst 38276:   nop     len=0
  Inst 38277:   nop     len=0
  Inst 38278:   nop     len=0
  Inst 38279:   nop     len=0
  Inst 38280:   nop     len=0
  Inst 38281:   nop     len=0
  Inst 38282:   nop     len=0
  Inst 38283:   nop     len=0
  Inst 38284:   nop     len=0
  Inst 38285:   nop     len=0
  Inst 38286:   nop     len=0
  Inst 38287:   nop     len=0
  Inst 38288:   nop     len=0
  Inst 38289:   nop     len=0
  Inst 38290:   nop     len=0
  Inst 38291:   nop     len=0
  Inst 38292:   nop     len=0
  Inst 38293:   nop     len=0
  Inst 38294:   nop     len=0
  Inst 38295:   nop     len=0
  Inst 38296:   nop     len=0
  Inst 38297:   nop     len=0
  Inst 38298:   nop     len=0
  Inst 38299:   jmp     label948
Block 948:
  (original IR block: block474)
  (successor: Block 949)
  (successor: Block 950)
  (instruction range: 38300 .. 38311)
  Inst 38300:   movq    rsp(2064 + virtual offset), %rsi
  Inst 38301:   movq    8(%rsi), %rdi
  Inst 38302:   movq    rsp(2048 + virtual offset), %rsi
  Inst 38303:   load_ext_name u0:2+0, %rax
  Inst 38304:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 38305:   movq    %rdi, rsp(1648 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S209, S211, S213, S215, S217, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38306:   call    *%rax
  Inst 38307:   movq    %rax, %rbx
  Inst 38308:   movq    %rdx, %r14
  Inst 38309:   testq   %r14, %r14
  Inst 38310:   jz      label949; j label950
Block 949:
  (successor: Block 952)
  (instruction range: 38311 .. 38431)
  Inst 38311:   movq    %rbx, rsp(1648 + virtual offset)
  Inst 38312:   nop     len=0
  Inst 38313:   nop     len=0
  Inst 38314:   nop     len=0
  Inst 38315:   nop     len=0
  Inst 38316:   nop     len=0
  Inst 38317:   nop     len=0
  Inst 38318:   nop     len=0
  Inst 38319:   nop     len=0
  Inst 38320:   nop     len=0
  Inst 38321:   nop     len=0
  Inst 38322:   nop     len=0
  Inst 38323:   nop     len=0
  Inst 38324:   nop     len=0
  Inst 38325:   nop     len=0
  Inst 38326:   nop     len=0
  Inst 38327:   nop     len=0
  Inst 38328:   nop     len=0
  Inst 38329:   nop     len=0
  Inst 38330:   nop     len=0
  Inst 38331:   nop     len=0
  Inst 38332:   nop     len=0
  Inst 38333:   nop     len=0
  Inst 38334:   nop     len=0
  Inst 38335:   nop     len=0
  Inst 38336:   nop     len=0
  Inst 38337:   nop     len=0
  Inst 38338:   nop     len=0
  Inst 38339:   nop     len=0
  Inst 38340:   nop     len=0
  Inst 38341:   nop     len=0
  Inst 38342:   nop     len=0
  Inst 38343:   nop     len=0
  Inst 38344:   nop     len=0
  Inst 38345:   nop     len=0
  Inst 38346:   nop     len=0
  Inst 38347:   nop     len=0
  Inst 38348:   nop     len=0
  Inst 38349:   nop     len=0
  Inst 38350:   nop     len=0
  Inst 38351:   nop     len=0
  Inst 38352:   nop     len=0
  Inst 38353:   nop     len=0
  Inst 38354:   nop     len=0
  Inst 38355:   nop     len=0
  Inst 38356:   nop     len=0
  Inst 38357:   nop     len=0
  Inst 38358:   nop     len=0
  Inst 38359:   nop     len=0
  Inst 38360:   nop     len=0
  Inst 38361:   nop     len=0
  Inst 38362:   nop     len=0
  Inst 38363:   nop     len=0
  Inst 38364:   nop     len=0
  Inst 38365:   nop     len=0
  Inst 38366:   nop     len=0
  Inst 38367:   nop     len=0
  Inst 38368:   nop     len=0
  Inst 38369:   nop     len=0
  Inst 38370:   nop     len=0
  Inst 38371:   nop     len=0
  Inst 38372:   nop     len=0
  Inst 38373:   nop     len=0
  Inst 38374:   nop     len=0
  Inst 38375:   nop     len=0
  Inst 38376:   nop     len=0
  Inst 38377:   nop     len=0
  Inst 38378:   nop     len=0
  Inst 38379:   nop     len=0
  Inst 38380:   nop     len=0
  Inst 38381:   nop     len=0
  Inst 38382:   nop     len=0
  Inst 38383:   nop     len=0
  Inst 38384:   nop     len=0
  Inst 38385:   nop     len=0
  Inst 38386:   nop     len=0
  Inst 38387:   nop     len=0
  Inst 38388:   nop     len=0
  Inst 38389:   nop     len=0
  Inst 38390:   nop     len=0
  Inst 38391:   nop     len=0
  Inst 38392:   nop     len=0
  Inst 38393:   nop     len=0
  Inst 38394:   nop     len=0
  Inst 38395:   nop     len=0
  Inst 38396:   nop     len=0
  Inst 38397:   nop     len=0
  Inst 38398:   nop     len=0
  Inst 38399:   nop     len=0
  Inst 38400:   nop     len=0
  Inst 38401:   nop     len=0
  Inst 38402:   nop     len=0
  Inst 38403:   nop     len=0
  Inst 38404:   nop     len=0
  Inst 38405:   nop     len=0
  Inst 38406:   nop     len=0
  Inst 38407:   nop     len=0
  Inst 38408:   nop     len=0
  Inst 38409:   nop     len=0
  Inst 38410:   nop     len=0
  Inst 38411:   nop     len=0
  Inst 38412:   nop     len=0
  Inst 38413:   nop     len=0
  Inst 38414:   nop     len=0
  Inst 38415:   nop     len=0
  Inst 38416:   nop     len=0
  Inst 38417:   nop     len=0
  Inst 38418:   nop     len=0
  Inst 38419:   nop     len=0
  Inst 38420:   nop     len=0
  Inst 38421:   nop     len=0
  Inst 38422:   nop     len=0
  Inst 38423:   nop     len=0
  Inst 38424:   nop     len=0
  Inst 38425:   nop     len=0
  Inst 38426:   nop     len=0
  Inst 38427:   nop     len=0
  Inst 38428:   nop     len=0
  Inst 38429:   nop     len=0
  Inst 38430:   jmp     label952
Block 950:
  (original IR block: block477)
  (successor: Block 951)
  (instruction range: 38431 .. 38460)
  Inst 38431:   movq    rsp(2072 + virtual offset), %rsi
  Inst 38432:   movq    152(%rsi), %r13
  Inst 38433:   movq    %r14, %r15
  Inst 38434:   addq    $-1, %r15
  Inst 38435:   movq    %r14, %rdx
  Inst 38436:   shlq    $3, %rdx
  Inst 38437:   movq    %r13, %r12
  Inst 38438:   addq    %rdx, %r12
  Inst 38439:   movq    %r13, %rdi
  Inst 38440:   addq    $-24, %rdi
  Inst 38441:   movq    %r13, %rsi
  Inst 38442:   load_ext_name %Memmove+0, %rax
  Inst 38443:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S207, S209, S211, S213, S215, S217, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38444:   call    *%rax
  Inst 38445:   movq    rsp(1496 + virtual offset), %rbx
  Inst 38446:   load_ext_name u1:1+0, %rsi
  Inst 38447:   movl    $1, %edi
  Inst 38448:   movq    %rdi, -8(%r13,%r14,8)
  Inst 38449:   movl    $1, %edi
  Inst 38450:   movq    %rdi, -16(%r13,%r14,8)
  Inst 38451:   movq    %rsi, -24(%r13,%r14,8)
  Inst 38452:   movq    rsp(2072 + virtual offset), %rsi
  Inst 38453:   movq    %r12, 152(%rsi)
  Inst 38454:   movq    %rbx, %rdi
  Inst 38455:   movq    %r15, %rsi
  Inst 38456:   load_ext_name u0:3+0, %rax
  Inst 38457:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S207, S209, S211, S213, S215, S217, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38458:   call    *%rax
  Inst 38459:   jmp     label951
Block 951:
  (successor: Block 952)
  (instruction range: 38460 .. 38580)
  Inst 38460:   movq    %rax, rsp(1648 + virtual offset)
  Inst 38461:   nop     len=0
  Inst 38462:   nop     len=0
  Inst 38463:   nop     len=0
  Inst 38464:   nop     len=0
  Inst 38465:   nop     len=0
  Inst 38466:   nop     len=0
  Inst 38467:   nop     len=0
  Inst 38468:   nop     len=0
  Inst 38469:   nop     len=0
  Inst 38470:   nop     len=0
  Inst 38471:   nop     len=0
  Inst 38472:   nop     len=0
  Inst 38473:   nop     len=0
  Inst 38474:   nop     len=0
  Inst 38475:   nop     len=0
  Inst 38476:   nop     len=0
  Inst 38477:   nop     len=0
  Inst 38478:   nop     len=0
  Inst 38479:   nop     len=0
  Inst 38480:   nop     len=0
  Inst 38481:   nop     len=0
  Inst 38482:   nop     len=0
  Inst 38483:   nop     len=0
  Inst 38484:   nop     len=0
  Inst 38485:   nop     len=0
  Inst 38486:   nop     len=0
  Inst 38487:   nop     len=0
  Inst 38488:   nop     len=0
  Inst 38489:   nop     len=0
  Inst 38490:   nop     len=0
  Inst 38491:   nop     len=0
  Inst 38492:   nop     len=0
  Inst 38493:   nop     len=0
  Inst 38494:   nop     len=0
  Inst 38495:   nop     len=0
  Inst 38496:   nop     len=0
  Inst 38497:   nop     len=0
  Inst 38498:   nop     len=0
  Inst 38499:   nop     len=0
  Inst 38500:   nop     len=0
  Inst 38501:   nop     len=0
  Inst 38502:   nop     len=0
  Inst 38503:   nop     len=0
  Inst 38504:   nop     len=0
  Inst 38505:   nop     len=0
  Inst 38506:   nop     len=0
  Inst 38507:   nop     len=0
  Inst 38508:   nop     len=0
  Inst 38509:   nop     len=0
  Inst 38510:   nop     len=0
  Inst 38511:   nop     len=0
  Inst 38512:   nop     len=0
  Inst 38513:   nop     len=0
  Inst 38514:   nop     len=0
  Inst 38515:   nop     len=0
  Inst 38516:   nop     len=0
  Inst 38517:   nop     len=0
  Inst 38518:   nop     len=0
  Inst 38519:   nop     len=0
  Inst 38520:   nop     len=0
  Inst 38521:   nop     len=0
  Inst 38522:   nop     len=0
  Inst 38523:   nop     len=0
  Inst 38524:   nop     len=0
  Inst 38525:   nop     len=0
  Inst 38526:   nop     len=0
  Inst 38527:   nop     len=0
  Inst 38528:   nop     len=0
  Inst 38529:   nop     len=0
  Inst 38530:   nop     len=0
  Inst 38531:   nop     len=0
  Inst 38532:   nop     len=0
  Inst 38533:   nop     len=0
  Inst 38534:   nop     len=0
  Inst 38535:   nop     len=0
  Inst 38536:   nop     len=0
  Inst 38537:   nop     len=0
  Inst 38538:   nop     len=0
  Inst 38539:   nop     len=0
  Inst 38540:   nop     len=0
  Inst 38541:   nop     len=0
  Inst 38542:   nop     len=0
  Inst 38543:   nop     len=0
  Inst 38544:   nop     len=0
  Inst 38545:   nop     len=0
  Inst 38546:   nop     len=0
  Inst 38547:   nop     len=0
  Inst 38548:   nop     len=0
  Inst 38549:   nop     len=0
  Inst 38550:   nop     len=0
  Inst 38551:   nop     len=0
  Inst 38552:   nop     len=0
  Inst 38553:   nop     len=0
  Inst 38554:   nop     len=0
  Inst 38555:   nop     len=0
  Inst 38556:   nop     len=0
  Inst 38557:   nop     len=0
  Inst 38558:   nop     len=0
  Inst 38559:   nop     len=0
  Inst 38560:   nop     len=0
  Inst 38561:   nop     len=0
  Inst 38562:   nop     len=0
  Inst 38563:   nop     len=0
  Inst 38564:   nop     len=0
  Inst 38565:   nop     len=0
  Inst 38566:   nop     len=0
  Inst 38567:   nop     len=0
  Inst 38568:   nop     len=0
  Inst 38569:   nop     len=0
  Inst 38570:   nop     len=0
  Inst 38571:   nop     len=0
  Inst 38572:   nop     len=0
  Inst 38573:   nop     len=0
  Inst 38574:   nop     len=0
  Inst 38575:   nop     len=0
  Inst 38576:   nop     len=0
  Inst 38577:   nop     len=0
  Inst 38578:   nop     len=0
  Inst 38579:   jmp     label952
Block 952:
  (original IR block: block476)
  (successor: Block 953)
  (successor: Block 954)
  (instruction range: 38580 .. 38591)
  Inst 38580:   movq    rsp(2064 + virtual offset), %rsi
  Inst 38581:   movq    8(%rsi), %rdi
  Inst 38582:   movq    rsp(2048 + virtual offset), %rsi
  Inst 38583:   load_ext_name u0:2+0, %rax
  Inst 38584:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 38585:   movq    %rdi, rsp(1664 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S211, S213, S215, S217, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38586:   call    *%rax
  Inst 38587:   movq    %rax, %rbx
  Inst 38588:   movq    %rdx, %r14
  Inst 38589:   testq   %r14, %r14
  Inst 38590:   jz      label953; j label954
Block 953:
  (successor: Block 956)
  (instruction range: 38591 .. 38712)
  Inst 38591:   movq    %rbx, rsp(1800 + virtual offset)
  Inst 38592:   nop     len=0
  Inst 38593:   nop     len=0
  Inst 38594:   nop     len=0
  Inst 38595:   nop     len=0
  Inst 38596:   nop     len=0
  Inst 38597:   nop     len=0
  Inst 38598:   nop     len=0
  Inst 38599:   nop     len=0
  Inst 38600:   nop     len=0
  Inst 38601:   nop     len=0
  Inst 38602:   nop     len=0
  Inst 38603:   nop     len=0
  Inst 38604:   nop     len=0
  Inst 38605:   nop     len=0
  Inst 38606:   nop     len=0
  Inst 38607:   nop     len=0
  Inst 38608:   nop     len=0
  Inst 38609:   nop     len=0
  Inst 38610:   nop     len=0
  Inst 38611:   nop     len=0
  Inst 38612:   nop     len=0
  Inst 38613:   nop     len=0
  Inst 38614:   nop     len=0
  Inst 38615:   nop     len=0
  Inst 38616:   nop     len=0
  Inst 38617:   nop     len=0
  Inst 38618:   nop     len=0
  Inst 38619:   nop     len=0
  Inst 38620:   nop     len=0
  Inst 38621:   nop     len=0
  Inst 38622:   nop     len=0
  Inst 38623:   nop     len=0
  Inst 38624:   nop     len=0
  Inst 38625:   nop     len=0
  Inst 38626:   nop     len=0
  Inst 38627:   nop     len=0
  Inst 38628:   nop     len=0
  Inst 38629:   nop     len=0
  Inst 38630:   nop     len=0
  Inst 38631:   nop     len=0
  Inst 38632:   nop     len=0
  Inst 38633:   nop     len=0
  Inst 38634:   nop     len=0
  Inst 38635:   nop     len=0
  Inst 38636:   nop     len=0
  Inst 38637:   nop     len=0
  Inst 38638:   nop     len=0
  Inst 38639:   nop     len=0
  Inst 38640:   nop     len=0
  Inst 38641:   nop     len=0
  Inst 38642:   nop     len=0
  Inst 38643:   nop     len=0
  Inst 38644:   nop     len=0
  Inst 38645:   nop     len=0
  Inst 38646:   nop     len=0
  Inst 38647:   nop     len=0
  Inst 38648:   nop     len=0
  Inst 38649:   nop     len=0
  Inst 38650:   nop     len=0
  Inst 38651:   nop     len=0
  Inst 38652:   nop     len=0
  Inst 38653:   nop     len=0
  Inst 38654:   nop     len=0
  Inst 38655:   nop     len=0
  Inst 38656:   nop     len=0
  Inst 38657:   nop     len=0
  Inst 38658:   nop     len=0
  Inst 38659:   nop     len=0
  Inst 38660:   nop     len=0
  Inst 38661:   nop     len=0
  Inst 38662:   nop     len=0
  Inst 38663:   nop     len=0
  Inst 38664:   nop     len=0
  Inst 38665:   nop     len=0
  Inst 38666:   nop     len=0
  Inst 38667:   nop     len=0
  Inst 38668:   nop     len=0
  Inst 38669:   nop     len=0
  Inst 38670:   nop     len=0
  Inst 38671:   nop     len=0
  Inst 38672:   nop     len=0
  Inst 38673:   nop     len=0
  Inst 38674:   nop     len=0
  Inst 38675:   nop     len=0
  Inst 38676:   nop     len=0
  Inst 38677:   nop     len=0
  Inst 38678:   nop     len=0
  Inst 38679:   nop     len=0
  Inst 38680:   nop     len=0
  Inst 38681:   nop     len=0
  Inst 38682:   nop     len=0
  Inst 38683:   nop     len=0
  Inst 38684:   nop     len=0
  Inst 38685:   nop     len=0
  Inst 38686:   nop     len=0
  Inst 38687:   nop     len=0
  Inst 38688:   nop     len=0
  Inst 38689:   nop     len=0
  Inst 38690:   nop     len=0
  Inst 38691:   nop     len=0
  Inst 38692:   nop     len=0
  Inst 38693:   nop     len=0
  Inst 38694:   nop     len=0
  Inst 38695:   nop     len=0
  Inst 38696:   nop     len=0
  Inst 38697:   nop     len=0
  Inst 38698:   nop     len=0
  Inst 38699:   nop     len=0
  Inst 38700:   nop     len=0
  Inst 38701:   nop     len=0
  Inst 38702:   nop     len=0
  Inst 38703:   nop     len=0
  Inst 38704:   nop     len=0
  Inst 38705:   nop     len=0
  Inst 38706:   nop     len=0
  Inst 38707:   nop     len=0
  Inst 38708:   nop     len=0
  Inst 38709:   nop     len=0
  Inst 38710:   nop     len=0
  Inst 38711:   jmp     label956
Block 954:
  (original IR block: block479)
  (successor: Block 955)
  (instruction range: 38712 .. 38741)
  Inst 38712:   movq    rsp(2072 + virtual offset), %rsi
  Inst 38713:   movq    152(%rsi), %r13
  Inst 38714:   movq    %r14, %r15
  Inst 38715:   addq    $-1, %r15
  Inst 38716:   movq    %r14, %rdx
  Inst 38717:   shlq    $3, %rdx
  Inst 38718:   movq    %r13, %r12
  Inst 38719:   addq    %rdx, %r12
  Inst 38720:   movq    %r13, %rdi
  Inst 38721:   addq    $-24, %rdi
  Inst 38722:   movq    %r13, %rsi
  Inst 38723:   load_ext_name %Memmove+0, %rax
  Inst 38724:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S209, S211, S213, S215, S217, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38725:   call    *%rax
  Inst 38726:   movq    rsp(1496 + virtual offset), %rbx
  Inst 38727:   load_ext_name u1:1+0, %rsi
  Inst 38728:   movl    $1, %edi
  Inst 38729:   movq    %rdi, -8(%r13,%r14,8)
  Inst 38730:   movl    $1, %edi
  Inst 38731:   movq    %rdi, -16(%r13,%r14,8)
  Inst 38732:   movq    %rsi, -24(%r13,%r14,8)
  Inst 38733:   movq    rsp(2072 + virtual offset), %rsi
  Inst 38734:   movq    %r12, 152(%rsi)
  Inst 38735:   movq    %rbx, %rdi
  Inst 38736:   movq    %r15, %rsi
  Inst 38737:   load_ext_name u0:3+0, %rax
  Inst 38738:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S209, S211, S213, S215, S217, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38739:   call    *%rax
  Inst 38740:   jmp     label955
Block 955:
  (successor: Block 956)
  (instruction range: 38741 .. 38862)
  Inst 38741:   movq    %rax, rsp(1800 + virtual offset)
  Inst 38742:   nop     len=0
  Inst 38743:   nop     len=0
  Inst 38744:   nop     len=0
  Inst 38745:   nop     len=0
  Inst 38746:   nop     len=0
  Inst 38747:   nop     len=0
  Inst 38748:   nop     len=0
  Inst 38749:   nop     len=0
  Inst 38750:   nop     len=0
  Inst 38751:   nop     len=0
  Inst 38752:   nop     len=0
  Inst 38753:   nop     len=0
  Inst 38754:   nop     len=0
  Inst 38755:   nop     len=0
  Inst 38756:   nop     len=0
  Inst 38757:   nop     len=0
  Inst 38758:   nop     len=0
  Inst 38759:   nop     len=0
  Inst 38760:   nop     len=0
  Inst 38761:   nop     len=0
  Inst 38762:   nop     len=0
  Inst 38763:   nop     len=0
  Inst 38764:   nop     len=0
  Inst 38765:   nop     len=0
  Inst 38766:   nop     len=0
  Inst 38767:   nop     len=0
  Inst 38768:   nop     len=0
  Inst 38769:   nop     len=0
  Inst 38770:   nop     len=0
  Inst 38771:   nop     len=0
  Inst 38772:   nop     len=0
  Inst 38773:   nop     len=0
  Inst 38774:   nop     len=0
  Inst 38775:   nop     len=0
  Inst 38776:   nop     len=0
  Inst 38777:   nop     len=0
  Inst 38778:   nop     len=0
  Inst 38779:   nop     len=0
  Inst 38780:   nop     len=0
  Inst 38781:   nop     len=0
  Inst 38782:   nop     len=0
  Inst 38783:   nop     len=0
  Inst 38784:   nop     len=0
  Inst 38785:   nop     len=0
  Inst 38786:   nop     len=0
  Inst 38787:   nop     len=0
  Inst 38788:   nop     len=0
  Inst 38789:   nop     len=0
  Inst 38790:   nop     len=0
  Inst 38791:   nop     len=0
  Inst 38792:   nop     len=0
  Inst 38793:   nop     len=0
  Inst 38794:   nop     len=0
  Inst 38795:   nop     len=0
  Inst 38796:   nop     len=0
  Inst 38797:   nop     len=0
  Inst 38798:   nop     len=0
  Inst 38799:   nop     len=0
  Inst 38800:   nop     len=0
  Inst 38801:   nop     len=0
  Inst 38802:   nop     len=0
  Inst 38803:   nop     len=0
  Inst 38804:   nop     len=0
  Inst 38805:   nop     len=0
  Inst 38806:   nop     len=0
  Inst 38807:   nop     len=0
  Inst 38808:   nop     len=0
  Inst 38809:   nop     len=0
  Inst 38810:   nop     len=0
  Inst 38811:   nop     len=0
  Inst 38812:   nop     len=0
  Inst 38813:   nop     len=0
  Inst 38814:   nop     len=0
  Inst 38815:   nop     len=0
  Inst 38816:   nop     len=0
  Inst 38817:   nop     len=0
  Inst 38818:   nop     len=0
  Inst 38819:   nop     len=0
  Inst 38820:   nop     len=0
  Inst 38821:   nop     len=0
  Inst 38822:   nop     len=0
  Inst 38823:   nop     len=0
  Inst 38824:   nop     len=0
  Inst 38825:   nop     len=0
  Inst 38826:   nop     len=0
  Inst 38827:   nop     len=0
  Inst 38828:   nop     len=0
  Inst 38829:   nop     len=0
  Inst 38830:   nop     len=0
  Inst 38831:   nop     len=0
  Inst 38832:   nop     len=0
  Inst 38833:   nop     len=0
  Inst 38834:   nop     len=0
  Inst 38835:   nop     len=0
  Inst 38836:   nop     len=0
  Inst 38837:   nop     len=0
  Inst 38838:   nop     len=0
  Inst 38839:   nop     len=0
  Inst 38840:   nop     len=0
  Inst 38841:   nop     len=0
  Inst 38842:   nop     len=0
  Inst 38843:   nop     len=0
  Inst 38844:   nop     len=0
  Inst 38845:   nop     len=0
  Inst 38846:   nop     len=0
  Inst 38847:   nop     len=0
  Inst 38848:   nop     len=0
  Inst 38849:   nop     len=0
  Inst 38850:   nop     len=0
  Inst 38851:   nop     len=0
  Inst 38852:   nop     len=0
  Inst 38853:   nop     len=0
  Inst 38854:   nop     len=0
  Inst 38855:   nop     len=0
  Inst 38856:   nop     len=0
  Inst 38857:   nop     len=0
  Inst 38858:   nop     len=0
  Inst 38859:   nop     len=0
  Inst 38860:   nop     len=0
  Inst 38861:   jmp     label956
Block 956:
  (original IR block: block478)
  (successor: Block 957)
  (successor: Block 958)
  (instruction range: 38862 .. 38873)
  Inst 38862:   movq    rsp(2064 + virtual offset), %rsi
  Inst 38863:   movq    8(%rsi), %rdi
  Inst 38864:   movq    rsp(2048 + virtual offset), %rsi
  Inst 38865:   load_ext_name u0:2+0, %rax
  Inst 38866:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 38867:   movq    %rdi, rsp(1664 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S211, S213, S215, S217, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 38868:   call    *%rax
  Inst 38869:   movq    %rax, %r15
  Inst 38870:   movq    %rdx, %r14
  Inst 38871:   testq   %r14, %r14
  Inst 38872:   jz      label957; j label958
Block 957:
  (successor: Block 960)
  (instruction range: 38873 .. 38994)
  Inst 38873:   movq    %r15, rsp(1664 + virtual offset)
  Inst 38874:   nop     len=0
  Inst 38875:   nop     len=0
  Inst 38876:   nop     len=0
  Inst 38877:   nop     len=0
  Inst 38878:   nop     len=0
  Inst 38879:   nop     len=0
  Inst 38880:   nop     len=0
  Inst 38881:   nop     len=0
  Inst 38882:   nop     len=0
  Inst 38883:   nop     len=0
  Inst 38884:   nop     len=0
  Inst 38885:   nop     len=0
  Inst 38886:   nop     len=0
  Inst 38887:   nop     len=0
  Inst 38888:   nop     len=0
  Inst 38889:   nop     len=0
  Inst 38890:   nop     len=0
  Inst 38891:   nop     len=0
  Inst 38892:   nop     len=0
  Inst 38893:   nop     len=0
  Inst 38894:   nop     len=0
  Inst 38895:   nop     len=0
  Inst 38896:   nop     len=0
  Inst 38897:   nop     len=0
  Inst 38898:   nop     len=0
  Inst 38899:   nop     len=0
  Inst 38900:   nop     len=0
  Inst 38901:   nop     len=0
  Inst 38902:   nop     len=0
  Inst 38903:   nop     len=0
  Inst 38904:   nop     len=0
  Inst 38905:   nop     len=0
  Inst 38906:   nop     len=0
  Inst 38907:   nop     len=0
  Inst 38908:   nop     len=0
  Inst 38909:   nop     len=0
  Inst 38910:   nop     len=0
  Inst 38911:   nop     len=0
  Inst 38912:   nop     len=0
  Inst 38913:   nop     len=0
  Inst 38914:   nop     len=0
  Inst 38915:   nop     len=0
  Inst 38916:   nop     len=0
  Inst 38917:   nop     len=0
  Inst 38918:   nop     len=0
  Inst 38919:   nop     len=0
  Inst 38920:   nop     len=0
  Inst 38921:   nop     len=0
  Inst 38922:   nop     len=0
  Inst 38923:   nop     len=0
  Inst 38924:   nop     len=0
  Inst 38925:   nop     len=0
  Inst 38926:   nop     len=0
  Inst 38927:   nop     len=0
  Inst 38928:   nop     len=0
  Inst 38929:   nop     len=0
  Inst 38930:   nop     len=0
  Inst 38931:   nop     len=0
  Inst 38932:   nop     len=0
  Inst 38933:   nop     len=0
  Inst 38934:   nop     len=0
  Inst 38935:   nop     len=0
  Inst 38936:   nop     len=0
  Inst 38937:   nop     len=0
  Inst 38938:   nop     len=0
  Inst 38939:   nop     len=0
  Inst 38940:   nop     len=0
  Inst 38941:   nop     len=0
  Inst 38942:   nop     len=0
  Inst 38943:   nop     len=0
  Inst 38944:   nop     len=0
  Inst 38945:   nop     len=0
  Inst 38946:   nop     len=0
  Inst 38947:   nop     len=0
  Inst 38948:   nop     len=0
  Inst 38949:   nop     len=0
  Inst 38950:   nop     len=0
  Inst 38951:   nop     len=0
  Inst 38952:   nop     len=0
  Inst 38953:   nop     len=0
  Inst 38954:   nop     len=0
  Inst 38955:   nop     len=0
  Inst 38956:   nop     len=0
  Inst 38957:   nop     len=0
  Inst 38958:   nop     len=0
  Inst 38959:   nop     len=0
  Inst 38960:   nop     len=0
  Inst 38961:   nop     len=0
  Inst 38962:   nop     len=0
  Inst 38963:   nop     len=0
  Inst 38964:   nop     len=0
  Inst 38965:   nop     len=0
  Inst 38966:   nop     len=0
  Inst 38967:   nop     len=0
  Inst 38968:   nop     len=0
  Inst 38969:   nop     len=0
  Inst 38970:   nop     len=0
  Inst 38971:   nop     len=0
  Inst 38972:   nop     len=0
  Inst 38973:   nop     len=0
  Inst 38974:   nop     len=0
  Inst 38975:   nop     len=0
  Inst 38976:   nop     len=0
  Inst 38977:   nop     len=0
  Inst 38978:   nop     len=0
  Inst 38979:   nop     len=0
  Inst 38980:   nop     len=0
  Inst 38981:   nop     len=0
  Inst 38982:   nop     len=0
  Inst 38983:   nop     len=0
  Inst 38984:   nop     len=0
  Inst 38985:   nop     len=0
  Inst 38986:   nop     len=0
  Inst 38987:   nop     len=0
  Inst 38988:   nop     len=0
  Inst 38989:   nop     len=0
  Inst 38990:   nop     len=0
  Inst 38991:   nop     len=0
  Inst 38992:   nop     len=0
  Inst 38993:   jmp     label960
Block 958:
  (original IR block: block481)
  (successor: Block 959)
  (instruction range: 38994 .. 39023)
  Inst 38994:   movq    rsp(2072 + virtual offset), %rsi
  Inst 38995:   movq    152(%rsi), %r13
  Inst 38996:   movq    %r14, %rbx
  Inst 38997:   addq    $-1, %rbx
  Inst 38998:   movq    %r14, %rdx
  Inst 38999:   shlq    $3, %rdx
  Inst 39000:   movq    %r13, %r12
  Inst 39001:   addq    %rdx, %r12
  Inst 39002:   movq    %r13, %rdi
  Inst 39003:   addq    $-24, %rdi
  Inst 39004:   movq    %r13, %rsi
  Inst 39005:   load_ext_name %Memmove+0, %rax
  Inst 39006:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S209, S211, S213, S215, S217, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39007:   call    *%rax
  Inst 39008:   movq    rsp(1496 + virtual offset), %r15
  Inst 39009:   load_ext_name u1:1+0, %rsi
  Inst 39010:   movl    $1, %edi
  Inst 39011:   movq    %rdi, -8(%r13,%r14,8)
  Inst 39012:   movl    $1, %edi
  Inst 39013:   movq    %rdi, -16(%r13,%r14,8)
  Inst 39014:   movq    %rsi, -24(%r13,%r14,8)
  Inst 39015:   movq    rsp(2072 + virtual offset), %rsi
  Inst 39016:   movq    %r12, 152(%rsi)
  Inst 39017:   movq    %r15, %rdi
  Inst 39018:   movq    %rbx, %rsi
  Inst 39019:   load_ext_name u0:3+0, %rax
  Inst 39020:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S209, S211, S213, S215, S217, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39021:   call    *%rax
  Inst 39022:   jmp     label959
Block 959:
  (successor: Block 960)
  (instruction range: 39023 .. 39144)
  Inst 39023:   movq    %rax, rsp(1664 + virtual offset)
  Inst 39024:   nop     len=0
  Inst 39025:   nop     len=0
  Inst 39026:   nop     len=0
  Inst 39027:   nop     len=0
  Inst 39028:   nop     len=0
  Inst 39029:   nop     len=0
  Inst 39030:   nop     len=0
  Inst 39031:   nop     len=0
  Inst 39032:   nop     len=0
  Inst 39033:   nop     len=0
  Inst 39034:   nop     len=0
  Inst 39035:   nop     len=0
  Inst 39036:   nop     len=0
  Inst 39037:   nop     len=0
  Inst 39038:   nop     len=0
  Inst 39039:   nop     len=0
  Inst 39040:   nop     len=0
  Inst 39041:   nop     len=0
  Inst 39042:   nop     len=0
  Inst 39043:   nop     len=0
  Inst 39044:   nop     len=0
  Inst 39045:   nop     len=0
  Inst 39046:   nop     len=0
  Inst 39047:   nop     len=0
  Inst 39048:   nop     len=0
  Inst 39049:   nop     len=0
  Inst 39050:   nop     len=0
  Inst 39051:   nop     len=0
  Inst 39052:   nop     len=0
  Inst 39053:   nop     len=0
  Inst 39054:   nop     len=0
  Inst 39055:   nop     len=0
  Inst 39056:   nop     len=0
  Inst 39057:   nop     len=0
  Inst 39058:   nop     len=0
  Inst 39059:   nop     len=0
  Inst 39060:   nop     len=0
  Inst 39061:   nop     len=0
  Inst 39062:   nop     len=0
  Inst 39063:   nop     len=0
  Inst 39064:   nop     len=0
  Inst 39065:   nop     len=0
  Inst 39066:   nop     len=0
  Inst 39067:   nop     len=0
  Inst 39068:   nop     len=0
  Inst 39069:   nop     len=0
  Inst 39070:   nop     len=0
  Inst 39071:   nop     len=0
  Inst 39072:   nop     len=0
  Inst 39073:   nop     len=0
  Inst 39074:   nop     len=0
  Inst 39075:   nop     len=0
  Inst 39076:   nop     len=0
  Inst 39077:   nop     len=0
  Inst 39078:   nop     len=0
  Inst 39079:   nop     len=0
  Inst 39080:   nop     len=0
  Inst 39081:   nop     len=0
  Inst 39082:   nop     len=0
  Inst 39083:   nop     len=0
  Inst 39084:   nop     len=0
  Inst 39085:   nop     len=0
  Inst 39086:   nop     len=0
  Inst 39087:   nop     len=0
  Inst 39088:   nop     len=0
  Inst 39089:   nop     len=0
  Inst 39090:   nop     len=0
  Inst 39091:   nop     len=0
  Inst 39092:   nop     len=0
  Inst 39093:   nop     len=0
  Inst 39094:   nop     len=0
  Inst 39095:   nop     len=0
  Inst 39096:   nop     len=0
  Inst 39097:   nop     len=0
  Inst 39098:   nop     len=0
  Inst 39099:   nop     len=0
  Inst 39100:   nop     len=0
  Inst 39101:   nop     len=0
  Inst 39102:   nop     len=0
  Inst 39103:   nop     len=0
  Inst 39104:   nop     len=0
  Inst 39105:   nop     len=0
  Inst 39106:   nop     len=0
  Inst 39107:   nop     len=0
  Inst 39108:   nop     len=0
  Inst 39109:   nop     len=0
  Inst 39110:   nop     len=0
  Inst 39111:   nop     len=0
  Inst 39112:   nop     len=0
  Inst 39113:   nop     len=0
  Inst 39114:   nop     len=0
  Inst 39115:   nop     len=0
  Inst 39116:   nop     len=0
  Inst 39117:   nop     len=0
  Inst 39118:   nop     len=0
  Inst 39119:   nop     len=0
  Inst 39120:   nop     len=0
  Inst 39121:   nop     len=0
  Inst 39122:   nop     len=0
  Inst 39123:   nop     len=0
  Inst 39124:   nop     len=0
  Inst 39125:   nop     len=0
  Inst 39126:   nop     len=0
  Inst 39127:   nop     len=0
  Inst 39128:   nop     len=0
  Inst 39129:   nop     len=0
  Inst 39130:   nop     len=0
  Inst 39131:   nop     len=0
  Inst 39132:   nop     len=0
  Inst 39133:   nop     len=0
  Inst 39134:   nop     len=0
  Inst 39135:   nop     len=0
  Inst 39136:   nop     len=0
  Inst 39137:   nop     len=0
  Inst 39138:   nop     len=0
  Inst 39139:   nop     len=0
  Inst 39140:   nop     len=0
  Inst 39141:   nop     len=0
  Inst 39142:   nop     len=0
  Inst 39143:   jmp     label960
Block 960:
  (original IR block: block480)
  (successor: Block 961)
  (successor: Block 962)
  (instruction range: 39144 .. 39155)
  Inst 39144:   movq    rsp(2064 + virtual offset), %rsi
  Inst 39145:   movq    8(%rsi), %rdi
  Inst 39146:   movq    rsp(2048 + virtual offset), %rsi
  Inst 39147:   load_ext_name u0:2+0, %rax
  Inst 39148:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 39149:   movq    %rdi, rsp(1680 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S213, S215, S217, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39150:   call    *%rax
  Inst 39151:   movq    %rax, %rbx
  Inst 39152:   movq    %rdx, %r14
  Inst 39153:   testq   %r14, %r14
  Inst 39154:   jz      label961; j label962
Block 961:
  (successor: Block 964)
  (instruction range: 39155 .. 39277)
  Inst 39155:   movq    %rbx, rsp(1792 + virtual offset)
  Inst 39156:   nop     len=0
  Inst 39157:   nop     len=0
  Inst 39158:   nop     len=0
  Inst 39159:   nop     len=0
  Inst 39160:   nop     len=0
  Inst 39161:   nop     len=0
  Inst 39162:   nop     len=0
  Inst 39163:   nop     len=0
  Inst 39164:   nop     len=0
  Inst 39165:   nop     len=0
  Inst 39166:   nop     len=0
  Inst 39167:   nop     len=0
  Inst 39168:   nop     len=0
  Inst 39169:   nop     len=0
  Inst 39170:   nop     len=0
  Inst 39171:   nop     len=0
  Inst 39172:   nop     len=0
  Inst 39173:   nop     len=0
  Inst 39174:   nop     len=0
  Inst 39175:   nop     len=0
  Inst 39176:   nop     len=0
  Inst 39177:   nop     len=0
  Inst 39178:   nop     len=0
  Inst 39179:   nop     len=0
  Inst 39180:   nop     len=0
  Inst 39181:   nop     len=0
  Inst 39182:   nop     len=0
  Inst 39183:   nop     len=0
  Inst 39184:   nop     len=0
  Inst 39185:   nop     len=0
  Inst 39186:   nop     len=0
  Inst 39187:   nop     len=0
  Inst 39188:   nop     len=0
  Inst 39189:   nop     len=0
  Inst 39190:   nop     len=0
  Inst 39191:   nop     len=0
  Inst 39192:   nop     len=0
  Inst 39193:   nop     len=0
  Inst 39194:   nop     len=0
  Inst 39195:   nop     len=0
  Inst 39196:   nop     len=0
  Inst 39197:   nop     len=0
  Inst 39198:   nop     len=0
  Inst 39199:   nop     len=0
  Inst 39200:   nop     len=0
  Inst 39201:   nop     len=0
  Inst 39202:   nop     len=0
  Inst 39203:   nop     len=0
  Inst 39204:   nop     len=0
  Inst 39205:   nop     len=0
  Inst 39206:   nop     len=0
  Inst 39207:   nop     len=0
  Inst 39208:   nop     len=0
  Inst 39209:   nop     len=0
  Inst 39210:   nop     len=0
  Inst 39211:   nop     len=0
  Inst 39212:   nop     len=0
  Inst 39213:   nop     len=0
  Inst 39214:   nop     len=0
  Inst 39215:   nop     len=0
  Inst 39216:   nop     len=0
  Inst 39217:   nop     len=0
  Inst 39218:   nop     len=0
  Inst 39219:   nop     len=0
  Inst 39220:   nop     len=0
  Inst 39221:   nop     len=0
  Inst 39222:   nop     len=0
  Inst 39223:   nop     len=0
  Inst 39224:   nop     len=0
  Inst 39225:   nop     len=0
  Inst 39226:   nop     len=0
  Inst 39227:   nop     len=0
  Inst 39228:   nop     len=0
  Inst 39229:   nop     len=0
  Inst 39230:   nop     len=0
  Inst 39231:   nop     len=0
  Inst 39232:   nop     len=0
  Inst 39233:   nop     len=0
  Inst 39234:   nop     len=0
  Inst 39235:   nop     len=0
  Inst 39236:   nop     len=0
  Inst 39237:   nop     len=0
  Inst 39238:   nop     len=0
  Inst 39239:   nop     len=0
  Inst 39240:   nop     len=0
  Inst 39241:   nop     len=0
  Inst 39242:   nop     len=0
  Inst 39243:   nop     len=0
  Inst 39244:   nop     len=0
  Inst 39245:   nop     len=0
  Inst 39246:   nop     len=0
  Inst 39247:   nop     len=0
  Inst 39248:   nop     len=0
  Inst 39249:   nop     len=0
  Inst 39250:   nop     len=0
  Inst 39251:   nop     len=0
  Inst 39252:   nop     len=0
  Inst 39253:   nop     len=0
  Inst 39254:   nop     len=0
  Inst 39255:   nop     len=0
  Inst 39256:   nop     len=0
  Inst 39257:   nop     len=0
  Inst 39258:   nop     len=0
  Inst 39259:   nop     len=0
  Inst 39260:   nop     len=0
  Inst 39261:   nop     len=0
  Inst 39262:   nop     len=0
  Inst 39263:   nop     len=0
  Inst 39264:   nop     len=0
  Inst 39265:   nop     len=0
  Inst 39266:   nop     len=0
  Inst 39267:   nop     len=0
  Inst 39268:   nop     len=0
  Inst 39269:   nop     len=0
  Inst 39270:   nop     len=0
  Inst 39271:   nop     len=0
  Inst 39272:   nop     len=0
  Inst 39273:   nop     len=0
  Inst 39274:   nop     len=0
  Inst 39275:   nop     len=0
  Inst 39276:   jmp     label964
Block 962:
  (original IR block: block483)
  (successor: Block 963)
  (instruction range: 39277 .. 39306)
  Inst 39277:   movq    rsp(2072 + virtual offset), %rsi
  Inst 39278:   movq    152(%rsi), %r13
  Inst 39279:   movq    %r14, %r15
  Inst 39280:   addq    $-1, %r15
  Inst 39281:   movq    %r14, %rdx
  Inst 39282:   shlq    $3, %rdx
  Inst 39283:   movq    %r13, %r12
  Inst 39284:   addq    %rdx, %r12
  Inst 39285:   movq    %r13, %rdi
  Inst 39286:   addq    $-24, %rdi
  Inst 39287:   movq    %r13, %rsi
  Inst 39288:   load_ext_name %Memmove+0, %rax
  Inst 39289:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S211, S213, S215, S217, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39290:   call    *%rax
  Inst 39291:   movq    rsp(1496 + virtual offset), %rbx
  Inst 39292:   load_ext_name u1:1+0, %rsi
  Inst 39293:   movl    $1, %edi
  Inst 39294:   movq    %rdi, -8(%r13,%r14,8)
  Inst 39295:   movl    $1, %edi
  Inst 39296:   movq    %rdi, -16(%r13,%r14,8)
  Inst 39297:   movq    %rsi, -24(%r13,%r14,8)
  Inst 39298:   movq    rsp(2072 + virtual offset), %rsi
  Inst 39299:   movq    %r12, 152(%rsi)
  Inst 39300:   movq    %rbx, %rdi
  Inst 39301:   movq    %r15, %rsi
  Inst 39302:   load_ext_name u0:3+0, %rax
  Inst 39303:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S211, S213, S215, S217, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39304:   call    *%rax
  Inst 39305:   jmp     label963
Block 963:
  (successor: Block 964)
  (instruction range: 39306 .. 39428)
  Inst 39306:   movq    %rax, rsp(1792 + virtual offset)
  Inst 39307:   nop     len=0
  Inst 39308:   nop     len=0
  Inst 39309:   nop     len=0
  Inst 39310:   nop     len=0
  Inst 39311:   nop     len=0
  Inst 39312:   nop     len=0
  Inst 39313:   nop     len=0
  Inst 39314:   nop     len=0
  Inst 39315:   nop     len=0
  Inst 39316:   nop     len=0
  Inst 39317:   nop     len=0
  Inst 39318:   nop     len=0
  Inst 39319:   nop     len=0
  Inst 39320:   nop     len=0
  Inst 39321:   nop     len=0
  Inst 39322:   nop     len=0
  Inst 39323:   nop     len=0
  Inst 39324:   nop     len=0
  Inst 39325:   nop     len=0
  Inst 39326:   nop     len=0
  Inst 39327:   nop     len=0
  Inst 39328:   nop     len=0
  Inst 39329:   nop     len=0
  Inst 39330:   nop     len=0
  Inst 39331:   nop     len=0
  Inst 39332:   nop     len=0
  Inst 39333:   nop     len=0
  Inst 39334:   nop     len=0
  Inst 39335:   nop     len=0
  Inst 39336:   nop     len=0
  Inst 39337:   nop     len=0
  Inst 39338:   nop     len=0
  Inst 39339:   nop     len=0
  Inst 39340:   nop     len=0
  Inst 39341:   nop     len=0
  Inst 39342:   nop     len=0
  Inst 39343:   nop     len=0
  Inst 39344:   nop     len=0
  Inst 39345:   nop     len=0
  Inst 39346:   nop     len=0
  Inst 39347:   nop     len=0
  Inst 39348:   nop     len=0
  Inst 39349:   nop     len=0
  Inst 39350:   nop     len=0
  Inst 39351:   nop     len=0
  Inst 39352:   nop     len=0
  Inst 39353:   nop     len=0
  Inst 39354:   nop     len=0
  Inst 39355:   nop     len=0
  Inst 39356:   nop     len=0
  Inst 39357:   nop     len=0
  Inst 39358:   nop     len=0
  Inst 39359:   nop     len=0
  Inst 39360:   nop     len=0
  Inst 39361:   nop     len=0
  Inst 39362:   nop     len=0
  Inst 39363:   nop     len=0
  Inst 39364:   nop     len=0
  Inst 39365:   nop     len=0
  Inst 39366:   nop     len=0
  Inst 39367:   nop     len=0
  Inst 39368:   nop     len=0
  Inst 39369:   nop     len=0
  Inst 39370:   nop     len=0
  Inst 39371:   nop     len=0
  Inst 39372:   nop     len=0
  Inst 39373:   nop     len=0
  Inst 39374:   nop     len=0
  Inst 39375:   nop     len=0
  Inst 39376:   nop     len=0
  Inst 39377:   nop     len=0
  Inst 39378:   nop     len=0
  Inst 39379:   nop     len=0
  Inst 39380:   nop     len=0
  Inst 39381:   nop     len=0
  Inst 39382:   nop     len=0
  Inst 39383:   nop     len=0
  Inst 39384:   nop     len=0
  Inst 39385:   nop     len=0
  Inst 39386:   nop     len=0
  Inst 39387:   nop     len=0
  Inst 39388:   nop     len=0
  Inst 39389:   nop     len=0
  Inst 39390:   nop     len=0
  Inst 39391:   nop     len=0
  Inst 39392:   nop     len=0
  Inst 39393:   nop     len=0
  Inst 39394:   nop     len=0
  Inst 39395:   nop     len=0
  Inst 39396:   nop     len=0
  Inst 39397:   nop     len=0
  Inst 39398:   nop     len=0
  Inst 39399:   nop     len=0
  Inst 39400:   nop     len=0
  Inst 39401:   nop     len=0
  Inst 39402:   nop     len=0
  Inst 39403:   nop     len=0
  Inst 39404:   nop     len=0
  Inst 39405:   nop     len=0
  Inst 39406:   nop     len=0
  Inst 39407:   nop     len=0
  Inst 39408:   nop     len=0
  Inst 39409:   nop     len=0
  Inst 39410:   nop     len=0
  Inst 39411:   nop     len=0
  Inst 39412:   nop     len=0
  Inst 39413:   nop     len=0
  Inst 39414:   nop     len=0
  Inst 39415:   nop     len=0
  Inst 39416:   nop     len=0
  Inst 39417:   nop     len=0
  Inst 39418:   nop     len=0
  Inst 39419:   nop     len=0
  Inst 39420:   nop     len=0
  Inst 39421:   nop     len=0
  Inst 39422:   nop     len=0
  Inst 39423:   nop     len=0
  Inst 39424:   nop     len=0
  Inst 39425:   nop     len=0
  Inst 39426:   nop     len=0
  Inst 39427:   jmp     label964
Block 964:
  (original IR block: block482)
  (successor: Block 965)
  (successor: Block 966)
  (instruction range: 39428 .. 39439)
  Inst 39428:   movq    rsp(2064 + virtual offset), %rsi
  Inst 39429:   movq    8(%rsi), %rdi
  Inst 39430:   movq    rsp(2048 + virtual offset), %rsi
  Inst 39431:   load_ext_name u0:2+0, %rax
  Inst 39432:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 39433:   movq    %rdi, rsp(1680 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S213, S215, S217, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39434:   call    *%rax
  Inst 39435:   movq    %rax, %rbx
  Inst 39436:   movq    %rdx, %r14
  Inst 39437:   testq   %r14, %r14
  Inst 39438:   jz      label965; j label966
Block 965:
  (successor: Block 968)
  (instruction range: 39439 .. 39561)
  Inst 39439:   movq    %rbx, rsp(1680 + virtual offset)
  Inst 39440:   nop     len=0
  Inst 39441:   nop     len=0
  Inst 39442:   nop     len=0
  Inst 39443:   nop     len=0
  Inst 39444:   nop     len=0
  Inst 39445:   nop     len=0
  Inst 39446:   nop     len=0
  Inst 39447:   nop     len=0
  Inst 39448:   nop     len=0
  Inst 39449:   nop     len=0
  Inst 39450:   nop     len=0
  Inst 39451:   nop     len=0
  Inst 39452:   nop     len=0
  Inst 39453:   nop     len=0
  Inst 39454:   nop     len=0
  Inst 39455:   nop     len=0
  Inst 39456:   nop     len=0
  Inst 39457:   nop     len=0
  Inst 39458:   nop     len=0
  Inst 39459:   nop     len=0
  Inst 39460:   nop     len=0
  Inst 39461:   nop     len=0
  Inst 39462:   nop     len=0
  Inst 39463:   nop     len=0
  Inst 39464:   nop     len=0
  Inst 39465:   nop     len=0
  Inst 39466:   nop     len=0
  Inst 39467:   nop     len=0
  Inst 39468:   nop     len=0
  Inst 39469:   nop     len=0
  Inst 39470:   nop     len=0
  Inst 39471:   nop     len=0
  Inst 39472:   nop     len=0
  Inst 39473:   nop     len=0
  Inst 39474:   nop     len=0
  Inst 39475:   nop     len=0
  Inst 39476:   nop     len=0
  Inst 39477:   nop     len=0
  Inst 39478:   nop     len=0
  Inst 39479:   nop     len=0
  Inst 39480:   nop     len=0
  Inst 39481:   nop     len=0
  Inst 39482:   nop     len=0
  Inst 39483:   nop     len=0
  Inst 39484:   nop     len=0
  Inst 39485:   nop     len=0
  Inst 39486:   nop     len=0
  Inst 39487:   nop     len=0
  Inst 39488:   nop     len=0
  Inst 39489:   nop     len=0
  Inst 39490:   nop     len=0
  Inst 39491:   nop     len=0
  Inst 39492:   nop     len=0
  Inst 39493:   nop     len=0
  Inst 39494:   nop     len=0
  Inst 39495:   nop     len=0
  Inst 39496:   nop     len=0
  Inst 39497:   nop     len=0
  Inst 39498:   nop     len=0
  Inst 39499:   nop     len=0
  Inst 39500:   nop     len=0
  Inst 39501:   nop     len=0
  Inst 39502:   nop     len=0
  Inst 39503:   nop     len=0
  Inst 39504:   nop     len=0
  Inst 39505:   nop     len=0
  Inst 39506:   nop     len=0
  Inst 39507:   nop     len=0
  Inst 39508:   nop     len=0
  Inst 39509:   nop     len=0
  Inst 39510:   nop     len=0
  Inst 39511:   nop     len=0
  Inst 39512:   nop     len=0
  Inst 39513:   nop     len=0
  Inst 39514:   nop     len=0
  Inst 39515:   nop     len=0
  Inst 39516:   nop     len=0
  Inst 39517:   nop     len=0
  Inst 39518:   nop     len=0
  Inst 39519:   nop     len=0
  Inst 39520:   nop     len=0
  Inst 39521:   nop     len=0
  Inst 39522:   nop     len=0
  Inst 39523:   nop     len=0
  Inst 39524:   nop     len=0
  Inst 39525:   nop     len=0
  Inst 39526:   nop     len=0
  Inst 39527:   nop     len=0
  Inst 39528:   nop     len=0
  Inst 39529:   nop     len=0
  Inst 39530:   nop     len=0
  Inst 39531:   nop     len=0
  Inst 39532:   nop     len=0
  Inst 39533:   nop     len=0
  Inst 39534:   nop     len=0
  Inst 39535:   nop     len=0
  Inst 39536:   nop     len=0
  Inst 39537:   nop     len=0
  Inst 39538:   nop     len=0
  Inst 39539:   nop     len=0
  Inst 39540:   nop     len=0
  Inst 39541:   nop     len=0
  Inst 39542:   nop     len=0
  Inst 39543:   nop     len=0
  Inst 39544:   nop     len=0
  Inst 39545:   nop     len=0
  Inst 39546:   nop     len=0
  Inst 39547:   nop     len=0
  Inst 39548:   nop     len=0
  Inst 39549:   nop     len=0
  Inst 39550:   nop     len=0
  Inst 39551:   nop     len=0
  Inst 39552:   nop     len=0
  Inst 39553:   nop     len=0
  Inst 39554:   nop     len=0
  Inst 39555:   nop     len=0
  Inst 39556:   nop     len=0
  Inst 39557:   nop     len=0
  Inst 39558:   nop     len=0
  Inst 39559:   nop     len=0
  Inst 39560:   jmp     label968
Block 966:
  (original IR block: block485)
  (successor: Block 967)
  (instruction range: 39561 .. 39590)
  Inst 39561:   movq    rsp(2072 + virtual offset), %rsi
  Inst 39562:   movq    152(%rsi), %r13
  Inst 39563:   movq    %r14, %r15
  Inst 39564:   addq    $-1, %r15
  Inst 39565:   movq    %r14, %rdx
  Inst 39566:   shlq    $3, %rdx
  Inst 39567:   movq    %r13, %r12
  Inst 39568:   addq    %rdx, %r12
  Inst 39569:   movq    %r13, %rdi
  Inst 39570:   addq    $-24, %rdi
  Inst 39571:   movq    %r13, %rsi
  Inst 39572:   load_ext_name %Memmove+0, %rax
  Inst 39573:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S211, S213, S215, S217, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39574:   call    *%rax
  Inst 39575:   movq    rsp(1496 + virtual offset), %rbx
  Inst 39576:   load_ext_name u1:1+0, %rsi
  Inst 39577:   movl    $1, %edi
  Inst 39578:   movq    %rdi, -8(%r13,%r14,8)
  Inst 39579:   movl    $1, %edi
  Inst 39580:   movq    %rdi, -16(%r13,%r14,8)
  Inst 39581:   movq    %rsi, -24(%r13,%r14,8)
  Inst 39582:   movq    rsp(2072 + virtual offset), %rsi
  Inst 39583:   movq    %r12, 152(%rsi)
  Inst 39584:   movq    %rbx, %rdi
  Inst 39585:   movq    %r15, %rsi
  Inst 39586:   load_ext_name u0:3+0, %rax
  Inst 39587:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S211, S213, S215, S217, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39588:   call    *%rax
  Inst 39589:   jmp     label967
Block 967:
  (successor: Block 968)
  (instruction range: 39590 .. 39712)
  Inst 39590:   movq    %rax, rsp(1680 + virtual offset)
  Inst 39591:   nop     len=0
  Inst 39592:   nop     len=0
  Inst 39593:   nop     len=0
  Inst 39594:   nop     len=0
  Inst 39595:   nop     len=0
  Inst 39596:   nop     len=0
  Inst 39597:   nop     len=0
  Inst 39598:   nop     len=0
  Inst 39599:   nop     len=0
  Inst 39600:   nop     len=0
  Inst 39601:   nop     len=0
  Inst 39602:   nop     len=0
  Inst 39603:   nop     len=0
  Inst 39604:   nop     len=0
  Inst 39605:   nop     len=0
  Inst 39606:   nop     len=0
  Inst 39607:   nop     len=0
  Inst 39608:   nop     len=0
  Inst 39609:   nop     len=0
  Inst 39610:   nop     len=0
  Inst 39611:   nop     len=0
  Inst 39612:   nop     len=0
  Inst 39613:   nop     len=0
  Inst 39614:   nop     len=0
  Inst 39615:   nop     len=0
  Inst 39616:   nop     len=0
  Inst 39617:   nop     len=0
  Inst 39618:   nop     len=0
  Inst 39619:   nop     len=0
  Inst 39620:   nop     len=0
  Inst 39621:   nop     len=0
  Inst 39622:   nop     len=0
  Inst 39623:   nop     len=0
  Inst 39624:   nop     len=0
  Inst 39625:   nop     len=0
  Inst 39626:   nop     len=0
  Inst 39627:   nop     len=0
  Inst 39628:   nop     len=0
  Inst 39629:   nop     len=0
  Inst 39630:   nop     len=0
  Inst 39631:   nop     len=0
  Inst 39632:   nop     len=0
  Inst 39633:   nop     len=0
  Inst 39634:   nop     len=0
  Inst 39635:   nop     len=0
  Inst 39636:   nop     len=0
  Inst 39637:   nop     len=0
  Inst 39638:   nop     len=0
  Inst 39639:   nop     len=0
  Inst 39640:   nop     len=0
  Inst 39641:   nop     len=0
  Inst 39642:   nop     len=0
  Inst 39643:   nop     len=0
  Inst 39644:   nop     len=0
  Inst 39645:   nop     len=0
  Inst 39646:   nop     len=0
  Inst 39647:   nop     len=0
  Inst 39648:   nop     len=0
  Inst 39649:   nop     len=0
  Inst 39650:   nop     len=0
  Inst 39651:   nop     len=0
  Inst 39652:   nop     len=0
  Inst 39653:   nop     len=0
  Inst 39654:   nop     len=0
  Inst 39655:   nop     len=0
  Inst 39656:   nop     len=0
  Inst 39657:   nop     len=0
  Inst 39658:   nop     len=0
  Inst 39659:   nop     len=0
  Inst 39660:   nop     len=0
  Inst 39661:   nop     len=0
  Inst 39662:   nop     len=0
  Inst 39663:   nop     len=0
  Inst 39664:   nop     len=0
  Inst 39665:   nop     len=0
  Inst 39666:   nop     len=0
  Inst 39667:   nop     len=0
  Inst 39668:   nop     len=0
  Inst 39669:   nop     len=0
  Inst 39670:   nop     len=0
  Inst 39671:   nop     len=0
  Inst 39672:   nop     len=0
  Inst 39673:   nop     len=0
  Inst 39674:   nop     len=0
  Inst 39675:   nop     len=0
  Inst 39676:   nop     len=0
  Inst 39677:   nop     len=0
  Inst 39678:   nop     len=0
  Inst 39679:   nop     len=0
  Inst 39680:   nop     len=0
  Inst 39681:   nop     len=0
  Inst 39682:   nop     len=0
  Inst 39683:   nop     len=0
  Inst 39684:   nop     len=0
  Inst 39685:   nop     len=0
  Inst 39686:   nop     len=0
  Inst 39687:   nop     len=0
  Inst 39688:   nop     len=0
  Inst 39689:   nop     len=0
  Inst 39690:   nop     len=0
  Inst 39691:   nop     len=0
  Inst 39692:   nop     len=0
  Inst 39693:   nop     len=0
  Inst 39694:   nop     len=0
  Inst 39695:   nop     len=0
  Inst 39696:   nop     len=0
  Inst 39697:   nop     len=0
  Inst 39698:   nop     len=0
  Inst 39699:   nop     len=0
  Inst 39700:   nop     len=0
  Inst 39701:   nop     len=0
  Inst 39702:   nop     len=0
  Inst 39703:   nop     len=0
  Inst 39704:   nop     len=0
  Inst 39705:   nop     len=0
  Inst 39706:   nop     len=0
  Inst 39707:   nop     len=0
  Inst 39708:   nop     len=0
  Inst 39709:   nop     len=0
  Inst 39710:   nop     len=0
  Inst 39711:   jmp     label968
Block 968:
  (original IR block: block484)
  (successor: Block 969)
  (successor: Block 970)
  (instruction range: 39712 .. 39723)
  Inst 39712:   movq    rsp(2064 + virtual offset), %rsi
  Inst 39713:   movq    8(%rsi), %rdi
  Inst 39714:   movq    rsp(2048 + virtual offset), %rsi
  Inst 39715:   load_ext_name u0:2+0, %rax
  Inst 39716:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 39717:   movq    %rdi, rsp(1696 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S215, S217, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39718:   call    *%rax
  Inst 39719:   movq    %rax, %r15
  Inst 39720:   movq    %rdx, %r14
  Inst 39721:   testq   %r14, %r14
  Inst 39722:   jz      label969; j label970
Block 969:
  (successor: Block 972)
  (instruction range: 39723 .. 39846)
  Inst 39723:   movq    %r15, rsp(1784 + virtual offset)
  Inst 39724:   nop     len=0
  Inst 39725:   nop     len=0
  Inst 39726:   nop     len=0
  Inst 39727:   nop     len=0
  Inst 39728:   nop     len=0
  Inst 39729:   nop     len=0
  Inst 39730:   nop     len=0
  Inst 39731:   nop     len=0
  Inst 39732:   nop     len=0
  Inst 39733:   nop     len=0
  Inst 39734:   nop     len=0
  Inst 39735:   nop     len=0
  Inst 39736:   nop     len=0
  Inst 39737:   nop     len=0
  Inst 39738:   nop     len=0
  Inst 39739:   nop     len=0
  Inst 39740:   nop     len=0
  Inst 39741:   nop     len=0
  Inst 39742:   nop     len=0
  Inst 39743:   nop     len=0
  Inst 39744:   nop     len=0
  Inst 39745:   nop     len=0
  Inst 39746:   nop     len=0
  Inst 39747:   nop     len=0
  Inst 39748:   nop     len=0
  Inst 39749:   nop     len=0
  Inst 39750:   nop     len=0
  Inst 39751:   nop     len=0
  Inst 39752:   nop     len=0
  Inst 39753:   nop     len=0
  Inst 39754:   nop     len=0
  Inst 39755:   nop     len=0
  Inst 39756:   nop     len=0
  Inst 39757:   nop     len=0
  Inst 39758:   nop     len=0
  Inst 39759:   nop     len=0
  Inst 39760:   nop     len=0
  Inst 39761:   nop     len=0
  Inst 39762:   nop     len=0
  Inst 39763:   nop     len=0
  Inst 39764:   nop     len=0
  Inst 39765:   nop     len=0
  Inst 39766:   nop     len=0
  Inst 39767:   nop     len=0
  Inst 39768:   nop     len=0
  Inst 39769:   nop     len=0
  Inst 39770:   nop     len=0
  Inst 39771:   nop     len=0
  Inst 39772:   nop     len=0
  Inst 39773:   nop     len=0
  Inst 39774:   nop     len=0
  Inst 39775:   nop     len=0
  Inst 39776:   nop     len=0
  Inst 39777:   nop     len=0
  Inst 39778:   nop     len=0
  Inst 39779:   nop     len=0
  Inst 39780:   nop     len=0
  Inst 39781:   nop     len=0
  Inst 39782:   nop     len=0
  Inst 39783:   nop     len=0
  Inst 39784:   nop     len=0
  Inst 39785:   nop     len=0
  Inst 39786:   nop     len=0
  Inst 39787:   nop     len=0
  Inst 39788:   nop     len=0
  Inst 39789:   nop     len=0
  Inst 39790:   nop     len=0
  Inst 39791:   nop     len=0
  Inst 39792:   nop     len=0
  Inst 39793:   nop     len=0
  Inst 39794:   nop     len=0
  Inst 39795:   nop     len=0
  Inst 39796:   nop     len=0
  Inst 39797:   nop     len=0
  Inst 39798:   nop     len=0
  Inst 39799:   nop     len=0
  Inst 39800:   nop     len=0
  Inst 39801:   nop     len=0
  Inst 39802:   nop     len=0
  Inst 39803:   nop     len=0
  Inst 39804:   nop     len=0
  Inst 39805:   nop     len=0
  Inst 39806:   nop     len=0
  Inst 39807:   nop     len=0
  Inst 39808:   nop     len=0
  Inst 39809:   nop     len=0
  Inst 39810:   nop     len=0
  Inst 39811:   nop     len=0
  Inst 39812:   nop     len=0
  Inst 39813:   nop     len=0
  Inst 39814:   nop     len=0
  Inst 39815:   nop     len=0
  Inst 39816:   nop     len=0
  Inst 39817:   nop     len=0
  Inst 39818:   nop     len=0
  Inst 39819:   nop     len=0
  Inst 39820:   nop     len=0
  Inst 39821:   nop     len=0
  Inst 39822:   nop     len=0
  Inst 39823:   nop     len=0
  Inst 39824:   nop     len=0
  Inst 39825:   nop     len=0
  Inst 39826:   nop     len=0
  Inst 39827:   nop     len=0
  Inst 39828:   nop     len=0
  Inst 39829:   nop     len=0
  Inst 39830:   nop     len=0
  Inst 39831:   nop     len=0
  Inst 39832:   nop     len=0
  Inst 39833:   nop     len=0
  Inst 39834:   nop     len=0
  Inst 39835:   nop     len=0
  Inst 39836:   nop     len=0
  Inst 39837:   nop     len=0
  Inst 39838:   nop     len=0
  Inst 39839:   nop     len=0
  Inst 39840:   nop     len=0
  Inst 39841:   nop     len=0
  Inst 39842:   nop     len=0
  Inst 39843:   nop     len=0
  Inst 39844:   nop     len=0
  Inst 39845:   jmp     label972
Block 970:
  (original IR block: block487)
  (successor: Block 971)
  (instruction range: 39846 .. 39875)
  Inst 39846:   movq    rsp(2072 + virtual offset), %rsi
  Inst 39847:   movq    152(%rsi), %r13
  Inst 39848:   movq    %r14, %rbx
  Inst 39849:   addq    $-1, %rbx
  Inst 39850:   movq    %r14, %rdx
  Inst 39851:   shlq    $3, %rdx
  Inst 39852:   movq    %r13, %r12
  Inst 39853:   addq    %rdx, %r12
  Inst 39854:   movq    %r13, %rdi
  Inst 39855:   addq    $-24, %rdi
  Inst 39856:   movq    %r13, %rsi
  Inst 39857:   load_ext_name %Memmove+0, %rax
  Inst 39858:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S213, S215, S217, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39859:   call    *%rax
  Inst 39860:   movq    rsp(1496 + virtual offset), %r15
  Inst 39861:   load_ext_name u1:1+0, %rsi
  Inst 39862:   movl    $1, %edi
  Inst 39863:   movq    %rdi, -8(%r13,%r14,8)
  Inst 39864:   movl    $1, %edi
  Inst 39865:   movq    %rdi, -16(%r13,%r14,8)
  Inst 39866:   movq    %rsi, -24(%r13,%r14,8)
  Inst 39867:   movq    rsp(2072 + virtual offset), %rsi
  Inst 39868:   movq    %r12, 152(%rsi)
  Inst 39869:   movq    %r15, %rdi
  Inst 39870:   movq    %rbx, %rsi
  Inst 39871:   load_ext_name u0:3+0, %rax
  Inst 39872:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S213, S215, S217, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 39873:   call    *%rax
  Inst 39874:   jmp     label971
Block 971:
  (successor: Block 972)
  (instruction range: 39875 .. 39998)
  Inst 39875:   movq    %rax, rsp(1784 + virtual offset)
  Inst 39876:   nop     len=0
  Inst 39877:   nop     len=0
  Inst 39878:   nop     len=0
  Inst 39879:   nop     len=0
  Inst 39880:   nop     len=0
  Inst 39881:   nop     len=0
  Inst 39882:   nop     len=0
  Inst 39883:   nop     len=0
  Inst 39884:   nop     len=0
  Inst 39885:   nop     len=0
  Inst 39886:   nop     len=0
  Inst 39887:   nop     len=0
  Inst 39888:   nop     len=0
  Inst 39889:   nop     len=0
  Inst 39890:   nop     len=0
  Inst 39891:   nop     len=0
  Inst 39892:   nop     len=0
  Inst 39893:   nop     len=0
  Inst 39894:   nop     len=0
  Inst 39895:   nop     len=0
  Inst 39896:   nop     len=0
  Inst 39897:   nop     len=0
  Inst 39898:   nop     len=0
  Inst 39899:   nop     len=0
  Inst 39900:   nop     len=0
  Inst 39901:   nop     len=0
  Inst 39902:   nop     len=0
  Inst 39903:   nop     len=0
  Inst 39904:   nop     len=0
  Inst 39905:   nop     len=0
  Inst 39906:   nop     len=0
  Inst 39907:   nop     len=0
  Inst 39908:   nop     len=0
  Inst 39909:   nop     len=0
  Inst 39910:   nop     len=0
  Inst 39911:   nop     len=0
  Inst 39912:   nop     len=0
  Inst 39913:   nop     len=0
  Inst 39914:   nop     len=0
  Inst 39915:   nop     len=0
  Inst 39916:   nop     len=0
  Inst 39917:   nop     len=0
  Inst 39918:   nop     len=0
  Inst 39919:   nop     len=0
  Inst 39920:   nop     len=0
  Inst 39921:   nop     len=0
  Inst 39922:   nop     len=0
  Inst 39923:   nop     len=0
  Inst 39924:   nop     len=0
  Inst 39925:   nop     len=0
  Inst 39926:   nop     len=0
  Inst 39927:   nop     len=0
  Inst 39928:   nop     len=0
  Inst 39929:   nop     len=0
  Inst 39930:   nop     len=0
  Inst 39931:   nop     len=0
  Inst 39932:   nop     len=0
  Inst 39933:   nop     len=0
  Inst 39934:   nop     len=0
  Inst 39935:   nop     len=0
  Inst 39936:   nop     len=0
  Inst 39937:   nop     len=0
  Inst 39938:   nop     len=0
  Inst 39939:   nop     len=0
  Inst 39940:   nop     len=0
  Inst 39941:   nop     len=0
  Inst 39942:   nop     len=0
  Inst 39943:   nop     len=0
  Inst 39944:   nop     len=0
  Inst 39945:   nop     len=0
  Inst 39946:   nop     len=0
  Inst 39947:   nop     len=0
  Inst 39948:   nop     len=0
  Inst 39949:   nop     len=0
  Inst 39950:   nop     len=0
  Inst 39951:   nop     len=0
  Inst 39952:   nop     len=0
  Inst 39953:   nop     len=0
  Inst 39954:   nop     len=0
  Inst 39955:   nop     len=0
  Inst 39956:   nop     len=0
  Inst 39957:   nop     len=0
  Inst 39958:   nop     len=0
  Inst 39959:   nop     len=0
  Inst 39960:   nop     len=0
  Inst 39961:   nop     len=0
  Inst 39962:   nop     len=0
  Inst 39963:   nop     len=0
  Inst 39964:   nop     len=0
  Inst 39965:   nop     len=0
  Inst 39966:   nop     len=0
  Inst 39967:   nop     len=0
  Inst 39968:   nop     len=0
  Inst 39969:   nop     len=0
  Inst 39970:   nop     len=0
  Inst 39971:   nop     len=0
  Inst 39972:   nop     len=0
  Inst 39973:   nop     len=0
  Inst 39974:   nop     len=0
  Inst 39975:   nop     len=0
  Inst 39976:   nop     len=0
  Inst 39977:   nop     len=0
  Inst 39978:   nop     len=0
  Inst 39979:   nop     len=0
  Inst 39980:   nop     len=0
  Inst 39981:   nop     len=0
  Inst 39982:   nop     len=0
  Inst 39983:   nop     len=0
  Inst 39984:   nop     len=0
  Inst 39985:   nop     len=0
  Inst 39986:   nop     len=0
  Inst 39987:   nop     len=0
  Inst 39988:   nop     len=0
  Inst 39989:   nop     len=0
  Inst 39990:   nop     len=0
  Inst 39991:   nop     len=0
  Inst 39992:   nop     len=0
  Inst 39993:   nop     len=0
  Inst 39994:   nop     len=0
  Inst 39995:   nop     len=0
  Inst 39996:   nop     len=0
  Inst 39997:   jmp     label972
Block 972:
  (original IR block: block486)
  (successor: Block 973)
  (successor: Block 974)
  (instruction range: 39998 .. 40009)
  Inst 39998:   movq    rsp(2064 + virtual offset), %rsi
  Inst 39999:   movq    8(%rsi), %rdi
  Inst 40000:   movq    rsp(2048 + virtual offset), %rsi
  Inst 40001:   load_ext_name u0:2+0, %rax
  Inst 40002:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 40003:   movq    %rdi, rsp(1696 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S215, S217, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40004:   call    *%rax
  Inst 40005:   movq    %rax, %rbx
  Inst 40006:   movq    %rdx, %r14
  Inst 40007:   testq   %r14, %r14
  Inst 40008:   jz      label973; j label974
Block 973:
  (successor: Block 976)
  (instruction range: 40009 .. 40132)
  Inst 40009:   movq    %rbx, rsp(1696 + virtual offset)
  Inst 40010:   nop     len=0
  Inst 40011:   nop     len=0
  Inst 40012:   nop     len=0
  Inst 40013:   nop     len=0
  Inst 40014:   nop     len=0
  Inst 40015:   nop     len=0
  Inst 40016:   nop     len=0
  Inst 40017:   nop     len=0
  Inst 40018:   nop     len=0
  Inst 40019:   nop     len=0
  Inst 40020:   nop     len=0
  Inst 40021:   nop     len=0
  Inst 40022:   nop     len=0
  Inst 40023:   nop     len=0
  Inst 40024:   nop     len=0
  Inst 40025:   nop     len=0
  Inst 40026:   nop     len=0
  Inst 40027:   nop     len=0
  Inst 40028:   nop     len=0
  Inst 40029:   nop     len=0
  Inst 40030:   nop     len=0
  Inst 40031:   nop     len=0
  Inst 40032:   nop     len=0
  Inst 40033:   nop     len=0
  Inst 40034:   nop     len=0
  Inst 40035:   nop     len=0
  Inst 40036:   nop     len=0
  Inst 40037:   nop     len=0
  Inst 40038:   nop     len=0
  Inst 40039:   nop     len=0
  Inst 40040:   nop     len=0
  Inst 40041:   nop     len=0
  Inst 40042:   nop     len=0
  Inst 40043:   nop     len=0
  Inst 40044:   nop     len=0
  Inst 40045:   nop     len=0
  Inst 40046:   nop     len=0
  Inst 40047:   nop     len=0
  Inst 40048:   nop     len=0
  Inst 40049:   nop     len=0
  Inst 40050:   nop     len=0
  Inst 40051:   nop     len=0
  Inst 40052:   nop     len=0
  Inst 40053:   nop     len=0
  Inst 40054:   nop     len=0
  Inst 40055:   nop     len=0
  Inst 40056:   nop     len=0
  Inst 40057:   nop     len=0
  Inst 40058:   nop     len=0
  Inst 40059:   nop     len=0
  Inst 40060:   nop     len=0
  Inst 40061:   nop     len=0
  Inst 40062:   nop     len=0
  Inst 40063:   nop     len=0
  Inst 40064:   nop     len=0
  Inst 40065:   nop     len=0
  Inst 40066:   nop     len=0
  Inst 40067:   nop     len=0
  Inst 40068:   nop     len=0
  Inst 40069:   nop     len=0
  Inst 40070:   nop     len=0
  Inst 40071:   nop     len=0
  Inst 40072:   nop     len=0
  Inst 40073:   nop     len=0
  Inst 40074:   nop     len=0
  Inst 40075:   nop     len=0
  Inst 40076:   nop     len=0
  Inst 40077:   nop     len=0
  Inst 40078:   nop     len=0
  Inst 40079:   nop     len=0
  Inst 40080:   nop     len=0
  Inst 40081:   nop     len=0
  Inst 40082:   nop     len=0
  Inst 40083:   nop     len=0
  Inst 40084:   nop     len=0
  Inst 40085:   nop     len=0
  Inst 40086:   nop     len=0
  Inst 40087:   nop     len=0
  Inst 40088:   nop     len=0
  Inst 40089:   nop     len=0
  Inst 40090:   nop     len=0
  Inst 40091:   nop     len=0
  Inst 40092:   nop     len=0
  Inst 40093:   nop     len=0
  Inst 40094:   nop     len=0
  Inst 40095:   nop     len=0
  Inst 40096:   nop     len=0
  Inst 40097:   nop     len=0
  Inst 40098:   nop     len=0
  Inst 40099:   nop     len=0
  Inst 40100:   nop     len=0
  Inst 40101:   nop     len=0
  Inst 40102:   nop     len=0
  Inst 40103:   nop     len=0
  Inst 40104:   nop     len=0
  Inst 40105:   nop     len=0
  Inst 40106:   nop     len=0
  Inst 40107:   nop     len=0
  Inst 40108:   nop     len=0
  Inst 40109:   nop     len=0
  Inst 40110:   nop     len=0
  Inst 40111:   nop     len=0
  Inst 40112:   nop     len=0
  Inst 40113:   nop     len=0
  Inst 40114:   nop     len=0
  Inst 40115:   nop     len=0
  Inst 40116:   nop     len=0
  Inst 40117:   nop     len=0
  Inst 40118:   nop     len=0
  Inst 40119:   nop     len=0
  Inst 40120:   nop     len=0
  Inst 40121:   nop     len=0
  Inst 40122:   nop     len=0
  Inst 40123:   nop     len=0
  Inst 40124:   nop     len=0
  Inst 40125:   nop     len=0
  Inst 40126:   nop     len=0
  Inst 40127:   nop     len=0
  Inst 40128:   nop     len=0
  Inst 40129:   nop     len=0
  Inst 40130:   nop     len=0
  Inst 40131:   jmp     label976
Block 974:
  (original IR block: block489)
  (successor: Block 975)
  (instruction range: 40132 .. 40161)
  Inst 40132:   movq    rsp(2072 + virtual offset), %rsi
  Inst 40133:   movq    152(%rsi), %r13
  Inst 40134:   movq    %r14, %r15
  Inst 40135:   addq    $-1, %r15
  Inst 40136:   movq    %r14, %rdx
  Inst 40137:   shlq    $3, %rdx
  Inst 40138:   movq    %r13, %r12
  Inst 40139:   addq    %rdx, %r12
  Inst 40140:   movq    %r13, %rdi
  Inst 40141:   addq    $-24, %rdi
  Inst 40142:   movq    %r13, %rsi
  Inst 40143:   load_ext_name %Memmove+0, %rax
  Inst 40144:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S213, S215, S217, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40145:   call    *%rax
  Inst 40146:   movq    rsp(1496 + virtual offset), %rbx
  Inst 40147:   load_ext_name u1:1+0, %rsi
  Inst 40148:   movl    $1, %edi
  Inst 40149:   movq    %rdi, -8(%r13,%r14,8)
  Inst 40150:   movl    $1, %edi
  Inst 40151:   movq    %rdi, -16(%r13,%r14,8)
  Inst 40152:   movq    %rsi, -24(%r13,%r14,8)
  Inst 40153:   movq    rsp(2072 + virtual offset), %rsi
  Inst 40154:   movq    %r12, 152(%rsi)
  Inst 40155:   movq    %rbx, %rdi
  Inst 40156:   movq    %r15, %rsi
  Inst 40157:   load_ext_name u0:3+0, %rax
  Inst 40158:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S213, S215, S217, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40159:   call    *%rax
  Inst 40160:   jmp     label975
Block 975:
  (successor: Block 976)
  (instruction range: 40161 .. 40284)
  Inst 40161:   movq    %rax, rsp(1696 + virtual offset)
  Inst 40162:   nop     len=0
  Inst 40163:   nop     len=0
  Inst 40164:   nop     len=0
  Inst 40165:   nop     len=0
  Inst 40166:   nop     len=0
  Inst 40167:   nop     len=0
  Inst 40168:   nop     len=0
  Inst 40169:   nop     len=0
  Inst 40170:   nop     len=0
  Inst 40171:   nop     len=0
  Inst 40172:   nop     len=0
  Inst 40173:   nop     len=0
  Inst 40174:   nop     len=0
  Inst 40175:   nop     len=0
  Inst 40176:   nop     len=0
  Inst 40177:   nop     len=0
  Inst 40178:   nop     len=0
  Inst 40179:   nop     len=0
  Inst 40180:   nop     len=0
  Inst 40181:   nop     len=0
  Inst 40182:   nop     len=0
  Inst 40183:   nop     len=0
  Inst 40184:   nop     len=0
  Inst 40185:   nop     len=0
  Inst 40186:   nop     len=0
  Inst 40187:   nop     len=0
  Inst 40188:   nop     len=0
  Inst 40189:   nop     len=0
  Inst 40190:   nop     len=0
  Inst 40191:   nop     len=0
  Inst 40192:   nop     len=0
  Inst 40193:   nop     len=0
  Inst 40194:   nop     len=0
  Inst 40195:   nop     len=0
  Inst 40196:   nop     len=0
  Inst 40197:   nop     len=0
  Inst 40198:   nop     len=0
  Inst 40199:   nop     len=0
  Inst 40200:   nop     len=0
  Inst 40201:   nop     len=0
  Inst 40202:   nop     len=0
  Inst 40203:   nop     len=0
  Inst 40204:   nop     len=0
  Inst 40205:   nop     len=0
  Inst 40206:   nop     len=0
  Inst 40207:   nop     len=0
  Inst 40208:   nop     len=0
  Inst 40209:   nop     len=0
  Inst 40210:   nop     len=0
  Inst 40211:   nop     len=0
  Inst 40212:   nop     len=0
  Inst 40213:   nop     len=0
  Inst 40214:   nop     len=0
  Inst 40215:   nop     len=0
  Inst 40216:   nop     len=0
  Inst 40217:   nop     len=0
  Inst 40218:   nop     len=0
  Inst 40219:   nop     len=0
  Inst 40220:   nop     len=0
  Inst 40221:   nop     len=0
  Inst 40222:   nop     len=0
  Inst 40223:   nop     len=0
  Inst 40224:   nop     len=0
  Inst 40225:   nop     len=0
  Inst 40226:   nop     len=0
  Inst 40227:   nop     len=0
  Inst 40228:   nop     len=0
  Inst 40229:   nop     len=0
  Inst 40230:   nop     len=0
  Inst 40231:   nop     len=0
  Inst 40232:   nop     len=0
  Inst 40233:   nop     len=0
  Inst 40234:   nop     len=0
  Inst 40235:   nop     len=0
  Inst 40236:   nop     len=0
  Inst 40237:   nop     len=0
  Inst 40238:   nop     len=0
  Inst 40239:   nop     len=0
  Inst 40240:   nop     len=0
  Inst 40241:   nop     len=0
  Inst 40242:   nop     len=0
  Inst 40243:   nop     len=0
  Inst 40244:   nop     len=0
  Inst 40245:   nop     len=0
  Inst 40246:   nop     len=0
  Inst 40247:   nop     len=0
  Inst 40248:   nop     len=0
  Inst 40249:   nop     len=0
  Inst 40250:   nop     len=0
  Inst 40251:   nop     len=0
  Inst 40252:   nop     len=0
  Inst 40253:   nop     len=0
  Inst 40254:   nop     len=0
  Inst 40255:   nop     len=0
  Inst 40256:   nop     len=0
  Inst 40257:   nop     len=0
  Inst 40258:   nop     len=0
  Inst 40259:   nop     len=0
  Inst 40260:   nop     len=0
  Inst 40261:   nop     len=0
  Inst 40262:   nop     len=0
  Inst 40263:   nop     len=0
  Inst 40264:   nop     len=0
  Inst 40265:   nop     len=0
  Inst 40266:   nop     len=0
  Inst 40267:   nop     len=0
  Inst 40268:   nop     len=0
  Inst 40269:   nop     len=0
  Inst 40270:   nop     len=0
  Inst 40271:   nop     len=0
  Inst 40272:   nop     len=0
  Inst 40273:   nop     len=0
  Inst 40274:   nop     len=0
  Inst 40275:   nop     len=0
  Inst 40276:   nop     len=0
  Inst 40277:   nop     len=0
  Inst 40278:   nop     len=0
  Inst 40279:   nop     len=0
  Inst 40280:   nop     len=0
  Inst 40281:   nop     len=0
  Inst 40282:   nop     len=0
  Inst 40283:   jmp     label976
Block 976:
  (original IR block: block488)
  (successor: Block 977)
  (successor: Block 978)
  (instruction range: 40284 .. 40295)
  Inst 40284:   movq    rsp(2064 + virtual offset), %rsi
  Inst 40285:   movq    8(%rsi), %rdi
  Inst 40286:   movq    rsp(2048 + virtual offset), %rsi
  Inst 40287:   load_ext_name u0:2+0, %rax
  Inst 40288:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 40289:   movq    %rdi, rsp(1712 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S217, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40290:   call    *%rax
  Inst 40291:   movq    %rax, %rbx
  Inst 40292:   movq    %rdx, %r14
  Inst 40293:   testq   %r14, %r14
  Inst 40294:   jz      label977; j label978
Block 977:
  (successor: Block 980)
  (instruction range: 40295 .. 40419)
  Inst 40295:   movq    %rbx, rsp(1776 + virtual offset)
  Inst 40296:   nop     len=0
  Inst 40297:   nop     len=0
  Inst 40298:   nop     len=0
  Inst 40299:   nop     len=0
  Inst 40300:   nop     len=0
  Inst 40301:   nop     len=0
  Inst 40302:   nop     len=0
  Inst 40303:   nop     len=0
  Inst 40304:   nop     len=0
  Inst 40305:   nop     len=0
  Inst 40306:   nop     len=0
  Inst 40307:   nop     len=0
  Inst 40308:   nop     len=0
  Inst 40309:   nop     len=0
  Inst 40310:   nop     len=0
  Inst 40311:   nop     len=0
  Inst 40312:   nop     len=0
  Inst 40313:   nop     len=0
  Inst 40314:   nop     len=0
  Inst 40315:   nop     len=0
  Inst 40316:   nop     len=0
  Inst 40317:   nop     len=0
  Inst 40318:   nop     len=0
  Inst 40319:   nop     len=0
  Inst 40320:   nop     len=0
  Inst 40321:   nop     len=0
  Inst 40322:   nop     len=0
  Inst 40323:   nop     len=0
  Inst 40324:   nop     len=0
  Inst 40325:   nop     len=0
  Inst 40326:   nop     len=0
  Inst 40327:   nop     len=0
  Inst 40328:   nop     len=0
  Inst 40329:   nop     len=0
  Inst 40330:   nop     len=0
  Inst 40331:   nop     len=0
  Inst 40332:   nop     len=0
  Inst 40333:   nop     len=0
  Inst 40334:   nop     len=0
  Inst 40335:   nop     len=0
  Inst 40336:   nop     len=0
  Inst 40337:   nop     len=0
  Inst 40338:   nop     len=0
  Inst 40339:   nop     len=0
  Inst 40340:   nop     len=0
  Inst 40341:   nop     len=0
  Inst 40342:   nop     len=0
  Inst 40343:   nop     len=0
  Inst 40344:   nop     len=0
  Inst 40345:   nop     len=0
  Inst 40346:   nop     len=0
  Inst 40347:   nop     len=0
  Inst 40348:   nop     len=0
  Inst 40349:   nop     len=0
  Inst 40350:   nop     len=0
  Inst 40351:   nop     len=0
  Inst 40352:   nop     len=0
  Inst 40353:   nop     len=0
  Inst 40354:   nop     len=0
  Inst 40355:   nop     len=0
  Inst 40356:   nop     len=0
  Inst 40357:   nop     len=0
  Inst 40358:   nop     len=0
  Inst 40359:   nop     len=0
  Inst 40360:   nop     len=0
  Inst 40361:   nop     len=0
  Inst 40362:   nop     len=0
  Inst 40363:   nop     len=0
  Inst 40364:   nop     len=0
  Inst 40365:   nop     len=0
  Inst 40366:   nop     len=0
  Inst 40367:   nop     len=0
  Inst 40368:   nop     len=0
  Inst 40369:   nop     len=0
  Inst 40370:   nop     len=0
  Inst 40371:   nop     len=0
  Inst 40372:   nop     len=0
  Inst 40373:   nop     len=0
  Inst 40374:   nop     len=0
  Inst 40375:   nop     len=0
  Inst 40376:   nop     len=0
  Inst 40377:   nop     len=0
  Inst 40378:   nop     len=0
  Inst 40379:   nop     len=0
  Inst 40380:   nop     len=0
  Inst 40381:   nop     len=0
  Inst 40382:   nop     len=0
  Inst 40383:   nop     len=0
  Inst 40384:   nop     len=0
  Inst 40385:   nop     len=0
  Inst 40386:   nop     len=0
  Inst 40387:   nop     len=0
  Inst 40388:   nop     len=0
  Inst 40389:   nop     len=0
  Inst 40390:   nop     len=0
  Inst 40391:   nop     len=0
  Inst 40392:   nop     len=0
  Inst 40393:   nop     len=0
  Inst 40394:   nop     len=0
  Inst 40395:   nop     len=0
  Inst 40396:   nop     len=0
  Inst 40397:   nop     len=0
  Inst 40398:   nop     len=0
  Inst 40399:   nop     len=0
  Inst 40400:   nop     len=0
  Inst 40401:   nop     len=0
  Inst 40402:   nop     len=0
  Inst 40403:   nop     len=0
  Inst 40404:   nop     len=0
  Inst 40405:   nop     len=0
  Inst 40406:   nop     len=0
  Inst 40407:   nop     len=0
  Inst 40408:   nop     len=0
  Inst 40409:   nop     len=0
  Inst 40410:   nop     len=0
  Inst 40411:   nop     len=0
  Inst 40412:   nop     len=0
  Inst 40413:   nop     len=0
  Inst 40414:   nop     len=0
  Inst 40415:   nop     len=0
  Inst 40416:   nop     len=0
  Inst 40417:   nop     len=0
  Inst 40418:   jmp     label980
Block 978:
  (original IR block: block491)
  (successor: Block 979)
  (instruction range: 40419 .. 40448)
  Inst 40419:   movq    rsp(2072 + virtual offset), %rsi
  Inst 40420:   movq    152(%rsi), %r13
  Inst 40421:   movq    %r14, %r15
  Inst 40422:   addq    $-1, %r15
  Inst 40423:   movq    %r14, %rdx
  Inst 40424:   shlq    $3, %rdx
  Inst 40425:   movq    %r13, %r12
  Inst 40426:   addq    %rdx, %r12
  Inst 40427:   movq    %r13, %rdi
  Inst 40428:   addq    $-24, %rdi
  Inst 40429:   movq    %r13, %rsi
  Inst 40430:   load_ext_name %Memmove+0, %rax
  Inst 40431:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S215, S217, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40432:   call    *%rax
  Inst 40433:   movq    rsp(1496 + virtual offset), %rbx
  Inst 40434:   load_ext_name u1:1+0, %rsi
  Inst 40435:   movl    $1, %edi
  Inst 40436:   movq    %rdi, -8(%r13,%r14,8)
  Inst 40437:   movl    $1, %edi
  Inst 40438:   movq    %rdi, -16(%r13,%r14,8)
  Inst 40439:   movq    %rsi, -24(%r13,%r14,8)
  Inst 40440:   movq    rsp(2072 + virtual offset), %rsi
  Inst 40441:   movq    %r12, 152(%rsi)
  Inst 40442:   movq    %rbx, %rdi
  Inst 40443:   movq    %r15, %rsi
  Inst 40444:   load_ext_name u0:3+0, %rax
  Inst 40445:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S215, S217, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40446:   call    *%rax
  Inst 40447:   jmp     label979
Block 979:
  (successor: Block 980)
  (instruction range: 40448 .. 40572)
  Inst 40448:   movq    %rax, rsp(1776 + virtual offset)
  Inst 40449:   nop     len=0
  Inst 40450:   nop     len=0
  Inst 40451:   nop     len=0
  Inst 40452:   nop     len=0
  Inst 40453:   nop     len=0
  Inst 40454:   nop     len=0
  Inst 40455:   nop     len=0
  Inst 40456:   nop     len=0
  Inst 40457:   nop     len=0
  Inst 40458:   nop     len=0
  Inst 40459:   nop     len=0
  Inst 40460:   nop     len=0
  Inst 40461:   nop     len=0
  Inst 40462:   nop     len=0
  Inst 40463:   nop     len=0
  Inst 40464:   nop     len=0
  Inst 40465:   nop     len=0
  Inst 40466:   nop     len=0
  Inst 40467:   nop     len=0
  Inst 40468:   nop     len=0
  Inst 40469:   nop     len=0
  Inst 40470:   nop     len=0
  Inst 40471:   nop     len=0
  Inst 40472:   nop     len=0
  Inst 40473:   nop     len=0
  Inst 40474:   nop     len=0
  Inst 40475:   nop     len=0
  Inst 40476:   nop     len=0
  Inst 40477:   nop     len=0
  Inst 40478:   nop     len=0
  Inst 40479:   nop     len=0
  Inst 40480:   nop     len=0
  Inst 40481:   nop     len=0
  Inst 40482:   nop     len=0
  Inst 40483:   nop     len=0
  Inst 40484:   nop     len=0
  Inst 40485:   nop     len=0
  Inst 40486:   nop     len=0
  Inst 40487:   nop     len=0
  Inst 40488:   nop     len=0
  Inst 40489:   nop     len=0
  Inst 40490:   nop     len=0
  Inst 40491:   nop     len=0
  Inst 40492:   nop     len=0
  Inst 40493:   nop     len=0
  Inst 40494:   nop     len=0
  Inst 40495:   nop     len=0
  Inst 40496:   nop     len=0
  Inst 40497:   nop     len=0
  Inst 40498:   nop     len=0
  Inst 40499:   nop     len=0
  Inst 40500:   nop     len=0
  Inst 40501:   nop     len=0
  Inst 40502:   nop     len=0
  Inst 40503:   nop     len=0
  Inst 40504:   nop     len=0
  Inst 40505:   nop     len=0
  Inst 40506:   nop     len=0
  Inst 40507:   nop     len=0
  Inst 40508:   nop     len=0
  Inst 40509:   nop     len=0
  Inst 40510:   nop     len=0
  Inst 40511:   nop     len=0
  Inst 40512:   nop     len=0
  Inst 40513:   nop     len=0
  Inst 40514:   nop     len=0
  Inst 40515:   nop     len=0
  Inst 40516:   nop     len=0
  Inst 40517:   nop     len=0
  Inst 40518:   nop     len=0
  Inst 40519:   nop     len=0
  Inst 40520:   nop     len=0
  Inst 40521:   nop     len=0
  Inst 40522:   nop     len=0
  Inst 40523:   nop     len=0
  Inst 40524:   nop     len=0
  Inst 40525:   nop     len=0
  Inst 40526:   nop     len=0
  Inst 40527:   nop     len=0
  Inst 40528:   nop     len=0
  Inst 40529:   nop     len=0
  Inst 40530:   nop     len=0
  Inst 40531:   nop     len=0
  Inst 40532:   nop     len=0
  Inst 40533:   nop     len=0
  Inst 40534:   nop     len=0
  Inst 40535:   nop     len=0
  Inst 40536:   nop     len=0
  Inst 40537:   nop     len=0
  Inst 40538:   nop     len=0
  Inst 40539:   nop     len=0
  Inst 40540:   nop     len=0
  Inst 40541:   nop     len=0
  Inst 40542:   nop     len=0
  Inst 40543:   nop     len=0
  Inst 40544:   nop     len=0
  Inst 40545:   nop     len=0
  Inst 40546:   nop     len=0
  Inst 40547:   nop     len=0
  Inst 40548:   nop     len=0
  Inst 40549:   nop     len=0
  Inst 40550:   nop     len=0
  Inst 40551:   nop     len=0
  Inst 40552:   nop     len=0
  Inst 40553:   nop     len=0
  Inst 40554:   nop     len=0
  Inst 40555:   nop     len=0
  Inst 40556:   nop     len=0
  Inst 40557:   nop     len=0
  Inst 40558:   nop     len=0
  Inst 40559:   nop     len=0
  Inst 40560:   nop     len=0
  Inst 40561:   nop     len=0
  Inst 40562:   nop     len=0
  Inst 40563:   nop     len=0
  Inst 40564:   nop     len=0
  Inst 40565:   nop     len=0
  Inst 40566:   nop     len=0
  Inst 40567:   nop     len=0
  Inst 40568:   nop     len=0
  Inst 40569:   nop     len=0
  Inst 40570:   nop     len=0
  Inst 40571:   jmp     label980
Block 980:
  (original IR block: block490)
  (successor: Block 981)
  (successor: Block 982)
  (instruction range: 40572 .. 40583)
  Inst 40572:   movq    rsp(2064 + virtual offset), %rsi
  Inst 40573:   movq    8(%rsi), %rdi
  Inst 40574:   movq    rsp(2048 + virtual offset), %rsi
  Inst 40575:   load_ext_name u0:2+0, %rax
  Inst 40576:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 40577:   movq    %rdi, rsp(1712 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S217, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40578:   call    *%rax
  Inst 40579:   movq    %rax, %r15
  Inst 40580:   movq    %rdx, %r14
  Inst 40581:   testq   %r14, %r14
  Inst 40582:   jz      label981; j label982
Block 981:
  (successor: Block 984)
  (instruction range: 40583 .. 40707)
  Inst 40583:   movq    %r15, rsp(1712 + virtual offset)
  Inst 40584:   nop     len=0
  Inst 40585:   nop     len=0
  Inst 40586:   nop     len=0
  Inst 40587:   nop     len=0
  Inst 40588:   nop     len=0
  Inst 40589:   nop     len=0
  Inst 40590:   nop     len=0
  Inst 40591:   nop     len=0
  Inst 40592:   nop     len=0
  Inst 40593:   nop     len=0
  Inst 40594:   nop     len=0
  Inst 40595:   nop     len=0
  Inst 40596:   nop     len=0
  Inst 40597:   nop     len=0
  Inst 40598:   nop     len=0
  Inst 40599:   nop     len=0
  Inst 40600:   nop     len=0
  Inst 40601:   nop     len=0
  Inst 40602:   nop     len=0
  Inst 40603:   nop     len=0
  Inst 40604:   nop     len=0
  Inst 40605:   nop     len=0
  Inst 40606:   nop     len=0
  Inst 40607:   nop     len=0
  Inst 40608:   nop     len=0
  Inst 40609:   nop     len=0
  Inst 40610:   nop     len=0
  Inst 40611:   nop     len=0
  Inst 40612:   nop     len=0
  Inst 40613:   nop     len=0
  Inst 40614:   nop     len=0
  Inst 40615:   nop     len=0
  Inst 40616:   nop     len=0
  Inst 40617:   nop     len=0
  Inst 40618:   nop     len=0
  Inst 40619:   nop     len=0
  Inst 40620:   nop     len=0
  Inst 40621:   nop     len=0
  Inst 40622:   nop     len=0
  Inst 40623:   nop     len=0
  Inst 40624:   nop     len=0
  Inst 40625:   nop     len=0
  Inst 40626:   nop     len=0
  Inst 40627:   nop     len=0
  Inst 40628:   nop     len=0
  Inst 40629:   nop     len=0
  Inst 40630:   nop     len=0
  Inst 40631:   nop     len=0
  Inst 40632:   nop     len=0
  Inst 40633:   nop     len=0
  Inst 40634:   nop     len=0
  Inst 40635:   nop     len=0
  Inst 40636:   nop     len=0
  Inst 40637:   nop     len=0
  Inst 40638:   nop     len=0
  Inst 40639:   nop     len=0
  Inst 40640:   nop     len=0
  Inst 40641:   nop     len=0
  Inst 40642:   nop     len=0
  Inst 40643:   nop     len=0
  Inst 40644:   nop     len=0
  Inst 40645:   nop     len=0
  Inst 40646:   nop     len=0
  Inst 40647:   nop     len=0
  Inst 40648:   nop     len=0
  Inst 40649:   nop     len=0
  Inst 40650:   nop     len=0
  Inst 40651:   nop     len=0
  Inst 40652:   nop     len=0
  Inst 40653:   nop     len=0
  Inst 40654:   nop     len=0
  Inst 40655:   nop     len=0
  Inst 40656:   nop     len=0
  Inst 40657:   nop     len=0
  Inst 40658:   nop     len=0
  Inst 40659:   nop     len=0
  Inst 40660:   nop     len=0
  Inst 40661:   nop     len=0
  Inst 40662:   nop     len=0
  Inst 40663:   nop     len=0
  Inst 40664:   nop     len=0
  Inst 40665:   nop     len=0
  Inst 40666:   nop     len=0
  Inst 40667:   nop     len=0
  Inst 40668:   nop     len=0
  Inst 40669:   nop     len=0
  Inst 40670:   nop     len=0
  Inst 40671:   nop     len=0
  Inst 40672:   nop     len=0
  Inst 40673:   nop     len=0
  Inst 40674:   nop     len=0
  Inst 40675:   nop     len=0
  Inst 40676:   nop     len=0
  Inst 40677:   nop     len=0
  Inst 40678:   nop     len=0
  Inst 40679:   nop     len=0
  Inst 40680:   nop     len=0
  Inst 40681:   nop     len=0
  Inst 40682:   nop     len=0
  Inst 40683:   nop     len=0
  Inst 40684:   nop     len=0
  Inst 40685:   nop     len=0
  Inst 40686:   nop     len=0
  Inst 40687:   nop     len=0
  Inst 40688:   nop     len=0
  Inst 40689:   nop     len=0
  Inst 40690:   nop     len=0
  Inst 40691:   nop     len=0
  Inst 40692:   nop     len=0
  Inst 40693:   nop     len=0
  Inst 40694:   nop     len=0
  Inst 40695:   nop     len=0
  Inst 40696:   nop     len=0
  Inst 40697:   nop     len=0
  Inst 40698:   nop     len=0
  Inst 40699:   nop     len=0
  Inst 40700:   nop     len=0
  Inst 40701:   nop     len=0
  Inst 40702:   nop     len=0
  Inst 40703:   nop     len=0
  Inst 40704:   nop     len=0
  Inst 40705:   nop     len=0
  Inst 40706:   jmp     label984
Block 982:
  (original IR block: block493)
  (successor: Block 983)
  (instruction range: 40707 .. 40736)
  Inst 40707:   movq    rsp(2072 + virtual offset), %rsi
  Inst 40708:   movq    152(%rsi), %r13
  Inst 40709:   movq    %r14, %rbx
  Inst 40710:   addq    $-1, %rbx
  Inst 40711:   movq    %r14, %rdx
  Inst 40712:   shlq    $3, %rdx
  Inst 40713:   movq    %r13, %r12
  Inst 40714:   addq    %rdx, %r12
  Inst 40715:   movq    %r13, %rdi
  Inst 40716:   addq    $-24, %rdi
  Inst 40717:   movq    %r13, %rsi
  Inst 40718:   load_ext_name %Memmove+0, %rax
  Inst 40719:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S215, S217, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40720:   call    *%rax
  Inst 40721:   movq    rsp(1496 + virtual offset), %r15
  Inst 40722:   load_ext_name u1:1+0, %rsi
  Inst 40723:   movl    $1, %edi
  Inst 40724:   movq    %rdi, -8(%r13,%r14,8)
  Inst 40725:   movl    $1, %edi
  Inst 40726:   movq    %rdi, -16(%r13,%r14,8)
  Inst 40727:   movq    %rsi, -24(%r13,%r14,8)
  Inst 40728:   movq    rsp(2072 + virtual offset), %rsi
  Inst 40729:   movq    %r12, 152(%rsi)
  Inst 40730:   movq    %r15, %rdi
  Inst 40731:   movq    %rbx, %rsi
  Inst 40732:   load_ext_name u0:3+0, %rax
  Inst 40733:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S215, S217, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40734:   call    *%rax
  Inst 40735:   jmp     label983
Block 983:
  (successor: Block 984)
  (instruction range: 40736 .. 40860)
  Inst 40736:   movq    %rax, rsp(1712 + virtual offset)
  Inst 40737:   nop     len=0
  Inst 40738:   nop     len=0
  Inst 40739:   nop     len=0
  Inst 40740:   nop     len=0
  Inst 40741:   nop     len=0
  Inst 40742:   nop     len=0
  Inst 40743:   nop     len=0
  Inst 40744:   nop     len=0
  Inst 40745:   nop     len=0
  Inst 40746:   nop     len=0
  Inst 40747:   nop     len=0
  Inst 40748:   nop     len=0
  Inst 40749:   nop     len=0
  Inst 40750:   nop     len=0
  Inst 40751:   nop     len=0
  Inst 40752:   nop     len=0
  Inst 40753:   nop     len=0
  Inst 40754:   nop     len=0
  Inst 40755:   nop     len=0
  Inst 40756:   nop     len=0
  Inst 40757:   nop     len=0
  Inst 40758:   nop     len=0
  Inst 40759:   nop     len=0
  Inst 40760:   nop     len=0
  Inst 40761:   nop     len=0
  Inst 40762:   nop     len=0
  Inst 40763:   nop     len=0
  Inst 40764:   nop     len=0
  Inst 40765:   nop     len=0
  Inst 40766:   nop     len=0
  Inst 40767:   nop     len=0
  Inst 40768:   nop     len=0
  Inst 40769:   nop     len=0
  Inst 40770:   nop     len=0
  Inst 40771:   nop     len=0
  Inst 40772:   nop     len=0
  Inst 40773:   nop     len=0
  Inst 40774:   nop     len=0
  Inst 40775:   nop     len=0
  Inst 40776:   nop     len=0
  Inst 40777:   nop     len=0
  Inst 40778:   nop     len=0
  Inst 40779:   nop     len=0
  Inst 40780:   nop     len=0
  Inst 40781:   nop     len=0
  Inst 40782:   nop     len=0
  Inst 40783:   nop     len=0
  Inst 40784:   nop     len=0
  Inst 40785:   nop     len=0
  Inst 40786:   nop     len=0
  Inst 40787:   nop     len=0
  Inst 40788:   nop     len=0
  Inst 40789:   nop     len=0
  Inst 40790:   nop     len=0
  Inst 40791:   nop     len=0
  Inst 40792:   nop     len=0
  Inst 40793:   nop     len=0
  Inst 40794:   nop     len=0
  Inst 40795:   nop     len=0
  Inst 40796:   nop     len=0
  Inst 40797:   nop     len=0
  Inst 40798:   nop     len=0
  Inst 40799:   nop     len=0
  Inst 40800:   nop     len=0
  Inst 40801:   nop     len=0
  Inst 40802:   nop     len=0
  Inst 40803:   nop     len=0
  Inst 40804:   nop     len=0
  Inst 40805:   nop     len=0
  Inst 40806:   nop     len=0
  Inst 40807:   nop     len=0
  Inst 40808:   nop     len=0
  Inst 40809:   nop     len=0
  Inst 40810:   nop     len=0
  Inst 40811:   nop     len=0
  Inst 40812:   nop     len=0
  Inst 40813:   nop     len=0
  Inst 40814:   nop     len=0
  Inst 40815:   nop     len=0
  Inst 40816:   nop     len=0
  Inst 40817:   nop     len=0
  Inst 40818:   nop     len=0
  Inst 40819:   nop     len=0
  Inst 40820:   nop     len=0
  Inst 40821:   nop     len=0
  Inst 40822:   nop     len=0
  Inst 40823:   nop     len=0
  Inst 40824:   nop     len=0
  Inst 40825:   nop     len=0
  Inst 40826:   nop     len=0
  Inst 40827:   nop     len=0
  Inst 40828:   nop     len=0
  Inst 40829:   nop     len=0
  Inst 40830:   nop     len=0
  Inst 40831:   nop     len=0
  Inst 40832:   nop     len=0
  Inst 40833:   nop     len=0
  Inst 40834:   nop     len=0
  Inst 40835:   nop     len=0
  Inst 40836:   nop     len=0
  Inst 40837:   nop     len=0
  Inst 40838:   nop     len=0
  Inst 40839:   nop     len=0
  Inst 40840:   nop     len=0
  Inst 40841:   nop     len=0
  Inst 40842:   nop     len=0
  Inst 40843:   nop     len=0
  Inst 40844:   nop     len=0
  Inst 40845:   nop     len=0
  Inst 40846:   nop     len=0
  Inst 40847:   nop     len=0
  Inst 40848:   nop     len=0
  Inst 40849:   nop     len=0
  Inst 40850:   nop     len=0
  Inst 40851:   nop     len=0
  Inst 40852:   nop     len=0
  Inst 40853:   nop     len=0
  Inst 40854:   nop     len=0
  Inst 40855:   nop     len=0
  Inst 40856:   nop     len=0
  Inst 40857:   nop     len=0
  Inst 40858:   nop     len=0
  Inst 40859:   jmp     label984
Block 984:
  (original IR block: block492)
  (successor: Block 985)
  (successor: Block 986)
  (instruction range: 40860 .. 40871)
  Inst 40860:   movq    rsp(2064 + virtual offset), %rsi
  Inst 40861:   movq    8(%rsi), %rdi
  Inst 40862:   movq    rsp(2048 + virtual offset), %rsi
  Inst 40863:   load_ext_name u0:2+0, %rax
  Inst 40864:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 40865:   movq    %rdi, rsp(1728 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 40866:   call    *%rax
  Inst 40867:   movq    %rax, %rbx
  Inst 40868:   movq    %rdx, %r14
  Inst 40869:   testq   %r14, %r14
  Inst 40870:   jz      label985; j label986
Block 985:
  (successor: Block 988)
  (instruction range: 40871 .. 40996)
  Inst 40871:   movq    %rbx, rsp(1768 + virtual offset)
  Inst 40872:   nop     len=0
  Inst 40873:   nop     len=0
  Inst 40874:   nop     len=0
  Inst 40875:   nop     len=0
  Inst 40876:   nop     len=0
  Inst 40877:   nop     len=0
  Inst 40878:   nop     len=0
  Inst 40879:   nop     len=0
  Inst 40880:   nop     len=0
  Inst 40881:   nop     len=0
  Inst 40882:   nop     len=0
  Inst 40883:   nop     len=0
  Inst 40884:   nop     len=0
  Inst 40885:   nop     len=0
  Inst 40886:   nop     len=0
  Inst 40887:   nop     len=0
  Inst 40888:   nop     len=0
  Inst 40889:   nop     len=0
  Inst 40890:   nop     len=0
  Inst 40891:   nop     len=0
  Inst 40892:   nop     len=0
  Inst 40893:   nop     len=0
  Inst 40894:   nop     len=0
  Inst 40895:   nop     len=0
  Inst 40896:   nop     len=0
  Inst 40897:   nop     len=0
  Inst 40898:   nop     len=0
  Inst 40899:   nop     len=0
  Inst 40900:   nop     len=0
  Inst 40901:   nop     len=0
  Inst 40902:   nop     len=0
  Inst 40903:   nop     len=0
  Inst 40904:   nop     len=0
  Inst 40905:   nop     len=0
  Inst 40906:   nop     len=0
  Inst 40907:   nop     len=0
  Inst 40908:   nop     len=0
  Inst 40909:   nop     len=0
  Inst 40910:   nop     len=0
  Inst 40911:   nop     len=0
  Inst 40912:   nop     len=0
  Inst 40913:   nop     len=0
  Inst 40914:   nop     len=0
  Inst 40915:   nop     len=0
  Inst 40916:   nop     len=0
  Inst 40917:   nop     len=0
  Inst 40918:   nop     len=0
  Inst 40919:   nop     len=0
  Inst 40920:   nop     len=0
  Inst 40921:   nop     len=0
  Inst 40922:   nop     len=0
  Inst 40923:   nop     len=0
  Inst 40924:   nop     len=0
  Inst 40925:   nop     len=0
  Inst 40926:   nop     len=0
  Inst 40927:   nop     len=0
  Inst 40928:   nop     len=0
  Inst 40929:   nop     len=0
  Inst 40930:   nop     len=0
  Inst 40931:   nop     len=0
  Inst 40932:   nop     len=0
  Inst 40933:   nop     len=0
  Inst 40934:   nop     len=0
  Inst 40935:   nop     len=0
  Inst 40936:   nop     len=0
  Inst 40937:   nop     len=0
  Inst 40938:   nop     len=0
  Inst 40939:   nop     len=0
  Inst 40940:   nop     len=0
  Inst 40941:   nop     len=0
  Inst 40942:   nop     len=0
  Inst 40943:   nop     len=0
  Inst 40944:   nop     len=0
  Inst 40945:   nop     len=0
  Inst 40946:   nop     len=0
  Inst 40947:   nop     len=0
  Inst 40948:   nop     len=0
  Inst 40949:   nop     len=0
  Inst 40950:   nop     len=0
  Inst 40951:   nop     len=0
  Inst 40952:   nop     len=0
  Inst 40953:   nop     len=0
  Inst 40954:   nop     len=0
  Inst 40955:   nop     len=0
  Inst 40956:   nop     len=0
  Inst 40957:   nop     len=0
  Inst 40958:   nop     len=0
  Inst 40959:   nop     len=0
  Inst 40960:   nop     len=0
  Inst 40961:   nop     len=0
  Inst 40962:   nop     len=0
  Inst 40963:   nop     len=0
  Inst 40964:   nop     len=0
  Inst 40965:   nop     len=0
  Inst 40966:   nop     len=0
  Inst 40967:   nop     len=0
  Inst 40968:   nop     len=0
  Inst 40969:   nop     len=0
  Inst 40970:   nop     len=0
  Inst 40971:   nop     len=0
  Inst 40972:   nop     len=0
  Inst 40973:   nop     len=0
  Inst 40974:   nop     len=0
  Inst 40975:   nop     len=0
  Inst 40976:   nop     len=0
  Inst 40977:   nop     len=0
  Inst 40978:   nop     len=0
  Inst 40979:   nop     len=0
  Inst 40980:   nop     len=0
  Inst 40981:   nop     len=0
  Inst 40982:   nop     len=0
  Inst 40983:   nop     len=0
  Inst 40984:   nop     len=0
  Inst 40985:   nop     len=0
  Inst 40986:   nop     len=0
  Inst 40987:   nop     len=0
  Inst 40988:   nop     len=0
  Inst 40989:   nop     len=0
  Inst 40990:   nop     len=0
  Inst 40991:   nop     len=0
  Inst 40992:   nop     len=0
  Inst 40993:   nop     len=0
  Inst 40994:   nop     len=0
  Inst 40995:   jmp     label988
Block 986:
  (original IR block: block495)
  (successor: Block 987)
  (instruction range: 40996 .. 41025)
  Inst 40996:   movq    rsp(2072 + virtual offset), %rsi
  Inst 40997:   movq    152(%rsi), %r13
  Inst 40998:   movq    %r14, %r15
  Inst 40999:   addq    $-1, %r15
  Inst 41000:   movq    %r14, %rdx
  Inst 41001:   shlq    $3, %rdx
  Inst 41002:   movq    %r13, %r12
  Inst 41003:   addq    %rdx, %r12
  Inst 41004:   movq    %r13, %rdi
  Inst 41005:   addq    $-24, %rdi
  Inst 41006:   movq    %r13, %rsi
  Inst 41007:   load_ext_name %Memmove+0, %rax
  Inst 41008:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S217, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41009:   call    *%rax
  Inst 41010:   movq    rsp(1496 + virtual offset), %rbx
  Inst 41011:   load_ext_name u1:1+0, %rsi
  Inst 41012:   movl    $1, %edi
  Inst 41013:   movq    %rdi, -8(%r13,%r14,8)
  Inst 41014:   movl    $1, %edi
  Inst 41015:   movq    %rdi, -16(%r13,%r14,8)
  Inst 41016:   movq    %rsi, -24(%r13,%r14,8)
  Inst 41017:   movq    rsp(2072 + virtual offset), %rsi
  Inst 41018:   movq    %r12, 152(%rsi)
  Inst 41019:   movq    %rbx, %rdi
  Inst 41020:   movq    %r15, %rsi
  Inst 41021:   load_ext_name u0:3+0, %rax
  Inst 41022:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S217, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41023:   call    *%rax
  Inst 41024:   jmp     label987
Block 987:
  (successor: Block 988)
  (instruction range: 41025 .. 41150)
  Inst 41025:   movq    %rax, rsp(1768 + virtual offset)
  Inst 41026:   nop     len=0
  Inst 41027:   nop     len=0
  Inst 41028:   nop     len=0
  Inst 41029:   nop     len=0
  Inst 41030:   nop     len=0
  Inst 41031:   nop     len=0
  Inst 41032:   nop     len=0
  Inst 41033:   nop     len=0
  Inst 41034:   nop     len=0
  Inst 41035:   nop     len=0
  Inst 41036:   nop     len=0
  Inst 41037:   nop     len=0
  Inst 41038:   nop     len=0
  Inst 41039:   nop     len=0
  Inst 41040:   nop     len=0
  Inst 41041:   nop     len=0
  Inst 41042:   nop     len=0
  Inst 41043:   nop     len=0
  Inst 41044:   nop     len=0
  Inst 41045:   nop     len=0
  Inst 41046:   nop     len=0
  Inst 41047:   nop     len=0
  Inst 41048:   nop     len=0
  Inst 41049:   nop     len=0
  Inst 41050:   nop     len=0
  Inst 41051:   nop     len=0
  Inst 41052:   nop     len=0
  Inst 41053:   nop     len=0
  Inst 41054:   nop     len=0
  Inst 41055:   nop     len=0
  Inst 41056:   nop     len=0
  Inst 41057:   nop     len=0
  Inst 41058:   nop     len=0
  Inst 41059:   nop     len=0
  Inst 41060:   nop     len=0
  Inst 41061:   nop     len=0
  Inst 41062:   nop     len=0
  Inst 41063:   nop     len=0
  Inst 41064:   nop     len=0
  Inst 41065:   nop     len=0
  Inst 41066:   nop     len=0
  Inst 41067:   nop     len=0
  Inst 41068:   nop     len=0
  Inst 41069:   nop     len=0
  Inst 41070:   nop     len=0
  Inst 41071:   nop     len=0
  Inst 41072:   nop     len=0
  Inst 41073:   nop     len=0
  Inst 41074:   nop     len=0
  Inst 41075:   nop     len=0
  Inst 41076:   nop     len=0
  Inst 41077:   nop     len=0
  Inst 41078:   nop     len=0
  Inst 41079:   nop     len=0
  Inst 41080:   nop     len=0
  Inst 41081:   nop     len=0
  Inst 41082:   nop     len=0
  Inst 41083:   nop     len=0
  Inst 41084:   nop     len=0
  Inst 41085:   nop     len=0
  Inst 41086:   nop     len=0
  Inst 41087:   nop     len=0
  Inst 41088:   nop     len=0
  Inst 41089:   nop     len=0
  Inst 41090:   nop     len=0
  Inst 41091:   nop     len=0
  Inst 41092:   nop     len=0
  Inst 41093:   nop     len=0
  Inst 41094:   nop     len=0
  Inst 41095:   nop     len=0
  Inst 41096:   nop     len=0
  Inst 41097:   nop     len=0
  Inst 41098:   nop     len=0
  Inst 41099:   nop     len=0
  Inst 41100:   nop     len=0
  Inst 41101:   nop     len=0
  Inst 41102:   nop     len=0
  Inst 41103:   nop     len=0
  Inst 41104:   nop     len=0
  Inst 41105:   nop     len=0
  Inst 41106:   nop     len=0
  Inst 41107:   nop     len=0
  Inst 41108:   nop     len=0
  Inst 41109:   nop     len=0
  Inst 41110:   nop     len=0
  Inst 41111:   nop     len=0
  Inst 41112:   nop     len=0
  Inst 41113:   nop     len=0
  Inst 41114:   nop     len=0
  Inst 41115:   nop     len=0
  Inst 41116:   nop     len=0
  Inst 41117:   nop     len=0
  Inst 41118:   nop     len=0
  Inst 41119:   nop     len=0
  Inst 41120:   nop     len=0
  Inst 41121:   nop     len=0
  Inst 41122:   nop     len=0
  Inst 41123:   nop     len=0
  Inst 41124:   nop     len=0
  Inst 41125:   nop     len=0
  Inst 41126:   nop     len=0
  Inst 41127:   nop     len=0
  Inst 41128:   nop     len=0
  Inst 41129:   nop     len=0
  Inst 41130:   nop     len=0
  Inst 41131:   nop     len=0
  Inst 41132:   nop     len=0
  Inst 41133:   nop     len=0
  Inst 41134:   nop     len=0
  Inst 41135:   nop     len=0
  Inst 41136:   nop     len=0
  Inst 41137:   nop     len=0
  Inst 41138:   nop     len=0
  Inst 41139:   nop     len=0
  Inst 41140:   nop     len=0
  Inst 41141:   nop     len=0
  Inst 41142:   nop     len=0
  Inst 41143:   nop     len=0
  Inst 41144:   nop     len=0
  Inst 41145:   nop     len=0
  Inst 41146:   nop     len=0
  Inst 41147:   nop     len=0
  Inst 41148:   nop     len=0
  Inst 41149:   jmp     label988
Block 988:
  (original IR block: block494)
  (successor: Block 989)
  (successor: Block 990)
  (instruction range: 41150 .. 41161)
  Inst 41150:   movq    rsp(2064 + virtual offset), %rsi
  Inst 41151:   movq    8(%rsi), %rdi
  Inst 41152:   movq    rsp(2048 + virtual offset), %rsi
  Inst 41153:   load_ext_name u0:2+0, %rax
  Inst 41154:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 41155:   movq    %rdi, rsp(1728 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41156:   call    *%rax
  Inst 41157:   movq    %rax, %rbx
  Inst 41158:   movq    %rdx, %r14
  Inst 41159:   testq   %r14, %r14
  Inst 41160:   jz      label989; j label990
Block 989:
  (successor: Block 992)
  (instruction range: 41161 .. 41286)
  Inst 41161:   movq    %rbx, rsp(1728 + virtual offset)
  Inst 41162:   nop     len=0
  Inst 41163:   nop     len=0
  Inst 41164:   nop     len=0
  Inst 41165:   nop     len=0
  Inst 41166:   nop     len=0
  Inst 41167:   nop     len=0
  Inst 41168:   nop     len=0
  Inst 41169:   nop     len=0
  Inst 41170:   nop     len=0
  Inst 41171:   nop     len=0
  Inst 41172:   nop     len=0
  Inst 41173:   nop     len=0
  Inst 41174:   nop     len=0
  Inst 41175:   nop     len=0
  Inst 41176:   nop     len=0
  Inst 41177:   nop     len=0
  Inst 41178:   nop     len=0
  Inst 41179:   nop     len=0
  Inst 41180:   nop     len=0
  Inst 41181:   nop     len=0
  Inst 41182:   nop     len=0
  Inst 41183:   nop     len=0
  Inst 41184:   nop     len=0
  Inst 41185:   nop     len=0
  Inst 41186:   nop     len=0
  Inst 41187:   nop     len=0
  Inst 41188:   nop     len=0
  Inst 41189:   nop     len=0
  Inst 41190:   nop     len=0
  Inst 41191:   nop     len=0
  Inst 41192:   nop     len=0
  Inst 41193:   nop     len=0
  Inst 41194:   nop     len=0
  Inst 41195:   nop     len=0
  Inst 41196:   nop     len=0
  Inst 41197:   nop     len=0
  Inst 41198:   nop     len=0
  Inst 41199:   nop     len=0
  Inst 41200:   nop     len=0
  Inst 41201:   nop     len=0
  Inst 41202:   nop     len=0
  Inst 41203:   nop     len=0
  Inst 41204:   nop     len=0
  Inst 41205:   nop     len=0
  Inst 41206:   nop     len=0
  Inst 41207:   nop     len=0
  Inst 41208:   nop     len=0
  Inst 41209:   nop     len=0
  Inst 41210:   nop     len=0
  Inst 41211:   nop     len=0
  Inst 41212:   nop     len=0
  Inst 41213:   nop     len=0
  Inst 41214:   nop     len=0
  Inst 41215:   nop     len=0
  Inst 41216:   nop     len=0
  Inst 41217:   nop     len=0
  Inst 41218:   nop     len=0
  Inst 41219:   nop     len=0
  Inst 41220:   nop     len=0
  Inst 41221:   nop     len=0
  Inst 41222:   nop     len=0
  Inst 41223:   nop     len=0
  Inst 41224:   nop     len=0
  Inst 41225:   nop     len=0
  Inst 41226:   nop     len=0
  Inst 41227:   nop     len=0
  Inst 41228:   nop     len=0
  Inst 41229:   nop     len=0
  Inst 41230:   nop     len=0
  Inst 41231:   nop     len=0
  Inst 41232:   nop     len=0
  Inst 41233:   nop     len=0
  Inst 41234:   nop     len=0
  Inst 41235:   nop     len=0
  Inst 41236:   nop     len=0
  Inst 41237:   nop     len=0
  Inst 41238:   nop     len=0
  Inst 41239:   nop     len=0
  Inst 41240:   nop     len=0
  Inst 41241:   nop     len=0
  Inst 41242:   nop     len=0
  Inst 41243:   nop     len=0
  Inst 41244:   nop     len=0
  Inst 41245:   nop     len=0
  Inst 41246:   nop     len=0
  Inst 41247:   nop     len=0
  Inst 41248:   nop     len=0
  Inst 41249:   nop     len=0
  Inst 41250:   nop     len=0
  Inst 41251:   nop     len=0
  Inst 41252:   nop     len=0
  Inst 41253:   nop     len=0
  Inst 41254:   nop     len=0
  Inst 41255:   nop     len=0
  Inst 41256:   nop     len=0
  Inst 41257:   nop     len=0
  Inst 41258:   nop     len=0
  Inst 41259:   nop     len=0
  Inst 41260:   nop     len=0
  Inst 41261:   nop     len=0
  Inst 41262:   nop     len=0
  Inst 41263:   nop     len=0
  Inst 41264:   nop     len=0
  Inst 41265:   nop     len=0
  Inst 41266:   nop     len=0
  Inst 41267:   nop     len=0
  Inst 41268:   nop     len=0
  Inst 41269:   nop     len=0
  Inst 41270:   nop     len=0
  Inst 41271:   nop     len=0
  Inst 41272:   nop     len=0
  Inst 41273:   nop     len=0
  Inst 41274:   nop     len=0
  Inst 41275:   nop     len=0
  Inst 41276:   nop     len=0
  Inst 41277:   nop     len=0
  Inst 41278:   nop     len=0
  Inst 41279:   nop     len=0
  Inst 41280:   nop     len=0
  Inst 41281:   nop     len=0
  Inst 41282:   nop     len=0
  Inst 41283:   nop     len=0
  Inst 41284:   nop     len=0
  Inst 41285:   jmp     label992
Block 990:
  (original IR block: block497)
  (successor: Block 991)
  (instruction range: 41286 .. 41315)
  Inst 41286:   movq    rsp(2072 + virtual offset), %rsi
  Inst 41287:   movq    152(%rsi), %r13
  Inst 41288:   movq    %r14, %r15
  Inst 41289:   addq    $-1, %r15
  Inst 41290:   movq    %r14, %rdx
  Inst 41291:   shlq    $3, %rdx
  Inst 41292:   movq    %r13, %r12
  Inst 41293:   addq    %rdx, %r12
  Inst 41294:   movq    %r13, %rdi
  Inst 41295:   addq    $-24, %rdi
  Inst 41296:   movq    %r13, %rsi
  Inst 41297:   load_ext_name %Memmove+0, %rax
  Inst 41298:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S217, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41299:   call    *%rax
  Inst 41300:   movq    rsp(1496 + virtual offset), %rbx
  Inst 41301:   load_ext_name u1:1+0, %rsi
  Inst 41302:   movl    $1, %edi
  Inst 41303:   movq    %rdi, -8(%r13,%r14,8)
  Inst 41304:   movl    $1, %edi
  Inst 41305:   movq    %rdi, -16(%r13,%r14,8)
  Inst 41306:   movq    %rsi, -24(%r13,%r14,8)
  Inst 41307:   movq    rsp(2072 + virtual offset), %rsi
  Inst 41308:   movq    %r12, 152(%rsi)
  Inst 41309:   movq    %rbx, %rdi
  Inst 41310:   movq    %r15, %rsi
  Inst 41311:   load_ext_name u0:3+0, %rax
  Inst 41312:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S217, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41313:   call    *%rax
  Inst 41314:   jmp     label991
Block 991:
  (successor: Block 992)
  (instruction range: 41315 .. 41440)
  Inst 41315:   movq    %rax, rsp(1728 + virtual offset)
  Inst 41316:   nop     len=0
  Inst 41317:   nop     len=0
  Inst 41318:   nop     len=0
  Inst 41319:   nop     len=0
  Inst 41320:   nop     len=0
  Inst 41321:   nop     len=0
  Inst 41322:   nop     len=0
  Inst 41323:   nop     len=0
  Inst 41324:   nop     len=0
  Inst 41325:   nop     len=0
  Inst 41326:   nop     len=0
  Inst 41327:   nop     len=0
  Inst 41328:   nop     len=0
  Inst 41329:   nop     len=0
  Inst 41330:   nop     len=0
  Inst 41331:   nop     len=0
  Inst 41332:   nop     len=0
  Inst 41333:   nop     len=0
  Inst 41334:   nop     len=0
  Inst 41335:   nop     len=0
  Inst 41336:   nop     len=0
  Inst 41337:   nop     len=0
  Inst 41338:   nop     len=0
  Inst 41339:   nop     len=0
  Inst 41340:   nop     len=0
  Inst 41341:   nop     len=0
  Inst 41342:   nop     len=0
  Inst 41343:   nop     len=0
  Inst 41344:   nop     len=0
  Inst 41345:   nop     len=0
  Inst 41346:   nop     len=0
  Inst 41347:   nop     len=0
  Inst 41348:   nop     len=0
  Inst 41349:   nop     len=0
  Inst 41350:   nop     len=0
  Inst 41351:   nop     len=0
  Inst 41352:   nop     len=0
  Inst 41353:   nop     len=0
  Inst 41354:   nop     len=0
  Inst 41355:   nop     len=0
  Inst 41356:   nop     len=0
  Inst 41357:   nop     len=0
  Inst 41358:   nop     len=0
  Inst 41359:   nop     len=0
  Inst 41360:   nop     len=0
  Inst 41361:   nop     len=0
  Inst 41362:   nop     len=0
  Inst 41363:   nop     len=0
  Inst 41364:   nop     len=0
  Inst 41365:   nop     len=0
  Inst 41366:   nop     len=0
  Inst 41367:   nop     len=0
  Inst 41368:   nop     len=0
  Inst 41369:   nop     len=0
  Inst 41370:   nop     len=0
  Inst 41371:   nop     len=0
  Inst 41372:   nop     len=0
  Inst 41373:   nop     len=0
  Inst 41374:   nop     len=0
  Inst 41375:   nop     len=0
  Inst 41376:   nop     len=0
  Inst 41377:   nop     len=0
  Inst 41378:   nop     len=0
  Inst 41379:   nop     len=0
  Inst 41380:   nop     len=0
  Inst 41381:   nop     len=0
  Inst 41382:   nop     len=0
  Inst 41383:   nop     len=0
  Inst 41384:   nop     len=0
  Inst 41385:   nop     len=0
  Inst 41386:   nop     len=0
  Inst 41387:   nop     len=0
  Inst 41388:   nop     len=0
  Inst 41389:   nop     len=0
  Inst 41390:   nop     len=0
  Inst 41391:   nop     len=0
  Inst 41392:   nop     len=0
  Inst 41393:   nop     len=0
  Inst 41394:   nop     len=0
  Inst 41395:   nop     len=0
  Inst 41396:   nop     len=0
  Inst 41397:   nop     len=0
  Inst 41398:   nop     len=0
  Inst 41399:   nop     len=0
  Inst 41400:   nop     len=0
  Inst 41401:   nop     len=0
  Inst 41402:   nop     len=0
  Inst 41403:   nop     len=0
  Inst 41404:   nop     len=0
  Inst 41405:   nop     len=0
  Inst 41406:   nop     len=0
  Inst 41407:   nop     len=0
  Inst 41408:   nop     len=0
  Inst 41409:   nop     len=0
  Inst 41410:   nop     len=0
  Inst 41411:   nop     len=0
  Inst 41412:   nop     len=0
  Inst 41413:   nop     len=0
  Inst 41414:   nop     len=0
  Inst 41415:   nop     len=0
  Inst 41416:   nop     len=0
  Inst 41417:   nop     len=0
  Inst 41418:   nop     len=0
  Inst 41419:   nop     len=0
  Inst 41420:   nop     len=0
  Inst 41421:   nop     len=0
  Inst 41422:   nop     len=0
  Inst 41423:   nop     len=0
  Inst 41424:   nop     len=0
  Inst 41425:   nop     len=0
  Inst 41426:   nop     len=0
  Inst 41427:   nop     len=0
  Inst 41428:   nop     len=0
  Inst 41429:   nop     len=0
  Inst 41430:   nop     len=0
  Inst 41431:   nop     len=0
  Inst 41432:   nop     len=0
  Inst 41433:   nop     len=0
  Inst 41434:   nop     len=0
  Inst 41435:   nop     len=0
  Inst 41436:   nop     len=0
  Inst 41437:   nop     len=0
  Inst 41438:   nop     len=0
  Inst 41439:   jmp     label992
Block 992:
  (original IR block: block496)
  (successor: Block 993)
  (successor: Block 994)
  (instruction range: 41440 .. 41451)
  Inst 41440:   movq    rsp(2064 + virtual offset), %rsi
  Inst 41441:   movq    8(%rsi), %rdi
  Inst 41442:   movq    rsp(2048 + virtual offset), %rsi
  Inst 41443:   load_ext_name u0:2+0, %rax
  Inst 41444:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 41445:   movq    %rdi, rsp(1744 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41446:   call    *%rax
  Inst 41447:   movq    %rax, %r15
  Inst 41448:   movq    %rdx, %r14
  Inst 41449:   testq   %r14, %r14
  Inst 41450:   jz      label993; j label994
Block 993:
  (successor: Block 996)
  (instruction range: 41451 .. 41577)
  Inst 41451:   movq    %r15, rsp(1760 + virtual offset)
  Inst 41452:   nop     len=0
  Inst 41453:   nop     len=0
  Inst 41454:   nop     len=0
  Inst 41455:   nop     len=0
  Inst 41456:   nop     len=0
  Inst 41457:   nop     len=0
  Inst 41458:   nop     len=0
  Inst 41459:   nop     len=0
  Inst 41460:   nop     len=0
  Inst 41461:   nop     len=0
  Inst 41462:   nop     len=0
  Inst 41463:   nop     len=0
  Inst 41464:   nop     len=0
  Inst 41465:   nop     len=0
  Inst 41466:   nop     len=0
  Inst 41467:   nop     len=0
  Inst 41468:   nop     len=0
  Inst 41469:   nop     len=0
  Inst 41470:   nop     len=0
  Inst 41471:   nop     len=0
  Inst 41472:   nop     len=0
  Inst 41473:   nop     len=0
  Inst 41474:   nop     len=0
  Inst 41475:   nop     len=0
  Inst 41476:   nop     len=0
  Inst 41477:   nop     len=0
  Inst 41478:   nop     len=0
  Inst 41479:   nop     len=0
  Inst 41480:   nop     len=0
  Inst 41481:   nop     len=0
  Inst 41482:   nop     len=0
  Inst 41483:   nop     len=0
  Inst 41484:   nop     len=0
  Inst 41485:   nop     len=0
  Inst 41486:   nop     len=0
  Inst 41487:   nop     len=0
  Inst 41488:   nop     len=0
  Inst 41489:   nop     len=0
  Inst 41490:   nop     len=0
  Inst 41491:   nop     len=0
  Inst 41492:   nop     len=0
  Inst 41493:   nop     len=0
  Inst 41494:   nop     len=0
  Inst 41495:   nop     len=0
  Inst 41496:   nop     len=0
  Inst 41497:   nop     len=0
  Inst 41498:   nop     len=0
  Inst 41499:   nop     len=0
  Inst 41500:   nop     len=0
  Inst 41501:   nop     len=0
  Inst 41502:   nop     len=0
  Inst 41503:   nop     len=0
  Inst 41504:   nop     len=0
  Inst 41505:   nop     len=0
  Inst 41506:   nop     len=0
  Inst 41507:   nop     len=0
  Inst 41508:   nop     len=0
  Inst 41509:   nop     len=0
  Inst 41510:   nop     len=0
  Inst 41511:   nop     len=0
  Inst 41512:   nop     len=0
  Inst 41513:   nop     len=0
  Inst 41514:   nop     len=0
  Inst 41515:   nop     len=0
  Inst 41516:   nop     len=0
  Inst 41517:   nop     len=0
  Inst 41518:   nop     len=0
  Inst 41519:   nop     len=0
  Inst 41520:   nop     len=0
  Inst 41521:   nop     len=0
  Inst 41522:   nop     len=0
  Inst 41523:   nop     len=0
  Inst 41524:   nop     len=0
  Inst 41525:   nop     len=0
  Inst 41526:   nop     len=0
  Inst 41527:   nop     len=0
  Inst 41528:   nop     len=0
  Inst 41529:   nop     len=0
  Inst 41530:   nop     len=0
  Inst 41531:   nop     len=0
  Inst 41532:   nop     len=0
  Inst 41533:   nop     len=0
  Inst 41534:   nop     len=0
  Inst 41535:   nop     len=0
  Inst 41536:   nop     len=0
  Inst 41537:   nop     len=0
  Inst 41538:   nop     len=0
  Inst 41539:   nop     len=0
  Inst 41540:   nop     len=0
  Inst 41541:   nop     len=0
  Inst 41542:   nop     len=0
  Inst 41543:   nop     len=0
  Inst 41544:   nop     len=0
  Inst 41545:   nop     len=0
  Inst 41546:   nop     len=0
  Inst 41547:   nop     len=0
  Inst 41548:   nop     len=0
  Inst 41549:   nop     len=0
  Inst 41550:   nop     len=0
  Inst 41551:   nop     len=0
  Inst 41552:   nop     len=0
  Inst 41553:   nop     len=0
  Inst 41554:   nop     len=0
  Inst 41555:   nop     len=0
  Inst 41556:   nop     len=0
  Inst 41557:   nop     len=0
  Inst 41558:   nop     len=0
  Inst 41559:   nop     len=0
  Inst 41560:   nop     len=0
  Inst 41561:   nop     len=0
  Inst 41562:   nop     len=0
  Inst 41563:   nop     len=0
  Inst 41564:   nop     len=0
  Inst 41565:   nop     len=0
  Inst 41566:   nop     len=0
  Inst 41567:   nop     len=0
  Inst 41568:   nop     len=0
  Inst 41569:   nop     len=0
  Inst 41570:   nop     len=0
  Inst 41571:   nop     len=0
  Inst 41572:   nop     len=0
  Inst 41573:   nop     len=0
  Inst 41574:   nop     len=0
  Inst 41575:   nop     len=0
  Inst 41576:   jmp     label996
Block 994:
  (original IR block: block499)
  (successor: Block 995)
  (instruction range: 41577 .. 41606)
  Inst 41577:   movq    rsp(2072 + virtual offset), %rsi
  Inst 41578:   movq    152(%rsi), %r13
  Inst 41579:   movq    %r14, %rbx
  Inst 41580:   addq    $-1, %rbx
  Inst 41581:   movq    %r14, %rdx
  Inst 41582:   shlq    $3, %rdx
  Inst 41583:   movq    %r13, %r12
  Inst 41584:   addq    %rdx, %r12
  Inst 41585:   movq    %r13, %rdi
  Inst 41586:   addq    $-24, %rdi
  Inst 41587:   movq    %r13, %rsi
  Inst 41588:   load_ext_name %Memmove+0, %rax
  Inst 41589:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41590:   call    *%rax
  Inst 41591:   movq    rsp(1496 + virtual offset), %r15
  Inst 41592:   load_ext_name u1:1+0, %rsi
  Inst 41593:   movl    $1, %edi
  Inst 41594:   movq    %rdi, -8(%r13,%r14,8)
  Inst 41595:   movl    $1, %edi
  Inst 41596:   movq    %rdi, -16(%r13,%r14,8)
  Inst 41597:   movq    %rsi, -24(%r13,%r14,8)
  Inst 41598:   movq    rsp(2072 + virtual offset), %rsi
  Inst 41599:   movq    %r12, 152(%rsi)
  Inst 41600:   movq    %r15, %rdi
  Inst 41601:   movq    %rbx, %rsi
  Inst 41602:   load_ext_name u0:3+0, %rax
  Inst 41603:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41604:   call    *%rax
  Inst 41605:   jmp     label995
Block 995:
  (successor: Block 996)
  (instruction range: 41606 .. 41732)
  Inst 41606:   movq    %rax, rsp(1760 + virtual offset)
  Inst 41607:   nop     len=0
  Inst 41608:   nop     len=0
  Inst 41609:   nop     len=0
  Inst 41610:   nop     len=0
  Inst 41611:   nop     len=0
  Inst 41612:   nop     len=0
  Inst 41613:   nop     len=0
  Inst 41614:   nop     len=0
  Inst 41615:   nop     len=0
  Inst 41616:   nop     len=0
  Inst 41617:   nop     len=0
  Inst 41618:   nop     len=0
  Inst 41619:   nop     len=0
  Inst 41620:   nop     len=0
  Inst 41621:   nop     len=0
  Inst 41622:   nop     len=0
  Inst 41623:   nop     len=0
  Inst 41624:   nop     len=0
  Inst 41625:   nop     len=0
  Inst 41626:   nop     len=0
  Inst 41627:   nop     len=0
  Inst 41628:   nop     len=0
  Inst 41629:   nop     len=0
  Inst 41630:   nop     len=0
  Inst 41631:   nop     len=0
  Inst 41632:   nop     len=0
  Inst 41633:   nop     len=0
  Inst 41634:   nop     len=0
  Inst 41635:   nop     len=0
  Inst 41636:   nop     len=0
  Inst 41637:   nop     len=0
  Inst 41638:   nop     len=0
  Inst 41639:   nop     len=0
  Inst 41640:   nop     len=0
  Inst 41641:   nop     len=0
  Inst 41642:   nop     len=0
  Inst 41643:   nop     len=0
  Inst 41644:   nop     len=0
  Inst 41645:   nop     len=0
  Inst 41646:   nop     len=0
  Inst 41647:   nop     len=0
  Inst 41648:   nop     len=0
  Inst 41649:   nop     len=0
  Inst 41650:   nop     len=0
  Inst 41651:   nop     len=0
  Inst 41652:   nop     len=0
  Inst 41653:   nop     len=0
  Inst 41654:   nop     len=0
  Inst 41655:   nop     len=0
  Inst 41656:   nop     len=0
  Inst 41657:   nop     len=0
  Inst 41658:   nop     len=0
  Inst 41659:   nop     len=0
  Inst 41660:   nop     len=0
  Inst 41661:   nop     len=0
  Inst 41662:   nop     len=0
  Inst 41663:   nop     len=0
  Inst 41664:   nop     len=0
  Inst 41665:   nop     len=0
  Inst 41666:   nop     len=0
  Inst 41667:   nop     len=0
  Inst 41668:   nop     len=0
  Inst 41669:   nop     len=0
  Inst 41670:   nop     len=0
  Inst 41671:   nop     len=0
  Inst 41672:   nop     len=0
  Inst 41673:   nop     len=0
  Inst 41674:   nop     len=0
  Inst 41675:   nop     len=0
  Inst 41676:   nop     len=0
  Inst 41677:   nop     len=0
  Inst 41678:   nop     len=0
  Inst 41679:   nop     len=0
  Inst 41680:   nop     len=0
  Inst 41681:   nop     len=0
  Inst 41682:   nop     len=0
  Inst 41683:   nop     len=0
  Inst 41684:   nop     len=0
  Inst 41685:   nop     len=0
  Inst 41686:   nop     len=0
  Inst 41687:   nop     len=0
  Inst 41688:   nop     len=0
  Inst 41689:   nop     len=0
  Inst 41690:   nop     len=0
  Inst 41691:   nop     len=0
  Inst 41692:   nop     len=0
  Inst 41693:   nop     len=0
  Inst 41694:   nop     len=0
  Inst 41695:   nop     len=0
  Inst 41696:   nop     len=0
  Inst 41697:   nop     len=0
  Inst 41698:   nop     len=0
  Inst 41699:   nop     len=0
  Inst 41700:   nop     len=0
  Inst 41701:   nop     len=0
  Inst 41702:   nop     len=0
  Inst 41703:   nop     len=0
  Inst 41704:   nop     len=0
  Inst 41705:   nop     len=0
  Inst 41706:   nop     len=0
  Inst 41707:   nop     len=0
  Inst 41708:   nop     len=0
  Inst 41709:   nop     len=0
  Inst 41710:   nop     len=0
  Inst 41711:   nop     len=0
  Inst 41712:   nop     len=0
  Inst 41713:   nop     len=0
  Inst 41714:   nop     len=0
  Inst 41715:   nop     len=0
  Inst 41716:   nop     len=0
  Inst 41717:   nop     len=0
  Inst 41718:   nop     len=0
  Inst 41719:   nop     len=0
  Inst 41720:   nop     len=0
  Inst 41721:   nop     len=0
  Inst 41722:   nop     len=0
  Inst 41723:   nop     len=0
  Inst 41724:   nop     len=0
  Inst 41725:   nop     len=0
  Inst 41726:   nop     len=0
  Inst 41727:   nop     len=0
  Inst 41728:   nop     len=0
  Inst 41729:   nop     len=0
  Inst 41730:   nop     len=0
  Inst 41731:   jmp     label996
Block 996:
  (original IR block: block498)
  (successor: Block 997)
  (successor: Block 998)
  (instruction range: 41732 .. 41743)
  Inst 41732:   movq    rsp(2064 + virtual offset), %rsi
  Inst 41733:   movq    8(%rsi), %rdi
  Inst 41734:   movq    rsp(2048 + virtual offset), %rsi
  Inst 41735:   load_ext_name u0:2+0, %rax
  Inst 41736:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 41737:   movq    %rdi, rsp(1744 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41738:   call    *%rax
  Inst 41739:   movq    %rax, %rbx
  Inst 41740:   movq    %rdx, %r14
  Inst 41741:   testq   %r14, %r14
  Inst 41742:   jz      label997; j label998
Block 997:
  (successor: Block 1000)
  (instruction range: 41743 .. 41869)
  Inst 41743:   movq    %rbx, rsp(2024 + virtual offset)
  Inst 41744:   nop     len=0
  Inst 41745:   nop     len=0
  Inst 41746:   nop     len=0
  Inst 41747:   nop     len=0
  Inst 41748:   nop     len=0
  Inst 41749:   nop     len=0
  Inst 41750:   nop     len=0
  Inst 41751:   nop     len=0
  Inst 41752:   nop     len=0
  Inst 41753:   nop     len=0
  Inst 41754:   nop     len=0
  Inst 41755:   nop     len=0
  Inst 41756:   nop     len=0
  Inst 41757:   nop     len=0
  Inst 41758:   nop     len=0
  Inst 41759:   nop     len=0
  Inst 41760:   nop     len=0
  Inst 41761:   nop     len=0
  Inst 41762:   nop     len=0
  Inst 41763:   nop     len=0
  Inst 41764:   nop     len=0
  Inst 41765:   nop     len=0
  Inst 41766:   nop     len=0
  Inst 41767:   nop     len=0
  Inst 41768:   nop     len=0
  Inst 41769:   nop     len=0
  Inst 41770:   nop     len=0
  Inst 41771:   nop     len=0
  Inst 41772:   nop     len=0
  Inst 41773:   nop     len=0
  Inst 41774:   nop     len=0
  Inst 41775:   nop     len=0
  Inst 41776:   nop     len=0
  Inst 41777:   nop     len=0
  Inst 41778:   nop     len=0
  Inst 41779:   nop     len=0
  Inst 41780:   nop     len=0
  Inst 41781:   nop     len=0
  Inst 41782:   nop     len=0
  Inst 41783:   nop     len=0
  Inst 41784:   nop     len=0
  Inst 41785:   nop     len=0
  Inst 41786:   nop     len=0
  Inst 41787:   nop     len=0
  Inst 41788:   nop     len=0
  Inst 41789:   nop     len=0
  Inst 41790:   nop     len=0
  Inst 41791:   nop     len=0
  Inst 41792:   nop     len=0
  Inst 41793:   nop     len=0
  Inst 41794:   nop     len=0
  Inst 41795:   nop     len=0
  Inst 41796:   nop     len=0
  Inst 41797:   nop     len=0
  Inst 41798:   nop     len=0
  Inst 41799:   nop     len=0
  Inst 41800:   nop     len=0
  Inst 41801:   nop     len=0
  Inst 41802:   nop     len=0
  Inst 41803:   nop     len=0
  Inst 41804:   nop     len=0
  Inst 41805:   nop     len=0
  Inst 41806:   nop     len=0
  Inst 41807:   nop     len=0
  Inst 41808:   nop     len=0
  Inst 41809:   nop     len=0
  Inst 41810:   nop     len=0
  Inst 41811:   nop     len=0
  Inst 41812:   nop     len=0
  Inst 41813:   nop     len=0
  Inst 41814:   nop     len=0
  Inst 41815:   nop     len=0
  Inst 41816:   nop     len=0
  Inst 41817:   nop     len=0
  Inst 41818:   nop     len=0
  Inst 41819:   nop     len=0
  Inst 41820:   nop     len=0
  Inst 41821:   nop     len=0
  Inst 41822:   nop     len=0
  Inst 41823:   nop     len=0
  Inst 41824:   nop     len=0
  Inst 41825:   nop     len=0
  Inst 41826:   nop     len=0
  Inst 41827:   nop     len=0
  Inst 41828:   nop     len=0
  Inst 41829:   nop     len=0
  Inst 41830:   nop     len=0
  Inst 41831:   nop     len=0
  Inst 41832:   nop     len=0
  Inst 41833:   nop     len=0
  Inst 41834:   nop     len=0
  Inst 41835:   nop     len=0
  Inst 41836:   nop     len=0
  Inst 41837:   nop     len=0
  Inst 41838:   nop     len=0
  Inst 41839:   nop     len=0
  Inst 41840:   nop     len=0
  Inst 41841:   nop     len=0
  Inst 41842:   nop     len=0
  Inst 41843:   nop     len=0
  Inst 41844:   nop     len=0
  Inst 41845:   nop     len=0
  Inst 41846:   nop     len=0
  Inst 41847:   nop     len=0
  Inst 41848:   nop     len=0
  Inst 41849:   nop     len=0
  Inst 41850:   nop     len=0
  Inst 41851:   nop     len=0
  Inst 41852:   nop     len=0
  Inst 41853:   nop     len=0
  Inst 41854:   nop     len=0
  Inst 41855:   nop     len=0
  Inst 41856:   nop     len=0
  Inst 41857:   nop     len=0
  Inst 41858:   nop     len=0
  Inst 41859:   nop     len=0
  Inst 41860:   nop     len=0
  Inst 41861:   nop     len=0
  Inst 41862:   nop     len=0
  Inst 41863:   nop     len=0
  Inst 41864:   nop     len=0
  Inst 41865:   nop     len=0
  Inst 41866:   nop     len=0
  Inst 41867:   nop     len=0
  Inst 41868:   jmp     label1000
Block 998:
  (original IR block: block501)
  (successor: Block 999)
  (instruction range: 41869 .. 41898)
  Inst 41869:   movq    rsp(2072 + virtual offset), %rsi
  Inst 41870:   movq    152(%rsi), %r13
  Inst 41871:   movq    %r14, %r15
  Inst 41872:   addq    $-1, %r15
  Inst 41873:   movq    %r14, %rdx
  Inst 41874:   shlq    $3, %rdx
  Inst 41875:   movq    %r13, %r12
  Inst 41876:   addq    %rdx, %r12
  Inst 41877:   movq    %r13, %rdi
  Inst 41878:   addq    $-24, %rdi
  Inst 41879:   movq    %r13, %rsi
  Inst 41880:   load_ext_name %Memmove+0, %rax
  Inst 41881:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41882:   call    *%rax
  Inst 41883:   movq    rsp(1496 + virtual offset), %rbx
  Inst 41884:   load_ext_name u1:1+0, %rsi
  Inst 41885:   movl    $1, %edi
  Inst 41886:   movq    %rdi, -8(%r13,%r14,8)
  Inst 41887:   movl    $1, %edi
  Inst 41888:   movq    %rdi, -16(%r13,%r14,8)
  Inst 41889:   movq    %rsi, -24(%r13,%r14,8)
  Inst 41890:   movq    rsp(2072 + virtual offset), %rsi
  Inst 41891:   movq    %r12, 152(%rsi)
  Inst 41892:   movq    %rbx, %rdi
  Inst 41893:   movq    %r15, %rsi
  Inst 41894:   load_ext_name u0:3+0, %rax
  Inst 41895:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 41896:   call    *%rax
  Inst 41897:   jmp     label999
Block 999:
  (successor: Block 1000)
  (instruction range: 41898 .. 42024)
  Inst 41898:   movq    %rax, rsp(2024 + virtual offset)
  Inst 41899:   nop     len=0
  Inst 41900:   nop     len=0
  Inst 41901:   nop     len=0
  Inst 41902:   nop     len=0
  Inst 41903:   nop     len=0
  Inst 41904:   nop     len=0
  Inst 41905:   nop     len=0
  Inst 41906:   nop     len=0
  Inst 41907:   nop     len=0
  Inst 41908:   nop     len=0
  Inst 41909:   nop     len=0
  Inst 41910:   nop     len=0
  Inst 41911:   nop     len=0
  Inst 41912:   nop     len=0
  Inst 41913:   nop     len=0
  Inst 41914:   nop     len=0
  Inst 41915:   nop     len=0
  Inst 41916:   nop     len=0
  Inst 41917:   nop     len=0
  Inst 41918:   nop     len=0
  Inst 41919:   nop     len=0
  Inst 41920:   nop     len=0
  Inst 41921:   nop     len=0
  Inst 41922:   nop     len=0
  Inst 41923:   nop     len=0
  Inst 41924:   nop     len=0
  Inst 41925:   nop     len=0
  Inst 41926:   nop     len=0
  Inst 41927:   nop     len=0
  Inst 41928:   nop     len=0
  Inst 41929:   nop     len=0
  Inst 41930:   nop     len=0
  Inst 41931:   nop     len=0
  Inst 41932:   nop     len=0
  Inst 41933:   nop     len=0
  Inst 41934:   nop     len=0
  Inst 41935:   nop     len=0
  Inst 41936:   nop     len=0
  Inst 41937:   nop     len=0
  Inst 41938:   nop     len=0
  Inst 41939:   nop     len=0
  Inst 41940:   nop     len=0
  Inst 41941:   nop     len=0
  Inst 41942:   nop     len=0
  Inst 41943:   nop     len=0
  Inst 41944:   nop     len=0
  Inst 41945:   nop     len=0
  Inst 41946:   nop     len=0
  Inst 41947:   nop     len=0
  Inst 41948:   nop     len=0
  Inst 41949:   nop     len=0
  Inst 41950:   nop     len=0
  Inst 41951:   nop     len=0
  Inst 41952:   nop     len=0
  Inst 41953:   nop     len=0
  Inst 41954:   nop     len=0
  Inst 41955:   nop     len=0
  Inst 41956:   nop     len=0
  Inst 41957:   nop     len=0
  Inst 41958:   nop     len=0
  Inst 41959:   nop     len=0
  Inst 41960:   nop     len=0
  Inst 41961:   nop     len=0
  Inst 41962:   nop     len=0
  Inst 41963:   nop     len=0
  Inst 41964:   nop     len=0
  Inst 41965:   nop     len=0
  Inst 41966:   nop     len=0
  Inst 41967:   nop     len=0
  Inst 41968:   nop     len=0
  Inst 41969:   nop     len=0
  Inst 41970:   nop     len=0
  Inst 41971:   nop     len=0
  Inst 41972:   nop     len=0
  Inst 41973:   nop     len=0
  Inst 41974:   nop     len=0
  Inst 41975:   nop     len=0
  Inst 41976:   nop     len=0
  Inst 41977:   nop     len=0
  Inst 41978:   nop     len=0
  Inst 41979:   nop     len=0
  Inst 41980:   nop     len=0
  Inst 41981:   nop     len=0
  Inst 41982:   nop     len=0
  Inst 41983:   nop     len=0
  Inst 41984:   nop     len=0
  Inst 41985:   nop     len=0
  Inst 41986:   nop     len=0
  Inst 41987:   nop     len=0
  Inst 41988:   nop     len=0
  Inst 41989:   nop     len=0
  Inst 41990:   nop     len=0
  Inst 41991:   nop     len=0
  Inst 41992:   nop     len=0
  Inst 41993:   nop     len=0
  Inst 41994:   nop     len=0
  Inst 41995:   nop     len=0
  Inst 41996:   nop     len=0
  Inst 41997:   nop     len=0
  Inst 41998:   nop     len=0
  Inst 41999:   nop     len=0
  Inst 42000:   nop     len=0
  Inst 42001:   nop     len=0
  Inst 42002:   nop     len=0
  Inst 42003:   nop     len=0
  Inst 42004:   nop     len=0
  Inst 42005:   nop     len=0
  Inst 42006:   nop     len=0
  Inst 42007:   nop     len=0
  Inst 42008:   nop     len=0
  Inst 42009:   nop     len=0
  Inst 42010:   nop     len=0
  Inst 42011:   nop     len=0
  Inst 42012:   nop     len=0
  Inst 42013:   nop     len=0
  Inst 42014:   nop     len=0
  Inst 42015:   nop     len=0
  Inst 42016:   nop     len=0
  Inst 42017:   nop     len=0
  Inst 42018:   nop     len=0
  Inst 42019:   nop     len=0
  Inst 42020:   nop     len=0
  Inst 42021:   nop     len=0
  Inst 42022:   nop     len=0
  Inst 42023:   jmp     label1000
Block 1000:
  (original IR block: block500)
  (successor: Block 1001)
  (successor: Block 1002)
  (instruction range: 42024 .. 42035)
  Inst 42024:   movq    rsp(2064 + virtual offset), %rsi
  Inst 42025:   movq    8(%rsi), %rdi
  Inst 42026:   movq    rsp(2048 + virtual offset), %rsi
  Inst 42027:   load_ext_name u0:2+0, %rax
  Inst 42028:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 42029:   movq    %rdi, rsp(1744 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42030:   call    *%rax
  Inst 42031:   movq    %rax, %rbx
  Inst 42032:   movq    %rdx, %r14
  Inst 42033:   testq   %r14, %r14
  Inst 42034:   jz      label1001; j label1002
Block 1001:
  (successor: Block 1004)
  (instruction range: 42035 .. 42162)
  Inst 42035:   movq    %rbx, rsp(1752 + virtual offset)
  Inst 42036:   nop     len=0
  Inst 42037:   nop     len=0
  Inst 42038:   nop     len=0
  Inst 42039:   nop     len=0
  Inst 42040:   nop     len=0
  Inst 42041:   nop     len=0
  Inst 42042:   nop     len=0
  Inst 42043:   nop     len=0
  Inst 42044:   nop     len=0
  Inst 42045:   nop     len=0
  Inst 42046:   nop     len=0
  Inst 42047:   nop     len=0
  Inst 42048:   nop     len=0
  Inst 42049:   nop     len=0
  Inst 42050:   nop     len=0
  Inst 42051:   nop     len=0
  Inst 42052:   nop     len=0
  Inst 42053:   nop     len=0
  Inst 42054:   nop     len=0
  Inst 42055:   nop     len=0
  Inst 42056:   nop     len=0
  Inst 42057:   nop     len=0
  Inst 42058:   nop     len=0
  Inst 42059:   nop     len=0
  Inst 42060:   nop     len=0
  Inst 42061:   nop     len=0
  Inst 42062:   nop     len=0
  Inst 42063:   nop     len=0
  Inst 42064:   nop     len=0
  Inst 42065:   nop     len=0
  Inst 42066:   nop     len=0
  Inst 42067:   nop     len=0
  Inst 42068:   nop     len=0
  Inst 42069:   nop     len=0
  Inst 42070:   nop     len=0
  Inst 42071:   nop     len=0
  Inst 42072:   nop     len=0
  Inst 42073:   nop     len=0
  Inst 42074:   nop     len=0
  Inst 42075:   nop     len=0
  Inst 42076:   nop     len=0
  Inst 42077:   nop     len=0
  Inst 42078:   nop     len=0
  Inst 42079:   nop     len=0
  Inst 42080:   nop     len=0
  Inst 42081:   nop     len=0
  Inst 42082:   nop     len=0
  Inst 42083:   nop     len=0
  Inst 42084:   nop     len=0
  Inst 42085:   nop     len=0
  Inst 42086:   nop     len=0
  Inst 42087:   nop     len=0
  Inst 42088:   nop     len=0
  Inst 42089:   nop     len=0
  Inst 42090:   nop     len=0
  Inst 42091:   nop     len=0
  Inst 42092:   nop     len=0
  Inst 42093:   nop     len=0
  Inst 42094:   nop     len=0
  Inst 42095:   nop     len=0
  Inst 42096:   nop     len=0
  Inst 42097:   nop     len=0
  Inst 42098:   nop     len=0
  Inst 42099:   nop     len=0
  Inst 42100:   nop     len=0
  Inst 42101:   nop     len=0
  Inst 42102:   nop     len=0
  Inst 42103:   nop     len=0
  Inst 42104:   nop     len=0
  Inst 42105:   nop     len=0
  Inst 42106:   nop     len=0
  Inst 42107:   nop     len=0
  Inst 42108:   nop     len=0
  Inst 42109:   nop     len=0
  Inst 42110:   nop     len=0
  Inst 42111:   nop     len=0
  Inst 42112:   nop     len=0
  Inst 42113:   nop     len=0
  Inst 42114:   nop     len=0
  Inst 42115:   nop     len=0
  Inst 42116:   nop     len=0
  Inst 42117:   nop     len=0
  Inst 42118:   nop     len=0
  Inst 42119:   nop     len=0
  Inst 42120:   nop     len=0
  Inst 42121:   nop     len=0
  Inst 42122:   nop     len=0
  Inst 42123:   nop     len=0
  Inst 42124:   nop     len=0
  Inst 42125:   nop     len=0
  Inst 42126:   nop     len=0
  Inst 42127:   nop     len=0
  Inst 42128:   nop     len=0
  Inst 42129:   nop     len=0
  Inst 42130:   nop     len=0
  Inst 42131:   nop     len=0
  Inst 42132:   nop     len=0
  Inst 42133:   nop     len=0
  Inst 42134:   nop     len=0
  Inst 42135:   nop     len=0
  Inst 42136:   nop     len=0
  Inst 42137:   nop     len=0
  Inst 42138:   nop     len=0
  Inst 42139:   nop     len=0
  Inst 42140:   nop     len=0
  Inst 42141:   nop     len=0
  Inst 42142:   nop     len=0
  Inst 42143:   nop     len=0
  Inst 42144:   nop     len=0
  Inst 42145:   nop     len=0
  Inst 42146:   nop     len=0
  Inst 42147:   nop     len=0
  Inst 42148:   nop     len=0
  Inst 42149:   nop     len=0
  Inst 42150:   nop     len=0
  Inst 42151:   nop     len=0
  Inst 42152:   nop     len=0
  Inst 42153:   nop     len=0
  Inst 42154:   nop     len=0
  Inst 42155:   nop     len=0
  Inst 42156:   nop     len=0
  Inst 42157:   nop     len=0
  Inst 42158:   nop     len=0
  Inst 42159:   nop     len=0
  Inst 42160:   nop     len=0
  Inst 42161:   jmp     label1004
Block 1002:
  (original IR block: block503)
  (successor: Block 1003)
  (instruction range: 42162 .. 42191)
  Inst 42162:   movq    rsp(2072 + virtual offset), %rsi
  Inst 42163:   movq    152(%rsi), %r13
  Inst 42164:   movq    %r14, %r15
  Inst 42165:   addq    $-1, %r15
  Inst 42166:   movq    %r14, %rdx
  Inst 42167:   shlq    $3, %rdx
  Inst 42168:   movq    %r13, %r12
  Inst 42169:   addq    %rdx, %r12
  Inst 42170:   movq    %r13, %rdi
  Inst 42171:   addq    $-24, %rdi
  Inst 42172:   movq    %r13, %rsi
  Inst 42173:   load_ext_name %Memmove+0, %rax
  Inst 42174:   movq    %rbx, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42175:   call    *%rax
  Inst 42176:   movq    rsp(1496 + virtual offset), %rbx
  Inst 42177:   load_ext_name u1:1+0, %rsi
  Inst 42178:   movl    $1, %edi
  Inst 42179:   movq    %rdi, -8(%r13,%r14,8)
  Inst 42180:   movl    $1, %edi
  Inst 42181:   movq    %rdi, -16(%r13,%r14,8)
  Inst 42182:   movq    %rsi, -24(%r13,%r14,8)
  Inst 42183:   movq    rsp(2072 + virtual offset), %rsi
  Inst 42184:   movq    %r12, 152(%rsi)
  Inst 42185:   movq    %rbx, %rdi
  Inst 42186:   movq    %r15, %rsi
  Inst 42187:   load_ext_name u0:3+0, %rax
  Inst 42188:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42189:   call    *%rax
  Inst 42190:   jmp     label1003
Block 1003:
  (successor: Block 1004)
  (instruction range: 42191 .. 42318)
  Inst 42191:   movq    %rax, rsp(1752 + virtual offset)
  Inst 42192:   nop     len=0
  Inst 42193:   nop     len=0
  Inst 42194:   nop     len=0
  Inst 42195:   nop     len=0
  Inst 42196:   nop     len=0
  Inst 42197:   nop     len=0
  Inst 42198:   nop     len=0
  Inst 42199:   nop     len=0
  Inst 42200:   nop     len=0
  Inst 42201:   nop     len=0
  Inst 42202:   nop     len=0
  Inst 42203:   nop     len=0
  Inst 42204:   nop     len=0
  Inst 42205:   nop     len=0
  Inst 42206:   nop     len=0
  Inst 42207:   nop     len=0
  Inst 42208:   nop     len=0
  Inst 42209:   nop     len=0
  Inst 42210:   nop     len=0
  Inst 42211:   nop     len=0
  Inst 42212:   nop     len=0
  Inst 42213:   nop     len=0
  Inst 42214:   nop     len=0
  Inst 42215:   nop     len=0
  Inst 42216:   nop     len=0
  Inst 42217:   nop     len=0
  Inst 42218:   nop     len=0
  Inst 42219:   nop     len=0
  Inst 42220:   nop     len=0
  Inst 42221:   nop     len=0
  Inst 42222:   nop     len=0
  Inst 42223:   nop     len=0
  Inst 42224:   nop     len=0
  Inst 42225:   nop     len=0
  Inst 42226:   nop     len=0
  Inst 42227:   nop     len=0
  Inst 42228:   nop     len=0
  Inst 42229:   nop     len=0
  Inst 42230:   nop     len=0
  Inst 42231:   nop     len=0
  Inst 42232:   nop     len=0
  Inst 42233:   nop     len=0
  Inst 42234:   nop     len=0
  Inst 42235:   nop     len=0
  Inst 42236:   nop     len=0
  Inst 42237:   nop     len=0
  Inst 42238:   nop     len=0
  Inst 42239:   nop     len=0
  Inst 42240:   nop     len=0
  Inst 42241:   nop     len=0
  Inst 42242:   nop     len=0
  Inst 42243:   nop     len=0
  Inst 42244:   nop     len=0
  Inst 42245:   nop     len=0
  Inst 42246:   nop     len=0
  Inst 42247:   nop     len=0
  Inst 42248:   nop     len=0
  Inst 42249:   nop     len=0
  Inst 42250:   nop     len=0
  Inst 42251:   nop     len=0
  Inst 42252:   nop     len=0
  Inst 42253:   nop     len=0
  Inst 42254:   nop     len=0
  Inst 42255:   nop     len=0
  Inst 42256:   nop     len=0
  Inst 42257:   nop     len=0
  Inst 42258:   nop     len=0
  Inst 42259:   nop     len=0
  Inst 42260:   nop     len=0
  Inst 42261:   nop     len=0
  Inst 42262:   nop     len=0
  Inst 42263:   nop     len=0
  Inst 42264:   nop     len=0
  Inst 42265:   nop     len=0
  Inst 42266:   nop     len=0
  Inst 42267:   nop     len=0
  Inst 42268:   nop     len=0
  Inst 42269:   nop     len=0
  Inst 42270:   nop     len=0
  Inst 42271:   nop     len=0
  Inst 42272:   nop     len=0
  Inst 42273:   nop     len=0
  Inst 42274:   nop     len=0
  Inst 42275:   nop     len=0
  Inst 42276:   nop     len=0
  Inst 42277:   nop     len=0
  Inst 42278:   nop     len=0
  Inst 42279:   nop     len=0
  Inst 42280:   nop     len=0
  Inst 42281:   nop     len=0
  Inst 42282:   nop     len=0
  Inst 42283:   nop     len=0
  Inst 42284:   nop     len=0
  Inst 42285:   nop     len=0
  Inst 42286:   nop     len=0
  Inst 42287:   nop     len=0
  Inst 42288:   nop     len=0
  Inst 42289:   nop     len=0
  Inst 42290:   nop     len=0
  Inst 42291:   nop     len=0
  Inst 42292:   nop     len=0
  Inst 42293:   nop     len=0
  Inst 42294:   nop     len=0
  Inst 42295:   nop     len=0
  Inst 42296:   nop     len=0
  Inst 42297:   nop     len=0
  Inst 42298:   nop     len=0
  Inst 42299:   nop     len=0
  Inst 42300:   nop     len=0
  Inst 42301:   nop     len=0
  Inst 42302:   nop     len=0
  Inst 42303:   nop     len=0
  Inst 42304:   nop     len=0
  Inst 42305:   nop     len=0
  Inst 42306:   nop     len=0
  Inst 42307:   nop     len=0
  Inst 42308:   nop     len=0
  Inst 42309:   nop     len=0
  Inst 42310:   nop     len=0
  Inst 42311:   nop     len=0
  Inst 42312:   nop     len=0
  Inst 42313:   nop     len=0
  Inst 42314:   nop     len=0
  Inst 42315:   nop     len=0
  Inst 42316:   nop     len=0
  Inst 42317:   jmp     label1004
Block 1004:
  (original IR block: block502)
  (successor: Block 1005)
  (successor: Block 1006)
  (instruction range: 42318 .. 42329)
  Inst 42318:   movq    rsp(2064 + virtual offset), %rsi
  Inst 42319:   movq    8(%rsi), %rdi
  Inst 42320:   movq    rsp(2048 + virtual offset), %rsi
  Inst 42321:   load_ext_name u0:2+0, %rax
  Inst 42322:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 42323:   movq    %rdi, rsp(1744 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42324:   call    *%rax
  Inst 42325:   movq    %rax, %r15
  Inst 42326:   movq    %rdx, %r14
  Inst 42327:   testq   %r14, %r14
  Inst 42328:   jz      label1005; j label1006
Block 1005:
  (successor: Block 1008)
  (instruction range: 42329 .. 42456)
  Inst 42329:   movq    %r15, rsp(2016 + virtual offset)
  Inst 42330:   nop     len=0
  Inst 42331:   nop     len=0
  Inst 42332:   nop     len=0
  Inst 42333:   nop     len=0
  Inst 42334:   nop     len=0
  Inst 42335:   nop     len=0
  Inst 42336:   nop     len=0
  Inst 42337:   nop     len=0
  Inst 42338:   nop     len=0
  Inst 42339:   nop     len=0
  Inst 42340:   nop     len=0
  Inst 42341:   nop     len=0
  Inst 42342:   nop     len=0
  Inst 42343:   nop     len=0
  Inst 42344:   nop     len=0
  Inst 42345:   nop     len=0
  Inst 42346:   nop     len=0
  Inst 42347:   nop     len=0
  Inst 42348:   nop     len=0
  Inst 42349:   nop     len=0
  Inst 42350:   nop     len=0
  Inst 42351:   nop     len=0
  Inst 42352:   nop     len=0
  Inst 42353:   nop     len=0
  Inst 42354:   nop     len=0
  Inst 42355:   nop     len=0
  Inst 42356:   nop     len=0
  Inst 42357:   nop     len=0
  Inst 42358:   nop     len=0
  Inst 42359:   nop     len=0
  Inst 42360:   nop     len=0
  Inst 42361:   nop     len=0
  Inst 42362:   nop     len=0
  Inst 42363:   nop     len=0
  Inst 42364:   nop     len=0
  Inst 42365:   nop     len=0
  Inst 42366:   nop     len=0
  Inst 42367:   nop     len=0
  Inst 42368:   nop     len=0
  Inst 42369:   nop     len=0
  Inst 42370:   nop     len=0
  Inst 42371:   nop     len=0
  Inst 42372:   nop     len=0
  Inst 42373:   nop     len=0
  Inst 42374:   nop     len=0
  Inst 42375:   nop     len=0
  Inst 42376:   nop     len=0
  Inst 42377:   nop     len=0
  Inst 42378:   nop     len=0
  Inst 42379:   nop     len=0
  Inst 42380:   nop     len=0
  Inst 42381:   nop     len=0
  Inst 42382:   nop     len=0
  Inst 42383:   nop     len=0
  Inst 42384:   nop     len=0
  Inst 42385:   nop     len=0
  Inst 42386:   nop     len=0
  Inst 42387:   nop     len=0
  Inst 42388:   nop     len=0
  Inst 42389:   nop     len=0
  Inst 42390:   nop     len=0
  Inst 42391:   nop     len=0
  Inst 42392:   nop     len=0
  Inst 42393:   nop     len=0
  Inst 42394:   nop     len=0
  Inst 42395:   nop     len=0
  Inst 42396:   nop     len=0
  Inst 42397:   nop     len=0
  Inst 42398:   nop     len=0
  Inst 42399:   nop     len=0
  Inst 42400:   nop     len=0
  Inst 42401:   nop     len=0
  Inst 42402:   nop     len=0
  Inst 42403:   nop     len=0
  Inst 42404:   nop     len=0
  Inst 42405:   nop     len=0
  Inst 42406:   nop     len=0
  Inst 42407:   nop     len=0
  Inst 42408:   nop     len=0
  Inst 42409:   nop     len=0
  Inst 42410:   nop     len=0
  Inst 42411:   nop     len=0
  Inst 42412:   nop     len=0
  Inst 42413:   nop     len=0
  Inst 42414:   nop     len=0
  Inst 42415:   nop     len=0
  Inst 42416:   nop     len=0
  Inst 42417:   nop     len=0
  Inst 42418:   nop     len=0
  Inst 42419:   nop     len=0
  Inst 42420:   nop     len=0
  Inst 42421:   nop     len=0
  Inst 42422:   nop     len=0
  Inst 42423:   nop     len=0
  Inst 42424:   nop     len=0
  Inst 42425:   nop     len=0
  Inst 42426:   nop     len=0
  Inst 42427:   nop     len=0
  Inst 42428:   nop     len=0
  Inst 42429:   nop     len=0
  Inst 42430:   nop     len=0
  Inst 42431:   nop     len=0
  Inst 42432:   nop     len=0
  Inst 42433:   nop     len=0
  Inst 42434:   nop     len=0
  Inst 42435:   nop     len=0
  Inst 42436:   nop     len=0
  Inst 42437:   nop     len=0
  Inst 42438:   nop     len=0
  Inst 42439:   nop     len=0
  Inst 42440:   nop     len=0
  Inst 42441:   nop     len=0
  Inst 42442:   nop     len=0
  Inst 42443:   nop     len=0
  Inst 42444:   nop     len=0
  Inst 42445:   nop     len=0
  Inst 42446:   nop     len=0
  Inst 42447:   nop     len=0
  Inst 42448:   nop     len=0
  Inst 42449:   nop     len=0
  Inst 42450:   nop     len=0
  Inst 42451:   nop     len=0
  Inst 42452:   nop     len=0
  Inst 42453:   nop     len=0
  Inst 42454:   nop     len=0
  Inst 42455:   jmp     label1008
Block 1006:
  (original IR block: block505)
  (successor: Block 1007)
  (instruction range: 42456 .. 42485)
  Inst 42456:   movq    rsp(2072 + virtual offset), %rsi
  Inst 42457:   movq    152(%rsi), %r13
  Inst 42458:   movq    %r14, %rbx
  Inst 42459:   addq    $-1, %rbx
  Inst 42460:   movq    %r14, %rdx
  Inst 42461:   shlq    $3, %rdx
  Inst 42462:   movq    %r13, %r12
  Inst 42463:   addq    %rdx, %r12
  Inst 42464:   movq    %r13, %rdi
  Inst 42465:   addq    $-24, %rdi
  Inst 42466:   movq    %r13, %rsi
  Inst 42467:   load_ext_name %Memmove+0, %rax
  Inst 42468:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42469:   call    *%rax
  Inst 42470:   movq    rsp(1496 + virtual offset), %r15
  Inst 42471:   load_ext_name u1:1+0, %rsi
  Inst 42472:   movl    $1, %edi
  Inst 42473:   movq    %rdi, -8(%r13,%r14,8)
  Inst 42474:   movl    $1, %edi
  Inst 42475:   movq    %rdi, -16(%r13,%r14,8)
  Inst 42476:   movq    %rsi, -24(%r13,%r14,8)
  Inst 42477:   movq    rsp(2072 + virtual offset), %rsi
  Inst 42478:   movq    %r12, 152(%rsi)
  Inst 42479:   movq    %r15, %rdi
  Inst 42480:   movq    %rbx, %rsi
  Inst 42481:   load_ext_name u0:3+0, %rax
  Inst 42482:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42483:   call    *%rax
  Inst 42484:   jmp     label1007
Block 1007:
  (successor: Block 1008)
  (instruction range: 42485 .. 42612)
  Inst 42485:   movq    %rax, rsp(2016 + virtual offset)
  Inst 42486:   nop     len=0
  Inst 42487:   nop     len=0
  Inst 42488:   nop     len=0
  Inst 42489:   nop     len=0
  Inst 42490:   nop     len=0
  Inst 42491:   nop     len=0
  Inst 42492:   nop     len=0
  Inst 42493:   nop     len=0
  Inst 42494:   nop     len=0
  Inst 42495:   nop     len=0
  Inst 42496:   nop     len=0
  Inst 42497:   nop     len=0
  Inst 42498:   nop     len=0
  Inst 42499:   nop     len=0
  Inst 42500:   nop     len=0
  Inst 42501:   nop     len=0
  Inst 42502:   nop     len=0
  Inst 42503:   nop     len=0
  Inst 42504:   nop     len=0
  Inst 42505:   nop     len=0
  Inst 42506:   nop     len=0
  Inst 42507:   nop     len=0
  Inst 42508:   nop     len=0
  Inst 42509:   nop     len=0
  Inst 42510:   nop     len=0
  Inst 42511:   nop     len=0
  Inst 42512:   nop     len=0
  Inst 42513:   nop     len=0
  Inst 42514:   nop     len=0
  Inst 42515:   nop     len=0
  Inst 42516:   nop     len=0
  Inst 42517:   nop     len=0
  Inst 42518:   nop     len=0
  Inst 42519:   nop     len=0
  Inst 42520:   nop     len=0
  Inst 42521:   nop     len=0
  Inst 42522:   nop     len=0
  Inst 42523:   nop     len=0
  Inst 42524:   nop     len=0
  Inst 42525:   nop     len=0
  Inst 42526:   nop     len=0
  Inst 42527:   nop     len=0
  Inst 42528:   nop     len=0
  Inst 42529:   nop     len=0
  Inst 42530:   nop     len=0
  Inst 42531:   nop     len=0
  Inst 42532:   nop     len=0
  Inst 42533:   nop     len=0
  Inst 42534:   nop     len=0
  Inst 42535:   nop     len=0
  Inst 42536:   nop     len=0
  Inst 42537:   nop     len=0
  Inst 42538:   nop     len=0
  Inst 42539:   nop     len=0
  Inst 42540:   nop     len=0
  Inst 42541:   nop     len=0
  Inst 42542:   nop     len=0
  Inst 42543:   nop     len=0
  Inst 42544:   nop     len=0
  Inst 42545:   nop     len=0
  Inst 42546:   nop     len=0
  Inst 42547:   nop     len=0
  Inst 42548:   nop     len=0
  Inst 42549:   nop     len=0
  Inst 42550:   nop     len=0
  Inst 42551:   nop     len=0
  Inst 42552:   nop     len=0
  Inst 42553:   nop     len=0
  Inst 42554:   nop     len=0
  Inst 42555:   nop     len=0
  Inst 42556:   nop     len=0
  Inst 42557:   nop     len=0
  Inst 42558:   nop     len=0
  Inst 42559:   nop     len=0
  Inst 42560:   nop     len=0
  Inst 42561:   nop     len=0
  Inst 42562:   nop     len=0
  Inst 42563:   nop     len=0
  Inst 42564:   nop     len=0
  Inst 42565:   nop     len=0
  Inst 42566:   nop     len=0
  Inst 42567:   nop     len=0
  Inst 42568:   nop     len=0
  Inst 42569:   nop     len=0
  Inst 42570:   nop     len=0
  Inst 42571:   nop     len=0
  Inst 42572:   nop     len=0
  Inst 42573:   nop     len=0
  Inst 42574:   nop     len=0
  Inst 42575:   nop     len=0
  Inst 42576:   nop     len=0
  Inst 42577:   nop     len=0
  Inst 42578:   nop     len=0
  Inst 42579:   nop     len=0
  Inst 42580:   nop     len=0
  Inst 42581:   nop     len=0
  Inst 42582:   nop     len=0
  Inst 42583:   nop     len=0
  Inst 42584:   nop     len=0
  Inst 42585:   nop     len=0
  Inst 42586:   nop     len=0
  Inst 42587:   nop     len=0
  Inst 42588:   nop     len=0
  Inst 42589:   nop     len=0
  Inst 42590:   nop     len=0
  Inst 42591:   nop     len=0
  Inst 42592:   nop     len=0
  Inst 42593:   nop     len=0
  Inst 42594:   nop     len=0
  Inst 42595:   nop     len=0
  Inst 42596:   nop     len=0
  Inst 42597:   nop     len=0
  Inst 42598:   nop     len=0
  Inst 42599:   nop     len=0
  Inst 42600:   nop     len=0
  Inst 42601:   nop     len=0
  Inst 42602:   nop     len=0
  Inst 42603:   nop     len=0
  Inst 42604:   nop     len=0
  Inst 42605:   nop     len=0
  Inst 42606:   nop     len=0
  Inst 42607:   nop     len=0
  Inst 42608:   nop     len=0
  Inst 42609:   nop     len=0
  Inst 42610:   nop     len=0
  Inst 42611:   jmp     label1008
Block 1008:
  (original IR block: block504)
  (successor: Block 1009)
  (successor: Block 1010)
  (instruction range: 42612 .. 42623)
  Inst 42612:   movq    rsp(2064 + virtual offset), %rsi
  Inst 42613:   movq    8(%rsi), %rdi
  Inst 42614:   movq    rsp(2048 + virtual offset), %rsi
  Inst 42615:   load_ext_name u0:2+0, %rax
  Inst 42616:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 42617:   movq    %rdi, rsp(1744 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42618:   call    *%rax
  Inst 42619:   movq    %rax, %r14
  Inst 42620:   movq    %rdx, %rbx
  Inst 42621:   testq   %rbx, %rbx
  Inst 42622:   jz      label1009; j label1010
Block 1009:
  (successor: Block 1012)
  (instruction range: 42623 .. 42751)
  Inst 42623:   movq    %r14, rsp(1744 + virtual offset)
  Inst 42624:   nop     len=0
  Inst 42625:   nop     len=0
  Inst 42626:   nop     len=0
  Inst 42627:   nop     len=0
  Inst 42628:   nop     len=0
  Inst 42629:   nop     len=0
  Inst 42630:   nop     len=0
  Inst 42631:   nop     len=0
  Inst 42632:   nop     len=0
  Inst 42633:   nop     len=0
  Inst 42634:   nop     len=0
  Inst 42635:   nop     len=0
  Inst 42636:   nop     len=0
  Inst 42637:   nop     len=0
  Inst 42638:   nop     len=0
  Inst 42639:   nop     len=0
  Inst 42640:   nop     len=0
  Inst 42641:   nop     len=0
  Inst 42642:   nop     len=0
  Inst 42643:   nop     len=0
  Inst 42644:   nop     len=0
  Inst 42645:   nop     len=0
  Inst 42646:   nop     len=0
  Inst 42647:   nop     len=0
  Inst 42648:   nop     len=0
  Inst 42649:   nop     len=0
  Inst 42650:   nop     len=0
  Inst 42651:   nop     len=0
  Inst 42652:   nop     len=0
  Inst 42653:   nop     len=0
  Inst 42654:   nop     len=0
  Inst 42655:   nop     len=0
  Inst 42656:   nop     len=0
  Inst 42657:   nop     len=0
  Inst 42658:   nop     len=0
  Inst 42659:   nop     len=0
  Inst 42660:   nop     len=0
  Inst 42661:   nop     len=0
  Inst 42662:   nop     len=0
  Inst 42663:   nop     len=0
  Inst 42664:   nop     len=0
  Inst 42665:   nop     len=0
  Inst 42666:   nop     len=0
  Inst 42667:   nop     len=0
  Inst 42668:   nop     len=0
  Inst 42669:   nop     len=0
  Inst 42670:   nop     len=0
  Inst 42671:   nop     len=0
  Inst 42672:   nop     len=0
  Inst 42673:   nop     len=0
  Inst 42674:   nop     len=0
  Inst 42675:   nop     len=0
  Inst 42676:   nop     len=0
  Inst 42677:   nop     len=0
  Inst 42678:   nop     len=0
  Inst 42679:   nop     len=0
  Inst 42680:   nop     len=0
  Inst 42681:   nop     len=0
  Inst 42682:   nop     len=0
  Inst 42683:   nop     len=0
  Inst 42684:   nop     len=0
  Inst 42685:   nop     len=0
  Inst 42686:   nop     len=0
  Inst 42687:   nop     len=0
  Inst 42688:   nop     len=0
  Inst 42689:   nop     len=0
  Inst 42690:   nop     len=0
  Inst 42691:   nop     len=0
  Inst 42692:   nop     len=0
  Inst 42693:   nop     len=0
  Inst 42694:   nop     len=0
  Inst 42695:   nop     len=0
  Inst 42696:   nop     len=0
  Inst 42697:   nop     len=0
  Inst 42698:   nop     len=0
  Inst 42699:   nop     len=0
  Inst 42700:   nop     len=0
  Inst 42701:   nop     len=0
  Inst 42702:   nop     len=0
  Inst 42703:   nop     len=0
  Inst 42704:   nop     len=0
  Inst 42705:   nop     len=0
  Inst 42706:   nop     len=0
  Inst 42707:   nop     len=0
  Inst 42708:   nop     len=0
  Inst 42709:   nop     len=0
  Inst 42710:   nop     len=0
  Inst 42711:   nop     len=0
  Inst 42712:   nop     len=0
  Inst 42713:   nop     len=0
  Inst 42714:   nop     len=0
  Inst 42715:   nop     len=0
  Inst 42716:   nop     len=0
  Inst 42717:   nop     len=0
  Inst 42718:   nop     len=0
  Inst 42719:   nop     len=0
  Inst 42720:   nop     len=0
  Inst 42721:   nop     len=0
  Inst 42722:   nop     len=0
  Inst 42723:   nop     len=0
  Inst 42724:   nop     len=0
  Inst 42725:   nop     len=0
  Inst 42726:   nop     len=0
  Inst 42727:   nop     len=0
  Inst 42728:   nop     len=0
  Inst 42729:   nop     len=0
  Inst 42730:   nop     len=0
  Inst 42731:   nop     len=0
  Inst 42732:   nop     len=0
  Inst 42733:   nop     len=0
  Inst 42734:   nop     len=0
  Inst 42735:   nop     len=0
  Inst 42736:   nop     len=0
  Inst 42737:   nop     len=0
  Inst 42738:   nop     len=0
  Inst 42739:   nop     len=0
  Inst 42740:   nop     len=0
  Inst 42741:   nop     len=0
  Inst 42742:   nop     len=0
  Inst 42743:   nop     len=0
  Inst 42744:   nop     len=0
  Inst 42745:   nop     len=0
  Inst 42746:   nop     len=0
  Inst 42747:   nop     len=0
  Inst 42748:   nop     len=0
  Inst 42749:   nop     len=0
  Inst 42750:   jmp     label1012
Block 1010:
  (original IR block: block507)
  (successor: Block 1011)
  (instruction range: 42751 .. 42780)
  Inst 42751:   movq    rsp(2072 + virtual offset), %rsi
  Inst 42752:   movq    152(%rsi), %r13
  Inst 42753:   movq    %rbx, %r15
  Inst 42754:   addq    $-1, %r15
  Inst 42755:   movq    %rbx, %rdx
  Inst 42756:   shlq    $3, %rdx
  Inst 42757:   movq    %r13, %r12
  Inst 42758:   addq    %rdx, %r12
  Inst 42759:   movq    %r13, %rdi
  Inst 42760:   addq    $-24, %rdi
  Inst 42761:   movq    %r13, %rsi
  Inst 42762:   load_ext_name %Memmove+0, %rax
  Inst 42763:   movq    %r14, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42764:   call    *%rax
  Inst 42765:   movq    rsp(1496 + virtual offset), %r14
  Inst 42766:   load_ext_name u1:1+0, %rsi
  Inst 42767:   movl    $1, %edi
  Inst 42768:   movq    %rdi, -8(%r13,%rbx,8)
  Inst 42769:   movl    $1, %edi
  Inst 42770:   movq    %rdi, -16(%r13,%rbx,8)
  Inst 42771:   movq    %rsi, -24(%r13,%rbx,8)
  Inst 42772:   movq    rsp(2072 + virtual offset), %rsi
  Inst 42773:   movq    %r12, 152(%rsi)
  Inst 42774:   movq    %r14, %rdi
  Inst 42775:   movq    %r15, %rsi
  Inst 42776:   load_ext_name u0:3+0, %rax
  Inst 42777:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42778:   call    *%rax
  Inst 42779:   jmp     label1011
Block 1011:
  (successor: Block 1012)
  (instruction range: 42780 .. 42908)
  Inst 42780:   movq    %rax, rsp(1744 + virtual offset)
  Inst 42781:   nop     len=0
  Inst 42782:   nop     len=0
  Inst 42783:   nop     len=0
  Inst 42784:   nop     len=0
  Inst 42785:   nop     len=0
  Inst 42786:   nop     len=0
  Inst 42787:   nop     len=0
  Inst 42788:   nop     len=0
  Inst 42789:   nop     len=0
  Inst 42790:   nop     len=0
  Inst 42791:   nop     len=0
  Inst 42792:   nop     len=0
  Inst 42793:   nop     len=0
  Inst 42794:   nop     len=0
  Inst 42795:   nop     len=0
  Inst 42796:   nop     len=0
  Inst 42797:   nop     len=0
  Inst 42798:   nop     len=0
  Inst 42799:   nop     len=0
  Inst 42800:   nop     len=0
  Inst 42801:   nop     len=0
  Inst 42802:   nop     len=0
  Inst 42803:   nop     len=0
  Inst 42804:   nop     len=0
  Inst 42805:   nop     len=0
  Inst 42806:   nop     len=0
  Inst 42807:   nop     len=0
  Inst 42808:   nop     len=0
  Inst 42809:   nop     len=0
  Inst 42810:   nop     len=0
  Inst 42811:   nop     len=0
  Inst 42812:   nop     len=0
  Inst 42813:   nop     len=0
  Inst 42814:   nop     len=0
  Inst 42815:   nop     len=0
  Inst 42816:   nop     len=0
  Inst 42817:   nop     len=0
  Inst 42818:   nop     len=0
  Inst 42819:   nop     len=0
  Inst 42820:   nop     len=0
  Inst 42821:   nop     len=0
  Inst 42822:   nop     len=0
  Inst 42823:   nop     len=0
  Inst 42824:   nop     len=0
  Inst 42825:   nop     len=0
  Inst 42826:   nop     len=0
  Inst 42827:   nop     len=0
  Inst 42828:   nop     len=0
  Inst 42829:   nop     len=0
  Inst 42830:   nop     len=0
  Inst 42831:   nop     len=0
  Inst 42832:   nop     len=0
  Inst 42833:   nop     len=0
  Inst 42834:   nop     len=0
  Inst 42835:   nop     len=0
  Inst 42836:   nop     len=0
  Inst 42837:   nop     len=0
  Inst 42838:   nop     len=0
  Inst 42839:   nop     len=0
  Inst 42840:   nop     len=0
  Inst 42841:   nop     len=0
  Inst 42842:   nop     len=0
  Inst 42843:   nop     len=0
  Inst 42844:   nop     len=0
  Inst 42845:   nop     len=0
  Inst 42846:   nop     len=0
  Inst 42847:   nop     len=0
  Inst 42848:   nop     len=0
  Inst 42849:   nop     len=0
  Inst 42850:   nop     len=0
  Inst 42851:   nop     len=0
  Inst 42852:   nop     len=0
  Inst 42853:   nop     len=0
  Inst 42854:   nop     len=0
  Inst 42855:   nop     len=0
  Inst 42856:   nop     len=0
  Inst 42857:   nop     len=0
  Inst 42858:   nop     len=0
  Inst 42859:   nop     len=0
  Inst 42860:   nop     len=0
  Inst 42861:   nop     len=0
  Inst 42862:   nop     len=0
  Inst 42863:   nop     len=0
  Inst 42864:   nop     len=0
  Inst 42865:   nop     len=0
  Inst 42866:   nop     len=0
  Inst 42867:   nop     len=0
  Inst 42868:   nop     len=0
  Inst 42869:   nop     len=0
  Inst 42870:   nop     len=0
  Inst 42871:   nop     len=0
  Inst 42872:   nop     len=0
  Inst 42873:   nop     len=0
  Inst 42874:   nop     len=0
  Inst 42875:   nop     len=0
  Inst 42876:   nop     len=0
  Inst 42877:   nop     len=0
  Inst 42878:   nop     len=0
  Inst 42879:   nop     len=0
  Inst 42880:   nop     len=0
  Inst 42881:   nop     len=0
  Inst 42882:   nop     len=0
  Inst 42883:   nop     len=0
  Inst 42884:   nop     len=0
  Inst 42885:   nop     len=0
  Inst 42886:   nop     len=0
  Inst 42887:   nop     len=0
  Inst 42888:   nop     len=0
  Inst 42889:   nop     len=0
  Inst 42890:   nop     len=0
  Inst 42891:   nop     len=0
  Inst 42892:   nop     len=0
  Inst 42893:   nop     len=0
  Inst 42894:   nop     len=0
  Inst 42895:   nop     len=0
  Inst 42896:   nop     len=0
  Inst 42897:   nop     len=0
  Inst 42898:   nop     len=0
  Inst 42899:   nop     len=0
  Inst 42900:   nop     len=0
  Inst 42901:   nop     len=0
  Inst 42902:   nop     len=0
  Inst 42903:   nop     len=0
  Inst 42904:   nop     len=0
  Inst 42905:   nop     len=0
  Inst 42906:   nop     len=0
  Inst 42907:   jmp     label1012
Block 1012:
  (original IR block: block506)
  (successor: Block 1013)
  (successor: Block 1014)
  (instruction range: 42908 .. 42919)
  Inst 42908:   movq    rsp(2064 + virtual offset), %rsi
  Inst 42909:   movq    8(%rsi), %rdi
  Inst 42910:   movq    rsp(2048 + virtual offset), %rsi
  Inst 42911:   load_ext_name u0:2+0, %rax
  Inst 42912:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 42913:   movq    %rdi, rsp(2032 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 42914:   call    *%rax
  Inst 42915:   movq    %rax, %r14
  Inst 42916:   movq    %rdx, %rbx
  Inst 42917:   testq   %rbx, %rbx
  Inst 42918:   jz      label1013; j label1014
Block 1013:
  (successor: Block 1016)
  (instruction range: 42919 .. 43047)
  Inst 42919:   movq    %r14, rsp(2032 + virtual offset)
  Inst 42920:   nop     len=0
  Inst 42921:   nop     len=0
  Inst 42922:   nop     len=0
  Inst 42923:   nop     len=0
  Inst 42924:   nop     len=0
  Inst 42925:   nop     len=0
  Inst 42926:   nop     len=0
  Inst 42927:   nop     len=0
  Inst 42928:   nop     len=0
  Inst 42929:   nop     len=0
  Inst 42930:   nop     len=0
  Inst 42931:   nop     len=0
  Inst 42932:   nop     len=0
  Inst 42933:   nop     len=0
  Inst 42934:   nop     len=0
  Inst 42935:   nop     len=0
  Inst 42936:   nop     len=0
  Inst 42937:   nop     len=0
  Inst 42938:   nop     len=0
  Inst 42939:   nop     len=0
  Inst 42940:   nop     len=0
  Inst 42941:   nop     len=0
  Inst 42942:   nop     len=0
  Inst 42943:   nop     len=0
  Inst 42944:   nop     len=0
  Inst 42945:   nop     len=0
  Inst 42946:   nop     len=0
  Inst 42947:   nop     len=0
  Inst 42948:   nop     len=0
  Inst 42949:   nop     len=0
  Inst 42950:   nop     len=0
  Inst 42951:   nop     len=0
  Inst 42952:   nop     len=0
  Inst 42953:   nop     len=0
  Inst 42954:   nop     len=0
  Inst 42955:   nop     len=0
  Inst 42956:   nop     len=0
  Inst 42957:   nop     len=0
  Inst 42958:   nop     len=0
  Inst 42959:   nop     len=0
  Inst 42960:   nop     len=0
  Inst 42961:   nop     len=0
  Inst 42962:   nop     len=0
  Inst 42963:   nop     len=0
  Inst 42964:   nop     len=0
  Inst 42965:   nop     len=0
  Inst 42966:   nop     len=0
  Inst 42967:   nop     len=0
  Inst 42968:   nop     len=0
  Inst 42969:   nop     len=0
  Inst 42970:   nop     len=0
  Inst 42971:   nop     len=0
  Inst 42972:   nop     len=0
  Inst 42973:   nop     len=0
  Inst 42974:   nop     len=0
  Inst 42975:   nop     len=0
  Inst 42976:   nop     len=0
  Inst 42977:   nop     len=0
  Inst 42978:   nop     len=0
  Inst 42979:   nop     len=0
  Inst 42980:   nop     len=0
  Inst 42981:   nop     len=0
  Inst 42982:   nop     len=0
  Inst 42983:   nop     len=0
  Inst 42984:   nop     len=0
  Inst 42985:   nop     len=0
  Inst 42986:   nop     len=0
  Inst 42987:   nop     len=0
  Inst 42988:   nop     len=0
  Inst 42989:   nop     len=0
  Inst 42990:   nop     len=0
  Inst 42991:   nop     len=0
  Inst 42992:   nop     len=0
  Inst 42993:   nop     len=0
  Inst 42994:   nop     len=0
  Inst 42995:   nop     len=0
  Inst 42996:   nop     len=0
  Inst 42997:   nop     len=0
  Inst 42998:   nop     len=0
  Inst 42999:   nop     len=0
  Inst 43000:   nop     len=0
  Inst 43001:   nop     len=0
  Inst 43002:   nop     len=0
  Inst 43003:   nop     len=0
  Inst 43004:   nop     len=0
  Inst 43005:   nop     len=0
  Inst 43006:   nop     len=0
  Inst 43007:   nop     len=0
  Inst 43008:   nop     len=0
  Inst 43009:   nop     len=0
  Inst 43010:   nop     len=0
  Inst 43011:   nop     len=0
  Inst 43012:   nop     len=0
  Inst 43013:   nop     len=0
  Inst 43014:   nop     len=0
  Inst 43015:   nop     len=0
  Inst 43016:   nop     len=0
  Inst 43017:   nop     len=0
  Inst 43018:   nop     len=0
  Inst 43019:   nop     len=0
  Inst 43020:   nop     len=0
  Inst 43021:   nop     len=0
  Inst 43022:   nop     len=0
  Inst 43023:   nop     len=0
  Inst 43024:   nop     len=0
  Inst 43025:   nop     len=0
  Inst 43026:   nop     len=0
  Inst 43027:   nop     len=0
  Inst 43028:   nop     len=0
  Inst 43029:   nop     len=0
  Inst 43030:   nop     len=0
  Inst 43031:   nop     len=0
  Inst 43032:   nop     len=0
  Inst 43033:   nop     len=0
  Inst 43034:   nop     len=0
  Inst 43035:   nop     len=0
  Inst 43036:   nop     len=0
  Inst 43037:   nop     len=0
  Inst 43038:   nop     len=0
  Inst 43039:   nop     len=0
  Inst 43040:   nop     len=0
  Inst 43041:   nop     len=0
  Inst 43042:   nop     len=0
  Inst 43043:   nop     len=0
  Inst 43044:   nop     len=0
  Inst 43045:   nop     len=0
  Inst 43046:   jmp     label1016
Block 1014:
  (original IR block: block509)
  (successor: Block 1015)
  (instruction range: 43047 .. 43076)
  Inst 43047:   movq    rsp(2072 + virtual offset), %rsi
  Inst 43048:   movq    152(%rsi), %r13
  Inst 43049:   movq    %rbx, %r15
  Inst 43050:   addq    $-1, %r15
  Inst 43051:   movq    %rbx, %rdx
  Inst 43052:   shlq    $3, %rdx
  Inst 43053:   movq    %r13, %r12
  Inst 43054:   addq    %rdx, %r12
  Inst 43055:   movq    %r13, %rdi
  Inst 43056:   addq    $-24, %rdi
  Inst 43057:   movq    %r13, %rsi
  Inst 43058:   load_ext_name %Memmove+0, %rax
  Inst 43059:   movq    %r14, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43060:   call    *%rax
  Inst 43061:   movq    rsp(1496 + virtual offset), %r14
  Inst 43062:   load_ext_name u1:1+0, %rsi
  Inst 43063:   movl    $1, %edi
  Inst 43064:   movq    %rdi, -8(%r13,%rbx,8)
  Inst 43065:   movl    $1, %edi
  Inst 43066:   movq    %rdi, -16(%r13,%rbx,8)
  Inst 43067:   movq    %rsi, -24(%r13,%rbx,8)
  Inst 43068:   movq    rsp(2072 + virtual offset), %rsi
  Inst 43069:   movq    %r12, 152(%rsi)
  Inst 43070:   movq    %r14, %rdi
  Inst 43071:   movq    %r15, %rsi
  Inst 43072:   load_ext_name u0:3+0, %rax
  Inst 43073:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43074:   call    *%rax
  Inst 43075:   jmp     label1015
Block 1015:
  (successor: Block 1016)
  (instruction range: 43076 .. 43204)
  Inst 43076:   movq    %rax, rsp(2032 + virtual offset)
  Inst 43077:   nop     len=0
  Inst 43078:   nop     len=0
  Inst 43079:   nop     len=0
  Inst 43080:   nop     len=0
  Inst 43081:   nop     len=0
  Inst 43082:   nop     len=0
  Inst 43083:   nop     len=0
  Inst 43084:   nop     len=0
  Inst 43085:   nop     len=0
  Inst 43086:   nop     len=0
  Inst 43087:   nop     len=0
  Inst 43088:   nop     len=0
  Inst 43089:   nop     len=0
  Inst 43090:   nop     len=0
  Inst 43091:   nop     len=0
  Inst 43092:   nop     len=0
  Inst 43093:   nop     len=0
  Inst 43094:   nop     len=0
  Inst 43095:   nop     len=0
  Inst 43096:   nop     len=0
  Inst 43097:   nop     len=0
  Inst 43098:   nop     len=0
  Inst 43099:   nop     len=0
  Inst 43100:   nop     len=0
  Inst 43101:   nop     len=0
  Inst 43102:   nop     len=0
  Inst 43103:   nop     len=0
  Inst 43104:   nop     len=0
  Inst 43105:   nop     len=0
  Inst 43106:   nop     len=0
  Inst 43107:   nop     len=0
  Inst 43108:   nop     len=0
  Inst 43109:   nop     len=0
  Inst 43110:   nop     len=0
  Inst 43111:   nop     len=0
  Inst 43112:   nop     len=0
  Inst 43113:   nop     len=0
  Inst 43114:   nop     len=0
  Inst 43115:   nop     len=0
  Inst 43116:   nop     len=0
  Inst 43117:   nop     len=0
  Inst 43118:   nop     len=0
  Inst 43119:   nop     len=0
  Inst 43120:   nop     len=0
  Inst 43121:   nop     len=0
  Inst 43122:   nop     len=0
  Inst 43123:   nop     len=0
  Inst 43124:   nop     len=0
  Inst 43125:   nop     len=0
  Inst 43126:   nop     len=0
  Inst 43127:   nop     len=0
  Inst 43128:   nop     len=0
  Inst 43129:   nop     len=0
  Inst 43130:   nop     len=0
  Inst 43131:   nop     len=0
  Inst 43132:   nop     len=0
  Inst 43133:   nop     len=0
  Inst 43134:   nop     len=0
  Inst 43135:   nop     len=0
  Inst 43136:   nop     len=0
  Inst 43137:   nop     len=0
  Inst 43138:   nop     len=0
  Inst 43139:   nop     len=0
  Inst 43140:   nop     len=0
  Inst 43141:   nop     len=0
  Inst 43142:   nop     len=0
  Inst 43143:   nop     len=0
  Inst 43144:   nop     len=0
  Inst 43145:   nop     len=0
  Inst 43146:   nop     len=0
  Inst 43147:   nop     len=0
  Inst 43148:   nop     len=0
  Inst 43149:   nop     len=0
  Inst 43150:   nop     len=0
  Inst 43151:   nop     len=0
  Inst 43152:   nop     len=0
  Inst 43153:   nop     len=0
  Inst 43154:   nop     len=0
  Inst 43155:   nop     len=0
  Inst 43156:   nop     len=0
  Inst 43157:   nop     len=0
  Inst 43158:   nop     len=0
  Inst 43159:   nop     len=0
  Inst 43160:   nop     len=0
  Inst 43161:   nop     len=0
  Inst 43162:   nop     len=0
  Inst 43163:   nop     len=0
  Inst 43164:   nop     len=0
  Inst 43165:   nop     len=0
  Inst 43166:   nop     len=0
  Inst 43167:   nop     len=0
  Inst 43168:   nop     len=0
  Inst 43169:   nop     len=0
  Inst 43170:   nop     len=0
  Inst 43171:   nop     len=0
  Inst 43172:   nop     len=0
  Inst 43173:   nop     len=0
  Inst 43174:   nop     len=0
  Inst 43175:   nop     len=0
  Inst 43176:   nop     len=0
  Inst 43177:   nop     len=0
  Inst 43178:   nop     len=0
  Inst 43179:   nop     len=0
  Inst 43180:   nop     len=0
  Inst 43181:   nop     len=0
  Inst 43182:   nop     len=0
  Inst 43183:   nop     len=0
  Inst 43184:   nop     len=0
  Inst 43185:   nop     len=0
  Inst 43186:   nop     len=0
  Inst 43187:   nop     len=0
  Inst 43188:   nop     len=0
  Inst 43189:   nop     len=0
  Inst 43190:   nop     len=0
  Inst 43191:   nop     len=0
  Inst 43192:   nop     len=0
  Inst 43193:   nop     len=0
  Inst 43194:   nop     len=0
  Inst 43195:   nop     len=0
  Inst 43196:   nop     len=0
  Inst 43197:   nop     len=0
  Inst 43198:   nop     len=0
  Inst 43199:   nop     len=0
  Inst 43200:   nop     len=0
  Inst 43201:   nop     len=0
  Inst 43202:   nop     len=0
  Inst 43203:   jmp     label1016
Block 1016:
  (original IR block: block508)
  (successor: Block 1017)
  (successor: Block 1018)
  (instruction range: 43204 .. 43215)
  Inst 43204:   movq    rsp(2064 + virtual offset), %rsi
  Inst 43205:   movq    8(%rsi), %rdi
  Inst 43206:   movq    rsp(2048 + virtual offset), %rsi
  Inst 43207:   load_ext_name u0:2+0, %rax
  Inst 43208:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 43209:   movq    %rdi, rsp(2040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43210:   call    *%rax
  Inst 43211:   movq    %rax, %r15
  Inst 43212:   movq    %rdx, %r14
  Inst 43213:   testq   %r14, %r14
  Inst 43214:   jz      label1017; j label1018
Block 1017:
  (successor: Block 1020)
  (instruction range: 43215 .. 43344)
  Inst 43215:   movq    %r15, rsp(2056 + virtual offset)
  Inst 43216:   nop     len=0
  Inst 43217:   nop     len=0
  Inst 43218:   nop     len=0
  Inst 43219:   nop     len=0
  Inst 43220:   nop     len=0
  Inst 43221:   nop     len=0
  Inst 43222:   nop     len=0
  Inst 43223:   nop     len=0
  Inst 43224:   nop     len=0
  Inst 43225:   nop     len=0
  Inst 43226:   nop     len=0
  Inst 43227:   nop     len=0
  Inst 43228:   nop     len=0
  Inst 43229:   nop     len=0
  Inst 43230:   nop     len=0
  Inst 43231:   nop     len=0
  Inst 43232:   nop     len=0
  Inst 43233:   nop     len=0
  Inst 43234:   nop     len=0
  Inst 43235:   nop     len=0
  Inst 43236:   nop     len=0
  Inst 43237:   nop     len=0
  Inst 43238:   nop     len=0
  Inst 43239:   nop     len=0
  Inst 43240:   nop     len=0
  Inst 43241:   nop     len=0
  Inst 43242:   nop     len=0
  Inst 43243:   nop     len=0
  Inst 43244:   nop     len=0
  Inst 43245:   nop     len=0
  Inst 43246:   nop     len=0
  Inst 43247:   nop     len=0
  Inst 43248:   nop     len=0
  Inst 43249:   nop     len=0
  Inst 43250:   nop     len=0
  Inst 43251:   nop     len=0
  Inst 43252:   nop     len=0
  Inst 43253:   nop     len=0
  Inst 43254:   nop     len=0
  Inst 43255:   nop     len=0
  Inst 43256:   nop     len=0
  Inst 43257:   nop     len=0
  Inst 43258:   nop     len=0
  Inst 43259:   nop     len=0
  Inst 43260:   nop     len=0
  Inst 43261:   nop     len=0
  Inst 43262:   nop     len=0
  Inst 43263:   nop     len=0
  Inst 43264:   nop     len=0
  Inst 43265:   nop     len=0
  Inst 43266:   nop     len=0
  Inst 43267:   nop     len=0
  Inst 43268:   nop     len=0
  Inst 43269:   nop     len=0
  Inst 43270:   nop     len=0
  Inst 43271:   nop     len=0
  Inst 43272:   nop     len=0
  Inst 43273:   nop     len=0
  Inst 43274:   nop     len=0
  Inst 43275:   nop     len=0
  Inst 43276:   nop     len=0
  Inst 43277:   nop     len=0
  Inst 43278:   nop     len=0
  Inst 43279:   nop     len=0
  Inst 43280:   nop     len=0
  Inst 43281:   nop     len=0
  Inst 43282:   nop     len=0
  Inst 43283:   nop     len=0
  Inst 43284:   nop     len=0
  Inst 43285:   nop     len=0
  Inst 43286:   nop     len=0
  Inst 43287:   nop     len=0
  Inst 43288:   nop     len=0
  Inst 43289:   nop     len=0
  Inst 43290:   nop     len=0
  Inst 43291:   nop     len=0
  Inst 43292:   nop     len=0
  Inst 43293:   nop     len=0
  Inst 43294:   nop     len=0
  Inst 43295:   nop     len=0
  Inst 43296:   nop     len=0
  Inst 43297:   nop     len=0
  Inst 43298:   nop     len=0
  Inst 43299:   nop     len=0
  Inst 43300:   nop     len=0
  Inst 43301:   nop     len=0
  Inst 43302:   nop     len=0
  Inst 43303:   nop     len=0
  Inst 43304:   nop     len=0
  Inst 43305:   nop     len=0
  Inst 43306:   nop     len=0
  Inst 43307:   nop     len=0
  Inst 43308:   nop     len=0
  Inst 43309:   nop     len=0
  Inst 43310:   nop     len=0
  Inst 43311:   nop     len=0
  Inst 43312:   nop     len=0
  Inst 43313:   nop     len=0
  Inst 43314:   nop     len=0
  Inst 43315:   nop     len=0
  Inst 43316:   nop     len=0
  Inst 43317:   nop     len=0
  Inst 43318:   nop     len=0
  Inst 43319:   nop     len=0
  Inst 43320:   nop     len=0
  Inst 43321:   nop     len=0
  Inst 43322:   nop     len=0
  Inst 43323:   nop     len=0
  Inst 43324:   nop     len=0
  Inst 43325:   nop     len=0
  Inst 43326:   nop     len=0
  Inst 43327:   nop     len=0
  Inst 43328:   nop     len=0
  Inst 43329:   nop     len=0
  Inst 43330:   nop     len=0
  Inst 43331:   nop     len=0
  Inst 43332:   nop     len=0
  Inst 43333:   nop     len=0
  Inst 43334:   nop     len=0
  Inst 43335:   nop     len=0
  Inst 43336:   nop     len=0
  Inst 43337:   nop     len=0
  Inst 43338:   nop     len=0
  Inst 43339:   nop     len=0
  Inst 43340:   nop     len=0
  Inst 43341:   nop     len=0
  Inst 43342:   nop     len=0
  Inst 43343:   jmp     label1020
Block 1018:
  (original IR block: block511)
  (successor: Block 1019)
  (instruction range: 43344 .. 43373)
  Inst 43344:   movq    rsp(2072 + virtual offset), %rsi
  Inst 43345:   movq    152(%rsi), %r13
  Inst 43346:   movq    %r14, %rbx
  Inst 43347:   addq    $-1, %rbx
  Inst 43348:   movq    %r14, %rdx
  Inst 43349:   shlq    $3, %rdx
  Inst 43350:   movq    %r13, %r12
  Inst 43351:   addq    %rdx, %r12
  Inst 43352:   movq    %r13, %rdi
  Inst 43353:   addq    $-24, %rdi
  Inst 43354:   movq    %r13, %rsi
  Inst 43355:   load_ext_name %Memmove+0, %rax
  Inst 43356:   movq    %r15, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43357:   call    *%rax
  Inst 43358:   movq    rsp(1496 + virtual offset), %r15
  Inst 43359:   load_ext_name u1:1+0, %rsi
  Inst 43360:   movl    $1, %edi
  Inst 43361:   movq    %rdi, -8(%r13,%r14,8)
  Inst 43362:   movl    $1, %edi
  Inst 43363:   movq    %rdi, -16(%r13,%r14,8)
  Inst 43364:   movq    %rsi, -24(%r13,%r14,8)
  Inst 43365:   movq    rsp(2072 + virtual offset), %rsi
  Inst 43366:   movq    %r12, 152(%rsi)
  Inst 43367:   movq    %r15, %rdi
  Inst 43368:   movq    %rbx, %rsi
  Inst 43369:   load_ext_name u0:3+0, %rax
  Inst 43370:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S256, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43371:   call    *%rax
  Inst 43372:   jmp     label1019
Block 1019:
  (successor: Block 1020)
  (instruction range: 43373 .. 43502)
  Inst 43373:   movq    %rax, rsp(2056 + virtual offset)
  Inst 43374:   nop     len=0
  Inst 43375:   nop     len=0
  Inst 43376:   nop     len=0
  Inst 43377:   nop     len=0
  Inst 43378:   nop     len=0
  Inst 43379:   nop     len=0
  Inst 43380:   nop     len=0
  Inst 43381:   nop     len=0
  Inst 43382:   nop     len=0
  Inst 43383:   nop     len=0
  Inst 43384:   nop     len=0
  Inst 43385:   nop     len=0
  Inst 43386:   nop     len=0
  Inst 43387:   nop     len=0
  Inst 43388:   nop     len=0
  Inst 43389:   nop     len=0
  Inst 43390:   nop     len=0
  Inst 43391:   nop     len=0
  Inst 43392:   nop     len=0
  Inst 43393:   nop     len=0
  Inst 43394:   nop     len=0
  Inst 43395:   nop     len=0
  Inst 43396:   nop     len=0
  Inst 43397:   nop     len=0
  Inst 43398:   nop     len=0
  Inst 43399:   nop     len=0
  Inst 43400:   nop     len=0
  Inst 43401:   nop     len=0
  Inst 43402:   nop     len=0
  Inst 43403:   nop     len=0
  Inst 43404:   nop     len=0
  Inst 43405:   nop     len=0
  Inst 43406:   nop     len=0
  Inst 43407:   nop     len=0
  Inst 43408:   nop     len=0
  Inst 43409:   nop     len=0
  Inst 43410:   nop     len=0
  Inst 43411:   nop     len=0
  Inst 43412:   nop     len=0
  Inst 43413:   nop     len=0
  Inst 43414:   nop     len=0
  Inst 43415:   nop     len=0
  Inst 43416:   nop     len=0
  Inst 43417:   nop     len=0
  Inst 43418:   nop     len=0
  Inst 43419:   nop     len=0
  Inst 43420:   nop     len=0
  Inst 43421:   nop     len=0
  Inst 43422:   nop     len=0
  Inst 43423:   nop     len=0
  Inst 43424:   nop     len=0
  Inst 43425:   nop     len=0
  Inst 43426:   nop     len=0
  Inst 43427:   nop     len=0
  Inst 43428:   nop     len=0
  Inst 43429:   nop     len=0
  Inst 43430:   nop     len=0
  Inst 43431:   nop     len=0
  Inst 43432:   nop     len=0
  Inst 43433:   nop     len=0
  Inst 43434:   nop     len=0
  Inst 43435:   nop     len=0
  Inst 43436:   nop     len=0
  Inst 43437:   nop     len=0
  Inst 43438:   nop     len=0
  Inst 43439:   nop     len=0
  Inst 43440:   nop     len=0
  Inst 43441:   nop     len=0
  Inst 43442:   nop     len=0
  Inst 43443:   nop     len=0
  Inst 43444:   nop     len=0
  Inst 43445:   nop     len=0
  Inst 43446:   nop     len=0
  Inst 43447:   nop     len=0
  Inst 43448:   nop     len=0
  Inst 43449:   nop     len=0
  Inst 43450:   nop     len=0
  Inst 43451:   nop     len=0
  Inst 43452:   nop     len=0
  Inst 43453:   nop     len=0
  Inst 43454:   nop     len=0
  Inst 43455:   nop     len=0
  Inst 43456:   nop     len=0
  Inst 43457:   nop     len=0
  Inst 43458:   nop     len=0
  Inst 43459:   nop     len=0
  Inst 43460:   nop     len=0
  Inst 43461:   nop     len=0
  Inst 43462:   nop     len=0
  Inst 43463:   nop     len=0
  Inst 43464:   nop     len=0
  Inst 43465:   nop     len=0
  Inst 43466:   nop     len=0
  Inst 43467:   nop     len=0
  Inst 43468:   nop     len=0
  Inst 43469:   nop     len=0
  Inst 43470:   nop     len=0
  Inst 43471:   nop     len=0
  Inst 43472:   nop     len=0
  Inst 43473:   nop     len=0
  Inst 43474:   nop     len=0
  Inst 43475:   nop     len=0
  Inst 43476:   nop     len=0
  Inst 43477:   nop     len=0
  Inst 43478:   nop     len=0
  Inst 43479:   nop     len=0
  Inst 43480:   nop     len=0
  Inst 43481:   nop     len=0
  Inst 43482:   nop     len=0
  Inst 43483:   nop     len=0
  Inst 43484:   nop     len=0
  Inst 43485:   nop     len=0
  Inst 43486:   nop     len=0
  Inst 43487:   nop     len=0
  Inst 43488:   nop     len=0
  Inst 43489:   nop     len=0
  Inst 43490:   nop     len=0
  Inst 43491:   nop     len=0
  Inst 43492:   nop     len=0
  Inst 43493:   nop     len=0
  Inst 43494:   nop     len=0
  Inst 43495:   nop     len=0
  Inst 43496:   nop     len=0
  Inst 43497:   nop     len=0
  Inst 43498:   nop     len=0
  Inst 43499:   nop     len=0
  Inst 43500:   nop     len=0
  Inst 43501:   jmp     label1020
Block 1020:
  (original IR block: block510)
  (successor: Block 1021)
  (successor: Block 1022)
  (instruction range: 43502 .. 43513)
  Inst 43502:   movq    rsp(2064 + virtual offset), %rsi
  Inst 43503:   movq    8(%rsi), %rdi
  Inst 43504:   movq    rsp(2048 + virtual offset), %rsi
  Inst 43505:   load_ext_name u0:2+0, %rax
  Inst 43506:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 43507:   movq    %rdi, rsp(2040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S256, S257, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43508:   call    *%rax
  Inst 43509:   movq    %rax, %r14
  Inst 43510:   movq    %rdx, %rbx
  Inst 43511:   testq   %rbx, %rbx
  Inst 43512:   jz      label1021; j label1022
Block 1021:
  (successor: Block 1024)
  (instruction range: 43513 .. 43642)
  Inst 43513:   movq    %r14, rsp(2040 + virtual offset)
  Inst 43514:   nop     len=0
  Inst 43515:   nop     len=0
  Inst 43516:   nop     len=0
  Inst 43517:   nop     len=0
  Inst 43518:   nop     len=0
  Inst 43519:   nop     len=0
  Inst 43520:   nop     len=0
  Inst 43521:   nop     len=0
  Inst 43522:   nop     len=0
  Inst 43523:   nop     len=0
  Inst 43524:   nop     len=0
  Inst 43525:   nop     len=0
  Inst 43526:   nop     len=0
  Inst 43527:   nop     len=0
  Inst 43528:   nop     len=0
  Inst 43529:   nop     len=0
  Inst 43530:   nop     len=0
  Inst 43531:   nop     len=0
  Inst 43532:   nop     len=0
  Inst 43533:   nop     len=0
  Inst 43534:   nop     len=0
  Inst 43535:   nop     len=0
  Inst 43536:   nop     len=0
  Inst 43537:   nop     len=0
  Inst 43538:   nop     len=0
  Inst 43539:   nop     len=0
  Inst 43540:   nop     len=0
  Inst 43541:   nop     len=0
  Inst 43542:   nop     len=0
  Inst 43543:   nop     len=0
  Inst 43544:   nop     len=0
  Inst 43545:   nop     len=0
  Inst 43546:   nop     len=0
  Inst 43547:   nop     len=0
  Inst 43548:   nop     len=0
  Inst 43549:   nop     len=0
  Inst 43550:   nop     len=0
  Inst 43551:   nop     len=0
  Inst 43552:   nop     len=0
  Inst 43553:   nop     len=0
  Inst 43554:   nop     len=0
  Inst 43555:   nop     len=0
  Inst 43556:   nop     len=0
  Inst 43557:   nop     len=0
  Inst 43558:   nop     len=0
  Inst 43559:   nop     len=0
  Inst 43560:   nop     len=0
  Inst 43561:   nop     len=0
  Inst 43562:   nop     len=0
  Inst 43563:   nop     len=0
  Inst 43564:   nop     len=0
  Inst 43565:   nop     len=0
  Inst 43566:   nop     len=0
  Inst 43567:   nop     len=0
  Inst 43568:   nop     len=0
  Inst 43569:   nop     len=0
  Inst 43570:   nop     len=0
  Inst 43571:   nop     len=0
  Inst 43572:   nop     len=0
  Inst 43573:   nop     len=0
  Inst 43574:   nop     len=0
  Inst 43575:   nop     len=0
  Inst 43576:   nop     len=0
  Inst 43577:   nop     len=0
  Inst 43578:   nop     len=0
  Inst 43579:   nop     len=0
  Inst 43580:   nop     len=0
  Inst 43581:   nop     len=0
  Inst 43582:   nop     len=0
  Inst 43583:   nop     len=0
  Inst 43584:   nop     len=0
  Inst 43585:   nop     len=0
  Inst 43586:   nop     len=0
  Inst 43587:   nop     len=0
  Inst 43588:   nop     len=0
  Inst 43589:   nop     len=0
  Inst 43590:   nop     len=0
  Inst 43591:   nop     len=0
  Inst 43592:   nop     len=0
  Inst 43593:   nop     len=0
  Inst 43594:   nop     len=0
  Inst 43595:   nop     len=0
  Inst 43596:   nop     len=0
  Inst 43597:   nop     len=0
  Inst 43598:   nop     len=0
  Inst 43599:   nop     len=0
  Inst 43600:   nop     len=0
  Inst 43601:   nop     len=0
  Inst 43602:   nop     len=0
  Inst 43603:   nop     len=0
  Inst 43604:   nop     len=0
  Inst 43605:   nop     len=0
  Inst 43606:   nop     len=0
  Inst 43607:   nop     len=0
  Inst 43608:   nop     len=0
  Inst 43609:   nop     len=0
  Inst 43610:   nop     len=0
  Inst 43611:   nop     len=0
  Inst 43612:   nop     len=0
  Inst 43613:   nop     len=0
  Inst 43614:   nop     len=0
  Inst 43615:   nop     len=0
  Inst 43616:   nop     len=0
  Inst 43617:   nop     len=0
  Inst 43618:   nop     len=0
  Inst 43619:   nop     len=0
  Inst 43620:   nop     len=0
  Inst 43621:   nop     len=0
  Inst 43622:   nop     len=0
  Inst 43623:   nop     len=0
  Inst 43624:   nop     len=0
  Inst 43625:   nop     len=0
  Inst 43626:   nop     len=0
  Inst 43627:   nop     len=0
  Inst 43628:   nop     len=0
  Inst 43629:   nop     len=0
  Inst 43630:   nop     len=0
  Inst 43631:   nop     len=0
  Inst 43632:   nop     len=0
  Inst 43633:   nop     len=0
  Inst 43634:   nop     len=0
  Inst 43635:   nop     len=0
  Inst 43636:   nop     len=0
  Inst 43637:   nop     len=0
  Inst 43638:   nop     len=0
  Inst 43639:   nop     len=0
  Inst 43640:   nop     len=0
  Inst 43641:   jmp     label1024
Block 1022:
  (original IR block: block513)
  (successor: Block 1023)
  (instruction range: 43642 .. 43671)
  Inst 43642:   movq    rsp(2072 + virtual offset), %rsi
  Inst 43643:   movq    152(%rsi), %r13
  Inst 43644:   movq    %rbx, %r15
  Inst 43645:   addq    $-1, %r15
  Inst 43646:   movq    %rbx, %rdx
  Inst 43647:   shlq    $3, %rdx
  Inst 43648:   movq    %r13, %r12
  Inst 43649:   addq    %rdx, %r12
  Inst 43650:   movq    %r13, %rdi
  Inst 43651:   addq    $-24, %rdi
  Inst 43652:   movq    %r13, %rsi
  Inst 43653:   load_ext_name %Memmove+0, %rax
  Inst 43654:   movq    %r14, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S256, S257, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43655:   call    *%rax
  Inst 43656:   movq    rsp(1496 + virtual offset), %r14
  Inst 43657:   load_ext_name u1:1+0, %rsi
  Inst 43658:   movl    $1, %edi
  Inst 43659:   movq    %rdi, -8(%r13,%rbx,8)
  Inst 43660:   movl    $1, %edi
  Inst 43661:   movq    %rdi, -16(%r13,%rbx,8)
  Inst 43662:   movq    %rsi, -24(%r13,%rbx,8)
  Inst 43663:   movq    rsp(2072 + virtual offset), %rsi
  Inst 43664:   movq    %r12, 152(%rsi)
  Inst 43665:   movq    %r14, %rdi
  Inst 43666:   movq    %r15, %rsi
  Inst 43667:   load_ext_name u0:3+0, %rax
  Inst 43668:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S256, S257, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43669:   call    *%rax
  Inst 43670:   jmp     label1023
Block 1023:
  (successor: Block 1024)
  (instruction range: 43671 .. 43800)
  Inst 43671:   movq    %rax, rsp(2040 + virtual offset)
  Inst 43672:   nop     len=0
  Inst 43673:   nop     len=0
  Inst 43674:   nop     len=0
  Inst 43675:   nop     len=0
  Inst 43676:   nop     len=0
  Inst 43677:   nop     len=0
  Inst 43678:   nop     len=0
  Inst 43679:   nop     len=0
  Inst 43680:   nop     len=0
  Inst 43681:   nop     len=0
  Inst 43682:   nop     len=0
  Inst 43683:   nop     len=0
  Inst 43684:   nop     len=0
  Inst 43685:   nop     len=0
  Inst 43686:   nop     len=0
  Inst 43687:   nop     len=0
  Inst 43688:   nop     len=0
  Inst 43689:   nop     len=0
  Inst 43690:   nop     len=0
  Inst 43691:   nop     len=0
  Inst 43692:   nop     len=0
  Inst 43693:   nop     len=0
  Inst 43694:   nop     len=0
  Inst 43695:   nop     len=0
  Inst 43696:   nop     len=0
  Inst 43697:   nop     len=0
  Inst 43698:   nop     len=0
  Inst 43699:   nop     len=0
  Inst 43700:   nop     len=0
  Inst 43701:   nop     len=0
  Inst 43702:   nop     len=0
  Inst 43703:   nop     len=0
  Inst 43704:   nop     len=0
  Inst 43705:   nop     len=0
  Inst 43706:   nop     len=0
  Inst 43707:   nop     len=0
  Inst 43708:   nop     len=0
  Inst 43709:   nop     len=0
  Inst 43710:   nop     len=0
  Inst 43711:   nop     len=0
  Inst 43712:   nop     len=0
  Inst 43713:   nop     len=0
  Inst 43714:   nop     len=0
  Inst 43715:   nop     len=0
  Inst 43716:   nop     len=0
  Inst 43717:   nop     len=0
  Inst 43718:   nop     len=0
  Inst 43719:   nop     len=0
  Inst 43720:   nop     len=0
  Inst 43721:   nop     len=0
  Inst 43722:   nop     len=0
  Inst 43723:   nop     len=0
  Inst 43724:   nop     len=0
  Inst 43725:   nop     len=0
  Inst 43726:   nop     len=0
  Inst 43727:   nop     len=0
  Inst 43728:   nop     len=0
  Inst 43729:   nop     len=0
  Inst 43730:   nop     len=0
  Inst 43731:   nop     len=0
  Inst 43732:   nop     len=0
  Inst 43733:   nop     len=0
  Inst 43734:   nop     len=0
  Inst 43735:   nop     len=0
  Inst 43736:   nop     len=0
  Inst 43737:   nop     len=0
  Inst 43738:   nop     len=0
  Inst 43739:   nop     len=0
  Inst 43740:   nop     len=0
  Inst 43741:   nop     len=0
  Inst 43742:   nop     len=0
  Inst 43743:   nop     len=0
  Inst 43744:   nop     len=0
  Inst 43745:   nop     len=0
  Inst 43746:   nop     len=0
  Inst 43747:   nop     len=0
  Inst 43748:   nop     len=0
  Inst 43749:   nop     len=0
  Inst 43750:   nop     len=0
  Inst 43751:   nop     len=0
  Inst 43752:   nop     len=0
  Inst 43753:   nop     len=0
  Inst 43754:   nop     len=0
  Inst 43755:   nop     len=0
  Inst 43756:   nop     len=0
  Inst 43757:   nop     len=0
  Inst 43758:   nop     len=0
  Inst 43759:   nop     len=0
  Inst 43760:   nop     len=0
  Inst 43761:   nop     len=0
  Inst 43762:   nop     len=0
  Inst 43763:   nop     len=0
  Inst 43764:   nop     len=0
  Inst 43765:   nop     len=0
  Inst 43766:   nop     len=0
  Inst 43767:   nop     len=0
  Inst 43768:   nop     len=0
  Inst 43769:   nop     len=0
  Inst 43770:   nop     len=0
  Inst 43771:   nop     len=0
  Inst 43772:   nop     len=0
  Inst 43773:   nop     len=0
  Inst 43774:   nop     len=0
  Inst 43775:   nop     len=0
  Inst 43776:   nop     len=0
  Inst 43777:   nop     len=0
  Inst 43778:   nop     len=0
  Inst 43779:   nop     len=0
  Inst 43780:   nop     len=0
  Inst 43781:   nop     len=0
  Inst 43782:   nop     len=0
  Inst 43783:   nop     len=0
  Inst 43784:   nop     len=0
  Inst 43785:   nop     len=0
  Inst 43786:   nop     len=0
  Inst 43787:   nop     len=0
  Inst 43788:   nop     len=0
  Inst 43789:   nop     len=0
  Inst 43790:   nop     len=0
  Inst 43791:   nop     len=0
  Inst 43792:   nop     len=0
  Inst 43793:   nop     len=0
  Inst 43794:   nop     len=0
  Inst 43795:   nop     len=0
  Inst 43796:   nop     len=0
  Inst 43797:   nop     len=0
  Inst 43798:   nop     len=0
  Inst 43799:   jmp     label1024
Block 1024:
  (original IR block: block512)
  (successor: Block 1025)
  (successor: Block 1026)
  (instruction range: 43800 .. 43811)
  Inst 43800:   movq    rsp(2064 + virtual offset), %rsi
  Inst 43801:   movq    8(%rsi), %rdi
  Inst 43802:   movq    rsp(2048 + virtual offset), %rsi
  Inst 43803:   load_ext_name u0:2+0, %rax
  Inst 43804:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 43805:   movq    %rdi, rsp(2048 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S256, S257] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43806:   call    *%rax
  Inst 43807:   movq    %rax, %r13
  Inst 43808:   movq    %rdx, %r14
  Inst 43809:   testq   %r14, %r14
  Inst 43810:   jz      label1025; j label1026
Block 1025:
  (successor: Block 1028)
  (instruction range: 43811 .. 43940)
  Inst 43811:   movq    rsp(2056 + virtual offset), %r12
  Inst 43812:   movq    rsp(1744 + virtual offset), %r14
  Inst 43813:   movq    rsp(1752 + virtual offset), %rbx
  Inst 43814:   nop     len=0
  Inst 43815:   nop     len=0
  Inst 43816:   nop     len=0
  Inst 43817:   nop     len=0
  Inst 43818:   nop     len=0
  Inst 43819:   nop     len=0
  Inst 43820:   nop     len=0
  Inst 43821:   nop     len=0
  Inst 43822:   nop     len=0
  Inst 43823:   nop     len=0
  Inst 43824:   nop     len=0
  Inst 43825:   nop     len=0
  Inst 43826:   nop     len=0
  Inst 43827:   nop     len=0
  Inst 43828:   nop     len=0
  Inst 43829:   nop     len=0
  Inst 43830:   nop     len=0
  Inst 43831:   nop     len=0
  Inst 43832:   nop     len=0
  Inst 43833:   nop     len=0
  Inst 43834:   nop     len=0
  Inst 43835:   nop     len=0
  Inst 43836:   nop     len=0
  Inst 43837:   nop     len=0
  Inst 43838:   nop     len=0
  Inst 43839:   nop     len=0
  Inst 43840:   nop     len=0
  Inst 43841:   nop     len=0
  Inst 43842:   nop     len=0
  Inst 43843:   nop     len=0
  Inst 43844:   nop     len=0
  Inst 43845:   nop     len=0
  Inst 43846:   nop     len=0
  Inst 43847:   nop     len=0
  Inst 43848:   nop     len=0
  Inst 43849:   nop     len=0
  Inst 43850:   nop     len=0
  Inst 43851:   nop     len=0
  Inst 43852:   nop     len=0
  Inst 43853:   nop     len=0
  Inst 43854:   nop     len=0
  Inst 43855:   nop     len=0
  Inst 43856:   nop     len=0
  Inst 43857:   nop     len=0
  Inst 43858:   nop     len=0
  Inst 43859:   nop     len=0
  Inst 43860:   nop     len=0
  Inst 43861:   nop     len=0
  Inst 43862:   nop     len=0
  Inst 43863:   nop     len=0
  Inst 43864:   nop     len=0
  Inst 43865:   nop     len=0
  Inst 43866:   nop     len=0
  Inst 43867:   nop     len=0
  Inst 43868:   nop     len=0
  Inst 43869:   nop     len=0
  Inst 43870:   nop     len=0
  Inst 43871:   nop     len=0
  Inst 43872:   nop     len=0
  Inst 43873:   nop     len=0
  Inst 43874:   nop     len=0
  Inst 43875:   nop     len=0
  Inst 43876:   nop     len=0
  Inst 43877:   nop     len=0
  Inst 43878:   nop     len=0
  Inst 43879:   nop     len=0
  Inst 43880:   nop     len=0
  Inst 43881:   nop     len=0
  Inst 43882:   nop     len=0
  Inst 43883:   nop     len=0
  Inst 43884:   nop     len=0
  Inst 43885:   nop     len=0
  Inst 43886:   nop     len=0
  Inst 43887:   nop     len=0
  Inst 43888:   nop     len=0
  Inst 43889:   nop     len=0
  Inst 43890:   nop     len=0
  Inst 43891:   nop     len=0
  Inst 43892:   nop     len=0
  Inst 43893:   nop     len=0
  Inst 43894:   nop     len=0
  Inst 43895:   nop     len=0
  Inst 43896:   nop     len=0
  Inst 43897:   nop     len=0
  Inst 43898:   nop     len=0
  Inst 43899:   nop     len=0
  Inst 43900:   nop     len=0
  Inst 43901:   nop     len=0
  Inst 43902:   nop     len=0
  Inst 43903:   nop     len=0
  Inst 43904:   nop     len=0
  Inst 43905:   nop     len=0
  Inst 43906:   nop     len=0
  Inst 43907:   nop     len=0
  Inst 43908:   nop     len=0
  Inst 43909:   nop     len=0
  Inst 43910:   nop     len=0
  Inst 43911:   nop     len=0
  Inst 43912:   nop     len=0
  Inst 43913:   nop     len=0
  Inst 43914:   nop     len=0
  Inst 43915:   nop     len=0
  Inst 43916:   nop     len=0
  Inst 43917:   nop     len=0
  Inst 43918:   nop     len=0
  Inst 43919:   nop     len=0
  Inst 43920:   nop     len=0
  Inst 43921:   nop     len=0
  Inst 43922:   nop     len=0
  Inst 43923:   nop     len=0
  Inst 43924:   nop     len=0
  Inst 43925:   nop     len=0
  Inst 43926:   nop     len=0
  Inst 43927:   nop     len=0
  Inst 43928:   nop     len=0
  Inst 43929:   nop     len=0
  Inst 43930:   nop     len=0
  Inst 43931:   nop     len=0
  Inst 43932:   nop     len=0
  Inst 43933:   nop     len=0
  Inst 43934:   nop     len=0
  Inst 43935:   nop     len=0
  Inst 43936:   nop     len=0
  Inst 43937:   nop     len=0
  Inst 43938:   nop     len=0
  Inst 43939:   jmp     label1028
Block 1026:
  (original IR block: block515)
  (successor: Block 1027)
  (instruction range: 43940 .. 43969)
  Inst 43940:   movq    rsp(2072 + virtual offset), %rsi
  Inst 43941:   movq    152(%rsi), %r15
  Inst 43942:   movq    %r14, %rbx
  Inst 43943:   addq    $-1, %rbx
  Inst 43944:   movq    %r14, %rdx
  Inst 43945:   shlq    $3, %rdx
  Inst 43946:   movq    %r15, %r12
  Inst 43947:   addq    %rdx, %r12
  Inst 43948:   movq    %r15, %rdi
  Inst 43949:   addq    $-24, %rdi
  Inst 43950:   movq    %r15, %rsi
  Inst 43951:   load_ext_name %Memmove+0, %rax
  Inst 43952:   movq    %r13, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S257] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43953:   call    *%rax
  Inst 43954:   movq    rsp(1496 + virtual offset), %r13
  Inst 43955:   load_ext_name u1:1+0, %rsi
  Inst 43956:   movl    $1, %edi
  Inst 43957:   movq    %rdi, -8(%r15,%r14,8)
  Inst 43958:   movl    $1, %edi
  Inst 43959:   movq    %rdi, -16(%r15,%r14,8)
  Inst 43960:   movq    %rsi, -24(%r15,%r14,8)
  Inst 43961:   movq    rsp(2072 + virtual offset), %rsi
  Inst 43962:   movq    %r12, 152(%rsi)
  Inst 43963:   movq    %r13, %rdi
  Inst 43964:   movq    %rbx, %rsi
  Inst 43965:   load_ext_name u0:3+0, %rax
  Inst 43966:   movq    %rdi, rsp(1496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S257] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 43967:   call    *%rax
  Inst 43968:   jmp     label1027
Block 1027:
  (successor: Block 1028)
  (instruction range: 43969 .. 44099)
  Inst 43969:   movq    %rax, %r13
  Inst 43970:   movq    rsp(2056 + virtual offset), %r12
  Inst 43971:   movq    rsp(1744 + virtual offset), %r14
  Inst 43972:   movq    rsp(1752 + virtual offset), %rbx
  Inst 43973:   nop     len=0
  Inst 43974:   nop     len=0
  Inst 43975:   nop     len=0
  Inst 43976:   nop     len=0
  Inst 43977:   nop     len=0
  Inst 43978:   nop     len=0
  Inst 43979:   nop     len=0
  Inst 43980:   nop     len=0
  Inst 43981:   nop     len=0
  Inst 43982:   nop     len=0
  Inst 43983:   nop     len=0
  Inst 43984:   nop     len=0
  Inst 43985:   nop     len=0
  Inst 43986:   nop     len=0
  Inst 43987:   nop     len=0
  Inst 43988:   nop     len=0
  Inst 43989:   nop     len=0
  Inst 43990:   nop     len=0
  Inst 43991:   nop     len=0
  Inst 43992:   nop     len=0
  Inst 43993:   nop     len=0
  Inst 43994:   nop     len=0
  Inst 43995:   nop     len=0
  Inst 43996:   nop     len=0
  Inst 43997:   nop     len=0
  Inst 43998:   nop     len=0
  Inst 43999:   nop     len=0
  Inst 44000:   nop     len=0
  Inst 44001:   nop     len=0
  Inst 44002:   nop     len=0
  Inst 44003:   nop     len=0
  Inst 44004:   nop     len=0
  Inst 44005:   nop     len=0
  Inst 44006:   nop     len=0
  Inst 44007:   nop     len=0
  Inst 44008:   nop     len=0
  Inst 44009:   nop     len=0
  Inst 44010:   nop     len=0
  Inst 44011:   nop     len=0
  Inst 44012:   nop     len=0
  Inst 44013:   nop     len=0
  Inst 44014:   nop     len=0
  Inst 44015:   nop     len=0
  Inst 44016:   nop     len=0
  Inst 44017:   nop     len=0
  Inst 44018:   nop     len=0
  Inst 44019:   nop     len=0
  Inst 44020:   nop     len=0
  Inst 44021:   nop     len=0
  Inst 44022:   nop     len=0
  Inst 44023:   nop     len=0
  Inst 44024:   nop     len=0
  Inst 44025:   nop     len=0
  Inst 44026:   nop     len=0
  Inst 44027:   nop     len=0
  Inst 44028:   nop     len=0
  Inst 44029:   nop     len=0
  Inst 44030:   nop     len=0
  Inst 44031:   nop     len=0
  Inst 44032:   nop     len=0
  Inst 44033:   nop     len=0
  Inst 44034:   nop     len=0
  Inst 44035:   nop     len=0
  Inst 44036:   nop     len=0
  Inst 44037:   nop     len=0
  Inst 44038:   nop     len=0
  Inst 44039:   nop     len=0
  Inst 44040:   nop     len=0
  Inst 44041:   nop     len=0
  Inst 44042:   nop     len=0
  Inst 44043:   nop     len=0
  Inst 44044:   nop     len=0
  Inst 44045:   nop     len=0
  Inst 44046:   nop     len=0
  Inst 44047:   nop     len=0
  Inst 44048:   nop     len=0
  Inst 44049:   nop     len=0
  Inst 44050:   nop     len=0
  Inst 44051:   nop     len=0
  Inst 44052:   nop     len=0
  Inst 44053:   nop     len=0
  Inst 44054:   nop     len=0
  Inst 44055:   nop     len=0
  Inst 44056:   nop     len=0
  Inst 44057:   nop     len=0
  Inst 44058:   nop     len=0
  Inst 44059:   nop     len=0
  Inst 44060:   nop     len=0
  Inst 44061:   nop     len=0
  Inst 44062:   nop     len=0
  Inst 44063:   nop     len=0
  Inst 44064:   nop     len=0
  Inst 44065:   nop     len=0
  Inst 44066:   nop     len=0
  Inst 44067:   nop     len=0
  Inst 44068:   nop     len=0
  Inst 44069:   nop     len=0
  Inst 44070:   nop     len=0
  Inst 44071:   nop     len=0
  Inst 44072:   nop     len=0
  Inst 44073:   nop     len=0
  Inst 44074:   nop     len=0
  Inst 44075:   nop     len=0
  Inst 44076:   nop     len=0
  Inst 44077:   nop     len=0
  Inst 44078:   nop     len=0
  Inst 44079:   nop     len=0
  Inst 44080:   nop     len=0
  Inst 44081:   nop     len=0
  Inst 44082:   nop     len=0
  Inst 44083:   nop     len=0
  Inst 44084:   nop     len=0
  Inst 44085:   nop     len=0
  Inst 44086:   nop     len=0
  Inst 44087:   nop     len=0
  Inst 44088:   nop     len=0
  Inst 44089:   nop     len=0
  Inst 44090:   nop     len=0
  Inst 44091:   nop     len=0
  Inst 44092:   nop     len=0
  Inst 44093:   nop     len=0
  Inst 44094:   nop     len=0
  Inst 44095:   nop     len=0
  Inst 44096:   nop     len=0
  Inst 44097:   nop     len=0
  Inst 44098:   jmp     label1028
Block 1028:
  (original IR block: block514)
  (successor: Block 1029)
  (instruction range: 44099 .. 46450)
  Inst 44099:   movl    $257, %edi
  Inst 44100:   xorl    %esi, %esi
  Inst 44101:   load_ext_name u0:4+0, %rax
  Inst 44102:   movq    %r13, rsp(1496 + virtual offset)
  Inst 44103:   movq    %rbx, rsp(2048 + virtual offset)
  Inst 44104:   movq    %r12, rsp(2064 + virtual offset)
  Inst 44105:   movq    %r14, rsp(2072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S256, S258, S259] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44106:   call    *%rax
  Inst 44107:   movq    rsp(1496 + virtual offset), %r13
  Inst 44108:   movq    rsp(2048 + virtual offset), %rbx
  Inst 44109:   movq    rsp(2064 + virtual offset), %r12
  Inst 44110:   movq    rsp(2072 + virtual offset), %r14
  Inst 44111:   movq    %rax, %rsi
  Inst 44112:   movq    %rsi, rsp(1496 + virtual offset)
  Inst 44113:   movq    rsp(1496 + virtual offset), %rsi
  Inst 44114:   movq    %rsi, %r15
  Inst 44115:   movq    %r15, %rdi
  Inst 44116:   movq    %r13, %rsi
  Inst 44117:   load_ext_name u0:5+0, %rax
  Inst 44118:   movq    %rsi, rsp(2048 + virtual offset)
  Inst 44119:   movq    %r15, rsp(2064 + virtual offset)
  Inst 44120:   movq    %rbx, rsp(2072 + virtual offset)
  Inst 44121:   movq    %rdi, rsp(2080 + virtual offset)
  Inst 44122:   movq    %r12, rsp(2088 + virtual offset)
  Inst 44123:   movq    %r14, rsp(2096 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S256, S258, S259, S260, S261, S262] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44124:   call    *%rax
  Inst 44125:   movq    rsp(2064 + virtual offset), %r15
  Inst 44126:   movq    rsp(2072 + virtual offset), %rbx
  Inst 44127:   movq    rsp(2088 + virtual offset), %r12
  Inst 44128:   movq    rsp(2096 + virtual offset), %r14
  Inst 44129:   movq    %r15, %rdi
  Inst 44130:   addq    $8, %rdi
  Inst 44131:   movq    rsp(2040 + virtual offset), %rsi
  Inst 44132:   load_ext_name u0:5+0, %rax
  Inst 44133:   movq    %rsi, rsp(2040 + virtual offset)
  Inst 44134:   movq    %r15, rsp(2048 + virtual offset)
  Inst 44135:   movq    %rbx, rsp(2064 + virtual offset)
  Inst 44136:   movq    %rdi, rsp(2072 + virtual offset)
  Inst 44137:   movq    %r12, rsp(2080 + virtual offset)
  Inst 44138:   movq    %r14, rsp(2088 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S256, S258, S259, S260, S261] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44139:   call    *%rax
  Inst 44140:   movq    rsp(2048 + virtual offset), %r15
  Inst 44141:   movq    rsp(2064 + virtual offset), %rbx
  Inst 44142:   movq    rsp(2080 + virtual offset), %r12
  Inst 44143:   movq    rsp(2088 + virtual offset), %r14
  Inst 44144:   movq    %r15, %rdi
  Inst 44145:   addq    $16, %rdi
  Inst 44146:   movq    %r12, %rsi
  Inst 44147:   load_ext_name u0:5+0, %rax
  Inst 44148:   movq    %rsi, rsp(2040 + virtual offset)
  Inst 44149:   movq    %r15, rsp(2048 + virtual offset)
  Inst 44150:   movq    %rbx, rsp(2056 + virtual offset)
  Inst 44151:   movq    %rdi, rsp(2064 + virtual offset)
  Inst 44152:   movq    %r14, rsp(2072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S256, S257, S258, S259] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44153:   call    *%rax
  Inst 44154:   movq    rsp(2056 + virtual offset), %rbx
  Inst 44155:   movq    rsp(2048 + virtual offset), %r15
  Inst 44156:   movq    rsp(2072 + virtual offset), %r14
  Inst 44157:   movq    %r15, %rdi
  Inst 44158:   addq    $24, %rdi
  Inst 44159:   movq    rsp(2032 + virtual offset), %rsi
  Inst 44160:   load_ext_name u0:5+0, %rax
  Inst 44161:   movq    %rsi, rsp(2032 + virtual offset)
  Inst 44162:   movq    %r15, rsp(2040 + virtual offset)
  Inst 44163:   movq    %rbx, rsp(2048 + virtual offset)
  Inst 44164:   movq    %rdi, rsp(2056 + virtual offset)
  Inst 44165:   movq    %r14, rsp(2064 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S256, S257, S258] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44166:   call    *%rax
  Inst 44167:   movq    rsp(2048 + virtual offset), %rbx
  Inst 44168:   movq    rsp(2040 + virtual offset), %r15
  Inst 44169:   movq    rsp(2064 + virtual offset), %r14
  Inst 44170:   movq    %r15, %rdi
  Inst 44171:   addq    $32, %rdi
  Inst 44172:   movq    %r14, %rsi
  Inst 44173:   load_ext_name u0:5+0, %rax
  Inst 44174:   movq    %rsi, rsp(1744 + virtual offset)
  Inst 44175:   movq    %r15, rsp(2032 + virtual offset)
  Inst 44176:   movq    %rbx, rsp(2040 + virtual offset)
  Inst 44177:   movq    %rdi, rsp(2048 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255, S256] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44178:   call    *%rax
  Inst 44179:   movq    rsp(2040 + virtual offset), %rbx
  Inst 44180:   movq    rsp(2032 + virtual offset), %r15
  Inst 44181:   movq    %r15, %rdi
  Inst 44182:   addq    $40, %rdi
  Inst 44183:   movq    rsp(2016 + virtual offset), %rsi
  Inst 44184:   load_ext_name u0:5+0, %rax
  Inst 44185:   movq    %rsi, rsp(1744 + virtual offset)
  Inst 44186:   movq    %r15, rsp(2016 + virtual offset)
  Inst 44187:   movq    %rbx, rsp(2032 + virtual offset)
  Inst 44188:   movq    %rdi, rsp(2040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253, S254, S255] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44189:   call    *%rax
  Inst 44190:   movq    rsp(2032 + virtual offset), %rbx
  Inst 44191:   movq    rsp(2016 + virtual offset), %r15
  Inst 44192:   movq    %r15, %rdi
  Inst 44193:   addq    $48, %rdi
  Inst 44194:   movq    %rbx, %rsi
  Inst 44195:   load_ext_name u0:5+0, %rax
  Inst 44196:   movq    %rsi, rsp(1744 + virtual offset)
  Inst 44197:   movq    %rdi, rsp(1752 + virtual offset)
  Inst 44198:   movq    %r15, rsp(2016 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252, S253] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44199:   call    *%rax
  Inst 44200:   movq    rsp(2016 + virtual offset), %r15
  Inst 44201:   movq    %r15, %rdi
  Inst 44202:   addq    $56, %rdi
  Inst 44203:   movq    rsp(2024 + virtual offset), %rsi
  Inst 44204:   load_ext_name u0:5+0, %rax
  Inst 44205:   movq    %rsi, rsp(1744 + virtual offset)
  Inst 44206:   movq    %rdi, rsp(1752 + virtual offset)
  Inst 44207:   movq    %r15, rsp(2016 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251, S252] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44208:   call    *%rax
  Inst 44209:   movq    rsp(2016 + virtual offset), %r15
  Inst 44210:   movq    %r15, %rdi
  Inst 44211:   addq    $64, %rdi
  Inst 44212:   movq    rsp(1760 + virtual offset), %rsi
  Inst 44213:   load_ext_name u0:5+0, %rax
  Inst 44214:   movq    %rsi, rsp(1744 + virtual offset)
  Inst 44215:   movq    %rdi, rsp(1752 + virtual offset)
  Inst 44216:   movq    %r15, rsp(1760 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S220, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44217:   call    *%rax
  Inst 44218:   movq    rsp(1760 + virtual offset), %r15
  Inst 44219:   movq    %r15, %rdi
  Inst 44220:   addq    $72, %rdi
  Inst 44221:   movq    rsp(1728 + virtual offset), %rsi
  Inst 44222:   load_ext_name u0:5+0, %rax
  Inst 44223:   movq    %rsi, rsp(1728 + virtual offset)
  Inst 44224:   movq    %rdi, rsp(1744 + virtual offset)
  Inst 44225:   movq    %r15, rsp(1752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S221, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44226:   call    *%rax
  Inst 44227:   movq    rsp(1752 + virtual offset), %r15
  Inst 44228:   movq    %r15, %rdi
  Inst 44229:   addq    $80, %rdi
  Inst 44230:   movq    rsp(1768 + virtual offset), %rsi
  Inst 44231:   load_ext_name u0:5+0, %rax
  Inst 44232:   movq    %rsi, rsp(1728 + virtual offset)
  Inst 44233:   movq    %rdi, rsp(1744 + virtual offset)
  Inst 44234:   movq    %r15, rsp(1752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S219, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44235:   call    *%rax
  Inst 44236:   movq    rsp(1752 + virtual offset), %r15
  Inst 44237:   movq    %r15, %rdi
  Inst 44238:   addq    $88, %rdi
  Inst 44239:   movq    rsp(1712 + virtual offset), %rsi
  Inst 44240:   load_ext_name u0:5+0, %rax
  Inst 44241:   movq    %rsi, rsp(1712 + virtual offset)
  Inst 44242:   movq    %rdi, rsp(1728 + virtual offset)
  Inst 44243:   movq    %r15, rsp(1744 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S222, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44244:   call    *%rax
  Inst 44245:   movq    rsp(1744 + virtual offset), %r15
  Inst 44246:   movq    %r15, %rdi
  Inst 44247:   addq    $96, %rdi
  Inst 44248:   movq    rsp(1776 + virtual offset), %rsi
  Inst 44249:   load_ext_name u0:5+0, %rax
  Inst 44250:   movq    %rsi, rsp(1712 + virtual offset)
  Inst 44251:   movq    %rdi, rsp(1728 + virtual offset)
  Inst 44252:   movq    %r15, rsp(1744 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S218, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44253:   call    *%rax
  Inst 44254:   movq    rsp(1744 + virtual offset), %r15
  Inst 44255:   movq    %r15, %rdi
  Inst 44256:   addq    $104, %rdi
  Inst 44257:   movq    rsp(1696 + virtual offset), %rsi
  Inst 44258:   load_ext_name u0:5+0, %rax
  Inst 44259:   movq    %rsi, rsp(1696 + virtual offset)
  Inst 44260:   movq    %rdi, rsp(1712 + virtual offset)
  Inst 44261:   movq    %r15, rsp(1728 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S223, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44262:   call    *%rax
  Inst 44263:   movq    rsp(1728 + virtual offset), %r15
  Inst 44264:   movq    %r15, %rdi
  Inst 44265:   addq    $112, %rdi
  Inst 44266:   movq    rsp(1784 + virtual offset), %rsi
  Inst 44267:   load_ext_name u0:5+0, %rax
  Inst 44268:   movq    %rsi, rsp(1696 + virtual offset)
  Inst 44269:   movq    %rdi, rsp(1712 + virtual offset)
  Inst 44270:   movq    %r15, rsp(1728 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S216, S217, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44271:   call    *%rax
  Inst 44272:   movq    rsp(1728 + virtual offset), %r15
  Inst 44273:   movq    %r15, %rdi
  Inst 44274:   addq    $120, %rdi
  Inst 44275:   movq    rsp(1680 + virtual offset), %rsi
  Inst 44276:   load_ext_name u0:5+0, %rax
  Inst 44277:   movq    %rsi, rsp(1680 + virtual offset)
  Inst 44278:   movq    %rdi, rsp(1696 + virtual offset)
  Inst 44279:   movq    %r15, rsp(1712 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S217, S224, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44280:   call    *%rax
  Inst 44281:   movq    rsp(1712 + virtual offset), %r15
  Inst 44282:   movq    %r15, %rdi
  Inst 44283:   addq    $128, %rdi
  Inst 44284:   movq    rsp(1792 + virtual offset), %rsi
  Inst 44285:   load_ext_name u0:5+0, %rax
  Inst 44286:   movq    %rsi, rsp(1680 + virtual offset)
  Inst 44287:   movq    %rdi, rsp(1696 + virtual offset)
  Inst 44288:   movq    %r15, rsp(1712 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S214, S215, S217, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44289:   call    *%rax
  Inst 44290:   movq    rsp(1712 + virtual offset), %r15
  Inst 44291:   movq    %r15, %rdi
  Inst 44292:   addq    $136, %rdi
  Inst 44293:   movq    rsp(1664 + virtual offset), %rsi
  Inst 44294:   load_ext_name u0:5+0, %rax
  Inst 44295:   movq    %rsi, rsp(1664 + virtual offset)
  Inst 44296:   movq    %rdi, rsp(1680 + virtual offset)
  Inst 44297:   movq    %r15, rsp(1696 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S215, S217, S225, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44298:   call    *%rax
  Inst 44299:   movq    rsp(1696 + virtual offset), %r15
  Inst 44300:   movq    %r15, %rdi
  Inst 44301:   addq    $144, %rdi
  Inst 44302:   movq    rsp(1800 + virtual offset), %rsi
  Inst 44303:   load_ext_name u0:5+0, %rax
  Inst 44304:   movq    %rsi, rsp(1664 + virtual offset)
  Inst 44305:   movq    %rdi, rsp(1680 + virtual offset)
  Inst 44306:   movq    %r15, rsp(1696 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S212, S213, S215, S217, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44307:   call    *%rax
  Inst 44308:   movq    rsp(1696 + virtual offset), %r15
  Inst 44309:   movq    %r15, %rdi
  Inst 44310:   addq    $152, %rdi
  Inst 44311:   movq    rsp(1648 + virtual offset), %rsi
  Inst 44312:   load_ext_name u0:5+0, %rax
  Inst 44313:   movq    %rsi, rsp(1648 + virtual offset)
  Inst 44314:   movq    %rdi, rsp(1664 + virtual offset)
  Inst 44315:   movq    %r15, rsp(1680 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S213, S215, S217, S226, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44316:   call    *%rax
  Inst 44317:   movq    rsp(1680 + virtual offset), %r15
  Inst 44318:   movq    %r15, %rdi
  Inst 44319:   addq    $160, %rdi
  Inst 44320:   movq    rsp(1808 + virtual offset), %rsi
  Inst 44321:   load_ext_name u0:5+0, %rax
  Inst 44322:   movq    %rsi, rsp(1648 + virtual offset)
  Inst 44323:   movq    %rdi, rsp(1664 + virtual offset)
  Inst 44324:   movq    %r15, rsp(1680 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S210, S211, S213, S215, S217, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44325:   call    *%rax
  Inst 44326:   movq    rsp(1680 + virtual offset), %r15
  Inst 44327:   movq    %r15, %rdi
  Inst 44328:   addq    $168, %rdi
  Inst 44329:   movq    rsp(1632 + virtual offset), %rsi
  Inst 44330:   load_ext_name u0:5+0, %rax
  Inst 44331:   movq    %rsi, rsp(1632 + virtual offset)
  Inst 44332:   movq    %rdi, rsp(1648 + virtual offset)
  Inst 44333:   movq    %r15, rsp(1664 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S211, S213, S215, S217, S227, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44334:   call    *%rax
  Inst 44335:   movq    rsp(1664 + virtual offset), %r15
  Inst 44336:   movq    %r15, %rdi
  Inst 44337:   addq    $176, %rdi
  Inst 44338:   movq    rsp(1816 + virtual offset), %rsi
  Inst 44339:   load_ext_name u0:5+0, %rax
  Inst 44340:   movq    %rsi, rsp(1632 + virtual offset)
  Inst 44341:   movq    %rdi, rsp(1648 + virtual offset)
  Inst 44342:   movq    %r15, rsp(1664 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S208, S209, S211, S213, S215, S217, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44343:   call    *%rax
  Inst 44344:   movq    rsp(1664 + virtual offset), %r15
  Inst 44345:   movq    %r15, %rdi
  Inst 44346:   addq    $184, %rdi
  Inst 44347:   movq    rsp(1616 + virtual offset), %rsi
  Inst 44348:   load_ext_name u0:5+0, %rax
  Inst 44349:   movq    %rsi, rsp(1616 + virtual offset)
  Inst 44350:   movq    %rdi, rsp(1632 + virtual offset)
  Inst 44351:   movq    %r15, rsp(1648 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S209, S211, S213, S215, S217, S228, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44352:   call    *%rax
  Inst 44353:   movq    rsp(1648 + virtual offset), %r15
  Inst 44354:   movq    %r15, %rdi
  Inst 44355:   addq    $192, %rdi
  Inst 44356:   movq    rsp(1824 + virtual offset), %rsi
  Inst 44357:   load_ext_name u0:5+0, %rax
  Inst 44358:   movq    %rsi, rsp(1616 + virtual offset)
  Inst 44359:   movq    %rdi, rsp(1632 + virtual offset)
  Inst 44360:   movq    %r15, rsp(1648 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S206, S207, S209, S211, S213, S215, S217, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44361:   call    *%rax
  Inst 44362:   movq    rsp(1648 + virtual offset), %r15
  Inst 44363:   movq    %r15, %rdi
  Inst 44364:   addq    $200, %rdi
  Inst 44365:   movq    rsp(1600 + virtual offset), %rsi
  Inst 44366:   load_ext_name u0:5+0, %rax
  Inst 44367:   movq    %rsi, rsp(1600 + virtual offset)
  Inst 44368:   movq    %rdi, rsp(1616 + virtual offset)
  Inst 44369:   movq    %r15, rsp(1632 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S207, S209, S211, S213, S215, S217, S229, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44370:   call    *%rax
  Inst 44371:   movq    rsp(1632 + virtual offset), %r15
  Inst 44372:   movq    %r15, %rdi
  Inst 44373:   addq    $208, %rdi
  Inst 44374:   movq    rsp(1832 + virtual offset), %rsi
  Inst 44375:   load_ext_name u0:5+0, %rax
  Inst 44376:   movq    %rsi, rsp(1600 + virtual offset)
  Inst 44377:   movq    %rdi, rsp(1616 + virtual offset)
  Inst 44378:   movq    %r15, rsp(1632 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S204, S205, S207, S209, S211, S213, S215, S217, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44379:   call    *%rax
  Inst 44380:   movq    rsp(1632 + virtual offset), %r15
  Inst 44381:   movq    %r15, %rdi
  Inst 44382:   addq    $216, %rdi
  Inst 44383:   movq    rsp(1584 + virtual offset), %rsi
  Inst 44384:   load_ext_name u0:5+0, %rax
  Inst 44385:   movq    %rsi, rsp(1584 + virtual offset)
  Inst 44386:   movq    %rdi, rsp(1600 + virtual offset)
  Inst 44387:   movq    %r15, rsp(1616 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S205, S207, S209, S211, S213, S215, S217, S230, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44388:   call    *%rax
  Inst 44389:   movq    rsp(1616 + virtual offset), %r15
  Inst 44390:   movq    %r15, %rdi
  Inst 44391:   addq    $224, %rdi
  Inst 44392:   movq    rsp(1840 + virtual offset), %rsi
  Inst 44393:   load_ext_name u0:5+0, %rax
  Inst 44394:   movq    %rsi, rsp(1584 + virtual offset)
  Inst 44395:   movq    %rdi, rsp(1600 + virtual offset)
  Inst 44396:   movq    %r15, rsp(1616 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S202, S203, S205, S207, S209, S211, S213, S215, S217, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44397:   call    *%rax
  Inst 44398:   movq    rsp(1616 + virtual offset), %r15
  Inst 44399:   movq    %r15, %rdi
  Inst 44400:   addq    $232, %rdi
  Inst 44401:   movq    rsp(1568 + virtual offset), %rsi
  Inst 44402:   load_ext_name u0:5+0, %rax
  Inst 44403:   movq    %rsi, rsp(1568 + virtual offset)
  Inst 44404:   movq    %rdi, rsp(1584 + virtual offset)
  Inst 44405:   movq    %r15, rsp(1600 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S203, S205, S207, S209, S211, S213, S215, S217, S231, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44406:   call    *%rax
  Inst 44407:   movq    rsp(1600 + virtual offset), %r15
  Inst 44408:   movq    %r15, %rdi
  Inst 44409:   addq    $240, %rdi
  Inst 44410:   movq    rsp(1848 + virtual offset), %rsi
  Inst 44411:   load_ext_name u0:5+0, %rax
  Inst 44412:   movq    %rsi, rsp(1568 + virtual offset)
  Inst 44413:   movq    %rdi, rsp(1584 + virtual offset)
  Inst 44414:   movq    %r15, rsp(1600 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S200, S201, S203, S205, S207, S209, S211, S213, S215, S217, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44415:   call    *%rax
  Inst 44416:   movq    rsp(1600 + virtual offset), %r15
  Inst 44417:   movq    %r15, %rdi
  Inst 44418:   addq    $248, %rdi
  Inst 44419:   movq    rsp(1552 + virtual offset), %rsi
  Inst 44420:   load_ext_name u0:5+0, %rax
  Inst 44421:   movq    %rsi, rsp(1552 + virtual offset)
  Inst 44422:   movq    %rdi, rsp(1568 + virtual offset)
  Inst 44423:   movq    %r15, rsp(1584 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S232, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44424:   call    *%rax
  Inst 44425:   movq    rsp(1584 + virtual offset), %r15
  Inst 44426:   movq    %r15, %rdi
  Inst 44427:   addq    $256, %rdi
  Inst 44428:   movq    rsp(1856 + virtual offset), %rsi
  Inst 44429:   load_ext_name u0:5+0, %rax
  Inst 44430:   movq    %rsi, rsp(1552 + virtual offset)
  Inst 44431:   movq    %rdi, rsp(1568 + virtual offset)
  Inst 44432:   movq    %r15, rsp(1584 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S198, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44433:   call    *%rax
  Inst 44434:   movq    rsp(1584 + virtual offset), %r15
  Inst 44435:   movq    %r15, %rdi
  Inst 44436:   addq    $264, %rdi
  Inst 44437:   movq    rsp(1536 + virtual offset), %rsi
  Inst 44438:   load_ext_name u0:5+0, %rax
  Inst 44439:   movq    %rsi, rsp(1536 + virtual offset)
  Inst 44440:   movq    %rdi, rsp(1552 + virtual offset)
  Inst 44441:   movq    %r15, rsp(1568 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S233, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44442:   call    *%rax
  Inst 44443:   movq    rsp(1568 + virtual offset), %r15
  Inst 44444:   movq    %r15, %rdi
  Inst 44445:   addq    $272, %rdi
  Inst 44446:   movq    rsp(1864 + virtual offset), %rsi
  Inst 44447:   load_ext_name u0:5+0, %rax
  Inst 44448:   movq    %rsi, rsp(1536 + virtual offset)
  Inst 44449:   movq    %rdi, rsp(1552 + virtual offset)
  Inst 44450:   movq    %r15, rsp(1568 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S196, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44451:   call    *%rax
  Inst 44452:   movq    rsp(1568 + virtual offset), %r15
  Inst 44453:   movq    %r15, %rdi
  Inst 44454:   addq    $280, %rdi
  Inst 44455:   movq    rsp(1520 + virtual offset), %rsi
  Inst 44456:   load_ext_name u0:5+0, %rax
  Inst 44457:   movq    %rsi, rsp(1520 + virtual offset)
  Inst 44458:   movq    %rdi, rsp(1536 + virtual offset)
  Inst 44459:   movq    %r15, rsp(1552 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S234, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44460:   call    *%rax
  Inst 44461:   movq    rsp(1552 + virtual offset), %r15
  Inst 44462:   movq    %r15, %rdi
  Inst 44463:   addq    $288, %rdi
  Inst 44464:   movq    rsp(1872 + virtual offset), %rsi
  Inst 44465:   load_ext_name u0:5+0, %rax
  Inst 44466:   movq    %rsi, rsp(1520 + virtual offset)
  Inst 44467:   movq    %rdi, rsp(1536 + virtual offset)
  Inst 44468:   movq    %r15, rsp(1552 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S194, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44469:   call    *%rax
  Inst 44470:   movq    rsp(1552 + virtual offset), %r15
  Inst 44471:   movq    %r15, %rdi
  Inst 44472:   addq    $296, %rdi
  Inst 44473:   movq    rsp(1504 + virtual offset), %rsi
  Inst 44474:   load_ext_name u0:5+0, %rax
  Inst 44475:   movq    %rsi, rsp(1504 + virtual offset)
  Inst 44476:   movq    %rdi, rsp(1520 + virtual offset)
  Inst 44477:   movq    %r15, rsp(1536 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S235, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44478:   call    *%rax
  Inst 44479:   movq    rsp(1536 + virtual offset), %r15
  Inst 44480:   movq    %r15, %rdi
  Inst 44481:   addq    $304, %rdi
  Inst 44482:   movq    rsp(1880 + virtual offset), %rsi
  Inst 44483:   load_ext_name u0:5+0, %rax
  Inst 44484:   movq    %rsi, rsp(1504 + virtual offset)
  Inst 44485:   movq    %rdi, rsp(1520 + virtual offset)
  Inst 44486:   movq    %r15, rsp(1536 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S192, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44487:   call    *%rax
  Inst 44488:   movq    rsp(1536 + virtual offset), %r15
  Inst 44489:   movq    %r15, %rdi
  Inst 44490:   addq    $312, %rdi
  Inst 44491:   movq    rsp(1488 + virtual offset), %rsi
  Inst 44492:   load_ext_name u0:5+0, %rax
  Inst 44493:   movq    %rsi, rsp(1488 + virtual offset)
  Inst 44494:   movq    %rdi, rsp(1504 + virtual offset)
  Inst 44495:   movq    %r15, rsp(1520 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S236, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44496:   call    *%rax
  Inst 44497:   movq    rsp(1520 + virtual offset), %r15
  Inst 44498:   movq    %r15, %rdi
  Inst 44499:   addq    $320, %rdi
  Inst 44500:   movq    rsp(1888 + virtual offset), %rsi
  Inst 44501:   load_ext_name u0:5+0, %rax
  Inst 44502:   movq    %rsi, rsp(1488 + virtual offset)
  Inst 44503:   movq    %rdi, rsp(1504 + virtual offset)
  Inst 44504:   movq    %r15, rsp(1520 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S190, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44505:   call    *%rax
  Inst 44506:   movq    rsp(1520 + virtual offset), %r15
  Inst 44507:   movq    %r15, %rdi
  Inst 44508:   addq    $328, %rdi
  Inst 44509:   movq    rsp(1472 + virtual offset), %rsi
  Inst 44510:   load_ext_name u0:5+0, %rax
  Inst 44511:   movq    %rsi, rsp(1472 + virtual offset)
  Inst 44512:   movq    %rdi, rsp(1488 + virtual offset)
  Inst 44513:   movq    %r15, rsp(1504 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S237, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44514:   call    *%rax
  Inst 44515:   movq    rsp(1504 + virtual offset), %r15
  Inst 44516:   movq    %r15, %rdi
  Inst 44517:   addq    $336, %rdi
  Inst 44518:   movq    rsp(1896 + virtual offset), %rsi
  Inst 44519:   load_ext_name u0:5+0, %rax
  Inst 44520:   movq    %rsi, rsp(1472 + virtual offset)
  Inst 44521:   movq    %rdi, rsp(1488 + virtual offset)
  Inst 44522:   movq    %r15, rsp(1504 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S188, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44523:   call    *%rax
  Inst 44524:   movq    rsp(1504 + virtual offset), %r15
  Inst 44525:   movq    %r15, %rdi
  Inst 44526:   addq    $344, %rdi
  Inst 44527:   movq    rsp(1456 + virtual offset), %rsi
  Inst 44528:   load_ext_name u0:5+0, %rax
  Inst 44529:   movq    %rsi, rsp(1456 + virtual offset)
  Inst 44530:   movq    %rdi, rsp(1472 + virtual offset)
  Inst 44531:   movq    %r15, rsp(1488 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S238, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44532:   call    *%rax
  Inst 44533:   movq    rsp(1488 + virtual offset), %r15
  Inst 44534:   movq    %r15, %rdi
  Inst 44535:   addq    $352, %rdi
  Inst 44536:   movq    rsp(1904 + virtual offset), %rsi
  Inst 44537:   load_ext_name u0:5+0, %rax
  Inst 44538:   movq    %rsi, rsp(1456 + virtual offset)
  Inst 44539:   movq    %rdi, rsp(1472 + virtual offset)
  Inst 44540:   movq    %r15, rsp(1488 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S186, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44541:   call    *%rax
  Inst 44542:   movq    rsp(1488 + virtual offset), %r15
  Inst 44543:   movq    %r15, %rdi
  Inst 44544:   addq    $360, %rdi
  Inst 44545:   movq    rsp(1440 + virtual offset), %rsi
  Inst 44546:   load_ext_name u0:5+0, %rax
  Inst 44547:   movq    %rsi, rsp(1440 + virtual offset)
  Inst 44548:   movq    %rdi, rsp(1456 + virtual offset)
  Inst 44549:   movq    %r15, rsp(1472 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S239, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44550:   call    *%rax
  Inst 44551:   movq    rsp(1472 + virtual offset), %r15
  Inst 44552:   movq    %r15, %rdi
  Inst 44553:   addq    $368, %rdi
  Inst 44554:   movq    rsp(1912 + virtual offset), %rsi
  Inst 44555:   load_ext_name u0:5+0, %rax
  Inst 44556:   movq    %rsi, rsp(1440 + virtual offset)
  Inst 44557:   movq    %rdi, rsp(1456 + virtual offset)
  Inst 44558:   movq    %r15, rsp(1472 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S184, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44559:   call    *%rax
  Inst 44560:   movq    rsp(1472 + virtual offset), %r15
  Inst 44561:   movq    %r15, %rdi
  Inst 44562:   addq    $376, %rdi
  Inst 44563:   movq    rsp(1424 + virtual offset), %rsi
  Inst 44564:   load_ext_name u0:5+0, %rax
  Inst 44565:   movq    %rsi, rsp(1424 + virtual offset)
  Inst 44566:   movq    %rdi, rsp(1440 + virtual offset)
  Inst 44567:   movq    %r15, rsp(1456 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S240, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44568:   call    *%rax
  Inst 44569:   movq    rsp(1456 + virtual offset), %r15
  Inst 44570:   movq    %r15, %rdi
  Inst 44571:   addq    $384, %rdi
  Inst 44572:   movq    rsp(1920 + virtual offset), %rsi
  Inst 44573:   load_ext_name u0:5+0, %rax
  Inst 44574:   movq    %rsi, rsp(1424 + virtual offset)
  Inst 44575:   movq    %rdi, rsp(1440 + virtual offset)
  Inst 44576:   movq    %r15, rsp(1456 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S182, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44577:   call    *%rax
  Inst 44578:   movq    rsp(1456 + virtual offset), %r15
  Inst 44579:   movq    %r15, %rdi
  Inst 44580:   addq    $392, %rdi
  Inst 44581:   movq    rsp(1408 + virtual offset), %rsi
  Inst 44582:   load_ext_name u0:5+0, %rax
  Inst 44583:   movq    %rsi, rsp(1408 + virtual offset)
  Inst 44584:   movq    %rdi, rsp(1424 + virtual offset)
  Inst 44585:   movq    %r15, rsp(1440 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S241, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44586:   call    *%rax
  Inst 44587:   movq    rsp(1440 + virtual offset), %r15
  Inst 44588:   movq    %r15, %rdi
  Inst 44589:   addq    $400, %rdi
  Inst 44590:   movq    rsp(1928 + virtual offset), %rsi
  Inst 44591:   load_ext_name u0:5+0, %rax
  Inst 44592:   movq    %rsi, rsp(1408 + virtual offset)
  Inst 44593:   movq    %rdi, rsp(1424 + virtual offset)
  Inst 44594:   movq    %r15, rsp(1440 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S180, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44595:   call    *%rax
  Inst 44596:   movq    rsp(1440 + virtual offset), %r15
  Inst 44597:   movq    %r15, %rdi
  Inst 44598:   addq    $408, %rdi
  Inst 44599:   movq    rsp(1392 + virtual offset), %rsi
  Inst 44600:   load_ext_name u0:5+0, %rax
  Inst 44601:   movq    %rsi, rsp(1392 + virtual offset)
  Inst 44602:   movq    %rdi, rsp(1408 + virtual offset)
  Inst 44603:   movq    %r15, rsp(1424 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S242, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44604:   call    *%rax
  Inst 44605:   movq    rsp(1424 + virtual offset), %r15
  Inst 44606:   movq    %r15, %rdi
  Inst 44607:   addq    $416, %rdi
  Inst 44608:   movq    rsp(1936 + virtual offset), %rsi
  Inst 44609:   load_ext_name u0:5+0, %rax
  Inst 44610:   movq    %rsi, rsp(1392 + virtual offset)
  Inst 44611:   movq    %rdi, rsp(1408 + virtual offset)
  Inst 44612:   movq    %r15, rsp(1424 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S178, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44613:   call    *%rax
  Inst 44614:   movq    rsp(1424 + virtual offset), %r15
  Inst 44615:   movq    %r15, %rdi
  Inst 44616:   addq    $424, %rdi
  Inst 44617:   movq    rsp(1376 + virtual offset), %rsi
  Inst 44618:   load_ext_name u0:5+0, %rax
  Inst 44619:   movq    %rsi, rsp(1376 + virtual offset)
  Inst 44620:   movq    %rdi, rsp(1392 + virtual offset)
  Inst 44621:   movq    %r15, rsp(1408 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S243, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44622:   call    *%rax
  Inst 44623:   movq    rsp(1408 + virtual offset), %r15
  Inst 44624:   movq    %r15, %rdi
  Inst 44625:   addq    $432, %rdi
  Inst 44626:   movq    rsp(1944 + virtual offset), %rsi
  Inst 44627:   load_ext_name u0:5+0, %rax
  Inst 44628:   movq    %rsi, rsp(1376 + virtual offset)
  Inst 44629:   movq    %rdi, rsp(1392 + virtual offset)
  Inst 44630:   movq    %r15, rsp(1408 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S176, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44631:   call    *%rax
  Inst 44632:   movq    rsp(1408 + virtual offset), %r15
  Inst 44633:   movq    %r15, %rdi
  Inst 44634:   addq    $440, %rdi
  Inst 44635:   movq    rsp(1360 + virtual offset), %rsi
  Inst 44636:   load_ext_name u0:5+0, %rax
  Inst 44637:   movq    %rsi, rsp(1360 + virtual offset)
  Inst 44638:   movq    %rdi, rsp(1376 + virtual offset)
  Inst 44639:   movq    %r15, rsp(1392 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S244, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44640:   call    *%rax
  Inst 44641:   movq    rsp(1392 + virtual offset), %r15
  Inst 44642:   movq    %r15, %rdi
  Inst 44643:   addq    $448, %rdi
  Inst 44644:   movq    rsp(1952 + virtual offset), %rsi
  Inst 44645:   load_ext_name u0:5+0, %rax
  Inst 44646:   movq    %rsi, rsp(1360 + virtual offset)
  Inst 44647:   movq    %rdi, rsp(1376 + virtual offset)
  Inst 44648:   movq    %r15, rsp(1392 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S174, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44649:   call    *%rax
  Inst 44650:   movq    rsp(1392 + virtual offset), %r15
  Inst 44651:   movq    %r15, %rdi
  Inst 44652:   addq    $456, %rdi
  Inst 44653:   movq    rsp(1344 + virtual offset), %rsi
  Inst 44654:   load_ext_name u0:5+0, %rax
  Inst 44655:   movq    %rsi, rsp(1344 + virtual offset)
  Inst 44656:   movq    %rdi, rsp(1360 + virtual offset)
  Inst 44657:   movq    %r15, rsp(1376 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S245, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44658:   call    *%rax
  Inst 44659:   movq    rsp(1376 + virtual offset), %r15
  Inst 44660:   movq    %r15, %rdi
  Inst 44661:   addq    $464, %rdi
  Inst 44662:   movq    rsp(1960 + virtual offset), %rsi
  Inst 44663:   load_ext_name u0:5+0, %rax
  Inst 44664:   movq    %rsi, rsp(1344 + virtual offset)
  Inst 44665:   movq    %rdi, rsp(1360 + virtual offset)
  Inst 44666:   movq    %r15, rsp(1376 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S172, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44667:   call    *%rax
  Inst 44668:   movq    rsp(1376 + virtual offset), %r15
  Inst 44669:   movq    %r15, %rdi
  Inst 44670:   addq    $472, %rdi
  Inst 44671:   movq    rsp(1328 + virtual offset), %rsi
  Inst 44672:   load_ext_name u0:5+0, %rax
  Inst 44673:   movq    %rsi, rsp(1328 + virtual offset)
  Inst 44674:   movq    %rdi, rsp(1344 + virtual offset)
  Inst 44675:   movq    %r15, rsp(1360 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S246, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44676:   call    *%rax
  Inst 44677:   movq    rsp(1360 + virtual offset), %r15
  Inst 44678:   movq    %r15, %rdi
  Inst 44679:   addq    $480, %rdi
  Inst 44680:   movq    rsp(1968 + virtual offset), %rsi
  Inst 44681:   load_ext_name u0:5+0, %rax
  Inst 44682:   movq    %rsi, rsp(1328 + virtual offset)
  Inst 44683:   movq    %rdi, rsp(1344 + virtual offset)
  Inst 44684:   movq    %r15, rsp(1360 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S170, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44685:   call    *%rax
  Inst 44686:   movq    rsp(1360 + virtual offset), %r15
  Inst 44687:   movq    %r15, %rdi
  Inst 44688:   addq    $488, %rdi
  Inst 44689:   movq    rsp(1312 + virtual offset), %rsi
  Inst 44690:   load_ext_name u0:5+0, %rax
  Inst 44691:   movq    %rsi, rsp(1312 + virtual offset)
  Inst 44692:   movq    %rdi, rsp(1328 + virtual offset)
  Inst 44693:   movq    %r15, rsp(1344 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S247, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44694:   call    *%rax
  Inst 44695:   movq    rsp(1344 + virtual offset), %r15
  Inst 44696:   movq    %r15, %rdi
  Inst 44697:   addq    $496, %rdi
  Inst 44698:   movq    rsp(1976 + virtual offset), %rsi
  Inst 44699:   load_ext_name u0:5+0, %rax
  Inst 44700:   movq    %rsi, rsp(1312 + virtual offset)
  Inst 44701:   movq    %rdi, rsp(1328 + virtual offset)
  Inst 44702:   movq    %r15, rsp(1344 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S168, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44703:   call    *%rax
  Inst 44704:   movq    rsp(1344 + virtual offset), %r15
  Inst 44705:   movq    %r15, %rdi
  Inst 44706:   addq    $504, %rdi
  Inst 44707:   movq    rsp(1296 + virtual offset), %rsi
  Inst 44708:   load_ext_name u0:5+0, %rax
  Inst 44709:   movq    %rsi, rsp(1296 + virtual offset)
  Inst 44710:   movq    %rdi, rsp(1312 + virtual offset)
  Inst 44711:   movq    %r15, rsp(1328 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S248, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44712:   call    *%rax
  Inst 44713:   movq    rsp(1328 + virtual offset), %r15
  Inst 44714:   movq    %r15, %rdi
  Inst 44715:   addq    $512, %rdi
  Inst 44716:   movq    rsp(1984 + virtual offset), %rsi
  Inst 44717:   load_ext_name u0:5+0, %rax
  Inst 44718:   movq    %rsi, rsp(1296 + virtual offset)
  Inst 44719:   movq    %rdi, rsp(1312 + virtual offset)
  Inst 44720:   movq    %r15, rsp(1328 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S166, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44721:   call    *%rax
  Inst 44722:   movq    rsp(1328 + virtual offset), %r15
  Inst 44723:   movq    %r15, %rdi
  Inst 44724:   addq    $520, %rdi
  Inst 44725:   movq    rsp(1280 + virtual offset), %rsi
  Inst 44726:   load_ext_name u0:5+0, %rax
  Inst 44727:   movq    %rsi, rsp(1280 + virtual offset)
  Inst 44728:   movq    %rdi, rsp(1296 + virtual offset)
  Inst 44729:   movq    %r15, rsp(1312 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S249, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44730:   call    *%rax
  Inst 44731:   movq    rsp(1312 + virtual offset), %r15
  Inst 44732:   movq    %r15, %rdi
  Inst 44733:   addq    $528, %rdi
  Inst 44734:   movq    rsp(1992 + virtual offset), %rsi
  Inst 44735:   load_ext_name u0:5+0, %rax
  Inst 44736:   movq    %rsi, rsp(1280 + virtual offset)
  Inst 44737:   movq    %rdi, rsp(1296 + virtual offset)
  Inst 44738:   movq    %r15, rsp(1312 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S164, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44739:   call    *%rax
  Inst 44740:   movq    rsp(1312 + virtual offset), %r15
  Inst 44741:   movq    %r15, %rdi
  Inst 44742:   addq    $536, %rdi
  Inst 44743:   movq    rsp(1264 + virtual offset), %rsi
  Inst 44744:   load_ext_name u0:5+0, %rax
  Inst 44745:   movq    %rsi, rsp(1264 + virtual offset)
  Inst 44746:   movq    %rdi, rsp(1280 + virtual offset)
  Inst 44747:   movq    %r15, rsp(1296 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S250, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44748:   call    *%rax
  Inst 44749:   movq    rsp(1296 + virtual offset), %r15
  Inst 44750:   movq    %r15, %rdi
  Inst 44751:   addq    $544, %rdi
  Inst 44752:   movq    rsp(2000 + virtual offset), %rsi
  Inst 44753:   load_ext_name u0:5+0, %rax
  Inst 44754:   movq    %rsi, rsp(1264 + virtual offset)
  Inst 44755:   movq    %rdi, rsp(1280 + virtual offset)
  Inst 44756:   movq    %r15, rsp(1296 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S162, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44757:   call    *%rax
  Inst 44758:   movq    rsp(1296 + virtual offset), %r15
  Inst 44759:   movq    %r15, %rdi
  Inst 44760:   addq    $552, %rdi
  Inst 44761:   movq    rsp(1248 + virtual offset), %rsi
  Inst 44762:   load_ext_name u0:5+0, %rax
  Inst 44763:   movq    %rsi, rsp(1248 + virtual offset)
  Inst 44764:   movq    %rdi, rsp(1264 + virtual offset)
  Inst 44765:   movq    %r15, rsp(1280 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217, S251] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44766:   call    *%rax
  Inst 44767:   movq    rsp(1280 + virtual offset), %r15
  Inst 44768:   movq    %r15, %rdi
  Inst 44769:   addq    $560, %rdi
  Inst 44770:   movq    rsp(2008 + virtual offset), %rsi
  Inst 44771:   load_ext_name u0:5+0, %rax
  Inst 44772:   movq    %rsi, rsp(1248 + virtual offset)
  Inst 44773:   movq    %rdi, rsp(1264 + virtual offset)
  Inst 44774:   movq    %r15, rsp(1280 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S160, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44775:   call    *%rax
  Inst 44776:   movq    rsp(1280 + virtual offset), %r15
  Inst 44777:   movq    %r15, %rdi
  Inst 44778:   addq    $568, %rdi
  Inst 44779:   movq    rsp(1232 + virtual offset), %rsi
  Inst 44780:   load_ext_name u0:5+0, %rax
  Inst 44781:   movq    %rsi, rsp(1232 + virtual offset)
  Inst 44782:   movq    %rdi, rsp(1248 + virtual offset)
  Inst 44783:   movq    %r15, rsp(1264 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215, S217] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44784:   call    *%rax
  Inst 44785:   movq    rsp(1264 + virtual offset), %r15
  Inst 44786:   movq    %r15, %rdi
  Inst 44787:   addq    $576, %rdi
  Inst 44788:   movq    rsp(1736 + virtual offset), %rsi
  Inst 44789:   load_ext_name u0:5+0, %rax
  Inst 44790:   movq    %rsi, rsp(1232 + virtual offset)
  Inst 44791:   movq    %rdi, rsp(1248 + virtual offset)
  Inst 44792:   movq    %r15, rsp(1264 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S158, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44793:   call    *%rax
  Inst 44794:   movq    rsp(1264 + virtual offset), %r15
  Inst 44795:   movq    %r15, %rdi
  Inst 44796:   addq    $584, %rdi
  Inst 44797:   movq    rsp(1216 + virtual offset), %rsi
  Inst 44798:   load_ext_name u0:5+0, %rax
  Inst 44799:   movq    %rsi, rsp(1216 + virtual offset)
  Inst 44800:   movq    %rdi, rsp(1232 + virtual offset)
  Inst 44801:   movq    %r15, rsp(1248 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213, S215] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44802:   call    *%rax
  Inst 44803:   movq    rsp(1248 + virtual offset), %r15
  Inst 44804:   movq    %r15, %rdi
  Inst 44805:   addq    $592, %rdi
  Inst 44806:   movq    rsp(1720 + virtual offset), %rsi
  Inst 44807:   load_ext_name u0:5+0, %rax
  Inst 44808:   movq    %rsi, rsp(1216 + virtual offset)
  Inst 44809:   movq    %rdi, rsp(1232 + virtual offset)
  Inst 44810:   movq    %r15, rsp(1248 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S156, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44811:   call    *%rax
  Inst 44812:   movq    rsp(1248 + virtual offset), %r15
  Inst 44813:   movq    %r15, %rdi
  Inst 44814:   addq    $600, %rdi
  Inst 44815:   movq    rsp(1200 + virtual offset), %rsi
  Inst 44816:   load_ext_name u0:5+0, %rax
  Inst 44817:   movq    %rsi, rsp(1200 + virtual offset)
  Inst 44818:   movq    %rdi, rsp(1216 + virtual offset)
  Inst 44819:   movq    %r15, rsp(1232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211, S213] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44820:   call    *%rax
  Inst 44821:   movq    rsp(1232 + virtual offset), %r15
  Inst 44822:   movq    %r15, %rdi
  Inst 44823:   addq    $608, %rdi
  Inst 44824:   movq    rsp(1704 + virtual offset), %rsi
  Inst 44825:   load_ext_name u0:5+0, %rax
  Inst 44826:   movq    %rsi, rsp(1200 + virtual offset)
  Inst 44827:   movq    %rdi, rsp(1216 + virtual offset)
  Inst 44828:   movq    %r15, rsp(1232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S154, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44829:   call    *%rax
  Inst 44830:   movq    rsp(1232 + virtual offset), %r15
  Inst 44831:   movq    %r15, %rdi
  Inst 44832:   addq    $616, %rdi
  Inst 44833:   movq    rsp(1184 + virtual offset), %rsi
  Inst 44834:   load_ext_name u0:5+0, %rax
  Inst 44835:   movq    %rsi, rsp(1184 + virtual offset)
  Inst 44836:   movq    %rdi, rsp(1200 + virtual offset)
  Inst 44837:   movq    %r15, rsp(1216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209, S211] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44838:   call    *%rax
  Inst 44839:   movq    rsp(1216 + virtual offset), %r15
  Inst 44840:   movq    %r15, %rdi
  Inst 44841:   addq    $624, %rdi
  Inst 44842:   movq    rsp(1688 + virtual offset), %rsi
  Inst 44843:   load_ext_name u0:5+0, %rax
  Inst 44844:   movq    %rsi, rsp(1184 + virtual offset)
  Inst 44845:   movq    %rdi, rsp(1200 + virtual offset)
  Inst 44846:   movq    %r15, rsp(1216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S152, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44847:   call    *%rax
  Inst 44848:   movq    rsp(1216 + virtual offset), %r15
  Inst 44849:   movq    %r15, %rdi
  Inst 44850:   addq    $632, %rdi
  Inst 44851:   movq    rsp(1168 + virtual offset), %rsi
  Inst 44852:   load_ext_name u0:5+0, %rax
  Inst 44853:   movq    %rsi, rsp(1168 + virtual offset)
  Inst 44854:   movq    %rdi, rsp(1184 + virtual offset)
  Inst 44855:   movq    %r15, rsp(1200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207, S209] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44856:   call    *%rax
  Inst 44857:   movq    rsp(1200 + virtual offset), %r15
  Inst 44858:   movq    %r15, %rdi
  Inst 44859:   addq    $640, %rdi
  Inst 44860:   movq    rsp(1672 + virtual offset), %rsi
  Inst 44861:   load_ext_name u0:5+0, %rax
  Inst 44862:   movq    %rsi, rsp(1168 + virtual offset)
  Inst 44863:   movq    %rdi, rsp(1184 + virtual offset)
  Inst 44864:   movq    %r15, rsp(1200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S150, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44865:   call    *%rax
  Inst 44866:   movq    rsp(1200 + virtual offset), %r15
  Inst 44867:   movq    %r15, %rdi
  Inst 44868:   addq    $648, %rdi
  Inst 44869:   movq    rsp(1152 + virtual offset), %rsi
  Inst 44870:   load_ext_name u0:5+0, %rax
  Inst 44871:   movq    %rsi, rsp(1152 + virtual offset)
  Inst 44872:   movq    %rdi, rsp(1168 + virtual offset)
  Inst 44873:   movq    %r15, rsp(1184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205, S207] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44874:   call    *%rax
  Inst 44875:   movq    rsp(1184 + virtual offset), %r15
  Inst 44876:   movq    %r15, %rdi
  Inst 44877:   addq    $656, %rdi
  Inst 44878:   movq    rsp(1656 + virtual offset), %rsi
  Inst 44879:   load_ext_name u0:5+0, %rax
  Inst 44880:   movq    %rsi, rsp(1152 + virtual offset)
  Inst 44881:   movq    %rdi, rsp(1168 + virtual offset)
  Inst 44882:   movq    %r15, rsp(1184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S148, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44883:   call    *%rax
  Inst 44884:   movq    rsp(1184 + virtual offset), %r15
  Inst 44885:   movq    %r15, %rdi
  Inst 44886:   addq    $664, %rdi
  Inst 44887:   movq    rsp(1136 + virtual offset), %rsi
  Inst 44888:   load_ext_name u0:5+0, %rax
  Inst 44889:   movq    %rsi, rsp(1136 + virtual offset)
  Inst 44890:   movq    %rdi, rsp(1152 + virtual offset)
  Inst 44891:   movq    %r15, rsp(1168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203, S205] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44892:   call    *%rax
  Inst 44893:   movq    rsp(1168 + virtual offset), %r15
  Inst 44894:   movq    %r15, %rdi
  Inst 44895:   addq    $672, %rdi
  Inst 44896:   movq    rsp(1640 + virtual offset), %rsi
  Inst 44897:   load_ext_name u0:5+0, %rax
  Inst 44898:   movq    %rsi, rsp(1136 + virtual offset)
  Inst 44899:   movq    %rdi, rsp(1152 + virtual offset)
  Inst 44900:   movq    %r15, rsp(1168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S146, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44901:   call    *%rax
  Inst 44902:   movq    rsp(1168 + virtual offset), %r15
  Inst 44903:   movq    %r15, %rdi
  Inst 44904:   addq    $680, %rdi
  Inst 44905:   movq    rsp(1120 + virtual offset), %rsi
  Inst 44906:   load_ext_name u0:5+0, %rax
  Inst 44907:   movq    %rsi, rsp(1120 + virtual offset)
  Inst 44908:   movq    %rdi, rsp(1136 + virtual offset)
  Inst 44909:   movq    %r15, rsp(1152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201, S203] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44910:   call    *%rax
  Inst 44911:   movq    rsp(1152 + virtual offset), %r15
  Inst 44912:   movq    %r15, %rdi
  Inst 44913:   addq    $688, %rdi
  Inst 44914:   movq    rsp(1624 + virtual offset), %rsi
  Inst 44915:   load_ext_name u0:5+0, %rax
  Inst 44916:   movq    %rsi, rsp(1120 + virtual offset)
  Inst 44917:   movq    %rdi, rsp(1136 + virtual offset)
  Inst 44918:   movq    %r15, rsp(1152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S144, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44919:   call    *%rax
  Inst 44920:   movq    rsp(1152 + virtual offset), %r15
  Inst 44921:   movq    %r15, %rdi
  Inst 44922:   addq    $696, %rdi
  Inst 44923:   movq    rsp(1104 + virtual offset), %rsi
  Inst 44924:   load_ext_name u0:5+0, %rax
  Inst 44925:   movq    %rsi, rsp(1104 + virtual offset)
  Inst 44926:   movq    %rdi, rsp(1120 + virtual offset)
  Inst 44927:   movq    %r15, rsp(1136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199, S201] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44928:   call    *%rax
  Inst 44929:   movq    rsp(1136 + virtual offset), %r15
  Inst 44930:   movq    %r15, %rdi
  Inst 44931:   addq    $704, %rdi
  Inst 44932:   movq    rsp(1608 + virtual offset), %rsi
  Inst 44933:   load_ext_name u0:5+0, %rax
  Inst 44934:   movq    %rsi, rsp(1104 + virtual offset)
  Inst 44935:   movq    %rdi, rsp(1120 + virtual offset)
  Inst 44936:   movq    %r15, rsp(1136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S142, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44937:   call    *%rax
  Inst 44938:   movq    rsp(1136 + virtual offset), %r15
  Inst 44939:   movq    %r15, %rdi
  Inst 44940:   addq    $712, %rdi
  Inst 44941:   movq    rsp(1088 + virtual offset), %rsi
  Inst 44942:   load_ext_name u0:5+0, %rax
  Inst 44943:   movq    %rsi, rsp(1088 + virtual offset)
  Inst 44944:   movq    %rdi, rsp(1104 + virtual offset)
  Inst 44945:   movq    %r15, rsp(1120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197, S199] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44946:   call    *%rax
  Inst 44947:   movq    rsp(1120 + virtual offset), %r15
  Inst 44948:   movq    %r15, %rdi
  Inst 44949:   addq    $720, %rdi
  Inst 44950:   movq    rsp(1592 + virtual offset), %rsi
  Inst 44951:   load_ext_name u0:5+0, %rax
  Inst 44952:   movq    %rsi, rsp(1088 + virtual offset)
  Inst 44953:   movq    %rdi, rsp(1104 + virtual offset)
  Inst 44954:   movq    %r15, rsp(1120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S140, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44955:   call    *%rax
  Inst 44956:   movq    rsp(1120 + virtual offset), %r15
  Inst 44957:   movq    %r15, %rdi
  Inst 44958:   addq    $728, %rdi
  Inst 44959:   movq    rsp(1072 + virtual offset), %rsi
  Inst 44960:   load_ext_name u0:5+0, %rax
  Inst 44961:   movq    %rsi, rsp(1072 + virtual offset)
  Inst 44962:   movq    %rdi, rsp(1088 + virtual offset)
  Inst 44963:   movq    %r15, rsp(1104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195, S197] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44964:   call    *%rax
  Inst 44965:   movq    rsp(1104 + virtual offset), %r15
  Inst 44966:   movq    %r15, %rdi
  Inst 44967:   addq    $736, %rdi
  Inst 44968:   movq    rsp(1576 + virtual offset), %rsi
  Inst 44969:   load_ext_name u0:5+0, %rax
  Inst 44970:   movq    %rsi, rsp(1072 + virtual offset)
  Inst 44971:   movq    %rdi, rsp(1088 + virtual offset)
  Inst 44972:   movq    %r15, rsp(1104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S138, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44973:   call    *%rax
  Inst 44974:   movq    rsp(1104 + virtual offset), %r15
  Inst 44975:   movq    %r15, %rdi
  Inst 44976:   addq    $744, %rdi
  Inst 44977:   movq    rsp(1056 + virtual offset), %rsi
  Inst 44978:   load_ext_name u0:5+0, %rax
  Inst 44979:   movq    %rsi, rsp(1056 + virtual offset)
  Inst 44980:   movq    %rdi, rsp(1072 + virtual offset)
  Inst 44981:   movq    %r15, rsp(1088 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193, S195] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44982:   call    *%rax
  Inst 44983:   movq    rsp(1088 + virtual offset), %r15
  Inst 44984:   movq    %r15, %rdi
  Inst 44985:   addq    $752, %rdi
  Inst 44986:   movq    rsp(1560 + virtual offset), %rsi
  Inst 44987:   load_ext_name u0:5+0, %rax
  Inst 44988:   movq    %rsi, rsp(1056 + virtual offset)
  Inst 44989:   movq    %rdi, rsp(1072 + virtual offset)
  Inst 44990:   movq    %r15, rsp(1088 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S136, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 44991:   call    *%rax
  Inst 44992:   movq    rsp(1088 + virtual offset), %r15
  Inst 44993:   movq    %r15, %rdi
  Inst 44994:   addq    $760, %rdi
  Inst 44995:   movq    rsp(1040 + virtual offset), %rsi
  Inst 44996:   load_ext_name u0:5+0, %rax
  Inst 44997:   movq    %rsi, rsp(1040 + virtual offset)
  Inst 44998:   movq    %rdi, rsp(1056 + virtual offset)
  Inst 44999:   movq    %r15, rsp(1072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191, S193] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45000:   call    *%rax
  Inst 45001:   movq    rsp(1072 + virtual offset), %r15
  Inst 45002:   movq    %r15, %rdi
  Inst 45003:   addq    $768, %rdi
  Inst 45004:   movq    rsp(1544 + virtual offset), %rsi
  Inst 45005:   load_ext_name u0:5+0, %rax
  Inst 45006:   movq    %rsi, rsp(1040 + virtual offset)
  Inst 45007:   movq    %rdi, rsp(1056 + virtual offset)
  Inst 45008:   movq    %r15, rsp(1072 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S134, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45009:   call    *%rax
  Inst 45010:   movq    rsp(1072 + virtual offset), %r15
  Inst 45011:   movq    %r15, %rdi
  Inst 45012:   addq    $776, %rdi
  Inst 45013:   movq    rsp(1024 + virtual offset), %rsi
  Inst 45014:   load_ext_name u0:5+0, %rax
  Inst 45015:   movq    %rsi, rsp(1024 + virtual offset)
  Inst 45016:   movq    %rdi, rsp(1040 + virtual offset)
  Inst 45017:   movq    %r15, rsp(1056 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189, S191] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45018:   call    *%rax
  Inst 45019:   movq    rsp(1056 + virtual offset), %r15
  Inst 45020:   movq    %r15, %rdi
  Inst 45021:   addq    $784, %rdi
  Inst 45022:   movq    rsp(1528 + virtual offset), %rsi
  Inst 45023:   load_ext_name u0:5+0, %rax
  Inst 45024:   movq    %rsi, rsp(1024 + virtual offset)
  Inst 45025:   movq    %rdi, rsp(1040 + virtual offset)
  Inst 45026:   movq    %r15, rsp(1056 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S132, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45027:   call    *%rax
  Inst 45028:   movq    rsp(1056 + virtual offset), %r15
  Inst 45029:   movq    %r15, %rdi
  Inst 45030:   addq    $792, %rdi
  Inst 45031:   movq    rsp(1008 + virtual offset), %rsi
  Inst 45032:   load_ext_name u0:5+0, %rax
  Inst 45033:   movq    %rsi, rsp(1008 + virtual offset)
  Inst 45034:   movq    %rdi, rsp(1024 + virtual offset)
  Inst 45035:   movq    %r15, rsp(1040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187, S189] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45036:   call    *%rax
  Inst 45037:   movq    rsp(1040 + virtual offset), %r15
  Inst 45038:   movq    %r15, %rdi
  Inst 45039:   addq    $800, %rdi
  Inst 45040:   movq    rsp(1512 + virtual offset), %rsi
  Inst 45041:   load_ext_name u0:5+0, %rax
  Inst 45042:   movq    %rsi, rsp(1008 + virtual offset)
  Inst 45043:   movq    %rdi, rsp(1024 + virtual offset)
  Inst 45044:   movq    %r15, rsp(1040 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S130, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45045:   call    *%rax
  Inst 45046:   movq    rsp(1040 + virtual offset), %r15
  Inst 45047:   movq    %r15, %rdi
  Inst 45048:   addq    $808, %rdi
  Inst 45049:   movq    rsp(992 + virtual offset), %rsi
  Inst 45050:   load_ext_name u0:5+0, %rax
  Inst 45051:   movq    %rsi, rsp(992 + virtual offset)
  Inst 45052:   movq    %rdi, rsp(1008 + virtual offset)
  Inst 45053:   movq    %r15, rsp(1024 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S185, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45054:   call    *%rax
  Inst 45055:   movq    rsp(1024 + virtual offset), %r15
  Inst 45056:   movq    %r15, %rdi
  Inst 45057:   addq    $816, %rdi
  Inst 45058:   movq    rsp(1480 + virtual offset), %rsi
  Inst 45059:   load_ext_name u0:5+0, %rax
  Inst 45060:   movq    %rsi, rsp(992 + virtual offset)
  Inst 45061:   movq    %rdi, rsp(1008 + virtual offset)
  Inst 45062:   movq    %r15, rsp(1024 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S128, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45063:   call    *%rax
  Inst 45064:   movq    rsp(1024 + virtual offset), %r15
  Inst 45065:   movq    %r15, %rdi
  Inst 45066:   addq    $824, %rdi
  Inst 45067:   movq    rsp(976 + virtual offset), %rsi
  Inst 45068:   load_ext_name u0:5+0, %rax
  Inst 45069:   movq    %rsi, rsp(976 + virtual offset)
  Inst 45070:   movq    %rdi, rsp(992 + virtual offset)
  Inst 45071:   movq    %r15, rsp(1008 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S183, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45072:   call    *%rax
  Inst 45073:   movq    rsp(1008 + virtual offset), %r15
  Inst 45074:   movq    %r15, %rdi
  Inst 45075:   addq    $832, %rdi
  Inst 45076:   movq    rsp(1464 + virtual offset), %rsi
  Inst 45077:   load_ext_name u0:5+0, %rax
  Inst 45078:   movq    %rsi, rsp(976 + virtual offset)
  Inst 45079:   movq    %rdi, rsp(992 + virtual offset)
  Inst 45080:   movq    %r15, rsp(1008 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S126, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45081:   call    *%rax
  Inst 45082:   movq    rsp(1008 + virtual offset), %r15
  Inst 45083:   movq    %r15, %rdi
  Inst 45084:   addq    $840, %rdi
  Inst 45085:   movq    rsp(960 + virtual offset), %rsi
  Inst 45086:   load_ext_name u0:5+0, %rax
  Inst 45087:   movq    %rsi, rsp(960 + virtual offset)
  Inst 45088:   movq    %rdi, rsp(976 + virtual offset)
  Inst 45089:   movq    %r15, rsp(992 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S181, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45090:   call    *%rax
  Inst 45091:   movq    rsp(992 + virtual offset), %r15
  Inst 45092:   movq    %r15, %rdi
  Inst 45093:   addq    $848, %rdi
  Inst 45094:   movq    rsp(1448 + virtual offset), %rsi
  Inst 45095:   load_ext_name u0:5+0, %rax
  Inst 45096:   movq    %rsi, rsp(960 + virtual offset)
  Inst 45097:   movq    %rdi, rsp(976 + virtual offset)
  Inst 45098:   movq    %r15, rsp(992 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S124, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45099:   call    *%rax
  Inst 45100:   movq    rsp(992 + virtual offset), %r15
  Inst 45101:   movq    %r15, %rdi
  Inst 45102:   addq    $856, %rdi
  Inst 45103:   movq    rsp(944 + virtual offset), %rsi
  Inst 45104:   load_ext_name u0:5+0, %rax
  Inst 45105:   movq    %rsi, rsp(944 + virtual offset)
  Inst 45106:   movq    %rdi, rsp(960 + virtual offset)
  Inst 45107:   movq    %r15, rsp(976 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S179, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45108:   call    *%rax
  Inst 45109:   movq    rsp(976 + virtual offset), %r15
  Inst 45110:   movq    %r15, %rdi
  Inst 45111:   addq    $864, %rdi
  Inst 45112:   movq    rsp(1432 + virtual offset), %rsi
  Inst 45113:   load_ext_name u0:5+0, %rax
  Inst 45114:   movq    %rsi, rsp(944 + virtual offset)
  Inst 45115:   movq    %rdi, rsp(960 + virtual offset)
  Inst 45116:   movq    %r15, rsp(976 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S122, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45117:   call    *%rax
  Inst 45118:   movq    rsp(976 + virtual offset), %r15
  Inst 45119:   movq    %r15, %rdi
  Inst 45120:   addq    $872, %rdi
  Inst 45121:   movq    rsp(928 + virtual offset), %rsi
  Inst 45122:   load_ext_name u0:5+0, %rax
  Inst 45123:   movq    %rsi, rsp(928 + virtual offset)
  Inst 45124:   movq    %rdi, rsp(944 + virtual offset)
  Inst 45125:   movq    %r15, rsp(960 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S177, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45126:   call    *%rax
  Inst 45127:   movq    rsp(960 + virtual offset), %r15
  Inst 45128:   movq    %r15, %rdi
  Inst 45129:   addq    $880, %rdi
  Inst 45130:   movq    rsp(1416 + virtual offset), %rsi
  Inst 45131:   load_ext_name u0:5+0, %rax
  Inst 45132:   movq    %rsi, rsp(928 + virtual offset)
  Inst 45133:   movq    %rdi, rsp(944 + virtual offset)
  Inst 45134:   movq    %r15, rsp(960 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S120, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45135:   call    *%rax
  Inst 45136:   movq    rsp(960 + virtual offset), %r15
  Inst 45137:   movq    %r15, %rdi
  Inst 45138:   addq    $888, %rdi
  Inst 45139:   movq    rsp(912 + virtual offset), %rsi
  Inst 45140:   load_ext_name u0:5+0, %rax
  Inst 45141:   movq    %rsi, rsp(912 + virtual offset)
  Inst 45142:   movq    %rdi, rsp(928 + virtual offset)
  Inst 45143:   movq    %r15, rsp(944 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S175, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45144:   call    *%rax
  Inst 45145:   movq    rsp(944 + virtual offset), %r15
  Inst 45146:   movq    %r15, %rdi
  Inst 45147:   addq    $896, %rdi
  Inst 45148:   movq    rsp(1400 + virtual offset), %rsi
  Inst 45149:   load_ext_name u0:5+0, %rax
  Inst 45150:   movq    %rsi, rsp(912 + virtual offset)
  Inst 45151:   movq    %rdi, rsp(928 + virtual offset)
  Inst 45152:   movq    %r15, rsp(944 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S118, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45153:   call    *%rax
  Inst 45154:   movq    rsp(944 + virtual offset), %r15
  Inst 45155:   movq    %r15, %rdi
  Inst 45156:   addq    $904, %rdi
  Inst 45157:   movq    rsp(896 + virtual offset), %rsi
  Inst 45158:   load_ext_name u0:5+0, %rax
  Inst 45159:   movq    %rsi, rsp(896 + virtual offset)
  Inst 45160:   movq    %rdi, rsp(912 + virtual offset)
  Inst 45161:   movq    %r15, rsp(928 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S173, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45162:   call    *%rax
  Inst 45163:   movq    rsp(928 + virtual offset), %r15
  Inst 45164:   movq    %r15, %rdi
  Inst 45165:   addq    $912, %rdi
  Inst 45166:   movq    rsp(1384 + virtual offset), %rsi
  Inst 45167:   load_ext_name u0:5+0, %rax
  Inst 45168:   movq    %rsi, rsp(896 + virtual offset)
  Inst 45169:   movq    %rdi, rsp(912 + virtual offset)
  Inst 45170:   movq    %r15, rsp(928 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S116, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45171:   call    *%rax
  Inst 45172:   movq    rsp(928 + virtual offset), %r15
  Inst 45173:   movq    %r15, %rdi
  Inst 45174:   addq    $920, %rdi
  Inst 45175:   movq    rsp(880 + virtual offset), %rsi
  Inst 45176:   load_ext_name u0:5+0, %rax
  Inst 45177:   movq    %rsi, rsp(880 + virtual offset)
  Inst 45178:   movq    %rdi, rsp(896 + virtual offset)
  Inst 45179:   movq    %r15, rsp(912 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S171, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45180:   call    *%rax
  Inst 45181:   movq    rsp(912 + virtual offset), %r15
  Inst 45182:   movq    %r15, %rdi
  Inst 45183:   addq    $928, %rdi
  Inst 45184:   movq    rsp(1368 + virtual offset), %rsi
  Inst 45185:   load_ext_name u0:5+0, %rax
  Inst 45186:   movq    %rsi, rsp(880 + virtual offset)
  Inst 45187:   movq    %rdi, rsp(896 + virtual offset)
  Inst 45188:   movq    %r15, rsp(912 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S114, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45189:   call    *%rax
  Inst 45190:   movq    rsp(912 + virtual offset), %r15
  Inst 45191:   movq    %r15, %rdi
  Inst 45192:   addq    $936, %rdi
  Inst 45193:   movq    rsp(864 + virtual offset), %rsi
  Inst 45194:   load_ext_name u0:5+0, %rax
  Inst 45195:   movq    %rsi, rsp(864 + virtual offset)
  Inst 45196:   movq    %rdi, rsp(880 + virtual offset)
  Inst 45197:   movq    %r15, rsp(896 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S169, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45198:   call    *%rax
  Inst 45199:   movq    rsp(896 + virtual offset), %r15
  Inst 45200:   movq    %r15, %rdi
  Inst 45201:   addq    $944, %rdi
  Inst 45202:   movq    rsp(1352 + virtual offset), %rsi
  Inst 45203:   load_ext_name u0:5+0, %rax
  Inst 45204:   movq    %rsi, rsp(864 + virtual offset)
  Inst 45205:   movq    %rdi, rsp(880 + virtual offset)
  Inst 45206:   movq    %r15, rsp(896 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S112, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45207:   call    *%rax
  Inst 45208:   movq    rsp(896 + virtual offset), %r15
  Inst 45209:   movq    %r15, %rdi
  Inst 45210:   addq    $952, %rdi
  Inst 45211:   movq    rsp(848 + virtual offset), %rsi
  Inst 45212:   load_ext_name u0:5+0, %rax
  Inst 45213:   movq    %rsi, rsp(848 + virtual offset)
  Inst 45214:   movq    %rdi, rsp(864 + virtual offset)
  Inst 45215:   movq    %r15, rsp(880 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S167, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45216:   call    *%rax
  Inst 45217:   movq    rsp(880 + virtual offset), %r15
  Inst 45218:   movq    %r15, %rdi
  Inst 45219:   addq    $960, %rdi
  Inst 45220:   movq    rsp(1336 + virtual offset), %rsi
  Inst 45221:   load_ext_name u0:5+0, %rax
  Inst 45222:   movq    %rsi, rsp(848 + virtual offset)
  Inst 45223:   movq    %rdi, rsp(864 + virtual offset)
  Inst 45224:   movq    %r15, rsp(880 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S110, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45225:   call    *%rax
  Inst 45226:   movq    rsp(880 + virtual offset), %r15
  Inst 45227:   movq    %r15, %rdi
  Inst 45228:   addq    $968, %rdi
  Inst 45229:   movq    rsp(832 + virtual offset), %rsi
  Inst 45230:   load_ext_name u0:5+0, %rax
  Inst 45231:   movq    %rsi, rsp(832 + virtual offset)
  Inst 45232:   movq    %rdi, rsp(848 + virtual offset)
  Inst 45233:   movq    %r15, rsp(864 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S165, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45234:   call    *%rax
  Inst 45235:   movq    rsp(864 + virtual offset), %r15
  Inst 45236:   movq    %r15, %rdi
  Inst 45237:   addq    $976, %rdi
  Inst 45238:   movq    rsp(1320 + virtual offset), %rsi
  Inst 45239:   load_ext_name u0:5+0, %rax
  Inst 45240:   movq    %rsi, rsp(832 + virtual offset)
  Inst 45241:   movq    %rdi, rsp(848 + virtual offset)
  Inst 45242:   movq    %r15, rsp(864 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S108, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45243:   call    *%rax
  Inst 45244:   movq    rsp(864 + virtual offset), %r15
  Inst 45245:   movq    %r15, %rdi
  Inst 45246:   addq    $984, %rdi
  Inst 45247:   movq    rsp(816 + virtual offset), %rsi
  Inst 45248:   load_ext_name u0:5+0, %rax
  Inst 45249:   movq    %rsi, rsp(816 + virtual offset)
  Inst 45250:   movq    %rdi, rsp(832 + virtual offset)
  Inst 45251:   movq    %r15, rsp(848 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S163, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45252:   call    *%rax
  Inst 45253:   movq    rsp(848 + virtual offset), %r15
  Inst 45254:   movq    %r15, %rdi
  Inst 45255:   addq    $992, %rdi
  Inst 45256:   movq    rsp(1304 + virtual offset), %rsi
  Inst 45257:   load_ext_name u0:5+0, %rax
  Inst 45258:   movq    %rsi, rsp(816 + virtual offset)
  Inst 45259:   movq    %rdi, rsp(832 + virtual offset)
  Inst 45260:   movq    %r15, rsp(848 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S106, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45261:   call    *%rax
  Inst 45262:   movq    rsp(848 + virtual offset), %r15
  Inst 45263:   movq    %r15, %rdi
  Inst 45264:   addq    $1000, %rdi
  Inst 45265:   movq    rsp(800 + virtual offset), %rsi
  Inst 45266:   load_ext_name u0:5+0, %rax
  Inst 45267:   movq    %rsi, rsp(800 + virtual offset)
  Inst 45268:   movq    %rdi, rsp(816 + virtual offset)
  Inst 45269:   movq    %r15, rsp(832 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S161, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45270:   call    *%rax
  Inst 45271:   movq    rsp(832 + virtual offset), %r15
  Inst 45272:   movq    %r15, %rdi
  Inst 45273:   addq    $1008, %rdi
  Inst 45274:   movq    rsp(1288 + virtual offset), %rsi
  Inst 45275:   load_ext_name u0:5+0, %rax
  Inst 45276:   movq    %rsi, rsp(800 + virtual offset)
  Inst 45277:   movq    %rdi, rsp(816 + virtual offset)
  Inst 45278:   movq    %r15, rsp(832 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S104, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45279:   call    *%rax
  Inst 45280:   movq    rsp(832 + virtual offset), %r15
  Inst 45281:   movq    %r15, %rdi
  Inst 45282:   addq    $1016, %rdi
  Inst 45283:   movq    rsp(784 + virtual offset), %rsi
  Inst 45284:   load_ext_name u0:5+0, %rax
  Inst 45285:   movq    %rsi, rsp(784 + virtual offset)
  Inst 45286:   movq    %rdi, rsp(800 + virtual offset)
  Inst 45287:   movq    %r15, rsp(816 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S159, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45288:   call    *%rax
  Inst 45289:   movq    rsp(816 + virtual offset), %r15
  Inst 45290:   movq    %r15, %rdi
  Inst 45291:   addq    $1024, %rdi
  Inst 45292:   movq    rsp(1272 + virtual offset), %rsi
  Inst 45293:   load_ext_name u0:5+0, %rax
  Inst 45294:   movq    %rsi, rsp(784 + virtual offset)
  Inst 45295:   movq    %rdi, rsp(800 + virtual offset)
  Inst 45296:   movq    %r15, rsp(816 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S102, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45297:   call    *%rax
  Inst 45298:   movq    rsp(816 + virtual offset), %r15
  Inst 45299:   movq    %r15, %rdi
  Inst 45300:   addq    $1032, %rdi
  Inst 45301:   movq    rsp(768 + virtual offset), %rsi
  Inst 45302:   load_ext_name u0:5+0, %rax
  Inst 45303:   movq    %rsi, rsp(768 + virtual offset)
  Inst 45304:   movq    %rdi, rsp(784 + virtual offset)
  Inst 45305:   movq    %r15, rsp(800 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S157, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45306:   call    *%rax
  Inst 45307:   movq    rsp(800 + virtual offset), %r15
  Inst 45308:   movq    %r15, %rdi
  Inst 45309:   addq    $1040, %rdi
  Inst 45310:   movq    rsp(1256 + virtual offset), %rsi
  Inst 45311:   load_ext_name u0:5+0, %rax
  Inst 45312:   movq    %rsi, rsp(768 + virtual offset)
  Inst 45313:   movq    %rdi, rsp(784 + virtual offset)
  Inst 45314:   movq    %r15, rsp(800 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S100, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45315:   call    *%rax
  Inst 45316:   movq    rsp(800 + virtual offset), %r15
  Inst 45317:   movq    %r15, %rdi
  Inst 45318:   addq    $1048, %rdi
  Inst 45319:   movq    rsp(752 + virtual offset), %rsi
  Inst 45320:   load_ext_name u0:5+0, %rax
  Inst 45321:   movq    %rsi, rsp(752 + virtual offset)
  Inst 45322:   movq    %rdi, rsp(768 + virtual offset)
  Inst 45323:   movq    %r15, rsp(784 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S155, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45324:   call    *%rax
  Inst 45325:   movq    rsp(784 + virtual offset), %r15
  Inst 45326:   movq    %r15, %rdi
  Inst 45327:   addq    $1056, %rdi
  Inst 45328:   movq    rsp(1240 + virtual offset), %rsi
  Inst 45329:   load_ext_name u0:5+0, %rax
  Inst 45330:   movq    %rsi, rsp(752 + virtual offset)
  Inst 45331:   movq    %rdi, rsp(768 + virtual offset)
  Inst 45332:   movq    %r15, rsp(784 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S98, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45333:   call    *%rax
  Inst 45334:   movq    rsp(784 + virtual offset), %r15
  Inst 45335:   movq    %r15, %rdi
  Inst 45336:   addq    $1064, %rdi
  Inst 45337:   movq    rsp(736 + virtual offset), %rsi
  Inst 45338:   load_ext_name u0:5+0, %rax
  Inst 45339:   movq    %rsi, rsp(736 + virtual offset)
  Inst 45340:   movq    %rdi, rsp(752 + virtual offset)
  Inst 45341:   movq    %r15, rsp(768 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S153, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45342:   call    *%rax
  Inst 45343:   movq    rsp(768 + virtual offset), %r15
  Inst 45344:   movq    %r15, %rdi
  Inst 45345:   addq    $1072, %rdi
  Inst 45346:   movq    rsp(1224 + virtual offset), %rsi
  Inst 45347:   load_ext_name u0:5+0, %rax
  Inst 45348:   movq    %rsi, rsp(736 + virtual offset)
  Inst 45349:   movq    %rdi, rsp(752 + virtual offset)
  Inst 45350:   movq    %r15, rsp(768 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S96, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45351:   call    *%rax
  Inst 45352:   movq    rsp(768 + virtual offset), %r15
  Inst 45353:   movq    %r15, %rdi
  Inst 45354:   addq    $1080, %rdi
  Inst 45355:   movq    rsp(720 + virtual offset), %rsi
  Inst 45356:   load_ext_name u0:5+0, %rax
  Inst 45357:   movq    %rsi, rsp(720 + virtual offset)
  Inst 45358:   movq    %rdi, rsp(736 + virtual offset)
  Inst 45359:   movq    %r15, rsp(752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S151, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45360:   call    *%rax
  Inst 45361:   movq    rsp(752 + virtual offset), %r15
  Inst 45362:   movq    %r15, %rdi
  Inst 45363:   addq    $1088, %rdi
  Inst 45364:   movq    rsp(1208 + virtual offset), %rsi
  Inst 45365:   load_ext_name u0:5+0, %rax
  Inst 45366:   movq    %rsi, rsp(720 + virtual offset)
  Inst 45367:   movq    %rdi, rsp(736 + virtual offset)
  Inst 45368:   movq    %r15, rsp(752 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S94, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45369:   call    *%rax
  Inst 45370:   movq    rsp(752 + virtual offset), %r15
  Inst 45371:   movq    %r15, %rdi
  Inst 45372:   addq    $1096, %rdi
  Inst 45373:   movq    rsp(704 + virtual offset), %rsi
  Inst 45374:   load_ext_name u0:5+0, %rax
  Inst 45375:   movq    %rsi, rsp(704 + virtual offset)
  Inst 45376:   movq    %rdi, rsp(720 + virtual offset)
  Inst 45377:   movq    %r15, rsp(736 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S149, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45378:   call    *%rax
  Inst 45379:   movq    rsp(736 + virtual offset), %r15
  Inst 45380:   movq    %r15, %rdi
  Inst 45381:   addq    $1104, %rdi
  Inst 45382:   movq    rsp(1192 + virtual offset), %rsi
  Inst 45383:   load_ext_name u0:5+0, %rax
  Inst 45384:   movq    %rsi, rsp(704 + virtual offset)
  Inst 45385:   movq    %rdi, rsp(720 + virtual offset)
  Inst 45386:   movq    %r15, rsp(736 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S92, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45387:   call    *%rax
  Inst 45388:   movq    rsp(736 + virtual offset), %r15
  Inst 45389:   movq    %r15, %rdi
  Inst 45390:   addq    $1112, %rdi
  Inst 45391:   movq    rsp(688 + virtual offset), %rsi
  Inst 45392:   load_ext_name u0:5+0, %rax
  Inst 45393:   movq    %rsi, rsp(688 + virtual offset)
  Inst 45394:   movq    %rdi, rsp(704 + virtual offset)
  Inst 45395:   movq    %r15, rsp(720 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S147, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45396:   call    *%rax
  Inst 45397:   movq    rsp(720 + virtual offset), %r15
  Inst 45398:   movq    %r15, %rdi
  Inst 45399:   addq    $1120, %rdi
  Inst 45400:   movq    rsp(1176 + virtual offset), %rsi
  Inst 45401:   load_ext_name u0:5+0, %rax
  Inst 45402:   movq    %rsi, rsp(688 + virtual offset)
  Inst 45403:   movq    %rdi, rsp(704 + virtual offset)
  Inst 45404:   movq    %r15, rsp(720 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S90, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45405:   call    *%rax
  Inst 45406:   movq    rsp(720 + virtual offset), %r15
  Inst 45407:   movq    %r15, %rdi
  Inst 45408:   addq    $1128, %rdi
  Inst 45409:   movq    rsp(672 + virtual offset), %rsi
  Inst 45410:   load_ext_name u0:5+0, %rax
  Inst 45411:   movq    %rsi, rsp(672 + virtual offset)
  Inst 45412:   movq    %rdi, rsp(688 + virtual offset)
  Inst 45413:   movq    %r15, rsp(704 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S145, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45414:   call    *%rax
  Inst 45415:   movq    rsp(704 + virtual offset), %r15
  Inst 45416:   movq    %r15, %rdi
  Inst 45417:   addq    $1136, %rdi
  Inst 45418:   movq    rsp(1160 + virtual offset), %rsi
  Inst 45419:   load_ext_name u0:5+0, %rax
  Inst 45420:   movq    %rsi, rsp(672 + virtual offset)
  Inst 45421:   movq    %rdi, rsp(688 + virtual offset)
  Inst 45422:   movq    %r15, rsp(704 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45423:   call    *%rax
  Inst 45424:   movq    rsp(704 + virtual offset), %r15
  Inst 45425:   movq    %r15, %rdi
  Inst 45426:   addq    $1144, %rdi
  Inst 45427:   movq    rsp(656 + virtual offset), %rsi
  Inst 45428:   load_ext_name u0:5+0, %rax
  Inst 45429:   movq    %rsi, rsp(656 + virtual offset)
  Inst 45430:   movq    %rdi, rsp(672 + virtual offset)
  Inst 45431:   movq    %r15, rsp(688 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S143, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45432:   call    *%rax
  Inst 45433:   movq    rsp(688 + virtual offset), %r15
  Inst 45434:   movq    %r15, %rdi
  Inst 45435:   addq    $1152, %rdi
  Inst 45436:   movq    rsp(1144 + virtual offset), %rsi
  Inst 45437:   load_ext_name u0:5+0, %rax
  Inst 45438:   movq    %rsi, rsp(656 + virtual offset)
  Inst 45439:   movq    %rdi, rsp(672 + virtual offset)
  Inst 45440:   movq    %r15, rsp(688 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S86, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45441:   call    *%rax
  Inst 45442:   movq    rsp(688 + virtual offset), %r15
  Inst 45443:   movq    %r15, %rdi
  Inst 45444:   addq    $1160, %rdi
  Inst 45445:   movq    rsp(640 + virtual offset), %rsi
  Inst 45446:   load_ext_name u0:5+0, %rax
  Inst 45447:   movq    %rsi, rsp(640 + virtual offset)
  Inst 45448:   movq    %rdi, rsp(656 + virtual offset)
  Inst 45449:   movq    %r15, rsp(672 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S141, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45450:   call    *%rax
  Inst 45451:   movq    rsp(672 + virtual offset), %r15
  Inst 45452:   movq    %r15, %rdi
  Inst 45453:   addq    $1168, %rdi
  Inst 45454:   movq    rsp(1128 + virtual offset), %rsi
  Inst 45455:   load_ext_name u0:5+0, %rax
  Inst 45456:   movq    %rsi, rsp(640 + virtual offset)
  Inst 45457:   movq    %rdi, rsp(656 + virtual offset)
  Inst 45458:   movq    %r15, rsp(672 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S84, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45459:   call    *%rax
  Inst 45460:   movq    rsp(672 + virtual offset), %r15
  Inst 45461:   movq    %r15, %rdi
  Inst 45462:   addq    $1176, %rdi
  Inst 45463:   movq    rsp(624 + virtual offset), %rsi
  Inst 45464:   load_ext_name u0:5+0, %rax
  Inst 45465:   movq    %rsi, rsp(624 + virtual offset)
  Inst 45466:   movq    %rdi, rsp(640 + virtual offset)
  Inst 45467:   movq    %r15, rsp(656 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S139, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45468:   call    *%rax
  Inst 45469:   movq    rsp(656 + virtual offset), %r15
  Inst 45470:   movq    %r15, %rdi
  Inst 45471:   addq    $1184, %rdi
  Inst 45472:   movq    rsp(1112 + virtual offset), %rsi
  Inst 45473:   load_ext_name u0:5+0, %rax
  Inst 45474:   movq    %rsi, rsp(624 + virtual offset)
  Inst 45475:   movq    %rdi, rsp(640 + virtual offset)
  Inst 45476:   movq    %r15, rsp(656 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S82, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45477:   call    *%rax
  Inst 45478:   movq    rsp(656 + virtual offset), %r15
  Inst 45479:   movq    %r15, %rdi
  Inst 45480:   addq    $1192, %rdi
  Inst 45481:   movq    rsp(608 + virtual offset), %rsi
  Inst 45482:   load_ext_name u0:5+0, %rax
  Inst 45483:   movq    %rsi, rsp(608 + virtual offset)
  Inst 45484:   movq    %rdi, rsp(624 + virtual offset)
  Inst 45485:   movq    %r15, rsp(640 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S137, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45486:   call    *%rax
  Inst 45487:   movq    rsp(640 + virtual offset), %r15
  Inst 45488:   movq    %r15, %rdi
  Inst 45489:   addq    $1200, %rdi
  Inst 45490:   movq    rsp(1096 + virtual offset), %rsi
  Inst 45491:   load_ext_name u0:5+0, %rax
  Inst 45492:   movq    %rsi, rsp(608 + virtual offset)
  Inst 45493:   movq    %rdi, rsp(624 + virtual offset)
  Inst 45494:   movq    %r15, rsp(640 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S80, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45495:   call    *%rax
  Inst 45496:   movq    rsp(640 + virtual offset), %r15
  Inst 45497:   movq    %r15, %rdi
  Inst 45498:   addq    $1208, %rdi
  Inst 45499:   movq    rsp(592 + virtual offset), %rsi
  Inst 45500:   load_ext_name u0:5+0, %rax
  Inst 45501:   movq    %rsi, rsp(592 + virtual offset)
  Inst 45502:   movq    %rdi, rsp(608 + virtual offset)
  Inst 45503:   movq    %r15, rsp(624 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S135, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45504:   call    *%rax
  Inst 45505:   movq    rsp(624 + virtual offset), %r15
  Inst 45506:   movq    %r15, %rdi
  Inst 45507:   addq    $1216, %rdi
  Inst 45508:   movq    rsp(1080 + virtual offset), %rsi
  Inst 45509:   load_ext_name u0:5+0, %rax
  Inst 45510:   movq    %rsi, rsp(592 + virtual offset)
  Inst 45511:   movq    %rdi, rsp(608 + virtual offset)
  Inst 45512:   movq    %r15, rsp(624 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45513:   call    *%rax
  Inst 45514:   movq    rsp(624 + virtual offset), %r15
  Inst 45515:   movq    %r15, %rdi
  Inst 45516:   addq    $1224, %rdi
  Inst 45517:   movq    rsp(576 + virtual offset), %rsi
  Inst 45518:   load_ext_name u0:5+0, %rax
  Inst 45519:   movq    %rsi, rsp(576 + virtual offset)
  Inst 45520:   movq    %rdi, rsp(592 + virtual offset)
  Inst 45521:   movq    %r15, rsp(608 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S133, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45522:   call    *%rax
  Inst 45523:   movq    rsp(608 + virtual offset), %r15
  Inst 45524:   movq    %r15, %rdi
  Inst 45525:   addq    $1232, %rdi
  Inst 45526:   movq    rsp(1064 + virtual offset), %rsi
  Inst 45527:   load_ext_name u0:5+0, %rax
  Inst 45528:   movq    %rsi, rsp(576 + virtual offset)
  Inst 45529:   movq    %rdi, rsp(592 + virtual offset)
  Inst 45530:   movq    %r15, rsp(608 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S76, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45531:   call    *%rax
  Inst 45532:   movq    rsp(608 + virtual offset), %r15
  Inst 45533:   movq    %r15, %rdi
  Inst 45534:   addq    $1240, %rdi
  Inst 45535:   movq    rsp(560 + virtual offset), %rsi
  Inst 45536:   load_ext_name u0:5+0, %rax
  Inst 45537:   movq    %rsi, rsp(560 + virtual offset)
  Inst 45538:   movq    %rdi, rsp(576 + virtual offset)
  Inst 45539:   movq    %r15, rsp(592 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S131, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45540:   call    *%rax
  Inst 45541:   movq    rsp(592 + virtual offset), %r15
  Inst 45542:   movq    %r15, %rdi
  Inst 45543:   addq    $1248, %rdi
  Inst 45544:   movq    rsp(1048 + virtual offset), %rsi
  Inst 45545:   load_ext_name u0:5+0, %rax
  Inst 45546:   movq    %rsi, rsp(560 + virtual offset)
  Inst 45547:   movq    %rdi, rsp(576 + virtual offset)
  Inst 45548:   movq    %r15, rsp(592 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S74, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45549:   call    *%rax
  Inst 45550:   movq    rsp(592 + virtual offset), %r15
  Inst 45551:   movq    %r15, %rdi
  Inst 45552:   addq    $1256, %rdi
  Inst 45553:   movq    rsp(544 + virtual offset), %rsi
  Inst 45554:   load_ext_name u0:5+0, %rax
  Inst 45555:   movq    %rsi, rsp(544 + virtual offset)
  Inst 45556:   movq    %rdi, rsp(560 + virtual offset)
  Inst 45557:   movq    %r15, rsp(576 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S129, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45558:   call    *%rax
  Inst 45559:   movq    rsp(576 + virtual offset), %r15
  Inst 45560:   movq    %r15, %rdi
  Inst 45561:   addq    $1264, %rdi
  Inst 45562:   movq    rsp(1032 + virtual offset), %rsi
  Inst 45563:   load_ext_name u0:5+0, %rax
  Inst 45564:   movq    %rsi, rsp(544 + virtual offset)
  Inst 45565:   movq    %rdi, rsp(560 + virtual offset)
  Inst 45566:   movq    %r15, rsp(576 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S72, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45567:   call    *%rax
  Inst 45568:   movq    rsp(576 + virtual offset), %r15
  Inst 45569:   movq    %r15, %rdi
  Inst 45570:   addq    $1272, %rdi
  Inst 45571:   movq    rsp(528 + virtual offset), %rsi
  Inst 45572:   load_ext_name u0:5+0, %rax
  Inst 45573:   movq    %rsi, rsp(528 + virtual offset)
  Inst 45574:   movq    %rdi, rsp(544 + virtual offset)
  Inst 45575:   movq    %r15, rsp(560 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S127, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45576:   call    *%rax
  Inst 45577:   movq    rsp(560 + virtual offset), %r15
  Inst 45578:   movq    %r15, %rdi
  Inst 45579:   addq    $1280, %rdi
  Inst 45580:   movq    rsp(1016 + virtual offset), %rsi
  Inst 45581:   load_ext_name u0:5+0, %rax
  Inst 45582:   movq    %rsi, rsp(528 + virtual offset)
  Inst 45583:   movq    %rdi, rsp(544 + virtual offset)
  Inst 45584:   movq    %r15, rsp(560 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S70, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45585:   call    *%rax
  Inst 45586:   movq    rsp(560 + virtual offset), %r15
  Inst 45587:   movq    %r15, %rdi
  Inst 45588:   addq    $1288, %rdi
  Inst 45589:   movq    rsp(512 + virtual offset), %rsi
  Inst 45590:   load_ext_name u0:5+0, %rax
  Inst 45591:   movq    %rsi, rsp(512 + virtual offset)
  Inst 45592:   movq    %rdi, rsp(528 + virtual offset)
  Inst 45593:   movq    %r15, rsp(544 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S125, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45594:   call    *%rax
  Inst 45595:   movq    rsp(544 + virtual offset), %r15
  Inst 45596:   movq    %r15, %rdi
  Inst 45597:   addq    $1296, %rdi
  Inst 45598:   movq    rsp(1000 + virtual offset), %rsi
  Inst 45599:   load_ext_name u0:5+0, %rax
  Inst 45600:   movq    %rsi, rsp(512 + virtual offset)
  Inst 45601:   movq    %rdi, rsp(528 + virtual offset)
  Inst 45602:   movq    %r15, rsp(544 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45603:   call    *%rax
  Inst 45604:   movq    rsp(544 + virtual offset), %r15
  Inst 45605:   movq    %r15, %rdi
  Inst 45606:   addq    $1304, %rdi
  Inst 45607:   movq    rsp(496 + virtual offset), %rsi
  Inst 45608:   load_ext_name u0:5+0, %rax
  Inst 45609:   movq    %rsi, rsp(496 + virtual offset)
  Inst 45610:   movq    %rdi, rsp(512 + virtual offset)
  Inst 45611:   movq    %r15, rsp(528 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S123, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45612:   call    *%rax
  Inst 45613:   movq    rsp(528 + virtual offset), %r15
  Inst 45614:   movq    %r15, %rdi
  Inst 45615:   addq    $1312, %rdi
  Inst 45616:   movq    rsp(984 + virtual offset), %rsi
  Inst 45617:   load_ext_name u0:5+0, %rax
  Inst 45618:   movq    %rsi, rsp(496 + virtual offset)
  Inst 45619:   movq    %rdi, rsp(512 + virtual offset)
  Inst 45620:   movq    %r15, rsp(528 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S66, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45621:   call    *%rax
  Inst 45622:   movq    rsp(528 + virtual offset), %r15
  Inst 45623:   movq    %r15, %rdi
  Inst 45624:   addq    $1320, %rdi
  Inst 45625:   movq    rsp(480 + virtual offset), %rsi
  Inst 45626:   load_ext_name u0:5+0, %rax
  Inst 45627:   movq    %rsi, rsp(480 + virtual offset)
  Inst 45628:   movq    %rdi, rsp(496 + virtual offset)
  Inst 45629:   movq    %r15, rsp(512 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S121, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45630:   call    *%rax
  Inst 45631:   movq    rsp(512 + virtual offset), %r15
  Inst 45632:   movq    %r15, %rdi
  Inst 45633:   addq    $1328, %rdi
  Inst 45634:   movq    rsp(968 + virtual offset), %rsi
  Inst 45635:   load_ext_name u0:5+0, %rax
  Inst 45636:   movq    %rsi, rsp(480 + virtual offset)
  Inst 45637:   movq    %rdi, rsp(496 + virtual offset)
  Inst 45638:   movq    %r15, rsp(512 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S64, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45639:   call    *%rax
  Inst 45640:   movq    rsp(512 + virtual offset), %r15
  Inst 45641:   movq    %r15, %rdi
  Inst 45642:   addq    $1336, %rdi
  Inst 45643:   movq    rsp(464 + virtual offset), %rsi
  Inst 45644:   load_ext_name u0:5+0, %rax
  Inst 45645:   movq    %rsi, rsp(464 + virtual offset)
  Inst 45646:   movq    %rdi, rsp(480 + virtual offset)
  Inst 45647:   movq    %r15, rsp(496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S119, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45648:   call    *%rax
  Inst 45649:   movq    rsp(496 + virtual offset), %r15
  Inst 45650:   movq    %r15, %rdi
  Inst 45651:   addq    $1344, %rdi
  Inst 45652:   movq    rsp(952 + virtual offset), %rsi
  Inst 45653:   load_ext_name u0:5+0, %rax
  Inst 45654:   movq    %rsi, rsp(464 + virtual offset)
  Inst 45655:   movq    %rdi, rsp(480 + virtual offset)
  Inst 45656:   movq    %r15, rsp(496 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S62, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45657:   call    *%rax
  Inst 45658:   movq    rsp(496 + virtual offset), %r15
  Inst 45659:   movq    %r15, %rdi
  Inst 45660:   addq    $1352, %rdi
  Inst 45661:   movq    rsp(448 + virtual offset), %rsi
  Inst 45662:   load_ext_name u0:5+0, %rax
  Inst 45663:   movq    %rsi, rsp(448 + virtual offset)
  Inst 45664:   movq    %rdi, rsp(464 + virtual offset)
  Inst 45665:   movq    %r15, rsp(480 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S117, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45666:   call    *%rax
  Inst 45667:   movq    rsp(480 + virtual offset), %r15
  Inst 45668:   movq    %r15, %rdi
  Inst 45669:   addq    $1360, %rdi
  Inst 45670:   movq    rsp(936 + virtual offset), %rsi
  Inst 45671:   load_ext_name u0:5+0, %rax
  Inst 45672:   movq    %rsi, rsp(448 + virtual offset)
  Inst 45673:   movq    %rdi, rsp(464 + virtual offset)
  Inst 45674:   movq    %r15, rsp(480 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S60, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45675:   call    *%rax
  Inst 45676:   movq    rsp(480 + virtual offset), %r15
  Inst 45677:   movq    %r15, %rdi
  Inst 45678:   addq    $1368, %rdi
  Inst 45679:   movq    rsp(432 + virtual offset), %rsi
  Inst 45680:   load_ext_name u0:5+0, %rax
  Inst 45681:   movq    %rsi, rsp(432 + virtual offset)
  Inst 45682:   movq    %rdi, rsp(448 + virtual offset)
  Inst 45683:   movq    %r15, rsp(464 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S115, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45684:   call    *%rax
  Inst 45685:   movq    rsp(464 + virtual offset), %r15
  Inst 45686:   movq    %r15, %rdi
  Inst 45687:   addq    $1376, %rdi
  Inst 45688:   movq    rsp(920 + virtual offset), %rsi
  Inst 45689:   load_ext_name u0:5+0, %rax
  Inst 45690:   movq    %rsi, rsp(432 + virtual offset)
  Inst 45691:   movq    %rdi, rsp(448 + virtual offset)
  Inst 45692:   movq    %r15, rsp(464 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45693:   call    *%rax
  Inst 45694:   movq    rsp(464 + virtual offset), %r15
  Inst 45695:   movq    %r15, %rdi
  Inst 45696:   addq    $1384, %rdi
  Inst 45697:   movq    rsp(416 + virtual offset), %rsi
  Inst 45698:   load_ext_name u0:5+0, %rax
  Inst 45699:   movq    %rsi, rsp(416 + virtual offset)
  Inst 45700:   movq    %rdi, rsp(432 + virtual offset)
  Inst 45701:   movq    %r15, rsp(448 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S113, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45702:   call    *%rax
  Inst 45703:   movq    rsp(448 + virtual offset), %r15
  Inst 45704:   movq    %r15, %rdi
  Inst 45705:   addq    $1392, %rdi
  Inst 45706:   movq    rsp(904 + virtual offset), %rsi
  Inst 45707:   load_ext_name u0:5+0, %rax
  Inst 45708:   movq    %rsi, rsp(416 + virtual offset)
  Inst 45709:   movq    %rdi, rsp(432 + virtual offset)
  Inst 45710:   movq    %r15, rsp(448 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S56, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45711:   call    *%rax
  Inst 45712:   movq    rsp(448 + virtual offset), %r15
  Inst 45713:   movq    %r15, %rdi
  Inst 45714:   addq    $1400, %rdi
  Inst 45715:   movq    rsp(400 + virtual offset), %rsi
  Inst 45716:   load_ext_name u0:5+0, %rax
  Inst 45717:   movq    %rsi, rsp(400 + virtual offset)
  Inst 45718:   movq    %rdi, rsp(416 + virtual offset)
  Inst 45719:   movq    %r15, rsp(432 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S111, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45720:   call    *%rax
  Inst 45721:   movq    rsp(432 + virtual offset), %r15
  Inst 45722:   movq    %r15, %rdi
  Inst 45723:   addq    $1408, %rdi
  Inst 45724:   movq    rsp(888 + virtual offset), %rsi
  Inst 45725:   load_ext_name u0:5+0, %rax
  Inst 45726:   movq    %rsi, rsp(400 + virtual offset)
  Inst 45727:   movq    %rdi, rsp(416 + virtual offset)
  Inst 45728:   movq    %r15, rsp(432 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S54, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45729:   call    *%rax
  Inst 45730:   movq    rsp(432 + virtual offset), %r15
  Inst 45731:   movq    %r15, %rdi
  Inst 45732:   addq    $1416, %rdi
  Inst 45733:   movq    rsp(384 + virtual offset), %rsi
  Inst 45734:   load_ext_name u0:5+0, %rax
  Inst 45735:   movq    %rsi, rsp(384 + virtual offset)
  Inst 45736:   movq    %rdi, rsp(400 + virtual offset)
  Inst 45737:   movq    %r15, rsp(416 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S109, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45738:   call    *%rax
  Inst 45739:   movq    rsp(416 + virtual offset), %r15
  Inst 45740:   movq    %r15, %rdi
  Inst 45741:   addq    $1424, %rdi
  Inst 45742:   movq    rsp(872 + virtual offset), %rsi
  Inst 45743:   load_ext_name u0:5+0, %rax
  Inst 45744:   movq    %rsi, rsp(384 + virtual offset)
  Inst 45745:   movq    %rdi, rsp(400 + virtual offset)
  Inst 45746:   movq    %r15, rsp(416 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S52, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45747:   call    *%rax
  Inst 45748:   movq    rsp(416 + virtual offset), %r15
  Inst 45749:   movq    %r15, %rdi
  Inst 45750:   addq    $1432, %rdi
  Inst 45751:   movq    rsp(368 + virtual offset), %rsi
  Inst 45752:   load_ext_name u0:5+0, %rax
  Inst 45753:   movq    %rsi, rsp(368 + virtual offset)
  Inst 45754:   movq    %rdi, rsp(384 + virtual offset)
  Inst 45755:   movq    %r15, rsp(400 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S107, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45756:   call    *%rax
  Inst 45757:   movq    rsp(400 + virtual offset), %r15
  Inst 45758:   movq    %r15, %rdi
  Inst 45759:   addq    $1440, %rdi
  Inst 45760:   movq    rsp(856 + virtual offset), %rsi
  Inst 45761:   load_ext_name u0:5+0, %rax
  Inst 45762:   movq    %rsi, rsp(368 + virtual offset)
  Inst 45763:   movq    %rdi, rsp(384 + virtual offset)
  Inst 45764:   movq    %r15, rsp(400 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S50, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45765:   call    *%rax
  Inst 45766:   movq    rsp(400 + virtual offset), %r15
  Inst 45767:   movq    %r15, %rdi
  Inst 45768:   addq    $1448, %rdi
  Inst 45769:   movq    rsp(352 + virtual offset), %rsi
  Inst 45770:   load_ext_name u0:5+0, %rax
  Inst 45771:   movq    %rsi, rsp(352 + virtual offset)
  Inst 45772:   movq    %rdi, rsp(368 + virtual offset)
  Inst 45773:   movq    %r15, rsp(384 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S105, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45774:   call    *%rax
  Inst 45775:   movq    rsp(384 + virtual offset), %r15
  Inst 45776:   movq    %r15, %rdi
  Inst 45777:   addq    $1456, %rdi
  Inst 45778:   movq    rsp(840 + virtual offset), %rsi
  Inst 45779:   load_ext_name u0:5+0, %rax
  Inst 45780:   movq    %rsi, rsp(352 + virtual offset)
  Inst 45781:   movq    %rdi, rsp(368 + virtual offset)
  Inst 45782:   movq    %r15, rsp(384 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45783:   call    *%rax
  Inst 45784:   movq    rsp(384 + virtual offset), %r15
  Inst 45785:   movq    %r15, %rdi
  Inst 45786:   addq    $1464, %rdi
  Inst 45787:   movq    rsp(336 + virtual offset), %rsi
  Inst 45788:   load_ext_name u0:5+0, %rax
  Inst 45789:   movq    %rsi, rsp(336 + virtual offset)
  Inst 45790:   movq    %rdi, rsp(352 + virtual offset)
  Inst 45791:   movq    %r15, rsp(368 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S103, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45792:   call    *%rax
  Inst 45793:   movq    rsp(368 + virtual offset), %r15
  Inst 45794:   movq    %r15, %rdi
  Inst 45795:   addq    $1472, %rdi
  Inst 45796:   movq    rsp(824 + virtual offset), %rsi
  Inst 45797:   load_ext_name u0:5+0, %rax
  Inst 45798:   movq    %rsi, rsp(336 + virtual offset)
  Inst 45799:   movq    %rdi, rsp(352 + virtual offset)
  Inst 45800:   movq    %r15, rsp(368 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S46, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45801:   call    *%rax
  Inst 45802:   movq    rsp(368 + virtual offset), %r15
  Inst 45803:   movq    %r15, %rdi
  Inst 45804:   addq    $1480, %rdi
  Inst 45805:   movq    rsp(320 + virtual offset), %rsi
  Inst 45806:   load_ext_name u0:5+0, %rax
  Inst 45807:   movq    %rsi, rsp(320 + virtual offset)
  Inst 45808:   movq    %rdi, rsp(336 + virtual offset)
  Inst 45809:   movq    %r15, rsp(352 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S101, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45810:   call    *%rax
  Inst 45811:   movq    rsp(352 + virtual offset), %r15
  Inst 45812:   movq    %r15, %rdi
  Inst 45813:   addq    $1488, %rdi
  Inst 45814:   movq    rsp(808 + virtual offset), %rsi
  Inst 45815:   load_ext_name u0:5+0, %rax
  Inst 45816:   movq    %rsi, rsp(320 + virtual offset)
  Inst 45817:   movq    %rdi, rsp(336 + virtual offset)
  Inst 45818:   movq    %r15, rsp(352 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S44, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45819:   call    *%rax
  Inst 45820:   movq    rsp(352 + virtual offset), %r15
  Inst 45821:   movq    %r15, %rdi
  Inst 45822:   addq    $1496, %rdi
  Inst 45823:   movq    rsp(304 + virtual offset), %rsi
  Inst 45824:   load_ext_name u0:5+0, %rax
  Inst 45825:   movq    %rsi, rsp(304 + virtual offset)
  Inst 45826:   movq    %rdi, rsp(320 + virtual offset)
  Inst 45827:   movq    %r15, rsp(336 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S99, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45828:   call    *%rax
  Inst 45829:   movq    rsp(336 + virtual offset), %r15
  Inst 45830:   movq    %r15, %rdi
  Inst 45831:   addq    $1504, %rdi
  Inst 45832:   movq    rsp(792 + virtual offset), %rsi
  Inst 45833:   load_ext_name u0:5+0, %rax
  Inst 45834:   movq    %rsi, rsp(304 + virtual offset)
  Inst 45835:   movq    %rdi, rsp(320 + virtual offset)
  Inst 45836:   movq    %r15, rsp(336 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S42, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45837:   call    *%rax
  Inst 45838:   movq    rsp(336 + virtual offset), %r15
  Inst 45839:   movq    %r15, %rdi
  Inst 45840:   addq    $1512, %rdi
  Inst 45841:   movq    rsp(288 + virtual offset), %rsi
  Inst 45842:   load_ext_name u0:5+0, %rax
  Inst 45843:   movq    %rsi, rsp(288 + virtual offset)
  Inst 45844:   movq    %rdi, rsp(304 + virtual offset)
  Inst 45845:   movq    %r15, rsp(320 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S97, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45846:   call    *%rax
  Inst 45847:   movq    rsp(320 + virtual offset), %r15
  Inst 45848:   movq    %r15, %rdi
  Inst 45849:   addq    $1520, %rdi
  Inst 45850:   movq    rsp(776 + virtual offset), %rsi
  Inst 45851:   load_ext_name u0:5+0, %rax
  Inst 45852:   movq    %rsi, rsp(288 + virtual offset)
  Inst 45853:   movq    %rdi, rsp(304 + virtual offset)
  Inst 45854:   movq    %r15, rsp(320 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S40, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45855:   call    *%rax
  Inst 45856:   movq    rsp(320 + virtual offset), %r15
  Inst 45857:   movq    %r15, %rdi
  Inst 45858:   addq    $1528, %rdi
  Inst 45859:   movq    rsp(272 + virtual offset), %rsi
  Inst 45860:   load_ext_name u0:5+0, %rax
  Inst 45861:   movq    %rsi, rsp(272 + virtual offset)
  Inst 45862:   movq    %rdi, rsp(288 + virtual offset)
  Inst 45863:   movq    %r15, rsp(304 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S95, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45864:   call    *%rax
  Inst 45865:   movq    rsp(304 + virtual offset), %r15
  Inst 45866:   movq    %r15, %rdi
  Inst 45867:   addq    $1536, %rdi
  Inst 45868:   movq    rsp(760 + virtual offset), %rsi
  Inst 45869:   load_ext_name u0:5+0, %rax
  Inst 45870:   movq    %rsi, rsp(272 + virtual offset)
  Inst 45871:   movq    %rdi, rsp(288 + virtual offset)
  Inst 45872:   movq    %r15, rsp(304 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45873:   call    *%rax
  Inst 45874:   movq    rsp(304 + virtual offset), %r15
  Inst 45875:   movq    %r15, %rdi
  Inst 45876:   addq    $1544, %rdi
  Inst 45877:   movq    rsp(256 + virtual offset), %rsi
  Inst 45878:   load_ext_name u0:5+0, %rax
  Inst 45879:   movq    %rsi, rsp(256 + virtual offset)
  Inst 45880:   movq    %rdi, rsp(272 + virtual offset)
  Inst 45881:   movq    %r15, rsp(288 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S93, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45882:   call    *%rax
  Inst 45883:   movq    rsp(288 + virtual offset), %r15
  Inst 45884:   movq    %r15, %rdi
  Inst 45885:   addq    $1552, %rdi
  Inst 45886:   movq    rsp(744 + virtual offset), %rsi
  Inst 45887:   load_ext_name u0:5+0, %rax
  Inst 45888:   movq    %rsi, rsp(256 + virtual offset)
  Inst 45889:   movq    %rdi, rsp(272 + virtual offset)
  Inst 45890:   movq    %r15, rsp(288 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S36, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45891:   call    *%rax
  Inst 45892:   movq    rsp(288 + virtual offset), %r15
  Inst 45893:   movq    %r15, %rdi
  Inst 45894:   addq    $1560, %rdi
  Inst 45895:   movq    rsp(240 + virtual offset), %rsi
  Inst 45896:   load_ext_name u0:5+0, %rax
  Inst 45897:   movq    %rsi, rsp(240 + virtual offset)
  Inst 45898:   movq    %rdi, rsp(256 + virtual offset)
  Inst 45899:   movq    %r15, rsp(272 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S91, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45900:   call    *%rax
  Inst 45901:   movq    rsp(272 + virtual offset), %r15
  Inst 45902:   movq    %r15, %rdi
  Inst 45903:   addq    $1568, %rdi
  Inst 45904:   movq    rsp(728 + virtual offset), %rsi
  Inst 45905:   load_ext_name u0:5+0, %rax
  Inst 45906:   movq    %rsi, rsp(240 + virtual offset)
  Inst 45907:   movq    %rdi, rsp(256 + virtual offset)
  Inst 45908:   movq    %r15, rsp(272 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S34, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45909:   call    *%rax
  Inst 45910:   movq    rsp(272 + virtual offset), %r15
  Inst 45911:   movq    %r15, %rdi
  Inst 45912:   addq    $1576, %rdi
  Inst 45913:   movq    rsp(232 + virtual offset), %rsi
  Inst 45914:   load_ext_name u0:5+0, %rax
  Inst 45915:   movq    %rsi, rsp(232 + virtual offset)
  Inst 45916:   movq    %rdi, rsp(240 + virtual offset)
  Inst 45917:   movq    %r15, rsp(256 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S89, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45918:   call    *%rax
  Inst 45919:   movq    rsp(256 + virtual offset), %r15
  Inst 45920:   movq    %r15, %rdi
  Inst 45921:   addq    $1584, %rdi
  Inst 45922:   movq    rsp(712 + virtual offset), %rsi
  Inst 45923:   load_ext_name u0:5+0, %rax
  Inst 45924:   movq    %rsi, rsp(232 + virtual offset)
  Inst 45925:   movq    %rdi, rsp(240 + virtual offset)
  Inst 45926:   movq    %r15, rsp(256 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S32, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45927:   call    *%rax
  Inst 45928:   movq    rsp(256 + virtual offset), %r15
  Inst 45929:   movq    %r15, %rdi
  Inst 45930:   addq    $1592, %rdi
  Inst 45931:   movq    rsp(224 + virtual offset), %rsi
  Inst 45932:   load_ext_name u0:5+0, %rax
  Inst 45933:   movq    %rsi, rsp(224 + virtual offset)
  Inst 45934:   movq    %rdi, rsp(232 + virtual offset)
  Inst 45935:   movq    %r15, rsp(240 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S87, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45936:   call    *%rax
  Inst 45937:   movq    rsp(240 + virtual offset), %r15
  Inst 45938:   movq    %r15, %rdi
  Inst 45939:   addq    $1600, %rdi
  Inst 45940:   movq    rsp(696 + virtual offset), %rsi
  Inst 45941:   load_ext_name u0:5+0, %rax
  Inst 45942:   movq    %rsi, rsp(224 + virtual offset)
  Inst 45943:   movq    %rdi, rsp(232 + virtual offset)
  Inst 45944:   movq    %r15, rsp(240 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S30, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45945:   call    *%rax
  Inst 45946:   movq    rsp(240 + virtual offset), %r15
  Inst 45947:   movq    %r15, %rdi
  Inst 45948:   addq    $1608, %rdi
  Inst 45949:   movq    rsp(216 + virtual offset), %rsi
  Inst 45950:   load_ext_name u0:5+0, %rax
  Inst 45951:   movq    %rsi, rsp(216 + virtual offset)
  Inst 45952:   movq    %rdi, rsp(224 + virtual offset)
  Inst 45953:   movq    %r15, rsp(232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S85, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45954:   call    *%rax
  Inst 45955:   movq    rsp(232 + virtual offset), %r15
  Inst 45956:   movq    %r15, %rdi
  Inst 45957:   addq    $1616, %rdi
  Inst 45958:   movq    rsp(680 + virtual offset), %rsi
  Inst 45959:   load_ext_name u0:5+0, %rax
  Inst 45960:   movq    %rsi, rsp(216 + virtual offset)
  Inst 45961:   movq    %rdi, rsp(224 + virtual offset)
  Inst 45962:   movq    %r15, rsp(232 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45963:   call    *%rax
  Inst 45964:   movq    rsp(232 + virtual offset), %r15
  Inst 45965:   movq    %r15, %rdi
  Inst 45966:   addq    $1624, %rdi
  Inst 45967:   movq    rsp(208 + virtual offset), %rsi
  Inst 45968:   load_ext_name u0:5+0, %rax
  Inst 45969:   movq    %rsi, rsp(208 + virtual offset)
  Inst 45970:   movq    %rdi, rsp(216 + virtual offset)
  Inst 45971:   movq    %r15, rsp(224 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S83, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45972:   call    *%rax
  Inst 45973:   movq    rsp(224 + virtual offset), %r15
  Inst 45974:   movq    %r15, %rdi
  Inst 45975:   addq    $1632, %rdi
  Inst 45976:   movq    rsp(664 + virtual offset), %rsi
  Inst 45977:   load_ext_name u0:5+0, %rax
  Inst 45978:   movq    %rsi, rsp(208 + virtual offset)
  Inst 45979:   movq    %rdi, rsp(216 + virtual offset)
  Inst 45980:   movq    %r15, rsp(224 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S28, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45981:   call    *%rax
  Inst 45982:   movq    rsp(224 + virtual offset), %r15
  Inst 45983:   movq    %r15, %rdi
  Inst 45984:   addq    $1640, %rdi
  Inst 45985:   movq    rsp(200 + virtual offset), %rsi
  Inst 45986:   load_ext_name u0:5+0, %rax
  Inst 45987:   movq    %rsi, rsp(200 + virtual offset)
  Inst 45988:   movq    %rdi, rsp(208 + virtual offset)
  Inst 45989:   movq    %r15, rsp(216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S81, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45990:   call    *%rax
  Inst 45991:   movq    rsp(216 + virtual offset), %r15
  Inst 45992:   movq    %r15, %rdi
  Inst 45993:   addq    $1648, %rdi
  Inst 45994:   movq    rsp(648 + virtual offset), %rsi
  Inst 45995:   load_ext_name u0:5+0, %rax
  Inst 45996:   movq    %rsi, rsp(200 + virtual offset)
  Inst 45997:   movq    %rdi, rsp(208 + virtual offset)
  Inst 45998:   movq    %r15, rsp(216 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S27, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 45999:   call    *%rax
  Inst 46000:   movq    rsp(216 + virtual offset), %r15
  Inst 46001:   movq    %r15, %rdi
  Inst 46002:   addq    $1656, %rdi
  Inst 46003:   movq    rsp(192 + virtual offset), %rsi
  Inst 46004:   load_ext_name u0:5+0, %rax
  Inst 46005:   movq    %rsi, rsp(192 + virtual offset)
  Inst 46006:   movq    %rdi, rsp(200 + virtual offset)
  Inst 46007:   movq    %r15, rsp(208 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S79, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46008:   call    *%rax
  Inst 46009:   movq    rsp(208 + virtual offset), %r15
  Inst 46010:   movq    %r15, %rdi
  Inst 46011:   addq    $1664, %rdi
  Inst 46012:   movq    rsp(632 + virtual offset), %rsi
  Inst 46013:   load_ext_name u0:5+0, %rax
  Inst 46014:   movq    %rsi, rsp(192 + virtual offset)
  Inst 46015:   movq    %rdi, rsp(200 + virtual offset)
  Inst 46016:   movq    %r15, rsp(208 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S26, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46017:   call    *%rax
  Inst 46018:   movq    rsp(208 + virtual offset), %r15
  Inst 46019:   movq    %r15, %rdi
  Inst 46020:   addq    $1672, %rdi
  Inst 46021:   movq    rsp(184 + virtual offset), %rsi
  Inst 46022:   load_ext_name u0:5+0, %rax
  Inst 46023:   movq    %rsi, rsp(184 + virtual offset)
  Inst 46024:   movq    %rdi, rsp(192 + virtual offset)
  Inst 46025:   movq    %r15, rsp(200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S77, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46026:   call    *%rax
  Inst 46027:   movq    rsp(200 + virtual offset), %r15
  Inst 46028:   movq    %r15, %rdi
  Inst 46029:   addq    $1680, %rdi
  Inst 46030:   movq    rsp(616 + virtual offset), %rsi
  Inst 46031:   load_ext_name u0:5+0, %rax
  Inst 46032:   movq    %rsi, rsp(184 + virtual offset)
  Inst 46033:   movq    %rdi, rsp(192 + virtual offset)
  Inst 46034:   movq    %r15, rsp(200 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S25, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46035:   call    *%rax
  Inst 46036:   movq    rsp(200 + virtual offset), %r15
  Inst 46037:   movq    %r15, %rdi
  Inst 46038:   addq    $1688, %rdi
  Inst 46039:   movq    rsp(176 + virtual offset), %rsi
  Inst 46040:   load_ext_name u0:5+0, %rax
  Inst 46041:   movq    %rsi, rsp(176 + virtual offset)
  Inst 46042:   movq    %rdi, rsp(184 + virtual offset)
  Inst 46043:   movq    %r15, rsp(192 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S75, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46044:   call    *%rax
  Inst 46045:   movq    rsp(192 + virtual offset), %r15
  Inst 46046:   movq    %r15, %rdi
  Inst 46047:   addq    $1696, %rdi
  Inst 46048:   movq    rsp(600 + virtual offset), %rsi
  Inst 46049:   load_ext_name u0:5+0, %rax
  Inst 46050:   movq    %rsi, rsp(176 + virtual offset)
  Inst 46051:   movq    %rdi, rsp(184 + virtual offset)
  Inst 46052:   movq    %r15, rsp(192 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S24, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46053:   call    *%rax
  Inst 46054:   movq    rsp(192 + virtual offset), %r15
  Inst 46055:   movq    %r15, %rdi
  Inst 46056:   addq    $1704, %rdi
  Inst 46057:   movq    rsp(168 + virtual offset), %rsi
  Inst 46058:   load_ext_name u0:5+0, %rax
  Inst 46059:   movq    %rsi, rsp(168 + virtual offset)
  Inst 46060:   movq    %rdi, rsp(176 + virtual offset)
  Inst 46061:   movq    %r15, rsp(184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S73, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46062:   call    *%rax
  Inst 46063:   movq    rsp(184 + virtual offset), %r15
  Inst 46064:   movq    %r15, %rdi
  Inst 46065:   addq    $1712, %rdi
  Inst 46066:   movq    rsp(584 + virtual offset), %rsi
  Inst 46067:   load_ext_name u0:5+0, %rax
  Inst 46068:   movq    %rsi, rsp(168 + virtual offset)
  Inst 46069:   movq    %rdi, rsp(176 + virtual offset)
  Inst 46070:   movq    %r15, rsp(184 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46071:   call    *%rax
  Inst 46072:   movq    rsp(184 + virtual offset), %r15
  Inst 46073:   movq    %r15, %rdi
  Inst 46074:   addq    $1720, %rdi
  Inst 46075:   movq    rsp(160 + virtual offset), %rsi
  Inst 46076:   load_ext_name u0:5+0, %rax
  Inst 46077:   movq    %rsi, rsp(160 + virtual offset)
  Inst 46078:   movq    %rdi, rsp(168 + virtual offset)
  Inst 46079:   movq    %r15, rsp(176 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S71, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46080:   call    *%rax
  Inst 46081:   movq    rsp(176 + virtual offset), %r15
  Inst 46082:   movq    %r15, %rdi
  Inst 46083:   addq    $1728, %rdi
  Inst 46084:   movq    rsp(568 + virtual offset), %rsi
  Inst 46085:   load_ext_name u0:5+0, %rax
  Inst 46086:   movq    %rsi, rsp(160 + virtual offset)
  Inst 46087:   movq    %rdi, rsp(168 + virtual offset)
  Inst 46088:   movq    %r15, rsp(176 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46089:   call    *%rax
  Inst 46090:   movq    rsp(176 + virtual offset), %r15
  Inst 46091:   movq    %r15, %rdi
  Inst 46092:   addq    $1736, %rdi
  Inst 46093:   movq    rsp(152 + virtual offset), %rsi
  Inst 46094:   load_ext_name u0:5+0, %rax
  Inst 46095:   movq    %rsi, rsp(152 + virtual offset)
  Inst 46096:   movq    %rdi, rsp(160 + virtual offset)
  Inst 46097:   movq    %r15, rsp(168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S69, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46098:   call    *%rax
  Inst 46099:   movq    rsp(168 + virtual offset), %r15
  Inst 46100:   movq    %r15, %rdi
  Inst 46101:   addq    $1744, %rdi
  Inst 46102:   movq    rsp(552 + virtual offset), %rsi
  Inst 46103:   load_ext_name u0:5+0, %rax
  Inst 46104:   movq    %rsi, rsp(152 + virtual offset)
  Inst 46105:   movq    %rdi, rsp(160 + virtual offset)
  Inst 46106:   movq    %r15, rsp(168 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46107:   call    *%rax
  Inst 46108:   movq    rsp(168 + virtual offset), %r15
  Inst 46109:   movq    %r15, %rdi
  Inst 46110:   addq    $1752, %rdi
  Inst 46111:   movq    rsp(144 + virtual offset), %rsi
  Inst 46112:   load_ext_name u0:5+0, %rax
  Inst 46113:   movq    %rsi, rsp(144 + virtual offset)
  Inst 46114:   movq    %rdi, rsp(152 + virtual offset)
  Inst 46115:   movq    %r15, rsp(160 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S67, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46116:   call    *%rax
  Inst 46117:   movq    rsp(160 + virtual offset), %r15
  Inst 46118:   movq    %r15, %rdi
  Inst 46119:   addq    $1760, %rdi
  Inst 46120:   movq    rsp(536 + virtual offset), %rsi
  Inst 46121:   load_ext_name u0:5+0, %rax
  Inst 46122:   movq    %rsi, rsp(144 + virtual offset)
  Inst 46123:   movq    %rdi, rsp(152 + virtual offset)
  Inst 46124:   movq    %r15, rsp(160 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46125:   call    *%rax
  Inst 46126:   movq    rsp(160 + virtual offset), %r15
  Inst 46127:   movq    %r15, %rdi
  Inst 46128:   addq    $1768, %rdi
  Inst 46129:   movq    rsp(136 + virtual offset), %rsi
  Inst 46130:   load_ext_name u0:5+0, %rax
  Inst 46131:   movq    %rsi, rsp(136 + virtual offset)
  Inst 46132:   movq    %rdi, rsp(144 + virtual offset)
  Inst 46133:   movq    %r15, rsp(152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S65, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46134:   call    *%rax
  Inst 46135:   movq    rsp(152 + virtual offset), %r15
  Inst 46136:   movq    %r15, %rdi
  Inst 46137:   addq    $1776, %rdi
  Inst 46138:   movq    rsp(520 + virtual offset), %rsi
  Inst 46139:   load_ext_name u0:5+0, %rax
  Inst 46140:   movq    %rsi, rsp(136 + virtual offset)
  Inst 46141:   movq    %rdi, rsp(144 + virtual offset)
  Inst 46142:   movq    %r15, rsp(152 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46143:   call    *%rax
  Inst 46144:   movq    rsp(152 + virtual offset), %r15
  Inst 46145:   movq    %r15, %rdi
  Inst 46146:   addq    $1784, %rdi
  Inst 46147:   movq    rsp(128 + virtual offset), %rsi
  Inst 46148:   load_ext_name u0:5+0, %rax
  Inst 46149:   movq    %rsi, rsp(128 + virtual offset)
  Inst 46150:   movq    %rdi, rsp(136 + virtual offset)
  Inst 46151:   movq    %r15, rsp(144 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S63, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46152:   call    *%rax
  Inst 46153:   movq    rsp(144 + virtual offset), %r15
  Inst 46154:   movq    %r15, %rdi
  Inst 46155:   addq    $1792, %rdi
  Inst 46156:   movq    rsp(504 + virtual offset), %rsi
  Inst 46157:   load_ext_name u0:5+0, %rax
  Inst 46158:   movq    %rsi, rsp(128 + virtual offset)
  Inst 46159:   movq    %rdi, rsp(136 + virtual offset)
  Inst 46160:   movq    %r15, rsp(144 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46161:   call    *%rax
  Inst 46162:   movq    rsp(144 + virtual offset), %r15
  Inst 46163:   movq    %r15, %rdi
  Inst 46164:   addq    $1800, %rdi
  Inst 46165:   movq    rsp(120 + virtual offset), %rsi
  Inst 46166:   load_ext_name u0:5+0, %rax
  Inst 46167:   movq    %rsi, rsp(120 + virtual offset)
  Inst 46168:   movq    %rdi, rsp(128 + virtual offset)
  Inst 46169:   movq    %r15, rsp(136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S61, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46170:   call    *%rax
  Inst 46171:   movq    rsp(136 + virtual offset), %r15
  Inst 46172:   movq    %r15, %rdi
  Inst 46173:   addq    $1808, %rdi
  Inst 46174:   movq    rsp(488 + virtual offset), %rsi
  Inst 46175:   load_ext_name u0:5+0, %rax
  Inst 46176:   movq    %rsi, rsp(120 + virtual offset)
  Inst 46177:   movq    %rdi, rsp(128 + virtual offset)
  Inst 46178:   movq    %r15, rsp(136 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46179:   call    *%rax
  Inst 46180:   movq    rsp(136 + virtual offset), %r15
  Inst 46181:   movq    %r15, %rdi
  Inst 46182:   addq    $1816, %rdi
  Inst 46183:   movq    rsp(112 + virtual offset), %rsi
  Inst 46184:   load_ext_name u0:5+0, %rax
  Inst 46185:   movq    %rsi, rsp(112 + virtual offset)
  Inst 46186:   movq    %rdi, rsp(120 + virtual offset)
  Inst 46187:   movq    %r15, rsp(128 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S59, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46188:   call    *%rax
  Inst 46189:   movq    rsp(128 + virtual offset), %r15
  Inst 46190:   movq    %r15, %rdi
  Inst 46191:   addq    $1824, %rdi
  Inst 46192:   movq    rsp(472 + virtual offset), %rsi
  Inst 46193:   load_ext_name u0:5+0, %rax
  Inst 46194:   movq    %rsi, rsp(112 + virtual offset)
  Inst 46195:   movq    %rdi, rsp(120 + virtual offset)
  Inst 46196:   movq    %r15, rsp(128 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46197:   call    *%rax
  Inst 46198:   movq    rsp(128 + virtual offset), %r15
  Inst 46199:   movq    %r15, %rdi
  Inst 46200:   addq    $1832, %rdi
  Inst 46201:   movq    rsp(104 + virtual offset), %rsi
  Inst 46202:   load_ext_name u0:5+0, %rax
  Inst 46203:   movq    %rsi, rsp(104 + virtual offset)
  Inst 46204:   movq    %rdi, rsp(112 + virtual offset)
  Inst 46205:   movq    %r15, rsp(120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S57, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46206:   call    *%rax
  Inst 46207:   movq    rsp(120 + virtual offset), %r15
  Inst 46208:   movq    %r15, %rdi
  Inst 46209:   addq    $1840, %rdi
  Inst 46210:   movq    rsp(456 + virtual offset), %rsi
  Inst 46211:   load_ext_name u0:5+0, %rax
  Inst 46212:   movq    %rsi, rsp(104 + virtual offset)
  Inst 46213:   movq    %rdi, rsp(112 + virtual offset)
  Inst 46214:   movq    %r15, rsp(120 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46215:   call    *%rax
  Inst 46216:   movq    rsp(120 + virtual offset), %r15
  Inst 46217:   movq    %r15, %rdi
  Inst 46218:   addq    $1848, %rdi
  Inst 46219:   movq    rsp(96 + virtual offset), %rsi
  Inst 46220:   load_ext_name u0:5+0, %rax
  Inst 46221:   movq    %rsi, rsp(96 + virtual offset)
  Inst 46222:   movq    %rdi, rsp(104 + virtual offset)
  Inst 46223:   movq    %r15, rsp(112 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S55, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46224:   call    *%rax
  Inst 46225:   movq    rsp(112 + virtual offset), %r15
  Inst 46226:   movq    %r15, %rdi
  Inst 46227:   addq    $1856, %rdi
  Inst 46228:   movq    rsp(440 + virtual offset), %rsi
  Inst 46229:   load_ext_name u0:5+0, %rax
  Inst 46230:   movq    %rsi, rsp(96 + virtual offset)
  Inst 46231:   movq    %rdi, rsp(104 + virtual offset)
  Inst 46232:   movq    %r15, rsp(112 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46233:   call    *%rax
  Inst 46234:   movq    rsp(112 + virtual offset), %r15
  Inst 46235:   movq    %r15, %rdi
  Inst 46236:   addq    $1864, %rdi
  Inst 46237:   movq    rsp(88 + virtual offset), %rsi
  Inst 46238:   load_ext_name u0:5+0, %rax
  Inst 46239:   movq    %rsi, rsp(88 + virtual offset)
  Inst 46240:   movq    %rdi, rsp(96 + virtual offset)
  Inst 46241:   movq    %r15, rsp(104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S53, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46242:   call    *%rax
  Inst 46243:   movq    rsp(104 + virtual offset), %r15
  Inst 46244:   movq    %r15, %rdi
  Inst 46245:   addq    $1872, %rdi
  Inst 46246:   movq    rsp(424 + virtual offset), %rsi
  Inst 46247:   load_ext_name u0:5+0, %rax
  Inst 46248:   movq    %rsi, rsp(88 + virtual offset)
  Inst 46249:   movq    %rdi, rsp(96 + virtual offset)
  Inst 46250:   movq    %r15, rsp(104 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46251:   call    *%rax
  Inst 46252:   movq    rsp(104 + virtual offset), %r15
  Inst 46253:   movq    %r15, %rdi
  Inst 46254:   addq    $1880, %rdi
  Inst 46255:   movq    rsp(80 + virtual offset), %rsi
  Inst 46256:   load_ext_name u0:5+0, %rax
  Inst 46257:   movq    %rsi, rsp(80 + virtual offset)
  Inst 46258:   movq    %rdi, rsp(88 + virtual offset)
  Inst 46259:   movq    %r15, rsp(96 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S51, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46260:   call    *%rax
  Inst 46261:   movq    rsp(96 + virtual offset), %r15
  Inst 46262:   movq    %r15, %rdi
  Inst 46263:   addq    $1888, %rdi
  Inst 46264:   movq    rsp(408 + virtual offset), %rsi
  Inst 46265:   load_ext_name u0:5+0, %rax
  Inst 46266:   movq    %rsi, rsp(80 + virtual offset)
  Inst 46267:   movq    %rdi, rsp(88 + virtual offset)
  Inst 46268:   movq    %r15, rsp(96 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46269:   call    *%rax
  Inst 46270:   movq    rsp(96 + virtual offset), %r15
  Inst 46271:   movq    %r15, %rdi
  Inst 46272:   addq    $1896, %rdi
  Inst 46273:   movq    rsp(72 + virtual offset), %rsi
  Inst 46274:   load_ext_name u0:5+0, %rax
  Inst 46275:   movq    %rsi, rsp(72 + virtual offset)
  Inst 46276:   movq    %rdi, rsp(80 + virtual offset)
  Inst 46277:   movq    %r15, rsp(88 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S31, S33, S35, S37, S39, S41, S43, S45, S47, S49, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46278:   call    *%rax
  Inst 46279:   movq    rsp(88 + virtual offset), %r15
  Inst 46280:   movq    %r15, %rdi
  Inst 46281:   addq    $1904, %rdi
  Inst 46282:   movq    rsp(392 + virtual offset), %rsi
  Inst 46283:   load_ext_name u0:5+0, %rax
  Inst 46284:   movq    %rsi, rsp(72 + virtual offset)
  Inst 46285:   movq    %rdi, rsp(80 + virtual offset)
  Inst 46286:   movq    %r15, rsp(88 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S31, S33, S35, S37, S39, S41, S43, S45, S47, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46287:   call    *%rax
  Inst 46288:   movq    rsp(88 + virtual offset), %r15
  Inst 46289:   movq    %r15, %rdi
  Inst 46290:   addq    $1912, %rdi
  Inst 46291:   movq    rsp(64 + virtual offset), %rsi
  Inst 46292:   load_ext_name u0:5+0, %rax
  Inst 46293:   movq    %rsi, rsp(64 + virtual offset)
  Inst 46294:   movq    %rdi, rsp(72 + virtual offset)
  Inst 46295:   movq    %r15, rsp(80 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S31, S33, S35, S37, S39, S41, S43, S45, S47, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46296:   call    *%rax
  Inst 46297:   movq    rsp(80 + virtual offset), %r15
  Inst 46298:   movq    %r15, %rdi
  Inst 46299:   addq    $1920, %rdi
  Inst 46300:   movq    rsp(376 + virtual offset), %rsi
  Inst 46301:   load_ext_name u0:5+0, %rax
  Inst 46302:   movq    %rsi, rsp(64 + virtual offset)
  Inst 46303:   movq    %rdi, rsp(72 + virtual offset)
  Inst 46304:   movq    %r15, rsp(80 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S31, S33, S35, S37, S39, S41, S43, S45, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46305:   call    *%rax
  Inst 46306:   movq    rsp(80 + virtual offset), %r15
  Inst 46307:   movq    %r15, %rdi
  Inst 46308:   addq    $1928, %rdi
  Inst 46309:   movq    rsp(56 + virtual offset), %rsi
  Inst 46310:   load_ext_name u0:5+0, %rax
  Inst 46311:   movq    %rsi, rsp(56 + virtual offset)
  Inst 46312:   movq    %rdi, rsp(64 + virtual offset)
  Inst 46313:   movq    %r15, rsp(72 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S31, S33, S35, S37, S39, S41, S43, S45, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46314:   call    *%rax
  Inst 46315:   movq    rsp(72 + virtual offset), %r15
  Inst 46316:   movq    %r15, %rdi
  Inst 46317:   addq    $1936, %rdi
  Inst 46318:   movq    rsp(360 + virtual offset), %rsi
  Inst 46319:   load_ext_name u0:5+0, %rax
  Inst 46320:   movq    %rsi, rsp(56 + virtual offset)
  Inst 46321:   movq    %rdi, rsp(64 + virtual offset)
  Inst 46322:   movq    %r15, rsp(72 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S31, S33, S35, S37, S39, S41, S43, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46323:   call    *%rax
  Inst 46324:   movq    rsp(72 + virtual offset), %r15
  Inst 46325:   movq    %r15, %rdi
  Inst 46326:   addq    $1944, %rdi
  Inst 46327:   movq    rsp(48 + virtual offset), %rsi
  Inst 46328:   load_ext_name u0:5+0, %rax
  Inst 46329:   movq    %rsi, rsp(48 + virtual offset)
  Inst 46330:   movq    %rdi, rsp(56 + virtual offset)
  Inst 46331:   movq    %r15, rsp(64 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S31, S33, S35, S37, S39, S41, S43, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46332:   call    *%rax
  Inst 46333:   movq    rsp(64 + virtual offset), %r15
  Inst 46334:   movq    %r15, %rdi
  Inst 46335:   addq    $1952, %rdi
  Inst 46336:   movq    rsp(344 + virtual offset), %rsi
  Inst 46337:   load_ext_name u0:5+0, %rax
  Inst 46338:   movq    %rsi, rsp(48 + virtual offset)
  Inst 46339:   movq    %rdi, rsp(56 + virtual offset)
  Inst 46340:   movq    %r15, rsp(64 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S8, S31, S33, S35, S37, S39, S41, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46341:   call    *%rax
  Inst 46342:   movq    rsp(64 + virtual offset), %r15
  Inst 46343:   movq    %r15, %rdi
  Inst 46344:   addq    $1960, %rdi
  Inst 46345:   movq    rsp(40 + virtual offset), %rsi
  Inst 46346:   load_ext_name u0:5+0, %rax
  Inst 46347:   movq    %rsi, rsp(40 + virtual offset)
  Inst 46348:   movq    %rdi, rsp(48 + virtual offset)
  Inst 46349:   movq    %r15, rsp(56 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S31, S33, S35, S37, S39, S41, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46350:   call    *%rax
  Inst 46351:   movq    rsp(56 + virtual offset), %r15
  Inst 46352:   movq    %r15, %rdi
  Inst 46353:   addq    $1968, %rdi
  Inst 46354:   movq    rsp(328 + virtual offset), %rsi
  Inst 46355:   load_ext_name u0:5+0, %rax
  Inst 46356:   movq    %rsi, rsp(40 + virtual offset)
  Inst 46357:   movq    %rdi, rsp(48 + virtual offset)
  Inst 46358:   movq    %r15, rsp(56 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S7, S31, S33, S35, S37, S39, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46359:   call    *%rax
  Inst 46360:   movq    rsp(56 + virtual offset), %r15
  Inst 46361:   movq    %r15, %rdi
  Inst 46362:   addq    $1976, %rdi
  Inst 46363:   movq    rsp(32 + virtual offset), %rsi
  Inst 46364:   load_ext_name u0:5+0, %rax
  Inst 46365:   movq    %rsi, rsp(32 + virtual offset)
  Inst 46366:   movq    %rdi, rsp(40 + virtual offset)
  Inst 46367:   movq    %r15, rsp(48 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S31, S33, S35, S37, S39, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46368:   call    *%rax
  Inst 46369:   movq    rsp(48 + virtual offset), %r15
  Inst 46370:   movq    %r15, %rdi
  Inst 46371:   addq    $1984, %rdi
  Inst 46372:   movq    rsp(312 + virtual offset), %rsi
  Inst 46373:   load_ext_name u0:5+0, %rax
  Inst 46374:   movq    %rsi, rsp(32 + virtual offset)
  Inst 46375:   movq    %rdi, rsp(40 + virtual offset)
  Inst 46376:   movq    %r15, rsp(48 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S6, S31, S33, S35, S37, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46377:   call    *%rax
  Inst 46378:   movq    rsp(48 + virtual offset), %r15
  Inst 46379:   movq    %r15, %rdi
  Inst 46380:   addq    $1992, %rdi
  Inst 46381:   movq    rsp(24 + virtual offset), %rsi
  Inst 46382:   load_ext_name u0:5+0, %rax
  Inst 46383:   movq    %rsi, rsp(24 + virtual offset)
  Inst 46384:   movq    %rdi, rsp(32 + virtual offset)
  Inst 46385:   movq    %r15, rsp(40 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S31, S33, S35, S37, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46386:   call    *%rax
  Inst 46387:   movq    rsp(40 + virtual offset), %r15
  Inst 46388:   movq    %r15, %rdi
  Inst 46389:   addq    $2000, %rdi
  Inst 46390:   movq    rsp(296 + virtual offset), %rsi
  Inst 46391:   load_ext_name u0:5+0, %rax
  Inst 46392:   movq    %rsi, rsp(24 + virtual offset)
  Inst 46393:   movq    %rdi, rsp(32 + virtual offset)
  Inst 46394:   movq    %r15, rsp(40 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S5, S31, S33, S35, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46395:   call    *%rax
  Inst 46396:   movq    rsp(40 + virtual offset), %r15
  Inst 46397:   movq    %r15, %rdi
  Inst 46398:   addq    $2008, %rdi
  Inst 46399:   movq    rsp(16 + virtual offset), %rsi
  Inst 46400:   load_ext_name u0:5+0, %rax
  Inst 46401:   movq    %rsi, rsp(16 + virtual offset)
  Inst 46402:   movq    %rdi, rsp(24 + virtual offset)
  Inst 46403:   movq    %r15, rsp(32 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S31, S33, S35, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46404:   call    *%rax
  Inst 46405:   movq    rsp(32 + virtual offset), %r15
  Inst 46406:   movq    %r15, %rdi
  Inst 46407:   addq    $2016, %rdi
  Inst 46408:   movq    rsp(280 + virtual offset), %rsi
  Inst 46409:   load_ext_name u0:5+0, %rax
  Inst 46410:   movq    %rsi, rsp(16 + virtual offset)
  Inst 46411:   movq    %rdi, rsp(24 + virtual offset)
  Inst 46412:   movq    %r15, rsp(32 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S4, S31, S33, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46413:   call    *%rax
  Inst 46414:   movq    rsp(32 + virtual offset), %r15
  Inst 46415:   movq    %r15, %rdi
  Inst 46416:   addq    $2024, %rdi
  Inst 46417:   movq    rsp(8 + virtual offset), %rsi
  Inst 46418:   load_ext_name u0:5+0, %rax
  Inst 46419:   movq    %rsi, rsp(8 + virtual offset)
  Inst 46420:   movq    %rdi, rsp(16 + virtual offset)
  Inst 46421:   movq    %r15, rsp(24 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S31, S33, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46422:   call    *%rax
  Inst 46423:   movq    rsp(24 + virtual offset), %r15
  Inst 46424:   movq    %r15, %rdi
  Inst 46425:   addq    $2032, %rdi
  Inst 46426:   movq    rsp(264 + virtual offset), %rsi
  Inst 46427:   load_ext_name u0:5+0, %rax
  Inst 46428:   movq    %rsi, rsp(8 + virtual offset)
  Inst 46429:   movq    %rdi, rsp(16 + virtual offset)
  Inst 46430:   movq    %r15, rsp(24 + virtual offset)
      (safepoint: slots [S0, S1, S2, S3, S31, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46431:   call    *%rax
  Inst 46432:   movq    rsp(24 + virtual offset), %r15
  Inst 46433:   movq    %r15, %rdi
  Inst 46434:   addq    $2040, %rdi
  Inst 46435:   movq    rsp(0 + virtual offset), %rsi
  Inst 46436:   load_ext_name u0:5+0, %rax
  Inst 46437:   movq    %rsi, rsp(0 + virtual offset)
  Inst 46438:   movq    %rdi, rsp(8 + virtual offset)
  Inst 46439:   movq    %r15, rsp(16 + virtual offset)
      (safepoint: slots [S0, S1, S2, S31, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46440:   call    *%rax
  Inst 46441:   movq    rsp(16 + virtual offset), %r15
  Inst 46442:   addq    $2048, %r15
  Inst 46443:   movq    %r15, %rdi
  Inst 46444:   movq    rsp(248 + virtual offset), %rsi
  Inst 46445:   load_ext_name u0:5+0, %rax
  Inst 46446:   movq    %rsi, rsp(0 + virtual offset)
  Inst 46447:   movq    %rdi, rsp(8 + virtual offset)
      (safepoint: slots [S0, S1, S187] with EmitState EmitState { virtual_sp_offset: 0, nominal_sp_to_fp: 0, stack_map: None, cur_srcloc: SourceLoc(4294967295) })
  Inst 46448:   call    *%rax
  Inst 46449:   jmp     label1029
Block 1029:
  (original IR block: block1)
  (instruction range: 46450 .. 46461)
  Inst 46450:   movq    rsp(1496 + virtual offset), %rax
  Inst 46451:   xorq    %rdx, %rdx
  Inst 46452:   movq    2112(%rsp), %r12
  Inst 46453:   movq    2120(%rsp), %r13
  Inst 46454:   movq    2128(%rsp), %r14
  Inst 46455:   movq    2136(%rsp), %rbx
  Inst 46456:   movq    2144(%rsp), %r15
  Inst 46457:   addq    $2160, %rsp
  Inst 46458:   movq    %rbp, %rsp
  Inst 46459:   popq    %rbp
  Inst 46460:   ret
}}
