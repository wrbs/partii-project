
<input>:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <big_makeblock>:
       0:	55                   	push   %rbp
       1:	48 89 e5             	mov    %rsp,%rbp
       4:	48 81 ec 60 08 00 00 	sub    $0x860,%rsp
       b:	4c 89 a4 24 30 08 00 	mov    %r12,0x830(%rsp)
      12:	00 
      13:	4c 89 ac 24 38 08 00 	mov    %r13,0x838(%rsp)
      1a:	00 
      1b:	4c 89 b4 24 40 08 00 	mov    %r14,0x840(%rsp)
      22:	00 
      23:	48 89 9c 24 48 08 00 	mov    %rbx,0x848(%rsp)
      2a:	00 
      2b:	4c 89 bc 24 50 08 00 	mov    %r15,0x850(%rsp)
      32:	00 
      33:	49 89 fd             	mov    %rdi,%r13
      36:	49 89 d4             	mov    %rdx,%r12
      39:	49 be 00 00 00 00 00 	movabs $0x0,%r14
      40:	00 00 00 
			3b: R_X86_64_64	caml_state_addr
      43:	48 83 c6 08          	add    $0x8,%rsi
      47:	bf 7d 02 00 00       	mov    $0x27d,%edi
      4c:	49 89 b6 98 00 00 00 	mov    %rsi,0x98(%r14)
      53:	48 be 00 00 00 00 00 	movabs $0x0,%rsi
      5a:	00 00 00 
			55: R_X86_64_64	oc_prim92
      5d:	48 89 3c 24          	mov    %rdi,(%rsp)
      61:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
      66:	ff d6                	call   *%rsi
      68:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
      6d:	49 8b b6 98 00 00 00 	mov    0x98(%r14),%rsi
      74:	bb 01 00 00 00       	mov    $0x1,%ebx
      79:	49 8b 7d 08          	mov    0x8(%r13),%rdi
      7d:	49 bf 00 00 00 00 00 	movabs $0x0,%r15
      84:	00 00 00 
			7f: R_X86_64_64	callback_return_addr
      87:	48 89 f1             	mov    %rsi,%rcx
      8a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
      8e:	48 89 5e e0          	mov    %rbx,-0x20(%rsi)
      92:	4c 89 7e e8          	mov    %r15,-0x18(%rsi)
      96:	b8 01 00 00 00       	mov    $0x1,%eax
      9b:	48 89 46 f0          	mov    %rax,-0x10(%rsi)
      9f:	b8 01 00 00 00       	mov    $0x1,%eax
      a4:	48 89 46 f8          	mov    %rax,-0x8(%rsi)
      a8:	48 31 f6             	xor    %rsi,%rsi
      ab:	4c 89 e2             	mov    %r12,%rdx
      ae:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
      b5:	00 00 00 
			b0: R_X86_64_64	do_callback
      b8:	48 89 1c 24          	mov    %rbx,(%rsp)
      bc:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
      c1:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
      c6:	ff d0                	call   *%rax
      c8:	48 8b 1c 24          	mov    (%rsp),%rbx
      cc:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
      d1:	48 89 c6             	mov    %rax,%rsi
      d4:	48 89 34 24          	mov    %rsi,(%rsp)
      d8:	49 8b 7d 08          	mov    0x8(%r13),%rdi
      dc:	48 89 d1             	mov    %rdx,%rcx
      df:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
      e3:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
      e7:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
      eb:	be 01 00 00 00       	mov    $0x1,%esi
      f0:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
      f4:	be 01 00 00 00       	mov    $0x1,%esi
      f9:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
      fd:	48 31 f6             	xor    %rsi,%rsi
     100:	4c 89 e2             	mov    %r12,%rdx
     103:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     10a:	00 00 00 
			105: R_X86_64_64	do_callback
     10d:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
     112:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
     117:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
     11c:	ff d0                	call   *%rax
     11e:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
     123:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
     128:	48 89 c6             	mov    %rax,%rsi
     12b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
     130:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     134:	48 89 d1             	mov    %rdx,%rcx
     137:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     13b:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     13f:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     143:	be 01 00 00 00       	mov    $0x1,%esi
     148:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     14c:	be 01 00 00 00       	mov    $0x1,%esi
     151:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     155:	48 31 f6             	xor    %rsi,%rsi
     158:	4c 89 e2             	mov    %r12,%rdx
     15b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     162:	00 00 00 
			15d: R_X86_64_64	do_callback
     165:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
     16a:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
     16f:	4c 89 6c 24 20       	mov    %r13,0x20(%rsp)
     174:	ff d0                	call   *%rax
     176:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
     17b:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
     180:	48 89 c6             	mov    %rax,%rsi
     183:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
     188:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     18c:	48 89 d1             	mov    %rdx,%rcx
     18f:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     193:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     197:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     19b:	be 01 00 00 00       	mov    $0x1,%esi
     1a0:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     1a4:	be 01 00 00 00       	mov    $0x1,%esi
     1a9:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     1ad:	48 31 f6             	xor    %rsi,%rsi
     1b0:	4c 89 e2             	mov    %r12,%rdx
     1b3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     1ba:	00 00 00 
			1b5: R_X86_64_64	do_callback
     1bd:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
     1c2:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
     1c7:	4c 89 6c 24 28       	mov    %r13,0x28(%rsp)
     1cc:	ff d0                	call   *%rax
     1ce:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
     1d3:	4c 8b 6c 24 28       	mov    0x28(%rsp),%r13
     1d8:	48 89 c6             	mov    %rax,%rsi
     1db:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
     1e0:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     1e4:	48 89 d1             	mov    %rdx,%rcx
     1e7:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     1eb:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     1ef:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     1f3:	be 01 00 00 00       	mov    $0x1,%esi
     1f8:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     1fc:	be 01 00 00 00       	mov    $0x1,%esi
     201:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     205:	48 31 f6             	xor    %rsi,%rsi
     208:	4c 89 e2             	mov    %r12,%rdx
     20b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     212:	00 00 00 
			20d: R_X86_64_64	do_callback
     215:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
     21a:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
     21f:	4c 89 6c 24 30       	mov    %r13,0x30(%rsp)
     224:	ff d0                	call   *%rax
     226:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
     22b:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
     230:	48 89 c6             	mov    %rax,%rsi
     233:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
     238:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     23c:	48 89 d1             	mov    %rdx,%rcx
     23f:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     243:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     247:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     24b:	be 01 00 00 00       	mov    $0x1,%esi
     250:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     254:	be 01 00 00 00       	mov    $0x1,%esi
     259:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     25d:	48 31 f6             	xor    %rsi,%rsi
     260:	4c 89 e2             	mov    %r12,%rdx
     263:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     26a:	00 00 00 
			265: R_X86_64_64	do_callback
     26d:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
     272:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
     277:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
     27c:	ff d0                	call   *%rax
     27e:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
     283:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
     288:	48 89 c6             	mov    %rax,%rsi
     28b:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
     290:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     294:	48 89 d1             	mov    %rdx,%rcx
     297:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     29b:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     29f:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     2a3:	be 01 00 00 00       	mov    $0x1,%esi
     2a8:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     2ac:	be 01 00 00 00       	mov    $0x1,%esi
     2b1:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     2b5:	48 31 f6             	xor    %rsi,%rsi
     2b8:	4c 89 e2             	mov    %r12,%rdx
     2bb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     2c2:	00 00 00 
			2bd: R_X86_64_64	do_callback
     2c5:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
     2ca:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
     2cf:	4c 89 6c 24 40       	mov    %r13,0x40(%rsp)
     2d4:	ff d0                	call   *%rax
     2d6:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
     2db:	4c 8b 6c 24 40       	mov    0x40(%rsp),%r13
     2e0:	48 89 c6             	mov    %rax,%rsi
     2e3:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
     2e8:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     2ec:	48 89 d1             	mov    %rdx,%rcx
     2ef:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     2f3:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     2f7:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     2fb:	be 01 00 00 00       	mov    $0x1,%esi
     300:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     304:	be 01 00 00 00       	mov    $0x1,%esi
     309:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     30d:	48 31 f6             	xor    %rsi,%rsi
     310:	4c 89 e2             	mov    %r12,%rdx
     313:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     31a:	00 00 00 
			315: R_X86_64_64	do_callback
     31d:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
     322:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
     327:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
     32c:	ff d0                	call   *%rax
     32e:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
     333:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
     338:	48 89 c6             	mov    %rax,%rsi
     33b:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
     340:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     344:	48 89 d1             	mov    %rdx,%rcx
     347:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     34b:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     34f:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     353:	be 01 00 00 00       	mov    $0x1,%esi
     358:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     35c:	be 01 00 00 00       	mov    $0x1,%esi
     361:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     365:	48 31 f6             	xor    %rsi,%rsi
     368:	4c 89 e2             	mov    %r12,%rdx
     36b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     372:	00 00 00 
			36d: R_X86_64_64	do_callback
     375:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
     37a:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
     37f:	4c 89 6c 24 50       	mov    %r13,0x50(%rsp)
     384:	ff d0                	call   *%rax
     386:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
     38b:	4c 8b 6c 24 50       	mov    0x50(%rsp),%r13
     390:	48 89 c6             	mov    %rax,%rsi
     393:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
     398:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     39c:	48 89 d1             	mov    %rdx,%rcx
     39f:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     3a3:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     3a7:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     3ab:	be 01 00 00 00       	mov    $0x1,%esi
     3b0:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     3b4:	be 01 00 00 00       	mov    $0x1,%esi
     3b9:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     3bd:	48 31 f6             	xor    %rsi,%rsi
     3c0:	4c 89 e2             	mov    %r12,%rdx
     3c3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     3ca:	00 00 00 
			3c5: R_X86_64_64	do_callback
     3cd:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
     3d2:	48 89 7c 24 50       	mov    %rdi,0x50(%rsp)
     3d7:	4c 89 6c 24 58       	mov    %r13,0x58(%rsp)
     3dc:	ff d0                	call   *%rax
     3de:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
     3e3:	4c 8b 6c 24 58       	mov    0x58(%rsp),%r13
     3e8:	48 89 c6             	mov    %rax,%rsi
     3eb:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
     3f0:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     3f4:	48 89 d1             	mov    %rdx,%rcx
     3f7:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     3fb:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     3ff:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     403:	be 01 00 00 00       	mov    $0x1,%esi
     408:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     40c:	be 01 00 00 00       	mov    $0x1,%esi
     411:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     415:	48 31 f6             	xor    %rsi,%rsi
     418:	4c 89 e2             	mov    %r12,%rdx
     41b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     422:	00 00 00 
			41d: R_X86_64_64	do_callback
     425:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
     42a:	48 89 7c 24 58       	mov    %rdi,0x58(%rsp)
     42f:	4c 89 6c 24 60       	mov    %r13,0x60(%rsp)
     434:	ff d0                	call   *%rax
     436:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
     43b:	4c 8b 6c 24 60       	mov    0x60(%rsp),%r13
     440:	48 89 c6             	mov    %rax,%rsi
     443:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
     448:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     44c:	48 89 d1             	mov    %rdx,%rcx
     44f:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     453:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     457:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     45b:	be 01 00 00 00       	mov    $0x1,%esi
     460:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     464:	be 01 00 00 00       	mov    $0x1,%esi
     469:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     46d:	48 31 f6             	xor    %rsi,%rsi
     470:	4c 89 e2             	mov    %r12,%rdx
     473:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     47a:	00 00 00 
			475: R_X86_64_64	do_callback
     47d:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
     482:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
     487:	4c 89 6c 24 68       	mov    %r13,0x68(%rsp)
     48c:	ff d0                	call   *%rax
     48e:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
     493:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
     498:	48 89 c6             	mov    %rax,%rsi
     49b:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
     4a0:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     4a4:	48 89 d1             	mov    %rdx,%rcx
     4a7:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     4ab:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     4af:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     4b3:	be 01 00 00 00       	mov    $0x1,%esi
     4b8:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     4bc:	be 01 00 00 00       	mov    $0x1,%esi
     4c1:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     4c5:	48 31 f6             	xor    %rsi,%rsi
     4c8:	4c 89 e2             	mov    %r12,%rdx
     4cb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     4d2:	00 00 00 
			4cd: R_X86_64_64	do_callback
     4d5:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
     4da:	48 89 7c 24 68       	mov    %rdi,0x68(%rsp)
     4df:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
     4e4:	ff d0                	call   *%rax
     4e6:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
     4eb:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
     4f0:	48 89 c6             	mov    %rax,%rsi
     4f3:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
     4f8:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     4fc:	48 89 d1             	mov    %rdx,%rcx
     4ff:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     503:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     507:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     50b:	be 01 00 00 00       	mov    $0x1,%esi
     510:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     514:	be 01 00 00 00       	mov    $0x1,%esi
     519:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     51d:	48 31 f6             	xor    %rsi,%rsi
     520:	4c 89 e2             	mov    %r12,%rdx
     523:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     52a:	00 00 00 
			525: R_X86_64_64	do_callback
     52d:	48 89 5c 24 68       	mov    %rbx,0x68(%rsp)
     532:	48 89 7c 24 70       	mov    %rdi,0x70(%rsp)
     537:	4c 89 6c 24 78       	mov    %r13,0x78(%rsp)
     53c:	ff d0                	call   *%rax
     53e:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
     543:	4c 8b 6c 24 78       	mov    0x78(%rsp),%r13
     548:	48 89 c6             	mov    %rax,%rsi
     54b:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
     550:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     554:	48 89 d1             	mov    %rdx,%rcx
     557:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     55b:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     55f:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     563:	be 01 00 00 00       	mov    $0x1,%esi
     568:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     56c:	be 01 00 00 00       	mov    $0x1,%esi
     571:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     575:	48 31 f6             	xor    %rsi,%rsi
     578:	4c 89 e2             	mov    %r12,%rdx
     57b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     582:	00 00 00 
			57d: R_X86_64_64	do_callback
     585:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
     58a:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
     58f:	4c 89 ac 24 80 00 00 	mov    %r13,0x80(%rsp)
     596:	00 
     597:	ff d0                	call   *%rax
     599:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
     59e:	4c 8b ac 24 80 00 00 	mov    0x80(%rsp),%r13
     5a5:	00 
     5a6:	48 89 c6             	mov    %rax,%rsi
     5a9:	48 89 74 24 70       	mov    %rsi,0x70(%rsp)
     5ae:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     5b2:	48 89 d1             	mov    %rdx,%rcx
     5b5:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     5b9:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     5bd:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     5c1:	be 01 00 00 00       	mov    $0x1,%esi
     5c6:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     5ca:	be 01 00 00 00       	mov    $0x1,%esi
     5cf:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     5d3:	48 31 f6             	xor    %rsi,%rsi
     5d6:	4c 89 e2             	mov    %r12,%rdx
     5d9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     5e0:	00 00 00 
			5db: R_X86_64_64	do_callback
     5e3:	48 89 5c 24 78       	mov    %rbx,0x78(%rsp)
     5e8:	48 89 bc 24 80 00 00 	mov    %rdi,0x80(%rsp)
     5ef:	00 
     5f0:	4c 89 ac 24 88 00 00 	mov    %r13,0x88(%rsp)
     5f7:	00 
     5f8:	ff d0                	call   *%rax
     5fa:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
     5ff:	4c 8b ac 24 88 00 00 	mov    0x88(%rsp),%r13
     606:	00 
     607:	48 89 c6             	mov    %rax,%rsi
     60a:	48 89 74 24 78       	mov    %rsi,0x78(%rsp)
     60f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     613:	48 89 d1             	mov    %rdx,%rcx
     616:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     61a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     61e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     622:	be 01 00 00 00       	mov    $0x1,%esi
     627:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     62b:	be 01 00 00 00       	mov    $0x1,%esi
     630:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     634:	48 31 f6             	xor    %rsi,%rsi
     637:	4c 89 e2             	mov    %r12,%rdx
     63a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     641:	00 00 00 
			63c: R_X86_64_64	do_callback
     644:	48 89 9c 24 80 00 00 	mov    %rbx,0x80(%rsp)
     64b:	00 
     64c:	48 89 bc 24 88 00 00 	mov    %rdi,0x88(%rsp)
     653:	00 
     654:	4c 89 ac 24 90 00 00 	mov    %r13,0x90(%rsp)
     65b:	00 
     65c:	ff d0                	call   *%rax
     65e:	48 8b 9c 24 80 00 00 	mov    0x80(%rsp),%rbx
     665:	00 
     666:	4c 8b ac 24 90 00 00 	mov    0x90(%rsp),%r13
     66d:	00 
     66e:	48 89 c6             	mov    %rax,%rsi
     671:	48 89 b4 24 80 00 00 	mov    %rsi,0x80(%rsp)
     678:	00 
     679:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     67d:	48 89 d1             	mov    %rdx,%rcx
     680:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     684:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     688:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     68c:	be 01 00 00 00       	mov    $0x1,%esi
     691:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     695:	be 01 00 00 00       	mov    $0x1,%esi
     69a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     69e:	48 31 f6             	xor    %rsi,%rsi
     6a1:	4c 89 e2             	mov    %r12,%rdx
     6a4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     6ab:	00 00 00 
			6a6: R_X86_64_64	do_callback
     6ae:	48 89 9c 24 88 00 00 	mov    %rbx,0x88(%rsp)
     6b5:	00 
     6b6:	48 89 bc 24 90 00 00 	mov    %rdi,0x90(%rsp)
     6bd:	00 
     6be:	4c 89 ac 24 98 00 00 	mov    %r13,0x98(%rsp)
     6c5:	00 
     6c6:	ff d0                	call   *%rax
     6c8:	48 8b 9c 24 88 00 00 	mov    0x88(%rsp),%rbx
     6cf:	00 
     6d0:	4c 8b ac 24 98 00 00 	mov    0x98(%rsp),%r13
     6d7:	00 
     6d8:	48 89 c6             	mov    %rax,%rsi
     6db:	48 89 b4 24 88 00 00 	mov    %rsi,0x88(%rsp)
     6e2:	00 
     6e3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     6e7:	48 89 d1             	mov    %rdx,%rcx
     6ea:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     6ee:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     6f2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     6f6:	be 01 00 00 00       	mov    $0x1,%esi
     6fb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     6ff:	be 01 00 00 00       	mov    $0x1,%esi
     704:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     708:	48 31 f6             	xor    %rsi,%rsi
     70b:	4c 89 e2             	mov    %r12,%rdx
     70e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     715:	00 00 00 
			710: R_X86_64_64	do_callback
     718:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
     71f:	00 
     720:	48 89 bc 24 98 00 00 	mov    %rdi,0x98(%rsp)
     727:	00 
     728:	4c 89 ac 24 a0 00 00 	mov    %r13,0xa0(%rsp)
     72f:	00 
     730:	ff d0                	call   *%rax
     732:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
     739:	00 
     73a:	4c 8b ac 24 a0 00 00 	mov    0xa0(%rsp),%r13
     741:	00 
     742:	48 89 c6             	mov    %rax,%rsi
     745:	48 89 b4 24 90 00 00 	mov    %rsi,0x90(%rsp)
     74c:	00 
     74d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     751:	48 89 d1             	mov    %rdx,%rcx
     754:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     758:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     75c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     760:	be 01 00 00 00       	mov    $0x1,%esi
     765:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     769:	be 01 00 00 00       	mov    $0x1,%esi
     76e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     772:	48 31 f6             	xor    %rsi,%rsi
     775:	4c 89 e2             	mov    %r12,%rdx
     778:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     77f:	00 00 00 
			77a: R_X86_64_64	do_callback
     782:	48 89 9c 24 98 00 00 	mov    %rbx,0x98(%rsp)
     789:	00 
     78a:	48 89 bc 24 a0 00 00 	mov    %rdi,0xa0(%rsp)
     791:	00 
     792:	4c 89 ac 24 a8 00 00 	mov    %r13,0xa8(%rsp)
     799:	00 
     79a:	ff d0                	call   *%rax
     79c:	48 8b 9c 24 98 00 00 	mov    0x98(%rsp),%rbx
     7a3:	00 
     7a4:	4c 8b ac 24 a8 00 00 	mov    0xa8(%rsp),%r13
     7ab:	00 
     7ac:	48 89 c6             	mov    %rax,%rsi
     7af:	48 89 b4 24 98 00 00 	mov    %rsi,0x98(%rsp)
     7b6:	00 
     7b7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     7bb:	48 89 d1             	mov    %rdx,%rcx
     7be:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     7c2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     7c6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     7ca:	be 01 00 00 00       	mov    $0x1,%esi
     7cf:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     7d3:	be 01 00 00 00       	mov    $0x1,%esi
     7d8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     7dc:	48 31 f6             	xor    %rsi,%rsi
     7df:	4c 89 e2             	mov    %r12,%rdx
     7e2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     7e9:	00 00 00 
			7e4: R_X86_64_64	do_callback
     7ec:	48 89 9c 24 a0 00 00 	mov    %rbx,0xa0(%rsp)
     7f3:	00 
     7f4:	48 89 bc 24 a8 00 00 	mov    %rdi,0xa8(%rsp)
     7fb:	00 
     7fc:	4c 89 ac 24 b0 00 00 	mov    %r13,0xb0(%rsp)
     803:	00 
     804:	ff d0                	call   *%rax
     806:	48 8b 9c 24 a0 00 00 	mov    0xa0(%rsp),%rbx
     80d:	00 
     80e:	4c 8b ac 24 b0 00 00 	mov    0xb0(%rsp),%r13
     815:	00 
     816:	48 89 c6             	mov    %rax,%rsi
     819:	48 89 b4 24 a0 00 00 	mov    %rsi,0xa0(%rsp)
     820:	00 
     821:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     825:	48 89 d1             	mov    %rdx,%rcx
     828:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     82c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     830:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     834:	be 01 00 00 00       	mov    $0x1,%esi
     839:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     83d:	be 01 00 00 00       	mov    $0x1,%esi
     842:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     846:	48 31 f6             	xor    %rsi,%rsi
     849:	4c 89 e2             	mov    %r12,%rdx
     84c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     853:	00 00 00 
			84e: R_X86_64_64	do_callback
     856:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
     85d:	00 
     85e:	48 89 bc 24 b0 00 00 	mov    %rdi,0xb0(%rsp)
     865:	00 
     866:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
     86d:	00 
     86e:	ff d0                	call   *%rax
     870:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
     877:	00 
     878:	4c 8b ac 24 b8 00 00 	mov    0xb8(%rsp),%r13
     87f:	00 
     880:	48 89 c6             	mov    %rax,%rsi
     883:	48 89 b4 24 a8 00 00 	mov    %rsi,0xa8(%rsp)
     88a:	00 
     88b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     88f:	48 89 d1             	mov    %rdx,%rcx
     892:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     896:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     89a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     89e:	be 01 00 00 00       	mov    $0x1,%esi
     8a3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     8a7:	be 01 00 00 00       	mov    $0x1,%esi
     8ac:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     8b0:	48 31 f6             	xor    %rsi,%rsi
     8b3:	4c 89 e2             	mov    %r12,%rdx
     8b6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     8bd:	00 00 00 
			8b8: R_X86_64_64	do_callback
     8c0:	48 89 9c 24 b0 00 00 	mov    %rbx,0xb0(%rsp)
     8c7:	00 
     8c8:	48 89 bc 24 b8 00 00 	mov    %rdi,0xb8(%rsp)
     8cf:	00 
     8d0:	4c 89 ac 24 c0 00 00 	mov    %r13,0xc0(%rsp)
     8d7:	00 
     8d8:	ff d0                	call   *%rax
     8da:	48 8b 9c 24 b0 00 00 	mov    0xb0(%rsp),%rbx
     8e1:	00 
     8e2:	4c 8b ac 24 c0 00 00 	mov    0xc0(%rsp),%r13
     8e9:	00 
     8ea:	48 89 c6             	mov    %rax,%rsi
     8ed:	48 89 b4 24 b0 00 00 	mov    %rsi,0xb0(%rsp)
     8f4:	00 
     8f5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     8f9:	48 89 d1             	mov    %rdx,%rcx
     8fc:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     900:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     904:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     908:	be 01 00 00 00       	mov    $0x1,%esi
     90d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     911:	be 01 00 00 00       	mov    $0x1,%esi
     916:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     91a:	48 31 f6             	xor    %rsi,%rsi
     91d:	4c 89 e2             	mov    %r12,%rdx
     920:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     927:	00 00 00 
			922: R_X86_64_64	do_callback
     92a:	48 89 9c 24 b8 00 00 	mov    %rbx,0xb8(%rsp)
     931:	00 
     932:	48 89 bc 24 c0 00 00 	mov    %rdi,0xc0(%rsp)
     939:	00 
     93a:	4c 89 ac 24 c8 00 00 	mov    %r13,0xc8(%rsp)
     941:	00 
     942:	ff d0                	call   *%rax
     944:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
     94b:	00 
     94c:	4c 8b ac 24 c8 00 00 	mov    0xc8(%rsp),%r13
     953:	00 
     954:	48 89 c6             	mov    %rax,%rsi
     957:	48 89 b4 24 b8 00 00 	mov    %rsi,0xb8(%rsp)
     95e:	00 
     95f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     963:	48 89 d1             	mov    %rdx,%rcx
     966:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     96a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     96e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     972:	be 01 00 00 00       	mov    $0x1,%esi
     977:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     97b:	be 01 00 00 00       	mov    $0x1,%esi
     980:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     984:	48 31 f6             	xor    %rsi,%rsi
     987:	4c 89 e2             	mov    %r12,%rdx
     98a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     991:	00 00 00 
			98c: R_X86_64_64	do_callback
     994:	48 89 9c 24 c0 00 00 	mov    %rbx,0xc0(%rsp)
     99b:	00 
     99c:	48 89 bc 24 c8 00 00 	mov    %rdi,0xc8(%rsp)
     9a3:	00 
     9a4:	4c 89 ac 24 d0 00 00 	mov    %r13,0xd0(%rsp)
     9ab:	00 
     9ac:	ff d0                	call   *%rax
     9ae:	48 8b 9c 24 c0 00 00 	mov    0xc0(%rsp),%rbx
     9b5:	00 
     9b6:	4c 8b ac 24 d0 00 00 	mov    0xd0(%rsp),%r13
     9bd:	00 
     9be:	48 89 c6             	mov    %rax,%rsi
     9c1:	48 89 b4 24 c0 00 00 	mov    %rsi,0xc0(%rsp)
     9c8:	00 
     9c9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     9cd:	48 89 d1             	mov    %rdx,%rcx
     9d0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     9d4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     9d8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     9dc:	be 01 00 00 00       	mov    $0x1,%esi
     9e1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     9e5:	be 01 00 00 00       	mov    $0x1,%esi
     9ea:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     9ee:	48 31 f6             	xor    %rsi,%rsi
     9f1:	4c 89 e2             	mov    %r12,%rdx
     9f4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     9fb:	00 00 00 
			9f6: R_X86_64_64	do_callback
     9fe:	48 89 9c 24 c8 00 00 	mov    %rbx,0xc8(%rsp)
     a05:	00 
     a06:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
     a0d:	00 
     a0e:	4c 89 ac 24 d8 00 00 	mov    %r13,0xd8(%rsp)
     a15:	00 
     a16:	ff d0                	call   *%rax
     a18:	48 8b 9c 24 c8 00 00 	mov    0xc8(%rsp),%rbx
     a1f:	00 
     a20:	4c 8b ac 24 d8 00 00 	mov    0xd8(%rsp),%r13
     a27:	00 
     a28:	48 89 c6             	mov    %rax,%rsi
     a2b:	48 89 b4 24 c8 00 00 	mov    %rsi,0xc8(%rsp)
     a32:	00 
     a33:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     a37:	48 89 d1             	mov    %rdx,%rcx
     a3a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     a3e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     a42:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     a46:	be 01 00 00 00       	mov    $0x1,%esi
     a4b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     a4f:	be 01 00 00 00       	mov    $0x1,%esi
     a54:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     a58:	48 31 f6             	xor    %rsi,%rsi
     a5b:	4c 89 e2             	mov    %r12,%rdx
     a5e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     a65:	00 00 00 
			a60: R_X86_64_64	do_callback
     a68:	48 89 9c 24 d0 00 00 	mov    %rbx,0xd0(%rsp)
     a6f:	00 
     a70:	48 89 bc 24 d8 00 00 	mov    %rdi,0xd8(%rsp)
     a77:	00 
     a78:	4c 89 ac 24 e0 00 00 	mov    %r13,0xe0(%rsp)
     a7f:	00 
     a80:	ff d0                	call   *%rax
     a82:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
     a89:	00 
     a8a:	4c 8b ac 24 e0 00 00 	mov    0xe0(%rsp),%r13
     a91:	00 
     a92:	48 89 c6             	mov    %rax,%rsi
     a95:	48 89 b4 24 d0 00 00 	mov    %rsi,0xd0(%rsp)
     a9c:	00 
     a9d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     aa1:	48 89 d1             	mov    %rdx,%rcx
     aa4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     aa8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     aac:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     ab0:	be 01 00 00 00       	mov    $0x1,%esi
     ab5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     ab9:	be 01 00 00 00       	mov    $0x1,%esi
     abe:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     ac2:	48 31 f6             	xor    %rsi,%rsi
     ac5:	4c 89 e2             	mov    %r12,%rdx
     ac8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     acf:	00 00 00 
			aca: R_X86_64_64	do_callback
     ad2:	48 89 9c 24 d8 00 00 	mov    %rbx,0xd8(%rsp)
     ad9:	00 
     ada:	48 89 bc 24 e0 00 00 	mov    %rdi,0xe0(%rsp)
     ae1:	00 
     ae2:	4c 89 ac 24 e8 00 00 	mov    %r13,0xe8(%rsp)
     ae9:	00 
     aea:	ff d0                	call   *%rax
     aec:	48 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%rbx
     af3:	00 
     af4:	4c 8b ac 24 e8 00 00 	mov    0xe8(%rsp),%r13
     afb:	00 
     afc:	48 89 c6             	mov    %rax,%rsi
     aff:	48 89 b4 24 d8 00 00 	mov    %rsi,0xd8(%rsp)
     b06:	00 
     b07:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     b0b:	48 89 d1             	mov    %rdx,%rcx
     b0e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     b12:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     b16:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     b1a:	be 01 00 00 00       	mov    $0x1,%esi
     b1f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     b23:	be 01 00 00 00       	mov    $0x1,%esi
     b28:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     b2c:	48 31 f6             	xor    %rsi,%rsi
     b2f:	4c 89 e2             	mov    %r12,%rdx
     b32:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     b39:	00 00 00 
			b34: R_X86_64_64	do_callback
     b3c:	48 89 9c 24 e0 00 00 	mov    %rbx,0xe0(%rsp)
     b43:	00 
     b44:	48 89 bc 24 e8 00 00 	mov    %rdi,0xe8(%rsp)
     b4b:	00 
     b4c:	4c 89 ac 24 f0 00 00 	mov    %r13,0xf0(%rsp)
     b53:	00 
     b54:	ff d0                	call   *%rax
     b56:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
     b5d:	00 
     b5e:	4c 8b ac 24 f0 00 00 	mov    0xf0(%rsp),%r13
     b65:	00 
     b66:	48 89 c6             	mov    %rax,%rsi
     b69:	48 89 b4 24 e0 00 00 	mov    %rsi,0xe0(%rsp)
     b70:	00 
     b71:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     b75:	48 89 d1             	mov    %rdx,%rcx
     b78:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     b7c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     b80:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     b84:	be 01 00 00 00       	mov    $0x1,%esi
     b89:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     b8d:	be 01 00 00 00       	mov    $0x1,%esi
     b92:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     b96:	48 31 f6             	xor    %rsi,%rsi
     b99:	4c 89 e2             	mov    %r12,%rdx
     b9c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     ba3:	00 00 00 
			b9e: R_X86_64_64	do_callback
     ba6:	48 89 9c 24 e8 00 00 	mov    %rbx,0xe8(%rsp)
     bad:	00 
     bae:	48 89 bc 24 f0 00 00 	mov    %rdi,0xf0(%rsp)
     bb5:	00 
     bb6:	4c 89 ac 24 f8 00 00 	mov    %r13,0xf8(%rsp)
     bbd:	00 
     bbe:	ff d0                	call   *%rax
     bc0:	48 8b 9c 24 e8 00 00 	mov    0xe8(%rsp),%rbx
     bc7:	00 
     bc8:	4c 8b ac 24 f8 00 00 	mov    0xf8(%rsp),%r13
     bcf:	00 
     bd0:	48 89 c6             	mov    %rax,%rsi
     bd3:	48 89 b4 24 e8 00 00 	mov    %rsi,0xe8(%rsp)
     bda:	00 
     bdb:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     bdf:	48 89 d1             	mov    %rdx,%rcx
     be2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     be6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     bea:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     bee:	be 01 00 00 00       	mov    $0x1,%esi
     bf3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     bf7:	be 01 00 00 00       	mov    $0x1,%esi
     bfc:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     c00:	48 31 f6             	xor    %rsi,%rsi
     c03:	4c 89 e2             	mov    %r12,%rdx
     c06:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     c0d:	00 00 00 
			c08: R_X86_64_64	do_callback
     c10:	48 89 9c 24 f0 00 00 	mov    %rbx,0xf0(%rsp)
     c17:	00 
     c18:	48 89 bc 24 f8 00 00 	mov    %rdi,0xf8(%rsp)
     c1f:	00 
     c20:	4c 89 ac 24 00 01 00 	mov    %r13,0x100(%rsp)
     c27:	00 
     c28:	ff d0                	call   *%rax
     c2a:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
     c31:	00 
     c32:	4c 8b ac 24 00 01 00 	mov    0x100(%rsp),%r13
     c39:	00 
     c3a:	48 89 c6             	mov    %rax,%rsi
     c3d:	48 89 b4 24 f0 00 00 	mov    %rsi,0xf0(%rsp)
     c44:	00 
     c45:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     c49:	48 89 d1             	mov    %rdx,%rcx
     c4c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     c50:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     c54:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     c58:	be 01 00 00 00       	mov    $0x1,%esi
     c5d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     c61:	be 01 00 00 00       	mov    $0x1,%esi
     c66:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     c6a:	48 31 f6             	xor    %rsi,%rsi
     c6d:	4c 89 e2             	mov    %r12,%rdx
     c70:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     c77:	00 00 00 
			c72: R_X86_64_64	do_callback
     c7a:	48 89 9c 24 f8 00 00 	mov    %rbx,0xf8(%rsp)
     c81:	00 
     c82:	48 89 bc 24 00 01 00 	mov    %rdi,0x100(%rsp)
     c89:	00 
     c8a:	4c 89 ac 24 08 01 00 	mov    %r13,0x108(%rsp)
     c91:	00 
     c92:	ff d0                	call   *%rax
     c94:	48 8b 9c 24 f8 00 00 	mov    0xf8(%rsp),%rbx
     c9b:	00 
     c9c:	4c 8b ac 24 08 01 00 	mov    0x108(%rsp),%r13
     ca3:	00 
     ca4:	48 89 c6             	mov    %rax,%rsi
     ca7:	48 89 b4 24 f8 00 00 	mov    %rsi,0xf8(%rsp)
     cae:	00 
     caf:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     cb3:	48 89 d1             	mov    %rdx,%rcx
     cb6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     cba:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     cbe:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     cc2:	be 01 00 00 00       	mov    $0x1,%esi
     cc7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     ccb:	be 01 00 00 00       	mov    $0x1,%esi
     cd0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     cd4:	48 31 f6             	xor    %rsi,%rsi
     cd7:	4c 89 e2             	mov    %r12,%rdx
     cda:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     ce1:	00 00 00 
			cdc: R_X86_64_64	do_callback
     ce4:	48 89 9c 24 00 01 00 	mov    %rbx,0x100(%rsp)
     ceb:	00 
     cec:	48 89 bc 24 08 01 00 	mov    %rdi,0x108(%rsp)
     cf3:	00 
     cf4:	4c 89 ac 24 10 01 00 	mov    %r13,0x110(%rsp)
     cfb:	00 
     cfc:	ff d0                	call   *%rax
     cfe:	48 8b 9c 24 00 01 00 	mov    0x100(%rsp),%rbx
     d05:	00 
     d06:	4c 8b ac 24 10 01 00 	mov    0x110(%rsp),%r13
     d0d:	00 
     d0e:	48 89 c6             	mov    %rax,%rsi
     d11:	48 89 b4 24 00 01 00 	mov    %rsi,0x100(%rsp)
     d18:	00 
     d19:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     d1d:	48 89 d1             	mov    %rdx,%rcx
     d20:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     d24:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     d28:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     d2c:	be 01 00 00 00       	mov    $0x1,%esi
     d31:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     d35:	be 01 00 00 00       	mov    $0x1,%esi
     d3a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     d3e:	48 31 f6             	xor    %rsi,%rsi
     d41:	4c 89 e2             	mov    %r12,%rdx
     d44:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     d4b:	00 00 00 
			d46: R_X86_64_64	do_callback
     d4e:	48 89 9c 24 08 01 00 	mov    %rbx,0x108(%rsp)
     d55:	00 
     d56:	48 89 bc 24 10 01 00 	mov    %rdi,0x110(%rsp)
     d5d:	00 
     d5e:	4c 89 ac 24 18 01 00 	mov    %r13,0x118(%rsp)
     d65:	00 
     d66:	ff d0                	call   *%rax
     d68:	48 8b 9c 24 08 01 00 	mov    0x108(%rsp),%rbx
     d6f:	00 
     d70:	4c 8b ac 24 18 01 00 	mov    0x118(%rsp),%r13
     d77:	00 
     d78:	48 89 c6             	mov    %rax,%rsi
     d7b:	48 89 b4 24 08 01 00 	mov    %rsi,0x108(%rsp)
     d82:	00 
     d83:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     d87:	48 89 d1             	mov    %rdx,%rcx
     d8a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     d8e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     d92:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     d96:	be 01 00 00 00       	mov    $0x1,%esi
     d9b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     d9f:	be 01 00 00 00       	mov    $0x1,%esi
     da4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     da8:	48 31 f6             	xor    %rsi,%rsi
     dab:	4c 89 e2             	mov    %r12,%rdx
     dae:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     db5:	00 00 00 
			db0: R_X86_64_64	do_callback
     db8:	48 89 9c 24 10 01 00 	mov    %rbx,0x110(%rsp)
     dbf:	00 
     dc0:	48 89 bc 24 18 01 00 	mov    %rdi,0x118(%rsp)
     dc7:	00 
     dc8:	4c 89 ac 24 20 01 00 	mov    %r13,0x120(%rsp)
     dcf:	00 
     dd0:	ff d0                	call   *%rax
     dd2:	48 8b 9c 24 10 01 00 	mov    0x110(%rsp),%rbx
     dd9:	00 
     dda:	4c 8b ac 24 20 01 00 	mov    0x120(%rsp),%r13
     de1:	00 
     de2:	48 89 c6             	mov    %rax,%rsi
     de5:	48 89 b4 24 10 01 00 	mov    %rsi,0x110(%rsp)
     dec:	00 
     ded:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     df1:	48 89 d1             	mov    %rdx,%rcx
     df4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     df8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     dfc:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     e00:	be 01 00 00 00       	mov    $0x1,%esi
     e05:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     e09:	be 01 00 00 00       	mov    $0x1,%esi
     e0e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     e12:	48 31 f6             	xor    %rsi,%rsi
     e15:	4c 89 e2             	mov    %r12,%rdx
     e18:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     e1f:	00 00 00 
			e1a: R_X86_64_64	do_callback
     e22:	48 89 9c 24 18 01 00 	mov    %rbx,0x118(%rsp)
     e29:	00 
     e2a:	48 89 bc 24 20 01 00 	mov    %rdi,0x120(%rsp)
     e31:	00 
     e32:	4c 89 ac 24 28 01 00 	mov    %r13,0x128(%rsp)
     e39:	00 
     e3a:	ff d0                	call   *%rax
     e3c:	48 8b 9c 24 18 01 00 	mov    0x118(%rsp),%rbx
     e43:	00 
     e44:	4c 8b ac 24 28 01 00 	mov    0x128(%rsp),%r13
     e4b:	00 
     e4c:	48 89 c6             	mov    %rax,%rsi
     e4f:	48 89 b4 24 18 01 00 	mov    %rsi,0x118(%rsp)
     e56:	00 
     e57:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     e5b:	48 89 d1             	mov    %rdx,%rcx
     e5e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     e62:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     e66:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     e6a:	be 01 00 00 00       	mov    $0x1,%esi
     e6f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     e73:	be 01 00 00 00       	mov    $0x1,%esi
     e78:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     e7c:	48 31 f6             	xor    %rsi,%rsi
     e7f:	4c 89 e2             	mov    %r12,%rdx
     e82:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     e89:	00 00 00 
			e84: R_X86_64_64	do_callback
     e8c:	48 89 9c 24 20 01 00 	mov    %rbx,0x120(%rsp)
     e93:	00 
     e94:	48 89 bc 24 28 01 00 	mov    %rdi,0x128(%rsp)
     e9b:	00 
     e9c:	4c 89 ac 24 30 01 00 	mov    %r13,0x130(%rsp)
     ea3:	00 
     ea4:	ff d0                	call   *%rax
     ea6:	48 8b 9c 24 20 01 00 	mov    0x120(%rsp),%rbx
     ead:	00 
     eae:	4c 8b ac 24 30 01 00 	mov    0x130(%rsp),%r13
     eb5:	00 
     eb6:	48 89 c6             	mov    %rax,%rsi
     eb9:	48 89 b4 24 20 01 00 	mov    %rsi,0x120(%rsp)
     ec0:	00 
     ec1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     ec5:	48 89 d1             	mov    %rdx,%rcx
     ec8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     ecc:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     ed0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     ed4:	be 01 00 00 00       	mov    $0x1,%esi
     ed9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     edd:	be 01 00 00 00       	mov    $0x1,%esi
     ee2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     ee6:	48 31 f6             	xor    %rsi,%rsi
     ee9:	4c 89 e2             	mov    %r12,%rdx
     eec:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     ef3:	00 00 00 
			eee: R_X86_64_64	do_callback
     ef6:	48 89 9c 24 28 01 00 	mov    %rbx,0x128(%rsp)
     efd:	00 
     efe:	48 89 bc 24 30 01 00 	mov    %rdi,0x130(%rsp)
     f05:	00 
     f06:	4c 89 ac 24 38 01 00 	mov    %r13,0x138(%rsp)
     f0d:	00 
     f0e:	ff d0                	call   *%rax
     f10:	48 8b 9c 24 28 01 00 	mov    0x128(%rsp),%rbx
     f17:	00 
     f18:	4c 8b ac 24 38 01 00 	mov    0x138(%rsp),%r13
     f1f:	00 
     f20:	48 89 c6             	mov    %rax,%rsi
     f23:	48 89 b4 24 28 01 00 	mov    %rsi,0x128(%rsp)
     f2a:	00 
     f2b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     f2f:	48 89 d1             	mov    %rdx,%rcx
     f32:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     f36:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     f3a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     f3e:	be 01 00 00 00       	mov    $0x1,%esi
     f43:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     f47:	be 01 00 00 00       	mov    $0x1,%esi
     f4c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     f50:	48 31 f6             	xor    %rsi,%rsi
     f53:	4c 89 e2             	mov    %r12,%rdx
     f56:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     f5d:	00 00 00 
			f58: R_X86_64_64	do_callback
     f60:	48 89 9c 24 30 01 00 	mov    %rbx,0x130(%rsp)
     f67:	00 
     f68:	48 89 bc 24 38 01 00 	mov    %rdi,0x138(%rsp)
     f6f:	00 
     f70:	4c 89 ac 24 40 01 00 	mov    %r13,0x140(%rsp)
     f77:	00 
     f78:	ff d0                	call   *%rax
     f7a:	48 8b 9c 24 30 01 00 	mov    0x130(%rsp),%rbx
     f81:	00 
     f82:	4c 8b ac 24 40 01 00 	mov    0x140(%rsp),%r13
     f89:	00 
     f8a:	48 89 c6             	mov    %rax,%rsi
     f8d:	48 89 b4 24 30 01 00 	mov    %rsi,0x130(%rsp)
     f94:	00 
     f95:	49 8b 7d 08          	mov    0x8(%r13),%rdi
     f99:	48 89 d1             	mov    %rdx,%rcx
     f9c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
     fa0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
     fa4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
     fa8:	be 01 00 00 00       	mov    $0x1,%esi
     fad:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
     fb1:	be 01 00 00 00       	mov    $0x1,%esi
     fb6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
     fba:	48 31 f6             	xor    %rsi,%rsi
     fbd:	4c 89 e2             	mov    %r12,%rdx
     fc0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
     fc7:	00 00 00 
			fc2: R_X86_64_64	do_callback
     fca:	48 89 9c 24 38 01 00 	mov    %rbx,0x138(%rsp)
     fd1:	00 
     fd2:	48 89 bc 24 40 01 00 	mov    %rdi,0x140(%rsp)
     fd9:	00 
     fda:	4c 89 ac 24 48 01 00 	mov    %r13,0x148(%rsp)
     fe1:	00 
     fe2:	ff d0                	call   *%rax
     fe4:	48 8b 9c 24 38 01 00 	mov    0x138(%rsp),%rbx
     feb:	00 
     fec:	4c 8b ac 24 48 01 00 	mov    0x148(%rsp),%r13
     ff3:	00 
     ff4:	48 89 c6             	mov    %rax,%rsi
     ff7:	48 89 b4 24 38 01 00 	mov    %rsi,0x138(%rsp)
     ffe:	00 
     fff:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1003:	48 89 d1             	mov    %rdx,%rcx
    1006:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    100a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    100e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1012:	be 01 00 00 00       	mov    $0x1,%esi
    1017:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    101b:	be 01 00 00 00       	mov    $0x1,%esi
    1020:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1024:	48 31 f6             	xor    %rsi,%rsi
    1027:	4c 89 e2             	mov    %r12,%rdx
    102a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1031:	00 00 00 
			102c: R_X86_64_64	do_callback
    1034:	48 89 9c 24 40 01 00 	mov    %rbx,0x140(%rsp)
    103b:	00 
    103c:	48 89 bc 24 48 01 00 	mov    %rdi,0x148(%rsp)
    1043:	00 
    1044:	4c 89 ac 24 50 01 00 	mov    %r13,0x150(%rsp)
    104b:	00 
    104c:	ff d0                	call   *%rax
    104e:	48 8b 9c 24 40 01 00 	mov    0x140(%rsp),%rbx
    1055:	00 
    1056:	4c 8b ac 24 50 01 00 	mov    0x150(%rsp),%r13
    105d:	00 
    105e:	48 89 c6             	mov    %rax,%rsi
    1061:	48 89 b4 24 40 01 00 	mov    %rsi,0x140(%rsp)
    1068:	00 
    1069:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    106d:	48 89 d1             	mov    %rdx,%rcx
    1070:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1074:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1078:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    107c:	be 01 00 00 00       	mov    $0x1,%esi
    1081:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1085:	be 01 00 00 00       	mov    $0x1,%esi
    108a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    108e:	48 31 f6             	xor    %rsi,%rsi
    1091:	4c 89 e2             	mov    %r12,%rdx
    1094:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    109b:	00 00 00 
			1096: R_X86_64_64	do_callback
    109e:	48 89 9c 24 48 01 00 	mov    %rbx,0x148(%rsp)
    10a5:	00 
    10a6:	48 89 bc 24 50 01 00 	mov    %rdi,0x150(%rsp)
    10ad:	00 
    10ae:	4c 89 ac 24 58 01 00 	mov    %r13,0x158(%rsp)
    10b5:	00 
    10b6:	ff d0                	call   *%rax
    10b8:	48 8b 9c 24 48 01 00 	mov    0x148(%rsp),%rbx
    10bf:	00 
    10c0:	4c 8b ac 24 58 01 00 	mov    0x158(%rsp),%r13
    10c7:	00 
    10c8:	48 89 c6             	mov    %rax,%rsi
    10cb:	48 89 b4 24 48 01 00 	mov    %rsi,0x148(%rsp)
    10d2:	00 
    10d3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    10d7:	48 89 d1             	mov    %rdx,%rcx
    10da:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    10de:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    10e2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    10e6:	be 01 00 00 00       	mov    $0x1,%esi
    10eb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    10ef:	be 01 00 00 00       	mov    $0x1,%esi
    10f4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    10f8:	48 31 f6             	xor    %rsi,%rsi
    10fb:	4c 89 e2             	mov    %r12,%rdx
    10fe:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1105:	00 00 00 
			1100: R_X86_64_64	do_callback
    1108:	48 89 9c 24 50 01 00 	mov    %rbx,0x150(%rsp)
    110f:	00 
    1110:	48 89 bc 24 58 01 00 	mov    %rdi,0x158(%rsp)
    1117:	00 
    1118:	4c 89 ac 24 60 01 00 	mov    %r13,0x160(%rsp)
    111f:	00 
    1120:	ff d0                	call   *%rax
    1122:	48 8b 9c 24 50 01 00 	mov    0x150(%rsp),%rbx
    1129:	00 
    112a:	4c 8b ac 24 60 01 00 	mov    0x160(%rsp),%r13
    1131:	00 
    1132:	48 89 c6             	mov    %rax,%rsi
    1135:	48 89 b4 24 50 01 00 	mov    %rsi,0x150(%rsp)
    113c:	00 
    113d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1141:	48 89 d1             	mov    %rdx,%rcx
    1144:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1148:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    114c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1150:	be 01 00 00 00       	mov    $0x1,%esi
    1155:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1159:	be 01 00 00 00       	mov    $0x1,%esi
    115e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1162:	48 31 f6             	xor    %rsi,%rsi
    1165:	4c 89 e2             	mov    %r12,%rdx
    1168:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    116f:	00 00 00 
			116a: R_X86_64_64	do_callback
    1172:	48 89 9c 24 58 01 00 	mov    %rbx,0x158(%rsp)
    1179:	00 
    117a:	48 89 bc 24 60 01 00 	mov    %rdi,0x160(%rsp)
    1181:	00 
    1182:	4c 89 ac 24 68 01 00 	mov    %r13,0x168(%rsp)
    1189:	00 
    118a:	ff d0                	call   *%rax
    118c:	48 8b 9c 24 58 01 00 	mov    0x158(%rsp),%rbx
    1193:	00 
    1194:	4c 8b ac 24 68 01 00 	mov    0x168(%rsp),%r13
    119b:	00 
    119c:	48 89 c6             	mov    %rax,%rsi
    119f:	48 89 b4 24 58 01 00 	mov    %rsi,0x158(%rsp)
    11a6:	00 
    11a7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    11ab:	48 89 d1             	mov    %rdx,%rcx
    11ae:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    11b2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    11b6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    11ba:	be 01 00 00 00       	mov    $0x1,%esi
    11bf:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    11c3:	be 01 00 00 00       	mov    $0x1,%esi
    11c8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    11cc:	48 31 f6             	xor    %rsi,%rsi
    11cf:	4c 89 e2             	mov    %r12,%rdx
    11d2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    11d9:	00 00 00 
			11d4: R_X86_64_64	do_callback
    11dc:	48 89 9c 24 60 01 00 	mov    %rbx,0x160(%rsp)
    11e3:	00 
    11e4:	48 89 bc 24 68 01 00 	mov    %rdi,0x168(%rsp)
    11eb:	00 
    11ec:	4c 89 ac 24 70 01 00 	mov    %r13,0x170(%rsp)
    11f3:	00 
    11f4:	ff d0                	call   *%rax
    11f6:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    11fd:	00 
    11fe:	4c 8b ac 24 70 01 00 	mov    0x170(%rsp),%r13
    1205:	00 
    1206:	48 89 c6             	mov    %rax,%rsi
    1209:	48 89 b4 24 60 01 00 	mov    %rsi,0x160(%rsp)
    1210:	00 
    1211:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1215:	48 89 d1             	mov    %rdx,%rcx
    1218:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    121c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1220:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1224:	be 01 00 00 00       	mov    $0x1,%esi
    1229:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    122d:	be 01 00 00 00       	mov    $0x1,%esi
    1232:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1236:	48 31 f6             	xor    %rsi,%rsi
    1239:	4c 89 e2             	mov    %r12,%rdx
    123c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1243:	00 00 00 
			123e: R_X86_64_64	do_callback
    1246:	48 89 9c 24 68 01 00 	mov    %rbx,0x168(%rsp)
    124d:	00 
    124e:	48 89 bc 24 70 01 00 	mov    %rdi,0x170(%rsp)
    1255:	00 
    1256:	4c 89 ac 24 78 01 00 	mov    %r13,0x178(%rsp)
    125d:	00 
    125e:	ff d0                	call   *%rax
    1260:	48 8b 9c 24 68 01 00 	mov    0x168(%rsp),%rbx
    1267:	00 
    1268:	4c 8b ac 24 78 01 00 	mov    0x178(%rsp),%r13
    126f:	00 
    1270:	48 89 c6             	mov    %rax,%rsi
    1273:	48 89 b4 24 68 01 00 	mov    %rsi,0x168(%rsp)
    127a:	00 
    127b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    127f:	48 89 d1             	mov    %rdx,%rcx
    1282:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1286:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    128a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    128e:	be 01 00 00 00       	mov    $0x1,%esi
    1293:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1297:	be 01 00 00 00       	mov    $0x1,%esi
    129c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    12a0:	48 31 f6             	xor    %rsi,%rsi
    12a3:	4c 89 e2             	mov    %r12,%rdx
    12a6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    12ad:	00 00 00 
			12a8: R_X86_64_64	do_callback
    12b0:	48 89 9c 24 70 01 00 	mov    %rbx,0x170(%rsp)
    12b7:	00 
    12b8:	48 89 bc 24 78 01 00 	mov    %rdi,0x178(%rsp)
    12bf:	00 
    12c0:	4c 89 ac 24 80 01 00 	mov    %r13,0x180(%rsp)
    12c7:	00 
    12c8:	ff d0                	call   *%rax
    12ca:	48 8b 9c 24 70 01 00 	mov    0x170(%rsp),%rbx
    12d1:	00 
    12d2:	4c 8b ac 24 80 01 00 	mov    0x180(%rsp),%r13
    12d9:	00 
    12da:	48 89 c6             	mov    %rax,%rsi
    12dd:	48 89 b4 24 70 01 00 	mov    %rsi,0x170(%rsp)
    12e4:	00 
    12e5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    12e9:	48 89 d1             	mov    %rdx,%rcx
    12ec:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    12f0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    12f4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    12f8:	be 01 00 00 00       	mov    $0x1,%esi
    12fd:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1301:	be 01 00 00 00       	mov    $0x1,%esi
    1306:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    130a:	48 31 f6             	xor    %rsi,%rsi
    130d:	4c 89 e2             	mov    %r12,%rdx
    1310:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1317:	00 00 00 
			1312: R_X86_64_64	do_callback
    131a:	48 89 9c 24 78 01 00 	mov    %rbx,0x178(%rsp)
    1321:	00 
    1322:	48 89 bc 24 80 01 00 	mov    %rdi,0x180(%rsp)
    1329:	00 
    132a:	4c 89 ac 24 88 01 00 	mov    %r13,0x188(%rsp)
    1331:	00 
    1332:	ff d0                	call   *%rax
    1334:	48 8b 9c 24 78 01 00 	mov    0x178(%rsp),%rbx
    133b:	00 
    133c:	4c 8b ac 24 88 01 00 	mov    0x188(%rsp),%r13
    1343:	00 
    1344:	48 89 c6             	mov    %rax,%rsi
    1347:	48 89 b4 24 78 01 00 	mov    %rsi,0x178(%rsp)
    134e:	00 
    134f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1353:	48 89 d1             	mov    %rdx,%rcx
    1356:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    135a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    135e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1362:	be 01 00 00 00       	mov    $0x1,%esi
    1367:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    136b:	be 01 00 00 00       	mov    $0x1,%esi
    1370:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1374:	48 31 f6             	xor    %rsi,%rsi
    1377:	4c 89 e2             	mov    %r12,%rdx
    137a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1381:	00 00 00 
			137c: R_X86_64_64	do_callback
    1384:	48 89 9c 24 80 01 00 	mov    %rbx,0x180(%rsp)
    138b:	00 
    138c:	48 89 bc 24 88 01 00 	mov    %rdi,0x188(%rsp)
    1393:	00 
    1394:	4c 89 ac 24 90 01 00 	mov    %r13,0x190(%rsp)
    139b:	00 
    139c:	ff d0                	call   *%rax
    139e:	48 8b 9c 24 80 01 00 	mov    0x180(%rsp),%rbx
    13a5:	00 
    13a6:	4c 8b ac 24 90 01 00 	mov    0x190(%rsp),%r13
    13ad:	00 
    13ae:	48 89 c6             	mov    %rax,%rsi
    13b1:	48 89 b4 24 80 01 00 	mov    %rsi,0x180(%rsp)
    13b8:	00 
    13b9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    13bd:	48 89 d1             	mov    %rdx,%rcx
    13c0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    13c4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    13c8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    13cc:	be 01 00 00 00       	mov    $0x1,%esi
    13d1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    13d5:	be 01 00 00 00       	mov    $0x1,%esi
    13da:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    13de:	48 31 f6             	xor    %rsi,%rsi
    13e1:	4c 89 e2             	mov    %r12,%rdx
    13e4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    13eb:	00 00 00 
			13e6: R_X86_64_64	do_callback
    13ee:	48 89 9c 24 88 01 00 	mov    %rbx,0x188(%rsp)
    13f5:	00 
    13f6:	48 89 bc 24 90 01 00 	mov    %rdi,0x190(%rsp)
    13fd:	00 
    13fe:	4c 89 ac 24 98 01 00 	mov    %r13,0x198(%rsp)
    1405:	00 
    1406:	ff d0                	call   *%rax
    1408:	48 8b 9c 24 88 01 00 	mov    0x188(%rsp),%rbx
    140f:	00 
    1410:	4c 8b ac 24 98 01 00 	mov    0x198(%rsp),%r13
    1417:	00 
    1418:	48 89 c6             	mov    %rax,%rsi
    141b:	48 89 b4 24 88 01 00 	mov    %rsi,0x188(%rsp)
    1422:	00 
    1423:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1427:	48 89 d1             	mov    %rdx,%rcx
    142a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    142e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1432:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1436:	be 01 00 00 00       	mov    $0x1,%esi
    143b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    143f:	be 01 00 00 00       	mov    $0x1,%esi
    1444:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1448:	48 31 f6             	xor    %rsi,%rsi
    144b:	4c 89 e2             	mov    %r12,%rdx
    144e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1455:	00 00 00 
			1450: R_X86_64_64	do_callback
    1458:	48 89 9c 24 90 01 00 	mov    %rbx,0x190(%rsp)
    145f:	00 
    1460:	48 89 bc 24 98 01 00 	mov    %rdi,0x198(%rsp)
    1467:	00 
    1468:	4c 89 ac 24 a0 01 00 	mov    %r13,0x1a0(%rsp)
    146f:	00 
    1470:	ff d0                	call   *%rax
    1472:	48 8b 9c 24 90 01 00 	mov    0x190(%rsp),%rbx
    1479:	00 
    147a:	4c 8b ac 24 a0 01 00 	mov    0x1a0(%rsp),%r13
    1481:	00 
    1482:	48 89 c6             	mov    %rax,%rsi
    1485:	48 89 b4 24 90 01 00 	mov    %rsi,0x190(%rsp)
    148c:	00 
    148d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1491:	48 89 d1             	mov    %rdx,%rcx
    1494:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1498:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    149c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    14a0:	be 01 00 00 00       	mov    $0x1,%esi
    14a5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    14a9:	be 01 00 00 00       	mov    $0x1,%esi
    14ae:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    14b2:	48 31 f6             	xor    %rsi,%rsi
    14b5:	4c 89 e2             	mov    %r12,%rdx
    14b8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    14bf:	00 00 00 
			14ba: R_X86_64_64	do_callback
    14c2:	48 89 9c 24 98 01 00 	mov    %rbx,0x198(%rsp)
    14c9:	00 
    14ca:	48 89 bc 24 a0 01 00 	mov    %rdi,0x1a0(%rsp)
    14d1:	00 
    14d2:	4c 89 ac 24 a8 01 00 	mov    %r13,0x1a8(%rsp)
    14d9:	00 
    14da:	ff d0                	call   *%rax
    14dc:	48 8b 9c 24 98 01 00 	mov    0x198(%rsp),%rbx
    14e3:	00 
    14e4:	4c 8b ac 24 a8 01 00 	mov    0x1a8(%rsp),%r13
    14eb:	00 
    14ec:	48 89 c6             	mov    %rax,%rsi
    14ef:	48 89 b4 24 98 01 00 	mov    %rsi,0x198(%rsp)
    14f6:	00 
    14f7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    14fb:	48 89 d1             	mov    %rdx,%rcx
    14fe:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1502:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1506:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    150a:	be 01 00 00 00       	mov    $0x1,%esi
    150f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1513:	be 01 00 00 00       	mov    $0x1,%esi
    1518:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    151c:	48 31 f6             	xor    %rsi,%rsi
    151f:	4c 89 e2             	mov    %r12,%rdx
    1522:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1529:	00 00 00 
			1524: R_X86_64_64	do_callback
    152c:	48 89 9c 24 a0 01 00 	mov    %rbx,0x1a0(%rsp)
    1533:	00 
    1534:	48 89 bc 24 a8 01 00 	mov    %rdi,0x1a8(%rsp)
    153b:	00 
    153c:	4c 89 ac 24 b0 01 00 	mov    %r13,0x1b0(%rsp)
    1543:	00 
    1544:	ff d0                	call   *%rax
    1546:	48 8b 9c 24 a0 01 00 	mov    0x1a0(%rsp),%rbx
    154d:	00 
    154e:	4c 8b ac 24 b0 01 00 	mov    0x1b0(%rsp),%r13
    1555:	00 
    1556:	48 89 c6             	mov    %rax,%rsi
    1559:	48 89 b4 24 a0 01 00 	mov    %rsi,0x1a0(%rsp)
    1560:	00 
    1561:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1565:	48 89 d1             	mov    %rdx,%rcx
    1568:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    156c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1570:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1574:	be 01 00 00 00       	mov    $0x1,%esi
    1579:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    157d:	be 01 00 00 00       	mov    $0x1,%esi
    1582:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1586:	48 31 f6             	xor    %rsi,%rsi
    1589:	4c 89 e2             	mov    %r12,%rdx
    158c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1593:	00 00 00 
			158e: R_X86_64_64	do_callback
    1596:	48 89 9c 24 a8 01 00 	mov    %rbx,0x1a8(%rsp)
    159d:	00 
    159e:	48 89 bc 24 b0 01 00 	mov    %rdi,0x1b0(%rsp)
    15a5:	00 
    15a6:	4c 89 ac 24 b8 01 00 	mov    %r13,0x1b8(%rsp)
    15ad:	00 
    15ae:	ff d0                	call   *%rax
    15b0:	48 8b 9c 24 a8 01 00 	mov    0x1a8(%rsp),%rbx
    15b7:	00 
    15b8:	4c 8b ac 24 b8 01 00 	mov    0x1b8(%rsp),%r13
    15bf:	00 
    15c0:	48 89 c6             	mov    %rax,%rsi
    15c3:	48 89 b4 24 a8 01 00 	mov    %rsi,0x1a8(%rsp)
    15ca:	00 
    15cb:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    15cf:	48 89 d1             	mov    %rdx,%rcx
    15d2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    15d6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    15da:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    15de:	be 01 00 00 00       	mov    $0x1,%esi
    15e3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    15e7:	be 01 00 00 00       	mov    $0x1,%esi
    15ec:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    15f0:	48 31 f6             	xor    %rsi,%rsi
    15f3:	4c 89 e2             	mov    %r12,%rdx
    15f6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    15fd:	00 00 00 
			15f8: R_X86_64_64	do_callback
    1600:	48 89 9c 24 b0 01 00 	mov    %rbx,0x1b0(%rsp)
    1607:	00 
    1608:	48 89 bc 24 b8 01 00 	mov    %rdi,0x1b8(%rsp)
    160f:	00 
    1610:	4c 89 ac 24 c0 01 00 	mov    %r13,0x1c0(%rsp)
    1617:	00 
    1618:	ff d0                	call   *%rax
    161a:	48 8b 9c 24 b0 01 00 	mov    0x1b0(%rsp),%rbx
    1621:	00 
    1622:	4c 8b ac 24 c0 01 00 	mov    0x1c0(%rsp),%r13
    1629:	00 
    162a:	48 89 c6             	mov    %rax,%rsi
    162d:	48 89 b4 24 b0 01 00 	mov    %rsi,0x1b0(%rsp)
    1634:	00 
    1635:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1639:	48 89 d1             	mov    %rdx,%rcx
    163c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1640:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1644:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1648:	be 01 00 00 00       	mov    $0x1,%esi
    164d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1651:	be 01 00 00 00       	mov    $0x1,%esi
    1656:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    165a:	48 31 f6             	xor    %rsi,%rsi
    165d:	4c 89 e2             	mov    %r12,%rdx
    1660:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1667:	00 00 00 
			1662: R_X86_64_64	do_callback
    166a:	48 89 9c 24 b8 01 00 	mov    %rbx,0x1b8(%rsp)
    1671:	00 
    1672:	48 89 bc 24 c0 01 00 	mov    %rdi,0x1c0(%rsp)
    1679:	00 
    167a:	4c 89 ac 24 c8 01 00 	mov    %r13,0x1c8(%rsp)
    1681:	00 
    1682:	ff d0                	call   *%rax
    1684:	48 8b 9c 24 b8 01 00 	mov    0x1b8(%rsp),%rbx
    168b:	00 
    168c:	4c 8b ac 24 c8 01 00 	mov    0x1c8(%rsp),%r13
    1693:	00 
    1694:	48 89 c6             	mov    %rax,%rsi
    1697:	48 89 b4 24 b8 01 00 	mov    %rsi,0x1b8(%rsp)
    169e:	00 
    169f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    16a3:	48 89 d1             	mov    %rdx,%rcx
    16a6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    16aa:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    16ae:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    16b2:	be 01 00 00 00       	mov    $0x1,%esi
    16b7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    16bb:	be 01 00 00 00       	mov    $0x1,%esi
    16c0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    16c4:	48 31 f6             	xor    %rsi,%rsi
    16c7:	4c 89 e2             	mov    %r12,%rdx
    16ca:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    16d1:	00 00 00 
			16cc: R_X86_64_64	do_callback
    16d4:	48 89 9c 24 c0 01 00 	mov    %rbx,0x1c0(%rsp)
    16db:	00 
    16dc:	48 89 bc 24 c8 01 00 	mov    %rdi,0x1c8(%rsp)
    16e3:	00 
    16e4:	4c 89 ac 24 d0 01 00 	mov    %r13,0x1d0(%rsp)
    16eb:	00 
    16ec:	ff d0                	call   *%rax
    16ee:	48 8b 9c 24 c0 01 00 	mov    0x1c0(%rsp),%rbx
    16f5:	00 
    16f6:	4c 8b ac 24 d0 01 00 	mov    0x1d0(%rsp),%r13
    16fd:	00 
    16fe:	48 89 c6             	mov    %rax,%rsi
    1701:	48 89 b4 24 c0 01 00 	mov    %rsi,0x1c0(%rsp)
    1708:	00 
    1709:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    170d:	48 89 d1             	mov    %rdx,%rcx
    1710:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1714:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1718:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    171c:	be 01 00 00 00       	mov    $0x1,%esi
    1721:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1725:	be 01 00 00 00       	mov    $0x1,%esi
    172a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    172e:	48 31 f6             	xor    %rsi,%rsi
    1731:	4c 89 e2             	mov    %r12,%rdx
    1734:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    173b:	00 00 00 
			1736: R_X86_64_64	do_callback
    173e:	48 89 9c 24 c8 01 00 	mov    %rbx,0x1c8(%rsp)
    1745:	00 
    1746:	48 89 bc 24 d0 01 00 	mov    %rdi,0x1d0(%rsp)
    174d:	00 
    174e:	4c 89 ac 24 d8 01 00 	mov    %r13,0x1d8(%rsp)
    1755:	00 
    1756:	ff d0                	call   *%rax
    1758:	48 8b 9c 24 c8 01 00 	mov    0x1c8(%rsp),%rbx
    175f:	00 
    1760:	4c 8b ac 24 d8 01 00 	mov    0x1d8(%rsp),%r13
    1767:	00 
    1768:	48 89 c6             	mov    %rax,%rsi
    176b:	48 89 b4 24 c8 01 00 	mov    %rsi,0x1c8(%rsp)
    1772:	00 
    1773:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1777:	48 89 d1             	mov    %rdx,%rcx
    177a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    177e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1782:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1786:	be 01 00 00 00       	mov    $0x1,%esi
    178b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    178f:	be 01 00 00 00       	mov    $0x1,%esi
    1794:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1798:	48 31 f6             	xor    %rsi,%rsi
    179b:	4c 89 e2             	mov    %r12,%rdx
    179e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    17a5:	00 00 00 
			17a0: R_X86_64_64	do_callback
    17a8:	48 89 9c 24 d0 01 00 	mov    %rbx,0x1d0(%rsp)
    17af:	00 
    17b0:	48 89 bc 24 d8 01 00 	mov    %rdi,0x1d8(%rsp)
    17b7:	00 
    17b8:	4c 89 ac 24 e0 01 00 	mov    %r13,0x1e0(%rsp)
    17bf:	00 
    17c0:	ff d0                	call   *%rax
    17c2:	48 8b 9c 24 d0 01 00 	mov    0x1d0(%rsp),%rbx
    17c9:	00 
    17ca:	4c 8b ac 24 e0 01 00 	mov    0x1e0(%rsp),%r13
    17d1:	00 
    17d2:	48 89 c6             	mov    %rax,%rsi
    17d5:	48 89 b4 24 d0 01 00 	mov    %rsi,0x1d0(%rsp)
    17dc:	00 
    17dd:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    17e1:	48 89 d1             	mov    %rdx,%rcx
    17e4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    17e8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    17ec:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    17f0:	be 01 00 00 00       	mov    $0x1,%esi
    17f5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    17f9:	be 01 00 00 00       	mov    $0x1,%esi
    17fe:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1802:	48 31 f6             	xor    %rsi,%rsi
    1805:	4c 89 e2             	mov    %r12,%rdx
    1808:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    180f:	00 00 00 
			180a: R_X86_64_64	do_callback
    1812:	48 89 9c 24 d8 01 00 	mov    %rbx,0x1d8(%rsp)
    1819:	00 
    181a:	48 89 bc 24 e0 01 00 	mov    %rdi,0x1e0(%rsp)
    1821:	00 
    1822:	4c 89 ac 24 e8 01 00 	mov    %r13,0x1e8(%rsp)
    1829:	00 
    182a:	ff d0                	call   *%rax
    182c:	48 8b 9c 24 d8 01 00 	mov    0x1d8(%rsp),%rbx
    1833:	00 
    1834:	4c 8b ac 24 e8 01 00 	mov    0x1e8(%rsp),%r13
    183b:	00 
    183c:	48 89 c6             	mov    %rax,%rsi
    183f:	48 89 b4 24 d8 01 00 	mov    %rsi,0x1d8(%rsp)
    1846:	00 
    1847:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    184b:	48 89 d1             	mov    %rdx,%rcx
    184e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1852:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1856:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    185a:	be 01 00 00 00       	mov    $0x1,%esi
    185f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1863:	be 01 00 00 00       	mov    $0x1,%esi
    1868:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    186c:	48 31 f6             	xor    %rsi,%rsi
    186f:	4c 89 e2             	mov    %r12,%rdx
    1872:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1879:	00 00 00 
			1874: R_X86_64_64	do_callback
    187c:	48 89 9c 24 e0 01 00 	mov    %rbx,0x1e0(%rsp)
    1883:	00 
    1884:	48 89 bc 24 e8 01 00 	mov    %rdi,0x1e8(%rsp)
    188b:	00 
    188c:	4c 89 ac 24 f0 01 00 	mov    %r13,0x1f0(%rsp)
    1893:	00 
    1894:	ff d0                	call   *%rax
    1896:	48 8b 9c 24 e0 01 00 	mov    0x1e0(%rsp),%rbx
    189d:	00 
    189e:	4c 8b ac 24 f0 01 00 	mov    0x1f0(%rsp),%r13
    18a5:	00 
    18a6:	48 89 c6             	mov    %rax,%rsi
    18a9:	48 89 b4 24 e0 01 00 	mov    %rsi,0x1e0(%rsp)
    18b0:	00 
    18b1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    18b5:	48 89 d1             	mov    %rdx,%rcx
    18b8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    18bc:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    18c0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    18c4:	be 01 00 00 00       	mov    $0x1,%esi
    18c9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    18cd:	be 01 00 00 00       	mov    $0x1,%esi
    18d2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    18d6:	48 31 f6             	xor    %rsi,%rsi
    18d9:	4c 89 e2             	mov    %r12,%rdx
    18dc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    18e3:	00 00 00 
			18de: R_X86_64_64	do_callback
    18e6:	48 89 9c 24 e8 01 00 	mov    %rbx,0x1e8(%rsp)
    18ed:	00 
    18ee:	48 89 bc 24 f0 01 00 	mov    %rdi,0x1f0(%rsp)
    18f5:	00 
    18f6:	4c 89 ac 24 f8 01 00 	mov    %r13,0x1f8(%rsp)
    18fd:	00 
    18fe:	ff d0                	call   *%rax
    1900:	48 8b 9c 24 e8 01 00 	mov    0x1e8(%rsp),%rbx
    1907:	00 
    1908:	4c 8b ac 24 f8 01 00 	mov    0x1f8(%rsp),%r13
    190f:	00 
    1910:	48 89 c6             	mov    %rax,%rsi
    1913:	48 89 b4 24 e8 01 00 	mov    %rsi,0x1e8(%rsp)
    191a:	00 
    191b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    191f:	48 89 d1             	mov    %rdx,%rcx
    1922:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1926:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    192a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    192e:	be 01 00 00 00       	mov    $0x1,%esi
    1933:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1937:	be 01 00 00 00       	mov    $0x1,%esi
    193c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1940:	48 31 f6             	xor    %rsi,%rsi
    1943:	4c 89 e2             	mov    %r12,%rdx
    1946:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    194d:	00 00 00 
			1948: R_X86_64_64	do_callback
    1950:	48 89 9c 24 f0 01 00 	mov    %rbx,0x1f0(%rsp)
    1957:	00 
    1958:	48 89 bc 24 f8 01 00 	mov    %rdi,0x1f8(%rsp)
    195f:	00 
    1960:	4c 89 ac 24 00 02 00 	mov    %r13,0x200(%rsp)
    1967:	00 
    1968:	ff d0                	call   *%rax
    196a:	48 8b 9c 24 f0 01 00 	mov    0x1f0(%rsp),%rbx
    1971:	00 
    1972:	4c 8b ac 24 00 02 00 	mov    0x200(%rsp),%r13
    1979:	00 
    197a:	48 89 c6             	mov    %rax,%rsi
    197d:	48 89 b4 24 f0 01 00 	mov    %rsi,0x1f0(%rsp)
    1984:	00 
    1985:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1989:	48 89 d1             	mov    %rdx,%rcx
    198c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1990:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1994:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1998:	be 01 00 00 00       	mov    $0x1,%esi
    199d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    19a1:	be 01 00 00 00       	mov    $0x1,%esi
    19a6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    19aa:	48 31 f6             	xor    %rsi,%rsi
    19ad:	4c 89 e2             	mov    %r12,%rdx
    19b0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    19b7:	00 00 00 
			19b2: R_X86_64_64	do_callback
    19ba:	48 89 9c 24 f8 01 00 	mov    %rbx,0x1f8(%rsp)
    19c1:	00 
    19c2:	48 89 bc 24 00 02 00 	mov    %rdi,0x200(%rsp)
    19c9:	00 
    19ca:	4c 89 ac 24 08 02 00 	mov    %r13,0x208(%rsp)
    19d1:	00 
    19d2:	ff d0                	call   *%rax
    19d4:	48 8b 9c 24 f8 01 00 	mov    0x1f8(%rsp),%rbx
    19db:	00 
    19dc:	4c 8b ac 24 08 02 00 	mov    0x208(%rsp),%r13
    19e3:	00 
    19e4:	48 89 c6             	mov    %rax,%rsi
    19e7:	48 89 b4 24 f8 01 00 	mov    %rsi,0x1f8(%rsp)
    19ee:	00 
    19ef:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    19f3:	48 89 d1             	mov    %rdx,%rcx
    19f6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    19fa:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    19fe:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1a02:	be 01 00 00 00       	mov    $0x1,%esi
    1a07:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1a0b:	be 01 00 00 00       	mov    $0x1,%esi
    1a10:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1a14:	48 31 f6             	xor    %rsi,%rsi
    1a17:	4c 89 e2             	mov    %r12,%rdx
    1a1a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1a21:	00 00 00 
			1a1c: R_X86_64_64	do_callback
    1a24:	48 89 9c 24 00 02 00 	mov    %rbx,0x200(%rsp)
    1a2b:	00 
    1a2c:	48 89 bc 24 08 02 00 	mov    %rdi,0x208(%rsp)
    1a33:	00 
    1a34:	4c 89 ac 24 10 02 00 	mov    %r13,0x210(%rsp)
    1a3b:	00 
    1a3c:	ff d0                	call   *%rax
    1a3e:	48 8b 9c 24 00 02 00 	mov    0x200(%rsp),%rbx
    1a45:	00 
    1a46:	4c 8b ac 24 10 02 00 	mov    0x210(%rsp),%r13
    1a4d:	00 
    1a4e:	48 89 c6             	mov    %rax,%rsi
    1a51:	48 89 b4 24 00 02 00 	mov    %rsi,0x200(%rsp)
    1a58:	00 
    1a59:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1a5d:	48 89 d1             	mov    %rdx,%rcx
    1a60:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1a64:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1a68:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1a6c:	be 01 00 00 00       	mov    $0x1,%esi
    1a71:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1a75:	be 01 00 00 00       	mov    $0x1,%esi
    1a7a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1a7e:	48 31 f6             	xor    %rsi,%rsi
    1a81:	4c 89 e2             	mov    %r12,%rdx
    1a84:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1a8b:	00 00 00 
			1a86: R_X86_64_64	do_callback
    1a8e:	48 89 9c 24 08 02 00 	mov    %rbx,0x208(%rsp)
    1a95:	00 
    1a96:	48 89 bc 24 10 02 00 	mov    %rdi,0x210(%rsp)
    1a9d:	00 
    1a9e:	4c 89 ac 24 18 02 00 	mov    %r13,0x218(%rsp)
    1aa5:	00 
    1aa6:	ff d0                	call   *%rax
    1aa8:	48 8b 9c 24 08 02 00 	mov    0x208(%rsp),%rbx
    1aaf:	00 
    1ab0:	4c 8b ac 24 18 02 00 	mov    0x218(%rsp),%r13
    1ab7:	00 
    1ab8:	48 89 c6             	mov    %rax,%rsi
    1abb:	48 89 b4 24 08 02 00 	mov    %rsi,0x208(%rsp)
    1ac2:	00 
    1ac3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1ac7:	48 89 d1             	mov    %rdx,%rcx
    1aca:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1ace:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1ad2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1ad6:	be 01 00 00 00       	mov    $0x1,%esi
    1adb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1adf:	be 01 00 00 00       	mov    $0x1,%esi
    1ae4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1ae8:	48 31 f6             	xor    %rsi,%rsi
    1aeb:	4c 89 e2             	mov    %r12,%rdx
    1aee:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1af5:	00 00 00 
			1af0: R_X86_64_64	do_callback
    1af8:	48 89 9c 24 10 02 00 	mov    %rbx,0x210(%rsp)
    1aff:	00 
    1b00:	48 89 bc 24 18 02 00 	mov    %rdi,0x218(%rsp)
    1b07:	00 
    1b08:	4c 89 ac 24 20 02 00 	mov    %r13,0x220(%rsp)
    1b0f:	00 
    1b10:	ff d0                	call   *%rax
    1b12:	48 8b 9c 24 10 02 00 	mov    0x210(%rsp),%rbx
    1b19:	00 
    1b1a:	4c 8b ac 24 20 02 00 	mov    0x220(%rsp),%r13
    1b21:	00 
    1b22:	48 89 c6             	mov    %rax,%rsi
    1b25:	48 89 b4 24 10 02 00 	mov    %rsi,0x210(%rsp)
    1b2c:	00 
    1b2d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1b31:	48 89 d1             	mov    %rdx,%rcx
    1b34:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1b38:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1b3c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1b40:	be 01 00 00 00       	mov    $0x1,%esi
    1b45:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1b49:	be 01 00 00 00       	mov    $0x1,%esi
    1b4e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1b52:	48 31 f6             	xor    %rsi,%rsi
    1b55:	4c 89 e2             	mov    %r12,%rdx
    1b58:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1b5f:	00 00 00 
			1b5a: R_X86_64_64	do_callback
    1b62:	48 89 9c 24 18 02 00 	mov    %rbx,0x218(%rsp)
    1b69:	00 
    1b6a:	48 89 bc 24 20 02 00 	mov    %rdi,0x220(%rsp)
    1b71:	00 
    1b72:	4c 89 ac 24 28 02 00 	mov    %r13,0x228(%rsp)
    1b79:	00 
    1b7a:	ff d0                	call   *%rax
    1b7c:	48 8b 9c 24 18 02 00 	mov    0x218(%rsp),%rbx
    1b83:	00 
    1b84:	4c 8b ac 24 28 02 00 	mov    0x228(%rsp),%r13
    1b8b:	00 
    1b8c:	48 89 c6             	mov    %rax,%rsi
    1b8f:	48 89 b4 24 18 02 00 	mov    %rsi,0x218(%rsp)
    1b96:	00 
    1b97:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1b9b:	48 89 d1             	mov    %rdx,%rcx
    1b9e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1ba2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1ba6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1baa:	be 01 00 00 00       	mov    $0x1,%esi
    1baf:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1bb3:	be 01 00 00 00       	mov    $0x1,%esi
    1bb8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1bbc:	48 31 f6             	xor    %rsi,%rsi
    1bbf:	4c 89 e2             	mov    %r12,%rdx
    1bc2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1bc9:	00 00 00 
			1bc4: R_X86_64_64	do_callback
    1bcc:	48 89 9c 24 20 02 00 	mov    %rbx,0x220(%rsp)
    1bd3:	00 
    1bd4:	48 89 bc 24 28 02 00 	mov    %rdi,0x228(%rsp)
    1bdb:	00 
    1bdc:	4c 89 ac 24 30 02 00 	mov    %r13,0x230(%rsp)
    1be3:	00 
    1be4:	ff d0                	call   *%rax
    1be6:	48 8b 9c 24 20 02 00 	mov    0x220(%rsp),%rbx
    1bed:	00 
    1bee:	4c 8b ac 24 30 02 00 	mov    0x230(%rsp),%r13
    1bf5:	00 
    1bf6:	48 89 c6             	mov    %rax,%rsi
    1bf9:	48 89 b4 24 20 02 00 	mov    %rsi,0x220(%rsp)
    1c00:	00 
    1c01:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1c05:	48 89 d1             	mov    %rdx,%rcx
    1c08:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1c0c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1c10:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1c14:	be 01 00 00 00       	mov    $0x1,%esi
    1c19:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1c1d:	be 01 00 00 00       	mov    $0x1,%esi
    1c22:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1c26:	48 31 f6             	xor    %rsi,%rsi
    1c29:	4c 89 e2             	mov    %r12,%rdx
    1c2c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1c33:	00 00 00 
			1c2e: R_X86_64_64	do_callback
    1c36:	48 89 9c 24 28 02 00 	mov    %rbx,0x228(%rsp)
    1c3d:	00 
    1c3e:	48 89 bc 24 30 02 00 	mov    %rdi,0x230(%rsp)
    1c45:	00 
    1c46:	4c 89 ac 24 38 02 00 	mov    %r13,0x238(%rsp)
    1c4d:	00 
    1c4e:	ff d0                	call   *%rax
    1c50:	48 8b 9c 24 28 02 00 	mov    0x228(%rsp),%rbx
    1c57:	00 
    1c58:	4c 8b ac 24 38 02 00 	mov    0x238(%rsp),%r13
    1c5f:	00 
    1c60:	48 89 c6             	mov    %rax,%rsi
    1c63:	48 89 b4 24 28 02 00 	mov    %rsi,0x228(%rsp)
    1c6a:	00 
    1c6b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1c6f:	48 89 d1             	mov    %rdx,%rcx
    1c72:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1c76:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1c7a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1c7e:	be 01 00 00 00       	mov    $0x1,%esi
    1c83:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1c87:	be 01 00 00 00       	mov    $0x1,%esi
    1c8c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1c90:	48 31 f6             	xor    %rsi,%rsi
    1c93:	4c 89 e2             	mov    %r12,%rdx
    1c96:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1c9d:	00 00 00 
			1c98: R_X86_64_64	do_callback
    1ca0:	48 89 9c 24 30 02 00 	mov    %rbx,0x230(%rsp)
    1ca7:	00 
    1ca8:	48 89 bc 24 38 02 00 	mov    %rdi,0x238(%rsp)
    1caf:	00 
    1cb0:	4c 89 ac 24 40 02 00 	mov    %r13,0x240(%rsp)
    1cb7:	00 
    1cb8:	ff d0                	call   *%rax
    1cba:	48 8b 9c 24 30 02 00 	mov    0x230(%rsp),%rbx
    1cc1:	00 
    1cc2:	4c 8b ac 24 40 02 00 	mov    0x240(%rsp),%r13
    1cc9:	00 
    1cca:	48 89 c6             	mov    %rax,%rsi
    1ccd:	48 89 b4 24 30 02 00 	mov    %rsi,0x230(%rsp)
    1cd4:	00 
    1cd5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1cd9:	48 89 d1             	mov    %rdx,%rcx
    1cdc:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1ce0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1ce4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1ce8:	be 01 00 00 00       	mov    $0x1,%esi
    1ced:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1cf1:	be 01 00 00 00       	mov    $0x1,%esi
    1cf6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1cfa:	48 31 f6             	xor    %rsi,%rsi
    1cfd:	4c 89 e2             	mov    %r12,%rdx
    1d00:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1d07:	00 00 00 
			1d02: R_X86_64_64	do_callback
    1d0a:	48 89 9c 24 38 02 00 	mov    %rbx,0x238(%rsp)
    1d11:	00 
    1d12:	48 89 bc 24 40 02 00 	mov    %rdi,0x240(%rsp)
    1d19:	00 
    1d1a:	4c 89 ac 24 48 02 00 	mov    %r13,0x248(%rsp)
    1d21:	00 
    1d22:	ff d0                	call   *%rax
    1d24:	48 8b 9c 24 38 02 00 	mov    0x238(%rsp),%rbx
    1d2b:	00 
    1d2c:	4c 8b ac 24 48 02 00 	mov    0x248(%rsp),%r13
    1d33:	00 
    1d34:	48 89 c6             	mov    %rax,%rsi
    1d37:	48 89 b4 24 38 02 00 	mov    %rsi,0x238(%rsp)
    1d3e:	00 
    1d3f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1d43:	48 89 d1             	mov    %rdx,%rcx
    1d46:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1d4a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1d4e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1d52:	be 01 00 00 00       	mov    $0x1,%esi
    1d57:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1d5b:	be 01 00 00 00       	mov    $0x1,%esi
    1d60:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1d64:	48 31 f6             	xor    %rsi,%rsi
    1d67:	4c 89 e2             	mov    %r12,%rdx
    1d6a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1d71:	00 00 00 
			1d6c: R_X86_64_64	do_callback
    1d74:	48 89 9c 24 40 02 00 	mov    %rbx,0x240(%rsp)
    1d7b:	00 
    1d7c:	48 89 bc 24 48 02 00 	mov    %rdi,0x248(%rsp)
    1d83:	00 
    1d84:	4c 89 ac 24 50 02 00 	mov    %r13,0x250(%rsp)
    1d8b:	00 
    1d8c:	ff d0                	call   *%rax
    1d8e:	48 8b 9c 24 40 02 00 	mov    0x240(%rsp),%rbx
    1d95:	00 
    1d96:	4c 8b ac 24 50 02 00 	mov    0x250(%rsp),%r13
    1d9d:	00 
    1d9e:	48 89 c6             	mov    %rax,%rsi
    1da1:	48 89 b4 24 40 02 00 	mov    %rsi,0x240(%rsp)
    1da8:	00 
    1da9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1dad:	48 89 d1             	mov    %rdx,%rcx
    1db0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1db4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1db8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1dbc:	be 01 00 00 00       	mov    $0x1,%esi
    1dc1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1dc5:	be 01 00 00 00       	mov    $0x1,%esi
    1dca:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1dce:	48 31 f6             	xor    %rsi,%rsi
    1dd1:	4c 89 e2             	mov    %r12,%rdx
    1dd4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1ddb:	00 00 00 
			1dd6: R_X86_64_64	do_callback
    1dde:	48 89 9c 24 48 02 00 	mov    %rbx,0x248(%rsp)
    1de5:	00 
    1de6:	48 89 bc 24 50 02 00 	mov    %rdi,0x250(%rsp)
    1ded:	00 
    1dee:	4c 89 ac 24 58 02 00 	mov    %r13,0x258(%rsp)
    1df5:	00 
    1df6:	ff d0                	call   *%rax
    1df8:	48 8b 9c 24 48 02 00 	mov    0x248(%rsp),%rbx
    1dff:	00 
    1e00:	4c 8b ac 24 58 02 00 	mov    0x258(%rsp),%r13
    1e07:	00 
    1e08:	48 89 c6             	mov    %rax,%rsi
    1e0b:	48 89 b4 24 48 02 00 	mov    %rsi,0x248(%rsp)
    1e12:	00 
    1e13:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1e17:	48 89 d1             	mov    %rdx,%rcx
    1e1a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1e1e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1e22:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1e26:	be 01 00 00 00       	mov    $0x1,%esi
    1e2b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1e2f:	be 01 00 00 00       	mov    $0x1,%esi
    1e34:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1e38:	48 31 f6             	xor    %rsi,%rsi
    1e3b:	4c 89 e2             	mov    %r12,%rdx
    1e3e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1e45:	00 00 00 
			1e40: R_X86_64_64	do_callback
    1e48:	48 89 9c 24 50 02 00 	mov    %rbx,0x250(%rsp)
    1e4f:	00 
    1e50:	48 89 bc 24 58 02 00 	mov    %rdi,0x258(%rsp)
    1e57:	00 
    1e58:	4c 89 ac 24 60 02 00 	mov    %r13,0x260(%rsp)
    1e5f:	00 
    1e60:	ff d0                	call   *%rax
    1e62:	48 8b 9c 24 50 02 00 	mov    0x250(%rsp),%rbx
    1e69:	00 
    1e6a:	4c 8b ac 24 60 02 00 	mov    0x260(%rsp),%r13
    1e71:	00 
    1e72:	48 89 c6             	mov    %rax,%rsi
    1e75:	48 89 b4 24 50 02 00 	mov    %rsi,0x250(%rsp)
    1e7c:	00 
    1e7d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1e81:	48 89 d1             	mov    %rdx,%rcx
    1e84:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1e88:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1e8c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1e90:	be 01 00 00 00       	mov    $0x1,%esi
    1e95:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1e99:	be 01 00 00 00       	mov    $0x1,%esi
    1e9e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1ea2:	48 31 f6             	xor    %rsi,%rsi
    1ea5:	4c 89 e2             	mov    %r12,%rdx
    1ea8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1eaf:	00 00 00 
			1eaa: R_X86_64_64	do_callback
    1eb2:	48 89 9c 24 58 02 00 	mov    %rbx,0x258(%rsp)
    1eb9:	00 
    1eba:	48 89 bc 24 60 02 00 	mov    %rdi,0x260(%rsp)
    1ec1:	00 
    1ec2:	4c 89 ac 24 68 02 00 	mov    %r13,0x268(%rsp)
    1ec9:	00 
    1eca:	ff d0                	call   *%rax
    1ecc:	48 8b 9c 24 58 02 00 	mov    0x258(%rsp),%rbx
    1ed3:	00 
    1ed4:	4c 8b ac 24 68 02 00 	mov    0x268(%rsp),%r13
    1edb:	00 
    1edc:	48 89 c6             	mov    %rax,%rsi
    1edf:	48 89 b4 24 58 02 00 	mov    %rsi,0x258(%rsp)
    1ee6:	00 
    1ee7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1eeb:	48 89 d1             	mov    %rdx,%rcx
    1eee:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1ef2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1ef6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1efa:	be 01 00 00 00       	mov    $0x1,%esi
    1eff:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1f03:	be 01 00 00 00       	mov    $0x1,%esi
    1f08:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1f0c:	48 31 f6             	xor    %rsi,%rsi
    1f0f:	4c 89 e2             	mov    %r12,%rdx
    1f12:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1f19:	00 00 00 
			1f14: R_X86_64_64	do_callback
    1f1c:	48 89 9c 24 60 02 00 	mov    %rbx,0x260(%rsp)
    1f23:	00 
    1f24:	48 89 bc 24 68 02 00 	mov    %rdi,0x268(%rsp)
    1f2b:	00 
    1f2c:	4c 89 ac 24 70 02 00 	mov    %r13,0x270(%rsp)
    1f33:	00 
    1f34:	ff d0                	call   *%rax
    1f36:	48 8b 9c 24 60 02 00 	mov    0x260(%rsp),%rbx
    1f3d:	00 
    1f3e:	4c 8b ac 24 70 02 00 	mov    0x270(%rsp),%r13
    1f45:	00 
    1f46:	48 89 c6             	mov    %rax,%rsi
    1f49:	48 89 b4 24 60 02 00 	mov    %rsi,0x260(%rsp)
    1f50:	00 
    1f51:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1f55:	48 89 d1             	mov    %rdx,%rcx
    1f58:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1f5c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1f60:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1f64:	be 01 00 00 00       	mov    $0x1,%esi
    1f69:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1f6d:	be 01 00 00 00       	mov    $0x1,%esi
    1f72:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1f76:	48 31 f6             	xor    %rsi,%rsi
    1f79:	4c 89 e2             	mov    %r12,%rdx
    1f7c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1f83:	00 00 00 
			1f7e: R_X86_64_64	do_callback
    1f86:	48 89 9c 24 68 02 00 	mov    %rbx,0x268(%rsp)
    1f8d:	00 
    1f8e:	48 89 bc 24 70 02 00 	mov    %rdi,0x270(%rsp)
    1f95:	00 
    1f96:	4c 89 ac 24 78 02 00 	mov    %r13,0x278(%rsp)
    1f9d:	00 
    1f9e:	ff d0                	call   *%rax
    1fa0:	48 8b 9c 24 68 02 00 	mov    0x268(%rsp),%rbx
    1fa7:	00 
    1fa8:	4c 8b ac 24 78 02 00 	mov    0x278(%rsp),%r13
    1faf:	00 
    1fb0:	48 89 c6             	mov    %rax,%rsi
    1fb3:	48 89 b4 24 68 02 00 	mov    %rsi,0x268(%rsp)
    1fba:	00 
    1fbb:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    1fbf:	48 89 d1             	mov    %rdx,%rcx
    1fc2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    1fc6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    1fca:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    1fce:	be 01 00 00 00       	mov    $0x1,%esi
    1fd3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    1fd7:	be 01 00 00 00       	mov    $0x1,%esi
    1fdc:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    1fe0:	48 31 f6             	xor    %rsi,%rsi
    1fe3:	4c 89 e2             	mov    %r12,%rdx
    1fe6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    1fed:	00 00 00 
			1fe8: R_X86_64_64	do_callback
    1ff0:	48 89 9c 24 70 02 00 	mov    %rbx,0x270(%rsp)
    1ff7:	00 
    1ff8:	48 89 bc 24 78 02 00 	mov    %rdi,0x278(%rsp)
    1fff:	00 
    2000:	4c 89 ac 24 80 02 00 	mov    %r13,0x280(%rsp)
    2007:	00 
    2008:	ff d0                	call   *%rax
    200a:	48 8b 9c 24 70 02 00 	mov    0x270(%rsp),%rbx
    2011:	00 
    2012:	4c 8b ac 24 80 02 00 	mov    0x280(%rsp),%r13
    2019:	00 
    201a:	48 89 c6             	mov    %rax,%rsi
    201d:	48 89 b4 24 70 02 00 	mov    %rsi,0x270(%rsp)
    2024:	00 
    2025:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2029:	48 89 d1             	mov    %rdx,%rcx
    202c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2030:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2034:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2038:	be 01 00 00 00       	mov    $0x1,%esi
    203d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2041:	be 01 00 00 00       	mov    $0x1,%esi
    2046:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    204a:	48 31 f6             	xor    %rsi,%rsi
    204d:	4c 89 e2             	mov    %r12,%rdx
    2050:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2057:	00 00 00 
			2052: R_X86_64_64	do_callback
    205a:	48 89 9c 24 78 02 00 	mov    %rbx,0x278(%rsp)
    2061:	00 
    2062:	48 89 bc 24 80 02 00 	mov    %rdi,0x280(%rsp)
    2069:	00 
    206a:	4c 89 ac 24 88 02 00 	mov    %r13,0x288(%rsp)
    2071:	00 
    2072:	ff d0                	call   *%rax
    2074:	48 8b 9c 24 78 02 00 	mov    0x278(%rsp),%rbx
    207b:	00 
    207c:	4c 8b ac 24 88 02 00 	mov    0x288(%rsp),%r13
    2083:	00 
    2084:	48 89 c6             	mov    %rax,%rsi
    2087:	48 89 b4 24 78 02 00 	mov    %rsi,0x278(%rsp)
    208e:	00 
    208f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2093:	48 89 d1             	mov    %rdx,%rcx
    2096:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    209a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    209e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    20a2:	be 01 00 00 00       	mov    $0x1,%esi
    20a7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    20ab:	be 01 00 00 00       	mov    $0x1,%esi
    20b0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    20b4:	48 31 f6             	xor    %rsi,%rsi
    20b7:	4c 89 e2             	mov    %r12,%rdx
    20ba:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    20c1:	00 00 00 
			20bc: R_X86_64_64	do_callback
    20c4:	48 89 9c 24 80 02 00 	mov    %rbx,0x280(%rsp)
    20cb:	00 
    20cc:	48 89 bc 24 88 02 00 	mov    %rdi,0x288(%rsp)
    20d3:	00 
    20d4:	4c 89 ac 24 90 02 00 	mov    %r13,0x290(%rsp)
    20db:	00 
    20dc:	ff d0                	call   *%rax
    20de:	48 8b 9c 24 80 02 00 	mov    0x280(%rsp),%rbx
    20e5:	00 
    20e6:	4c 8b ac 24 90 02 00 	mov    0x290(%rsp),%r13
    20ed:	00 
    20ee:	48 89 c6             	mov    %rax,%rsi
    20f1:	48 89 b4 24 80 02 00 	mov    %rsi,0x280(%rsp)
    20f8:	00 
    20f9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    20fd:	48 89 d1             	mov    %rdx,%rcx
    2100:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2104:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2108:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    210c:	be 01 00 00 00       	mov    $0x1,%esi
    2111:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2115:	be 01 00 00 00       	mov    $0x1,%esi
    211a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    211e:	48 31 f6             	xor    %rsi,%rsi
    2121:	4c 89 e2             	mov    %r12,%rdx
    2124:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    212b:	00 00 00 
			2126: R_X86_64_64	do_callback
    212e:	48 89 9c 24 88 02 00 	mov    %rbx,0x288(%rsp)
    2135:	00 
    2136:	48 89 bc 24 90 02 00 	mov    %rdi,0x290(%rsp)
    213d:	00 
    213e:	4c 89 ac 24 98 02 00 	mov    %r13,0x298(%rsp)
    2145:	00 
    2146:	ff d0                	call   *%rax
    2148:	48 8b 9c 24 88 02 00 	mov    0x288(%rsp),%rbx
    214f:	00 
    2150:	4c 8b ac 24 98 02 00 	mov    0x298(%rsp),%r13
    2157:	00 
    2158:	48 89 c6             	mov    %rax,%rsi
    215b:	48 89 b4 24 88 02 00 	mov    %rsi,0x288(%rsp)
    2162:	00 
    2163:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2167:	48 89 d1             	mov    %rdx,%rcx
    216a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    216e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2172:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2176:	be 01 00 00 00       	mov    $0x1,%esi
    217b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    217f:	be 01 00 00 00       	mov    $0x1,%esi
    2184:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2188:	48 31 f6             	xor    %rsi,%rsi
    218b:	4c 89 e2             	mov    %r12,%rdx
    218e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2195:	00 00 00 
			2190: R_X86_64_64	do_callback
    2198:	48 89 9c 24 90 02 00 	mov    %rbx,0x290(%rsp)
    219f:	00 
    21a0:	48 89 bc 24 98 02 00 	mov    %rdi,0x298(%rsp)
    21a7:	00 
    21a8:	4c 89 ac 24 a0 02 00 	mov    %r13,0x2a0(%rsp)
    21af:	00 
    21b0:	ff d0                	call   *%rax
    21b2:	48 8b 9c 24 90 02 00 	mov    0x290(%rsp),%rbx
    21b9:	00 
    21ba:	4c 8b ac 24 a0 02 00 	mov    0x2a0(%rsp),%r13
    21c1:	00 
    21c2:	48 89 c6             	mov    %rax,%rsi
    21c5:	48 89 b4 24 90 02 00 	mov    %rsi,0x290(%rsp)
    21cc:	00 
    21cd:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    21d1:	48 89 d1             	mov    %rdx,%rcx
    21d4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    21d8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    21dc:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    21e0:	be 01 00 00 00       	mov    $0x1,%esi
    21e5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    21e9:	be 01 00 00 00       	mov    $0x1,%esi
    21ee:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    21f2:	48 31 f6             	xor    %rsi,%rsi
    21f5:	4c 89 e2             	mov    %r12,%rdx
    21f8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    21ff:	00 00 00 
			21fa: R_X86_64_64	do_callback
    2202:	48 89 9c 24 98 02 00 	mov    %rbx,0x298(%rsp)
    2209:	00 
    220a:	48 89 bc 24 a0 02 00 	mov    %rdi,0x2a0(%rsp)
    2211:	00 
    2212:	4c 89 ac 24 a8 02 00 	mov    %r13,0x2a8(%rsp)
    2219:	00 
    221a:	ff d0                	call   *%rax
    221c:	48 8b 9c 24 98 02 00 	mov    0x298(%rsp),%rbx
    2223:	00 
    2224:	4c 8b ac 24 a8 02 00 	mov    0x2a8(%rsp),%r13
    222b:	00 
    222c:	48 89 c6             	mov    %rax,%rsi
    222f:	48 89 b4 24 98 02 00 	mov    %rsi,0x298(%rsp)
    2236:	00 
    2237:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    223b:	48 89 d1             	mov    %rdx,%rcx
    223e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2242:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2246:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    224a:	be 01 00 00 00       	mov    $0x1,%esi
    224f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2253:	be 01 00 00 00       	mov    $0x1,%esi
    2258:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    225c:	48 31 f6             	xor    %rsi,%rsi
    225f:	4c 89 e2             	mov    %r12,%rdx
    2262:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2269:	00 00 00 
			2264: R_X86_64_64	do_callback
    226c:	48 89 9c 24 a0 02 00 	mov    %rbx,0x2a0(%rsp)
    2273:	00 
    2274:	48 89 bc 24 a8 02 00 	mov    %rdi,0x2a8(%rsp)
    227b:	00 
    227c:	4c 89 ac 24 b0 02 00 	mov    %r13,0x2b0(%rsp)
    2283:	00 
    2284:	ff d0                	call   *%rax
    2286:	48 8b 9c 24 a0 02 00 	mov    0x2a0(%rsp),%rbx
    228d:	00 
    228e:	4c 8b ac 24 b0 02 00 	mov    0x2b0(%rsp),%r13
    2295:	00 
    2296:	48 89 c6             	mov    %rax,%rsi
    2299:	48 89 b4 24 a0 02 00 	mov    %rsi,0x2a0(%rsp)
    22a0:	00 
    22a1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    22a5:	48 89 d1             	mov    %rdx,%rcx
    22a8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    22ac:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    22b0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    22b4:	be 01 00 00 00       	mov    $0x1,%esi
    22b9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    22bd:	be 01 00 00 00       	mov    $0x1,%esi
    22c2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    22c6:	48 31 f6             	xor    %rsi,%rsi
    22c9:	4c 89 e2             	mov    %r12,%rdx
    22cc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    22d3:	00 00 00 
			22ce: R_X86_64_64	do_callback
    22d6:	48 89 9c 24 a8 02 00 	mov    %rbx,0x2a8(%rsp)
    22dd:	00 
    22de:	48 89 bc 24 b0 02 00 	mov    %rdi,0x2b0(%rsp)
    22e5:	00 
    22e6:	4c 89 ac 24 b8 02 00 	mov    %r13,0x2b8(%rsp)
    22ed:	00 
    22ee:	ff d0                	call   *%rax
    22f0:	48 8b 9c 24 a8 02 00 	mov    0x2a8(%rsp),%rbx
    22f7:	00 
    22f8:	4c 8b ac 24 b8 02 00 	mov    0x2b8(%rsp),%r13
    22ff:	00 
    2300:	48 89 c6             	mov    %rax,%rsi
    2303:	48 89 b4 24 a8 02 00 	mov    %rsi,0x2a8(%rsp)
    230a:	00 
    230b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    230f:	48 89 d1             	mov    %rdx,%rcx
    2312:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2316:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    231a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    231e:	be 01 00 00 00       	mov    $0x1,%esi
    2323:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2327:	be 01 00 00 00       	mov    $0x1,%esi
    232c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2330:	48 31 f6             	xor    %rsi,%rsi
    2333:	4c 89 e2             	mov    %r12,%rdx
    2336:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    233d:	00 00 00 
			2338: R_X86_64_64	do_callback
    2340:	48 89 9c 24 b0 02 00 	mov    %rbx,0x2b0(%rsp)
    2347:	00 
    2348:	48 89 bc 24 b8 02 00 	mov    %rdi,0x2b8(%rsp)
    234f:	00 
    2350:	4c 89 ac 24 c0 02 00 	mov    %r13,0x2c0(%rsp)
    2357:	00 
    2358:	ff d0                	call   *%rax
    235a:	48 8b 9c 24 b0 02 00 	mov    0x2b0(%rsp),%rbx
    2361:	00 
    2362:	4c 8b ac 24 c0 02 00 	mov    0x2c0(%rsp),%r13
    2369:	00 
    236a:	48 89 c6             	mov    %rax,%rsi
    236d:	48 89 b4 24 b0 02 00 	mov    %rsi,0x2b0(%rsp)
    2374:	00 
    2375:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2379:	48 89 d1             	mov    %rdx,%rcx
    237c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2380:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2384:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2388:	be 01 00 00 00       	mov    $0x1,%esi
    238d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2391:	be 01 00 00 00       	mov    $0x1,%esi
    2396:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    239a:	48 31 f6             	xor    %rsi,%rsi
    239d:	4c 89 e2             	mov    %r12,%rdx
    23a0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    23a7:	00 00 00 
			23a2: R_X86_64_64	do_callback
    23aa:	48 89 9c 24 b8 02 00 	mov    %rbx,0x2b8(%rsp)
    23b1:	00 
    23b2:	48 89 bc 24 c0 02 00 	mov    %rdi,0x2c0(%rsp)
    23b9:	00 
    23ba:	4c 89 ac 24 c8 02 00 	mov    %r13,0x2c8(%rsp)
    23c1:	00 
    23c2:	ff d0                	call   *%rax
    23c4:	48 8b 9c 24 b8 02 00 	mov    0x2b8(%rsp),%rbx
    23cb:	00 
    23cc:	4c 8b ac 24 c8 02 00 	mov    0x2c8(%rsp),%r13
    23d3:	00 
    23d4:	48 89 c6             	mov    %rax,%rsi
    23d7:	48 89 b4 24 b8 02 00 	mov    %rsi,0x2b8(%rsp)
    23de:	00 
    23df:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    23e3:	48 89 d1             	mov    %rdx,%rcx
    23e6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    23ea:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    23ee:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    23f2:	be 01 00 00 00       	mov    $0x1,%esi
    23f7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    23fb:	be 01 00 00 00       	mov    $0x1,%esi
    2400:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2404:	48 31 f6             	xor    %rsi,%rsi
    2407:	4c 89 e2             	mov    %r12,%rdx
    240a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2411:	00 00 00 
			240c: R_X86_64_64	do_callback
    2414:	48 89 9c 24 c0 02 00 	mov    %rbx,0x2c0(%rsp)
    241b:	00 
    241c:	48 89 bc 24 c8 02 00 	mov    %rdi,0x2c8(%rsp)
    2423:	00 
    2424:	4c 89 ac 24 d0 02 00 	mov    %r13,0x2d0(%rsp)
    242b:	00 
    242c:	ff d0                	call   *%rax
    242e:	48 8b 9c 24 c0 02 00 	mov    0x2c0(%rsp),%rbx
    2435:	00 
    2436:	4c 8b ac 24 d0 02 00 	mov    0x2d0(%rsp),%r13
    243d:	00 
    243e:	48 89 c6             	mov    %rax,%rsi
    2441:	48 89 b4 24 c0 02 00 	mov    %rsi,0x2c0(%rsp)
    2448:	00 
    2449:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    244d:	48 89 d1             	mov    %rdx,%rcx
    2450:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2454:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2458:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    245c:	be 01 00 00 00       	mov    $0x1,%esi
    2461:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2465:	be 01 00 00 00       	mov    $0x1,%esi
    246a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    246e:	48 31 f6             	xor    %rsi,%rsi
    2471:	4c 89 e2             	mov    %r12,%rdx
    2474:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    247b:	00 00 00 
			2476: R_X86_64_64	do_callback
    247e:	48 89 9c 24 c8 02 00 	mov    %rbx,0x2c8(%rsp)
    2485:	00 
    2486:	48 89 bc 24 d0 02 00 	mov    %rdi,0x2d0(%rsp)
    248d:	00 
    248e:	4c 89 ac 24 d8 02 00 	mov    %r13,0x2d8(%rsp)
    2495:	00 
    2496:	ff d0                	call   *%rax
    2498:	48 8b 9c 24 c8 02 00 	mov    0x2c8(%rsp),%rbx
    249f:	00 
    24a0:	4c 8b ac 24 d8 02 00 	mov    0x2d8(%rsp),%r13
    24a7:	00 
    24a8:	48 89 c6             	mov    %rax,%rsi
    24ab:	48 89 b4 24 c8 02 00 	mov    %rsi,0x2c8(%rsp)
    24b2:	00 
    24b3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    24b7:	48 89 d1             	mov    %rdx,%rcx
    24ba:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    24be:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    24c2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    24c6:	be 01 00 00 00       	mov    $0x1,%esi
    24cb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    24cf:	be 01 00 00 00       	mov    $0x1,%esi
    24d4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    24d8:	48 31 f6             	xor    %rsi,%rsi
    24db:	4c 89 e2             	mov    %r12,%rdx
    24de:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    24e5:	00 00 00 
			24e0: R_X86_64_64	do_callback
    24e8:	48 89 9c 24 d0 02 00 	mov    %rbx,0x2d0(%rsp)
    24ef:	00 
    24f0:	48 89 bc 24 d8 02 00 	mov    %rdi,0x2d8(%rsp)
    24f7:	00 
    24f8:	4c 89 ac 24 e0 02 00 	mov    %r13,0x2e0(%rsp)
    24ff:	00 
    2500:	ff d0                	call   *%rax
    2502:	48 8b 9c 24 d0 02 00 	mov    0x2d0(%rsp),%rbx
    2509:	00 
    250a:	4c 8b ac 24 e0 02 00 	mov    0x2e0(%rsp),%r13
    2511:	00 
    2512:	48 89 c6             	mov    %rax,%rsi
    2515:	48 89 b4 24 d0 02 00 	mov    %rsi,0x2d0(%rsp)
    251c:	00 
    251d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2521:	48 89 d1             	mov    %rdx,%rcx
    2524:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2528:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    252c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2530:	be 01 00 00 00       	mov    $0x1,%esi
    2535:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2539:	be 01 00 00 00       	mov    $0x1,%esi
    253e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2542:	48 31 f6             	xor    %rsi,%rsi
    2545:	4c 89 e2             	mov    %r12,%rdx
    2548:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    254f:	00 00 00 
			254a: R_X86_64_64	do_callback
    2552:	48 89 9c 24 d8 02 00 	mov    %rbx,0x2d8(%rsp)
    2559:	00 
    255a:	48 89 bc 24 e0 02 00 	mov    %rdi,0x2e0(%rsp)
    2561:	00 
    2562:	4c 89 ac 24 e8 02 00 	mov    %r13,0x2e8(%rsp)
    2569:	00 
    256a:	ff d0                	call   *%rax
    256c:	48 8b 9c 24 d8 02 00 	mov    0x2d8(%rsp),%rbx
    2573:	00 
    2574:	4c 8b ac 24 e8 02 00 	mov    0x2e8(%rsp),%r13
    257b:	00 
    257c:	48 89 c6             	mov    %rax,%rsi
    257f:	48 89 b4 24 d8 02 00 	mov    %rsi,0x2d8(%rsp)
    2586:	00 
    2587:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    258b:	48 89 d1             	mov    %rdx,%rcx
    258e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2592:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2596:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    259a:	be 01 00 00 00       	mov    $0x1,%esi
    259f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    25a3:	be 01 00 00 00       	mov    $0x1,%esi
    25a8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    25ac:	48 31 f6             	xor    %rsi,%rsi
    25af:	4c 89 e2             	mov    %r12,%rdx
    25b2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    25b9:	00 00 00 
			25b4: R_X86_64_64	do_callback
    25bc:	48 89 9c 24 e0 02 00 	mov    %rbx,0x2e0(%rsp)
    25c3:	00 
    25c4:	48 89 bc 24 e8 02 00 	mov    %rdi,0x2e8(%rsp)
    25cb:	00 
    25cc:	4c 89 ac 24 f0 02 00 	mov    %r13,0x2f0(%rsp)
    25d3:	00 
    25d4:	ff d0                	call   *%rax
    25d6:	48 8b 9c 24 e0 02 00 	mov    0x2e0(%rsp),%rbx
    25dd:	00 
    25de:	4c 8b ac 24 f0 02 00 	mov    0x2f0(%rsp),%r13
    25e5:	00 
    25e6:	48 89 c6             	mov    %rax,%rsi
    25e9:	48 89 b4 24 e0 02 00 	mov    %rsi,0x2e0(%rsp)
    25f0:	00 
    25f1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    25f5:	48 89 d1             	mov    %rdx,%rcx
    25f8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    25fc:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2600:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2604:	be 01 00 00 00       	mov    $0x1,%esi
    2609:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    260d:	be 01 00 00 00       	mov    $0x1,%esi
    2612:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2616:	48 31 f6             	xor    %rsi,%rsi
    2619:	4c 89 e2             	mov    %r12,%rdx
    261c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2623:	00 00 00 
			261e: R_X86_64_64	do_callback
    2626:	48 89 9c 24 e8 02 00 	mov    %rbx,0x2e8(%rsp)
    262d:	00 
    262e:	48 89 bc 24 f0 02 00 	mov    %rdi,0x2f0(%rsp)
    2635:	00 
    2636:	4c 89 ac 24 f8 02 00 	mov    %r13,0x2f8(%rsp)
    263d:	00 
    263e:	ff d0                	call   *%rax
    2640:	48 8b 9c 24 e8 02 00 	mov    0x2e8(%rsp),%rbx
    2647:	00 
    2648:	4c 8b ac 24 f8 02 00 	mov    0x2f8(%rsp),%r13
    264f:	00 
    2650:	48 89 c6             	mov    %rax,%rsi
    2653:	48 89 b4 24 e8 02 00 	mov    %rsi,0x2e8(%rsp)
    265a:	00 
    265b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    265f:	48 89 d1             	mov    %rdx,%rcx
    2662:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2666:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    266a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    266e:	be 01 00 00 00       	mov    $0x1,%esi
    2673:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2677:	be 01 00 00 00       	mov    $0x1,%esi
    267c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2680:	48 31 f6             	xor    %rsi,%rsi
    2683:	4c 89 e2             	mov    %r12,%rdx
    2686:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    268d:	00 00 00 
			2688: R_X86_64_64	do_callback
    2690:	48 89 9c 24 f0 02 00 	mov    %rbx,0x2f0(%rsp)
    2697:	00 
    2698:	48 89 bc 24 f8 02 00 	mov    %rdi,0x2f8(%rsp)
    269f:	00 
    26a0:	4c 89 ac 24 00 03 00 	mov    %r13,0x300(%rsp)
    26a7:	00 
    26a8:	ff d0                	call   *%rax
    26aa:	48 8b 9c 24 f0 02 00 	mov    0x2f0(%rsp),%rbx
    26b1:	00 
    26b2:	4c 8b ac 24 00 03 00 	mov    0x300(%rsp),%r13
    26b9:	00 
    26ba:	48 89 c6             	mov    %rax,%rsi
    26bd:	48 89 b4 24 f0 02 00 	mov    %rsi,0x2f0(%rsp)
    26c4:	00 
    26c5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    26c9:	48 89 d1             	mov    %rdx,%rcx
    26cc:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    26d0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    26d4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    26d8:	be 01 00 00 00       	mov    $0x1,%esi
    26dd:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    26e1:	be 01 00 00 00       	mov    $0x1,%esi
    26e6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    26ea:	48 31 f6             	xor    %rsi,%rsi
    26ed:	4c 89 e2             	mov    %r12,%rdx
    26f0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    26f7:	00 00 00 
			26f2: R_X86_64_64	do_callback
    26fa:	48 89 9c 24 f8 02 00 	mov    %rbx,0x2f8(%rsp)
    2701:	00 
    2702:	48 89 bc 24 00 03 00 	mov    %rdi,0x300(%rsp)
    2709:	00 
    270a:	4c 89 ac 24 08 03 00 	mov    %r13,0x308(%rsp)
    2711:	00 
    2712:	ff d0                	call   *%rax
    2714:	48 8b 9c 24 f8 02 00 	mov    0x2f8(%rsp),%rbx
    271b:	00 
    271c:	4c 8b ac 24 08 03 00 	mov    0x308(%rsp),%r13
    2723:	00 
    2724:	48 89 c6             	mov    %rax,%rsi
    2727:	48 89 b4 24 f8 02 00 	mov    %rsi,0x2f8(%rsp)
    272e:	00 
    272f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2733:	48 89 d1             	mov    %rdx,%rcx
    2736:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    273a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    273e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2742:	be 01 00 00 00       	mov    $0x1,%esi
    2747:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    274b:	be 01 00 00 00       	mov    $0x1,%esi
    2750:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2754:	48 31 f6             	xor    %rsi,%rsi
    2757:	4c 89 e2             	mov    %r12,%rdx
    275a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2761:	00 00 00 
			275c: R_X86_64_64	do_callback
    2764:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    276b:	00 
    276c:	48 89 bc 24 08 03 00 	mov    %rdi,0x308(%rsp)
    2773:	00 
    2774:	4c 89 ac 24 10 03 00 	mov    %r13,0x310(%rsp)
    277b:	00 
    277c:	ff d0                	call   *%rax
    277e:	48 8b 9c 24 00 03 00 	mov    0x300(%rsp),%rbx
    2785:	00 
    2786:	4c 8b ac 24 10 03 00 	mov    0x310(%rsp),%r13
    278d:	00 
    278e:	48 89 c6             	mov    %rax,%rsi
    2791:	48 89 b4 24 00 03 00 	mov    %rsi,0x300(%rsp)
    2798:	00 
    2799:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    279d:	48 89 d1             	mov    %rdx,%rcx
    27a0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    27a4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    27a8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    27ac:	be 01 00 00 00       	mov    $0x1,%esi
    27b1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    27b5:	be 01 00 00 00       	mov    $0x1,%esi
    27ba:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    27be:	48 31 f6             	xor    %rsi,%rsi
    27c1:	4c 89 e2             	mov    %r12,%rdx
    27c4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    27cb:	00 00 00 
			27c6: R_X86_64_64	do_callback
    27ce:	48 89 9c 24 08 03 00 	mov    %rbx,0x308(%rsp)
    27d5:	00 
    27d6:	48 89 bc 24 10 03 00 	mov    %rdi,0x310(%rsp)
    27dd:	00 
    27de:	4c 89 ac 24 18 03 00 	mov    %r13,0x318(%rsp)
    27e5:	00 
    27e6:	ff d0                	call   *%rax
    27e8:	48 8b 9c 24 08 03 00 	mov    0x308(%rsp),%rbx
    27ef:	00 
    27f0:	4c 8b ac 24 18 03 00 	mov    0x318(%rsp),%r13
    27f7:	00 
    27f8:	48 89 c6             	mov    %rax,%rsi
    27fb:	48 89 b4 24 08 03 00 	mov    %rsi,0x308(%rsp)
    2802:	00 
    2803:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2807:	48 89 d1             	mov    %rdx,%rcx
    280a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    280e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2812:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2816:	be 01 00 00 00       	mov    $0x1,%esi
    281b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    281f:	be 01 00 00 00       	mov    $0x1,%esi
    2824:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2828:	48 31 f6             	xor    %rsi,%rsi
    282b:	4c 89 e2             	mov    %r12,%rdx
    282e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2835:	00 00 00 
			2830: R_X86_64_64	do_callback
    2838:	48 89 9c 24 10 03 00 	mov    %rbx,0x310(%rsp)
    283f:	00 
    2840:	48 89 bc 24 18 03 00 	mov    %rdi,0x318(%rsp)
    2847:	00 
    2848:	4c 89 ac 24 20 03 00 	mov    %r13,0x320(%rsp)
    284f:	00 
    2850:	ff d0                	call   *%rax
    2852:	48 8b 9c 24 10 03 00 	mov    0x310(%rsp),%rbx
    2859:	00 
    285a:	4c 8b ac 24 20 03 00 	mov    0x320(%rsp),%r13
    2861:	00 
    2862:	48 89 c6             	mov    %rax,%rsi
    2865:	48 89 b4 24 10 03 00 	mov    %rsi,0x310(%rsp)
    286c:	00 
    286d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2871:	48 89 d1             	mov    %rdx,%rcx
    2874:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2878:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    287c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2880:	be 01 00 00 00       	mov    $0x1,%esi
    2885:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2889:	be 01 00 00 00       	mov    $0x1,%esi
    288e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2892:	48 31 f6             	xor    %rsi,%rsi
    2895:	4c 89 e2             	mov    %r12,%rdx
    2898:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    289f:	00 00 00 
			289a: R_X86_64_64	do_callback
    28a2:	48 89 9c 24 18 03 00 	mov    %rbx,0x318(%rsp)
    28a9:	00 
    28aa:	48 89 bc 24 20 03 00 	mov    %rdi,0x320(%rsp)
    28b1:	00 
    28b2:	4c 89 ac 24 28 03 00 	mov    %r13,0x328(%rsp)
    28b9:	00 
    28ba:	ff d0                	call   *%rax
    28bc:	48 8b 9c 24 18 03 00 	mov    0x318(%rsp),%rbx
    28c3:	00 
    28c4:	4c 8b ac 24 28 03 00 	mov    0x328(%rsp),%r13
    28cb:	00 
    28cc:	48 89 c6             	mov    %rax,%rsi
    28cf:	48 89 b4 24 18 03 00 	mov    %rsi,0x318(%rsp)
    28d6:	00 
    28d7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    28db:	48 89 d1             	mov    %rdx,%rcx
    28de:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    28e2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    28e6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    28ea:	be 01 00 00 00       	mov    $0x1,%esi
    28ef:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    28f3:	be 01 00 00 00       	mov    $0x1,%esi
    28f8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    28fc:	48 31 f6             	xor    %rsi,%rsi
    28ff:	4c 89 e2             	mov    %r12,%rdx
    2902:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2909:	00 00 00 
			2904: R_X86_64_64	do_callback
    290c:	48 89 9c 24 20 03 00 	mov    %rbx,0x320(%rsp)
    2913:	00 
    2914:	48 89 bc 24 28 03 00 	mov    %rdi,0x328(%rsp)
    291b:	00 
    291c:	4c 89 ac 24 30 03 00 	mov    %r13,0x330(%rsp)
    2923:	00 
    2924:	ff d0                	call   *%rax
    2926:	48 8b 9c 24 20 03 00 	mov    0x320(%rsp),%rbx
    292d:	00 
    292e:	4c 8b ac 24 30 03 00 	mov    0x330(%rsp),%r13
    2935:	00 
    2936:	48 89 c6             	mov    %rax,%rsi
    2939:	48 89 b4 24 20 03 00 	mov    %rsi,0x320(%rsp)
    2940:	00 
    2941:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2945:	48 89 d1             	mov    %rdx,%rcx
    2948:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    294c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2950:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2954:	be 01 00 00 00       	mov    $0x1,%esi
    2959:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    295d:	be 01 00 00 00       	mov    $0x1,%esi
    2962:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2966:	48 31 f6             	xor    %rsi,%rsi
    2969:	4c 89 e2             	mov    %r12,%rdx
    296c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2973:	00 00 00 
			296e: R_X86_64_64	do_callback
    2976:	48 89 9c 24 28 03 00 	mov    %rbx,0x328(%rsp)
    297d:	00 
    297e:	48 89 bc 24 30 03 00 	mov    %rdi,0x330(%rsp)
    2985:	00 
    2986:	4c 89 ac 24 38 03 00 	mov    %r13,0x338(%rsp)
    298d:	00 
    298e:	ff d0                	call   *%rax
    2990:	48 8b 9c 24 28 03 00 	mov    0x328(%rsp),%rbx
    2997:	00 
    2998:	4c 8b ac 24 38 03 00 	mov    0x338(%rsp),%r13
    299f:	00 
    29a0:	48 89 c6             	mov    %rax,%rsi
    29a3:	48 89 b4 24 28 03 00 	mov    %rsi,0x328(%rsp)
    29aa:	00 
    29ab:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    29af:	48 89 d1             	mov    %rdx,%rcx
    29b2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    29b6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    29ba:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    29be:	be 01 00 00 00       	mov    $0x1,%esi
    29c3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    29c7:	be 01 00 00 00       	mov    $0x1,%esi
    29cc:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    29d0:	48 31 f6             	xor    %rsi,%rsi
    29d3:	4c 89 e2             	mov    %r12,%rdx
    29d6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    29dd:	00 00 00 
			29d8: R_X86_64_64	do_callback
    29e0:	48 89 9c 24 30 03 00 	mov    %rbx,0x330(%rsp)
    29e7:	00 
    29e8:	48 89 bc 24 38 03 00 	mov    %rdi,0x338(%rsp)
    29ef:	00 
    29f0:	4c 89 ac 24 40 03 00 	mov    %r13,0x340(%rsp)
    29f7:	00 
    29f8:	ff d0                	call   *%rax
    29fa:	48 8b 9c 24 30 03 00 	mov    0x330(%rsp),%rbx
    2a01:	00 
    2a02:	4c 8b ac 24 40 03 00 	mov    0x340(%rsp),%r13
    2a09:	00 
    2a0a:	48 89 c6             	mov    %rax,%rsi
    2a0d:	48 89 b4 24 30 03 00 	mov    %rsi,0x330(%rsp)
    2a14:	00 
    2a15:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2a19:	48 89 d1             	mov    %rdx,%rcx
    2a1c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2a20:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2a24:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2a28:	be 01 00 00 00       	mov    $0x1,%esi
    2a2d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2a31:	be 01 00 00 00       	mov    $0x1,%esi
    2a36:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2a3a:	48 31 f6             	xor    %rsi,%rsi
    2a3d:	4c 89 e2             	mov    %r12,%rdx
    2a40:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2a47:	00 00 00 
			2a42: R_X86_64_64	do_callback
    2a4a:	48 89 9c 24 38 03 00 	mov    %rbx,0x338(%rsp)
    2a51:	00 
    2a52:	48 89 bc 24 40 03 00 	mov    %rdi,0x340(%rsp)
    2a59:	00 
    2a5a:	4c 89 ac 24 48 03 00 	mov    %r13,0x348(%rsp)
    2a61:	00 
    2a62:	ff d0                	call   *%rax
    2a64:	48 8b 9c 24 38 03 00 	mov    0x338(%rsp),%rbx
    2a6b:	00 
    2a6c:	4c 8b ac 24 48 03 00 	mov    0x348(%rsp),%r13
    2a73:	00 
    2a74:	48 89 c6             	mov    %rax,%rsi
    2a77:	48 89 b4 24 38 03 00 	mov    %rsi,0x338(%rsp)
    2a7e:	00 
    2a7f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2a83:	48 89 d1             	mov    %rdx,%rcx
    2a86:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2a8a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2a8e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2a92:	be 01 00 00 00       	mov    $0x1,%esi
    2a97:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2a9b:	be 01 00 00 00       	mov    $0x1,%esi
    2aa0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2aa4:	48 31 f6             	xor    %rsi,%rsi
    2aa7:	4c 89 e2             	mov    %r12,%rdx
    2aaa:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2ab1:	00 00 00 
			2aac: R_X86_64_64	do_callback
    2ab4:	48 89 9c 24 40 03 00 	mov    %rbx,0x340(%rsp)
    2abb:	00 
    2abc:	48 89 bc 24 48 03 00 	mov    %rdi,0x348(%rsp)
    2ac3:	00 
    2ac4:	4c 89 ac 24 50 03 00 	mov    %r13,0x350(%rsp)
    2acb:	00 
    2acc:	ff d0                	call   *%rax
    2ace:	48 8b 9c 24 40 03 00 	mov    0x340(%rsp),%rbx
    2ad5:	00 
    2ad6:	4c 8b ac 24 50 03 00 	mov    0x350(%rsp),%r13
    2add:	00 
    2ade:	48 89 c6             	mov    %rax,%rsi
    2ae1:	48 89 b4 24 40 03 00 	mov    %rsi,0x340(%rsp)
    2ae8:	00 
    2ae9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2aed:	48 89 d1             	mov    %rdx,%rcx
    2af0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2af4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2af8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2afc:	be 01 00 00 00       	mov    $0x1,%esi
    2b01:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2b05:	be 01 00 00 00       	mov    $0x1,%esi
    2b0a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2b0e:	48 31 f6             	xor    %rsi,%rsi
    2b11:	4c 89 e2             	mov    %r12,%rdx
    2b14:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2b1b:	00 00 00 
			2b16: R_X86_64_64	do_callback
    2b1e:	48 89 9c 24 48 03 00 	mov    %rbx,0x348(%rsp)
    2b25:	00 
    2b26:	48 89 bc 24 50 03 00 	mov    %rdi,0x350(%rsp)
    2b2d:	00 
    2b2e:	4c 89 ac 24 58 03 00 	mov    %r13,0x358(%rsp)
    2b35:	00 
    2b36:	ff d0                	call   *%rax
    2b38:	48 8b 9c 24 48 03 00 	mov    0x348(%rsp),%rbx
    2b3f:	00 
    2b40:	4c 8b ac 24 58 03 00 	mov    0x358(%rsp),%r13
    2b47:	00 
    2b48:	48 89 c6             	mov    %rax,%rsi
    2b4b:	48 89 b4 24 48 03 00 	mov    %rsi,0x348(%rsp)
    2b52:	00 
    2b53:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2b57:	48 89 d1             	mov    %rdx,%rcx
    2b5a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2b5e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2b62:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2b66:	be 01 00 00 00       	mov    $0x1,%esi
    2b6b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2b6f:	be 01 00 00 00       	mov    $0x1,%esi
    2b74:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2b78:	48 31 f6             	xor    %rsi,%rsi
    2b7b:	4c 89 e2             	mov    %r12,%rdx
    2b7e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2b85:	00 00 00 
			2b80: R_X86_64_64	do_callback
    2b88:	48 89 9c 24 50 03 00 	mov    %rbx,0x350(%rsp)
    2b8f:	00 
    2b90:	48 89 bc 24 58 03 00 	mov    %rdi,0x358(%rsp)
    2b97:	00 
    2b98:	4c 89 ac 24 60 03 00 	mov    %r13,0x360(%rsp)
    2b9f:	00 
    2ba0:	ff d0                	call   *%rax
    2ba2:	48 8b 9c 24 50 03 00 	mov    0x350(%rsp),%rbx
    2ba9:	00 
    2baa:	4c 8b ac 24 60 03 00 	mov    0x360(%rsp),%r13
    2bb1:	00 
    2bb2:	48 89 c6             	mov    %rax,%rsi
    2bb5:	48 89 b4 24 50 03 00 	mov    %rsi,0x350(%rsp)
    2bbc:	00 
    2bbd:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2bc1:	48 89 d1             	mov    %rdx,%rcx
    2bc4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2bc8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2bcc:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2bd0:	be 01 00 00 00       	mov    $0x1,%esi
    2bd5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2bd9:	be 01 00 00 00       	mov    $0x1,%esi
    2bde:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2be2:	48 31 f6             	xor    %rsi,%rsi
    2be5:	4c 89 e2             	mov    %r12,%rdx
    2be8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2bef:	00 00 00 
			2bea: R_X86_64_64	do_callback
    2bf2:	48 89 9c 24 58 03 00 	mov    %rbx,0x358(%rsp)
    2bf9:	00 
    2bfa:	48 89 bc 24 60 03 00 	mov    %rdi,0x360(%rsp)
    2c01:	00 
    2c02:	4c 89 ac 24 68 03 00 	mov    %r13,0x368(%rsp)
    2c09:	00 
    2c0a:	ff d0                	call   *%rax
    2c0c:	48 8b 9c 24 58 03 00 	mov    0x358(%rsp),%rbx
    2c13:	00 
    2c14:	4c 8b ac 24 68 03 00 	mov    0x368(%rsp),%r13
    2c1b:	00 
    2c1c:	48 89 c6             	mov    %rax,%rsi
    2c1f:	48 89 b4 24 58 03 00 	mov    %rsi,0x358(%rsp)
    2c26:	00 
    2c27:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2c2b:	48 89 d1             	mov    %rdx,%rcx
    2c2e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2c32:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2c36:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2c3a:	be 01 00 00 00       	mov    $0x1,%esi
    2c3f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2c43:	be 01 00 00 00       	mov    $0x1,%esi
    2c48:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2c4c:	48 31 f6             	xor    %rsi,%rsi
    2c4f:	4c 89 e2             	mov    %r12,%rdx
    2c52:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2c59:	00 00 00 
			2c54: R_X86_64_64	do_callback
    2c5c:	48 89 9c 24 60 03 00 	mov    %rbx,0x360(%rsp)
    2c63:	00 
    2c64:	48 89 bc 24 68 03 00 	mov    %rdi,0x368(%rsp)
    2c6b:	00 
    2c6c:	4c 89 ac 24 70 03 00 	mov    %r13,0x370(%rsp)
    2c73:	00 
    2c74:	ff d0                	call   *%rax
    2c76:	48 8b 9c 24 60 03 00 	mov    0x360(%rsp),%rbx
    2c7d:	00 
    2c7e:	4c 8b ac 24 70 03 00 	mov    0x370(%rsp),%r13
    2c85:	00 
    2c86:	48 89 c6             	mov    %rax,%rsi
    2c89:	48 89 b4 24 60 03 00 	mov    %rsi,0x360(%rsp)
    2c90:	00 
    2c91:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2c95:	48 89 d1             	mov    %rdx,%rcx
    2c98:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2c9c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2ca0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2ca4:	be 01 00 00 00       	mov    $0x1,%esi
    2ca9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2cad:	be 01 00 00 00       	mov    $0x1,%esi
    2cb2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2cb6:	48 31 f6             	xor    %rsi,%rsi
    2cb9:	4c 89 e2             	mov    %r12,%rdx
    2cbc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2cc3:	00 00 00 
			2cbe: R_X86_64_64	do_callback
    2cc6:	48 89 9c 24 68 03 00 	mov    %rbx,0x368(%rsp)
    2ccd:	00 
    2cce:	48 89 bc 24 70 03 00 	mov    %rdi,0x370(%rsp)
    2cd5:	00 
    2cd6:	4c 89 ac 24 78 03 00 	mov    %r13,0x378(%rsp)
    2cdd:	00 
    2cde:	ff d0                	call   *%rax
    2ce0:	48 8b 9c 24 68 03 00 	mov    0x368(%rsp),%rbx
    2ce7:	00 
    2ce8:	4c 8b ac 24 78 03 00 	mov    0x378(%rsp),%r13
    2cef:	00 
    2cf0:	48 89 c6             	mov    %rax,%rsi
    2cf3:	48 89 b4 24 68 03 00 	mov    %rsi,0x368(%rsp)
    2cfa:	00 
    2cfb:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2cff:	48 89 d1             	mov    %rdx,%rcx
    2d02:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2d06:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2d0a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2d0e:	be 01 00 00 00       	mov    $0x1,%esi
    2d13:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2d17:	be 01 00 00 00       	mov    $0x1,%esi
    2d1c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2d20:	48 31 f6             	xor    %rsi,%rsi
    2d23:	4c 89 e2             	mov    %r12,%rdx
    2d26:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2d2d:	00 00 00 
			2d28: R_X86_64_64	do_callback
    2d30:	48 89 9c 24 70 03 00 	mov    %rbx,0x370(%rsp)
    2d37:	00 
    2d38:	48 89 bc 24 78 03 00 	mov    %rdi,0x378(%rsp)
    2d3f:	00 
    2d40:	4c 89 ac 24 80 03 00 	mov    %r13,0x380(%rsp)
    2d47:	00 
    2d48:	ff d0                	call   *%rax
    2d4a:	48 8b 9c 24 70 03 00 	mov    0x370(%rsp),%rbx
    2d51:	00 
    2d52:	4c 8b ac 24 80 03 00 	mov    0x380(%rsp),%r13
    2d59:	00 
    2d5a:	48 89 c6             	mov    %rax,%rsi
    2d5d:	48 89 b4 24 70 03 00 	mov    %rsi,0x370(%rsp)
    2d64:	00 
    2d65:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2d69:	48 89 d1             	mov    %rdx,%rcx
    2d6c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2d70:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2d74:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2d78:	be 01 00 00 00       	mov    $0x1,%esi
    2d7d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2d81:	be 01 00 00 00       	mov    $0x1,%esi
    2d86:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2d8a:	48 31 f6             	xor    %rsi,%rsi
    2d8d:	4c 89 e2             	mov    %r12,%rdx
    2d90:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2d97:	00 00 00 
			2d92: R_X86_64_64	do_callback
    2d9a:	48 89 9c 24 78 03 00 	mov    %rbx,0x378(%rsp)
    2da1:	00 
    2da2:	48 89 bc 24 80 03 00 	mov    %rdi,0x380(%rsp)
    2da9:	00 
    2daa:	4c 89 ac 24 88 03 00 	mov    %r13,0x388(%rsp)
    2db1:	00 
    2db2:	ff d0                	call   *%rax
    2db4:	48 8b 9c 24 78 03 00 	mov    0x378(%rsp),%rbx
    2dbb:	00 
    2dbc:	4c 8b ac 24 88 03 00 	mov    0x388(%rsp),%r13
    2dc3:	00 
    2dc4:	48 89 c6             	mov    %rax,%rsi
    2dc7:	48 89 b4 24 78 03 00 	mov    %rsi,0x378(%rsp)
    2dce:	00 
    2dcf:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2dd3:	48 89 d1             	mov    %rdx,%rcx
    2dd6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2dda:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2dde:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2de2:	be 01 00 00 00       	mov    $0x1,%esi
    2de7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2deb:	be 01 00 00 00       	mov    $0x1,%esi
    2df0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2df4:	48 31 f6             	xor    %rsi,%rsi
    2df7:	4c 89 e2             	mov    %r12,%rdx
    2dfa:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2e01:	00 00 00 
			2dfc: R_X86_64_64	do_callback
    2e04:	48 89 9c 24 80 03 00 	mov    %rbx,0x380(%rsp)
    2e0b:	00 
    2e0c:	48 89 bc 24 88 03 00 	mov    %rdi,0x388(%rsp)
    2e13:	00 
    2e14:	4c 89 ac 24 90 03 00 	mov    %r13,0x390(%rsp)
    2e1b:	00 
    2e1c:	ff d0                	call   *%rax
    2e1e:	48 8b 9c 24 80 03 00 	mov    0x380(%rsp),%rbx
    2e25:	00 
    2e26:	4c 8b ac 24 90 03 00 	mov    0x390(%rsp),%r13
    2e2d:	00 
    2e2e:	48 89 c6             	mov    %rax,%rsi
    2e31:	48 89 b4 24 80 03 00 	mov    %rsi,0x380(%rsp)
    2e38:	00 
    2e39:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2e3d:	48 89 d1             	mov    %rdx,%rcx
    2e40:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2e44:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2e48:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2e4c:	be 01 00 00 00       	mov    $0x1,%esi
    2e51:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2e55:	be 01 00 00 00       	mov    $0x1,%esi
    2e5a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2e5e:	48 31 f6             	xor    %rsi,%rsi
    2e61:	4c 89 e2             	mov    %r12,%rdx
    2e64:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2e6b:	00 00 00 
			2e66: R_X86_64_64	do_callback
    2e6e:	48 89 9c 24 88 03 00 	mov    %rbx,0x388(%rsp)
    2e75:	00 
    2e76:	48 89 bc 24 90 03 00 	mov    %rdi,0x390(%rsp)
    2e7d:	00 
    2e7e:	4c 89 ac 24 98 03 00 	mov    %r13,0x398(%rsp)
    2e85:	00 
    2e86:	ff d0                	call   *%rax
    2e88:	48 8b 9c 24 88 03 00 	mov    0x388(%rsp),%rbx
    2e8f:	00 
    2e90:	4c 8b ac 24 98 03 00 	mov    0x398(%rsp),%r13
    2e97:	00 
    2e98:	48 89 c6             	mov    %rax,%rsi
    2e9b:	48 89 b4 24 88 03 00 	mov    %rsi,0x388(%rsp)
    2ea2:	00 
    2ea3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2ea7:	48 89 d1             	mov    %rdx,%rcx
    2eaa:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2eae:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2eb2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2eb6:	be 01 00 00 00       	mov    $0x1,%esi
    2ebb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2ebf:	be 01 00 00 00       	mov    $0x1,%esi
    2ec4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2ec8:	48 31 f6             	xor    %rsi,%rsi
    2ecb:	4c 89 e2             	mov    %r12,%rdx
    2ece:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2ed5:	00 00 00 
			2ed0: R_X86_64_64	do_callback
    2ed8:	48 89 9c 24 90 03 00 	mov    %rbx,0x390(%rsp)
    2edf:	00 
    2ee0:	48 89 bc 24 98 03 00 	mov    %rdi,0x398(%rsp)
    2ee7:	00 
    2ee8:	4c 89 ac 24 a0 03 00 	mov    %r13,0x3a0(%rsp)
    2eef:	00 
    2ef0:	ff d0                	call   *%rax
    2ef2:	48 8b 9c 24 90 03 00 	mov    0x390(%rsp),%rbx
    2ef9:	00 
    2efa:	4c 8b ac 24 a0 03 00 	mov    0x3a0(%rsp),%r13
    2f01:	00 
    2f02:	48 89 c6             	mov    %rax,%rsi
    2f05:	48 89 b4 24 90 03 00 	mov    %rsi,0x390(%rsp)
    2f0c:	00 
    2f0d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2f11:	48 89 d1             	mov    %rdx,%rcx
    2f14:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2f18:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2f1c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2f20:	be 01 00 00 00       	mov    $0x1,%esi
    2f25:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2f29:	be 01 00 00 00       	mov    $0x1,%esi
    2f2e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2f32:	48 31 f6             	xor    %rsi,%rsi
    2f35:	4c 89 e2             	mov    %r12,%rdx
    2f38:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2f3f:	00 00 00 
			2f3a: R_X86_64_64	do_callback
    2f42:	48 89 9c 24 98 03 00 	mov    %rbx,0x398(%rsp)
    2f49:	00 
    2f4a:	48 89 bc 24 a0 03 00 	mov    %rdi,0x3a0(%rsp)
    2f51:	00 
    2f52:	4c 89 ac 24 a8 03 00 	mov    %r13,0x3a8(%rsp)
    2f59:	00 
    2f5a:	ff d0                	call   *%rax
    2f5c:	48 8b 9c 24 98 03 00 	mov    0x398(%rsp),%rbx
    2f63:	00 
    2f64:	4c 8b ac 24 a8 03 00 	mov    0x3a8(%rsp),%r13
    2f6b:	00 
    2f6c:	48 89 c6             	mov    %rax,%rsi
    2f6f:	48 89 b4 24 98 03 00 	mov    %rsi,0x398(%rsp)
    2f76:	00 
    2f77:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2f7b:	48 89 d1             	mov    %rdx,%rcx
    2f7e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2f82:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2f86:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2f8a:	be 01 00 00 00       	mov    $0x1,%esi
    2f8f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2f93:	be 01 00 00 00       	mov    $0x1,%esi
    2f98:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    2f9c:	48 31 f6             	xor    %rsi,%rsi
    2f9f:	4c 89 e2             	mov    %r12,%rdx
    2fa2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    2fa9:	00 00 00 
			2fa4: R_X86_64_64	do_callback
    2fac:	48 89 9c 24 a0 03 00 	mov    %rbx,0x3a0(%rsp)
    2fb3:	00 
    2fb4:	48 89 bc 24 a8 03 00 	mov    %rdi,0x3a8(%rsp)
    2fbb:	00 
    2fbc:	4c 89 ac 24 b0 03 00 	mov    %r13,0x3b0(%rsp)
    2fc3:	00 
    2fc4:	ff d0                	call   *%rax
    2fc6:	48 8b 9c 24 a0 03 00 	mov    0x3a0(%rsp),%rbx
    2fcd:	00 
    2fce:	4c 8b ac 24 b0 03 00 	mov    0x3b0(%rsp),%r13
    2fd5:	00 
    2fd6:	48 89 c6             	mov    %rax,%rsi
    2fd9:	48 89 b4 24 a0 03 00 	mov    %rsi,0x3a0(%rsp)
    2fe0:	00 
    2fe1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2fe5:	48 89 d1             	mov    %rdx,%rcx
    2fe8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    2fec:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    2ff0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    2ff4:	be 01 00 00 00       	mov    $0x1,%esi
    2ff9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    2ffd:	be 01 00 00 00       	mov    $0x1,%esi
    3002:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3006:	48 31 f6             	xor    %rsi,%rsi
    3009:	4c 89 e2             	mov    %r12,%rdx
    300c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3013:	00 00 00 
			300e: R_X86_64_64	do_callback
    3016:	48 89 9c 24 a8 03 00 	mov    %rbx,0x3a8(%rsp)
    301d:	00 
    301e:	48 89 bc 24 b0 03 00 	mov    %rdi,0x3b0(%rsp)
    3025:	00 
    3026:	4c 89 ac 24 b8 03 00 	mov    %r13,0x3b8(%rsp)
    302d:	00 
    302e:	ff d0                	call   *%rax
    3030:	48 8b 9c 24 a8 03 00 	mov    0x3a8(%rsp),%rbx
    3037:	00 
    3038:	4c 8b ac 24 b8 03 00 	mov    0x3b8(%rsp),%r13
    303f:	00 
    3040:	48 89 c6             	mov    %rax,%rsi
    3043:	48 89 b4 24 a8 03 00 	mov    %rsi,0x3a8(%rsp)
    304a:	00 
    304b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    304f:	48 89 d1             	mov    %rdx,%rcx
    3052:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3056:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    305a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    305e:	be 01 00 00 00       	mov    $0x1,%esi
    3063:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3067:	be 01 00 00 00       	mov    $0x1,%esi
    306c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3070:	48 31 f6             	xor    %rsi,%rsi
    3073:	4c 89 e2             	mov    %r12,%rdx
    3076:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    307d:	00 00 00 
			3078: R_X86_64_64	do_callback
    3080:	48 89 9c 24 b0 03 00 	mov    %rbx,0x3b0(%rsp)
    3087:	00 
    3088:	48 89 bc 24 b8 03 00 	mov    %rdi,0x3b8(%rsp)
    308f:	00 
    3090:	4c 89 ac 24 c0 03 00 	mov    %r13,0x3c0(%rsp)
    3097:	00 
    3098:	ff d0                	call   *%rax
    309a:	48 8b 9c 24 b0 03 00 	mov    0x3b0(%rsp),%rbx
    30a1:	00 
    30a2:	4c 8b ac 24 c0 03 00 	mov    0x3c0(%rsp),%r13
    30a9:	00 
    30aa:	48 89 c6             	mov    %rax,%rsi
    30ad:	48 89 b4 24 b0 03 00 	mov    %rsi,0x3b0(%rsp)
    30b4:	00 
    30b5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    30b9:	48 89 d1             	mov    %rdx,%rcx
    30bc:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    30c0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    30c4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    30c8:	be 01 00 00 00       	mov    $0x1,%esi
    30cd:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    30d1:	be 01 00 00 00       	mov    $0x1,%esi
    30d6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    30da:	48 31 f6             	xor    %rsi,%rsi
    30dd:	4c 89 e2             	mov    %r12,%rdx
    30e0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    30e7:	00 00 00 
			30e2: R_X86_64_64	do_callback
    30ea:	48 89 9c 24 b8 03 00 	mov    %rbx,0x3b8(%rsp)
    30f1:	00 
    30f2:	48 89 bc 24 c0 03 00 	mov    %rdi,0x3c0(%rsp)
    30f9:	00 
    30fa:	4c 89 ac 24 c8 03 00 	mov    %r13,0x3c8(%rsp)
    3101:	00 
    3102:	ff d0                	call   *%rax
    3104:	48 8b 9c 24 b8 03 00 	mov    0x3b8(%rsp),%rbx
    310b:	00 
    310c:	4c 8b ac 24 c8 03 00 	mov    0x3c8(%rsp),%r13
    3113:	00 
    3114:	48 89 c6             	mov    %rax,%rsi
    3117:	48 89 b4 24 b8 03 00 	mov    %rsi,0x3b8(%rsp)
    311e:	00 
    311f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3123:	48 89 d1             	mov    %rdx,%rcx
    3126:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    312a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    312e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3132:	be 01 00 00 00       	mov    $0x1,%esi
    3137:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    313b:	be 01 00 00 00       	mov    $0x1,%esi
    3140:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3144:	48 31 f6             	xor    %rsi,%rsi
    3147:	4c 89 e2             	mov    %r12,%rdx
    314a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3151:	00 00 00 
			314c: R_X86_64_64	do_callback
    3154:	48 89 9c 24 c0 03 00 	mov    %rbx,0x3c0(%rsp)
    315b:	00 
    315c:	48 89 bc 24 c8 03 00 	mov    %rdi,0x3c8(%rsp)
    3163:	00 
    3164:	4c 89 ac 24 d0 03 00 	mov    %r13,0x3d0(%rsp)
    316b:	00 
    316c:	ff d0                	call   *%rax
    316e:	48 8b 9c 24 c0 03 00 	mov    0x3c0(%rsp),%rbx
    3175:	00 
    3176:	4c 8b ac 24 d0 03 00 	mov    0x3d0(%rsp),%r13
    317d:	00 
    317e:	48 89 c6             	mov    %rax,%rsi
    3181:	48 89 b4 24 c0 03 00 	mov    %rsi,0x3c0(%rsp)
    3188:	00 
    3189:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    318d:	48 89 d1             	mov    %rdx,%rcx
    3190:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3194:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3198:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    319c:	be 01 00 00 00       	mov    $0x1,%esi
    31a1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    31a5:	be 01 00 00 00       	mov    $0x1,%esi
    31aa:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    31ae:	48 31 f6             	xor    %rsi,%rsi
    31b1:	4c 89 e2             	mov    %r12,%rdx
    31b4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    31bb:	00 00 00 
			31b6: R_X86_64_64	do_callback
    31be:	48 89 9c 24 c8 03 00 	mov    %rbx,0x3c8(%rsp)
    31c5:	00 
    31c6:	48 89 bc 24 d0 03 00 	mov    %rdi,0x3d0(%rsp)
    31cd:	00 
    31ce:	4c 89 ac 24 d8 03 00 	mov    %r13,0x3d8(%rsp)
    31d5:	00 
    31d6:	ff d0                	call   *%rax
    31d8:	48 8b 9c 24 c8 03 00 	mov    0x3c8(%rsp),%rbx
    31df:	00 
    31e0:	4c 8b ac 24 d8 03 00 	mov    0x3d8(%rsp),%r13
    31e7:	00 
    31e8:	48 89 c6             	mov    %rax,%rsi
    31eb:	48 89 b4 24 c8 03 00 	mov    %rsi,0x3c8(%rsp)
    31f2:	00 
    31f3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    31f7:	48 89 d1             	mov    %rdx,%rcx
    31fa:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    31fe:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3202:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3206:	be 01 00 00 00       	mov    $0x1,%esi
    320b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    320f:	be 01 00 00 00       	mov    $0x1,%esi
    3214:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3218:	48 31 f6             	xor    %rsi,%rsi
    321b:	4c 89 e2             	mov    %r12,%rdx
    321e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3225:	00 00 00 
			3220: R_X86_64_64	do_callback
    3228:	48 89 9c 24 d0 03 00 	mov    %rbx,0x3d0(%rsp)
    322f:	00 
    3230:	48 89 bc 24 d8 03 00 	mov    %rdi,0x3d8(%rsp)
    3237:	00 
    3238:	4c 89 ac 24 e0 03 00 	mov    %r13,0x3e0(%rsp)
    323f:	00 
    3240:	ff d0                	call   *%rax
    3242:	48 8b 9c 24 d0 03 00 	mov    0x3d0(%rsp),%rbx
    3249:	00 
    324a:	4c 8b ac 24 e0 03 00 	mov    0x3e0(%rsp),%r13
    3251:	00 
    3252:	48 89 c6             	mov    %rax,%rsi
    3255:	48 89 b4 24 d0 03 00 	mov    %rsi,0x3d0(%rsp)
    325c:	00 
    325d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3261:	48 89 d1             	mov    %rdx,%rcx
    3264:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3268:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    326c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3270:	be 01 00 00 00       	mov    $0x1,%esi
    3275:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3279:	be 01 00 00 00       	mov    $0x1,%esi
    327e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3282:	48 31 f6             	xor    %rsi,%rsi
    3285:	4c 89 e2             	mov    %r12,%rdx
    3288:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    328f:	00 00 00 
			328a: R_X86_64_64	do_callback
    3292:	48 89 9c 24 d8 03 00 	mov    %rbx,0x3d8(%rsp)
    3299:	00 
    329a:	48 89 bc 24 e0 03 00 	mov    %rdi,0x3e0(%rsp)
    32a1:	00 
    32a2:	4c 89 ac 24 e8 03 00 	mov    %r13,0x3e8(%rsp)
    32a9:	00 
    32aa:	ff d0                	call   *%rax
    32ac:	48 8b 9c 24 d8 03 00 	mov    0x3d8(%rsp),%rbx
    32b3:	00 
    32b4:	4c 8b ac 24 e8 03 00 	mov    0x3e8(%rsp),%r13
    32bb:	00 
    32bc:	48 89 c6             	mov    %rax,%rsi
    32bf:	48 89 b4 24 d8 03 00 	mov    %rsi,0x3d8(%rsp)
    32c6:	00 
    32c7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    32cb:	48 89 d1             	mov    %rdx,%rcx
    32ce:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    32d2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    32d6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    32da:	be 01 00 00 00       	mov    $0x1,%esi
    32df:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    32e3:	be 01 00 00 00       	mov    $0x1,%esi
    32e8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    32ec:	48 31 f6             	xor    %rsi,%rsi
    32ef:	4c 89 e2             	mov    %r12,%rdx
    32f2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    32f9:	00 00 00 
			32f4: R_X86_64_64	do_callback
    32fc:	48 89 9c 24 e0 03 00 	mov    %rbx,0x3e0(%rsp)
    3303:	00 
    3304:	48 89 bc 24 e8 03 00 	mov    %rdi,0x3e8(%rsp)
    330b:	00 
    330c:	4c 89 ac 24 f0 03 00 	mov    %r13,0x3f0(%rsp)
    3313:	00 
    3314:	ff d0                	call   *%rax
    3316:	48 8b 9c 24 e0 03 00 	mov    0x3e0(%rsp),%rbx
    331d:	00 
    331e:	4c 8b ac 24 f0 03 00 	mov    0x3f0(%rsp),%r13
    3325:	00 
    3326:	48 89 c6             	mov    %rax,%rsi
    3329:	48 89 b4 24 e0 03 00 	mov    %rsi,0x3e0(%rsp)
    3330:	00 
    3331:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3335:	48 89 d1             	mov    %rdx,%rcx
    3338:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    333c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3340:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3344:	be 01 00 00 00       	mov    $0x1,%esi
    3349:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    334d:	be 01 00 00 00       	mov    $0x1,%esi
    3352:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3356:	48 31 f6             	xor    %rsi,%rsi
    3359:	4c 89 e2             	mov    %r12,%rdx
    335c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3363:	00 00 00 
			335e: R_X86_64_64	do_callback
    3366:	48 89 9c 24 e8 03 00 	mov    %rbx,0x3e8(%rsp)
    336d:	00 
    336e:	48 89 bc 24 f0 03 00 	mov    %rdi,0x3f0(%rsp)
    3375:	00 
    3376:	4c 89 ac 24 f8 03 00 	mov    %r13,0x3f8(%rsp)
    337d:	00 
    337e:	ff d0                	call   *%rax
    3380:	48 8b 9c 24 e8 03 00 	mov    0x3e8(%rsp),%rbx
    3387:	00 
    3388:	4c 8b ac 24 f8 03 00 	mov    0x3f8(%rsp),%r13
    338f:	00 
    3390:	48 89 c6             	mov    %rax,%rsi
    3393:	48 89 b4 24 e8 03 00 	mov    %rsi,0x3e8(%rsp)
    339a:	00 
    339b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    339f:	48 89 d1             	mov    %rdx,%rcx
    33a2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    33a6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    33aa:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    33ae:	be 01 00 00 00       	mov    $0x1,%esi
    33b3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    33b7:	be 01 00 00 00       	mov    $0x1,%esi
    33bc:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    33c0:	48 31 f6             	xor    %rsi,%rsi
    33c3:	4c 89 e2             	mov    %r12,%rdx
    33c6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    33cd:	00 00 00 
			33c8: R_X86_64_64	do_callback
    33d0:	48 89 9c 24 f0 03 00 	mov    %rbx,0x3f0(%rsp)
    33d7:	00 
    33d8:	48 89 bc 24 f8 03 00 	mov    %rdi,0x3f8(%rsp)
    33df:	00 
    33e0:	4c 89 ac 24 00 04 00 	mov    %r13,0x400(%rsp)
    33e7:	00 
    33e8:	ff d0                	call   *%rax
    33ea:	48 8b 9c 24 f0 03 00 	mov    0x3f0(%rsp),%rbx
    33f1:	00 
    33f2:	4c 8b ac 24 00 04 00 	mov    0x400(%rsp),%r13
    33f9:	00 
    33fa:	48 89 c6             	mov    %rax,%rsi
    33fd:	48 89 b4 24 f0 03 00 	mov    %rsi,0x3f0(%rsp)
    3404:	00 
    3405:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3409:	48 89 d1             	mov    %rdx,%rcx
    340c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3410:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3414:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3418:	be 01 00 00 00       	mov    $0x1,%esi
    341d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3421:	be 01 00 00 00       	mov    $0x1,%esi
    3426:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    342a:	48 31 f6             	xor    %rsi,%rsi
    342d:	4c 89 e2             	mov    %r12,%rdx
    3430:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3437:	00 00 00 
			3432: R_X86_64_64	do_callback
    343a:	48 89 9c 24 f8 03 00 	mov    %rbx,0x3f8(%rsp)
    3441:	00 
    3442:	48 89 bc 24 00 04 00 	mov    %rdi,0x400(%rsp)
    3449:	00 
    344a:	4c 89 ac 24 08 04 00 	mov    %r13,0x408(%rsp)
    3451:	00 
    3452:	ff d0                	call   *%rax
    3454:	48 8b 9c 24 f8 03 00 	mov    0x3f8(%rsp),%rbx
    345b:	00 
    345c:	4c 8b ac 24 08 04 00 	mov    0x408(%rsp),%r13
    3463:	00 
    3464:	48 89 c6             	mov    %rax,%rsi
    3467:	48 89 b4 24 f8 03 00 	mov    %rsi,0x3f8(%rsp)
    346e:	00 
    346f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3473:	48 89 d1             	mov    %rdx,%rcx
    3476:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    347a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    347e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3482:	be 01 00 00 00       	mov    $0x1,%esi
    3487:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    348b:	be 01 00 00 00       	mov    $0x1,%esi
    3490:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3494:	48 31 f6             	xor    %rsi,%rsi
    3497:	4c 89 e2             	mov    %r12,%rdx
    349a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    34a1:	00 00 00 
			349c: R_X86_64_64	do_callback
    34a4:	48 89 9c 24 00 04 00 	mov    %rbx,0x400(%rsp)
    34ab:	00 
    34ac:	48 89 bc 24 08 04 00 	mov    %rdi,0x408(%rsp)
    34b3:	00 
    34b4:	4c 89 ac 24 10 04 00 	mov    %r13,0x410(%rsp)
    34bb:	00 
    34bc:	ff d0                	call   *%rax
    34be:	48 8b 9c 24 00 04 00 	mov    0x400(%rsp),%rbx
    34c5:	00 
    34c6:	4c 8b ac 24 10 04 00 	mov    0x410(%rsp),%r13
    34cd:	00 
    34ce:	48 89 c6             	mov    %rax,%rsi
    34d1:	48 89 b4 24 00 04 00 	mov    %rsi,0x400(%rsp)
    34d8:	00 
    34d9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    34dd:	48 89 d1             	mov    %rdx,%rcx
    34e0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    34e4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    34e8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    34ec:	be 01 00 00 00       	mov    $0x1,%esi
    34f1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    34f5:	be 01 00 00 00       	mov    $0x1,%esi
    34fa:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    34fe:	48 31 f6             	xor    %rsi,%rsi
    3501:	4c 89 e2             	mov    %r12,%rdx
    3504:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    350b:	00 00 00 
			3506: R_X86_64_64	do_callback
    350e:	48 89 9c 24 08 04 00 	mov    %rbx,0x408(%rsp)
    3515:	00 
    3516:	48 89 bc 24 10 04 00 	mov    %rdi,0x410(%rsp)
    351d:	00 
    351e:	4c 89 ac 24 18 04 00 	mov    %r13,0x418(%rsp)
    3525:	00 
    3526:	ff d0                	call   *%rax
    3528:	48 8b 9c 24 08 04 00 	mov    0x408(%rsp),%rbx
    352f:	00 
    3530:	4c 8b ac 24 18 04 00 	mov    0x418(%rsp),%r13
    3537:	00 
    3538:	48 89 c6             	mov    %rax,%rsi
    353b:	48 89 b4 24 08 04 00 	mov    %rsi,0x408(%rsp)
    3542:	00 
    3543:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3547:	48 89 d1             	mov    %rdx,%rcx
    354a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    354e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3552:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3556:	be 01 00 00 00       	mov    $0x1,%esi
    355b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    355f:	be 01 00 00 00       	mov    $0x1,%esi
    3564:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3568:	48 31 f6             	xor    %rsi,%rsi
    356b:	4c 89 e2             	mov    %r12,%rdx
    356e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3575:	00 00 00 
			3570: R_X86_64_64	do_callback
    3578:	48 89 9c 24 10 04 00 	mov    %rbx,0x410(%rsp)
    357f:	00 
    3580:	48 89 bc 24 18 04 00 	mov    %rdi,0x418(%rsp)
    3587:	00 
    3588:	4c 89 ac 24 20 04 00 	mov    %r13,0x420(%rsp)
    358f:	00 
    3590:	ff d0                	call   *%rax
    3592:	48 8b 9c 24 10 04 00 	mov    0x410(%rsp),%rbx
    3599:	00 
    359a:	4c 8b ac 24 20 04 00 	mov    0x420(%rsp),%r13
    35a1:	00 
    35a2:	48 89 c6             	mov    %rax,%rsi
    35a5:	48 89 b4 24 10 04 00 	mov    %rsi,0x410(%rsp)
    35ac:	00 
    35ad:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    35b1:	48 89 d1             	mov    %rdx,%rcx
    35b4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    35b8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    35bc:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    35c0:	be 01 00 00 00       	mov    $0x1,%esi
    35c5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    35c9:	be 01 00 00 00       	mov    $0x1,%esi
    35ce:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    35d2:	48 31 f6             	xor    %rsi,%rsi
    35d5:	4c 89 e2             	mov    %r12,%rdx
    35d8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    35df:	00 00 00 
			35da: R_X86_64_64	do_callback
    35e2:	48 89 9c 24 18 04 00 	mov    %rbx,0x418(%rsp)
    35e9:	00 
    35ea:	48 89 bc 24 20 04 00 	mov    %rdi,0x420(%rsp)
    35f1:	00 
    35f2:	4c 89 ac 24 28 04 00 	mov    %r13,0x428(%rsp)
    35f9:	00 
    35fa:	ff d0                	call   *%rax
    35fc:	48 8b 9c 24 18 04 00 	mov    0x418(%rsp),%rbx
    3603:	00 
    3604:	4c 8b ac 24 28 04 00 	mov    0x428(%rsp),%r13
    360b:	00 
    360c:	48 89 c6             	mov    %rax,%rsi
    360f:	48 89 b4 24 18 04 00 	mov    %rsi,0x418(%rsp)
    3616:	00 
    3617:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    361b:	48 89 d1             	mov    %rdx,%rcx
    361e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3622:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3626:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    362a:	be 01 00 00 00       	mov    $0x1,%esi
    362f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3633:	be 01 00 00 00       	mov    $0x1,%esi
    3638:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    363c:	48 31 f6             	xor    %rsi,%rsi
    363f:	4c 89 e2             	mov    %r12,%rdx
    3642:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3649:	00 00 00 
			3644: R_X86_64_64	do_callback
    364c:	48 89 9c 24 20 04 00 	mov    %rbx,0x420(%rsp)
    3653:	00 
    3654:	48 89 bc 24 28 04 00 	mov    %rdi,0x428(%rsp)
    365b:	00 
    365c:	4c 89 ac 24 30 04 00 	mov    %r13,0x430(%rsp)
    3663:	00 
    3664:	ff d0                	call   *%rax
    3666:	48 8b 9c 24 20 04 00 	mov    0x420(%rsp),%rbx
    366d:	00 
    366e:	4c 8b ac 24 30 04 00 	mov    0x430(%rsp),%r13
    3675:	00 
    3676:	48 89 c6             	mov    %rax,%rsi
    3679:	48 89 b4 24 20 04 00 	mov    %rsi,0x420(%rsp)
    3680:	00 
    3681:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3685:	48 89 d1             	mov    %rdx,%rcx
    3688:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    368c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3690:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3694:	be 01 00 00 00       	mov    $0x1,%esi
    3699:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    369d:	be 01 00 00 00       	mov    $0x1,%esi
    36a2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    36a6:	48 31 f6             	xor    %rsi,%rsi
    36a9:	4c 89 e2             	mov    %r12,%rdx
    36ac:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    36b3:	00 00 00 
			36ae: R_X86_64_64	do_callback
    36b6:	48 89 9c 24 28 04 00 	mov    %rbx,0x428(%rsp)
    36bd:	00 
    36be:	48 89 bc 24 30 04 00 	mov    %rdi,0x430(%rsp)
    36c5:	00 
    36c6:	4c 89 ac 24 38 04 00 	mov    %r13,0x438(%rsp)
    36cd:	00 
    36ce:	ff d0                	call   *%rax
    36d0:	48 8b 9c 24 28 04 00 	mov    0x428(%rsp),%rbx
    36d7:	00 
    36d8:	4c 8b ac 24 38 04 00 	mov    0x438(%rsp),%r13
    36df:	00 
    36e0:	48 89 c6             	mov    %rax,%rsi
    36e3:	48 89 b4 24 28 04 00 	mov    %rsi,0x428(%rsp)
    36ea:	00 
    36eb:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    36ef:	48 89 d1             	mov    %rdx,%rcx
    36f2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    36f6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    36fa:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    36fe:	be 01 00 00 00       	mov    $0x1,%esi
    3703:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3707:	be 01 00 00 00       	mov    $0x1,%esi
    370c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3710:	48 31 f6             	xor    %rsi,%rsi
    3713:	4c 89 e2             	mov    %r12,%rdx
    3716:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    371d:	00 00 00 
			3718: R_X86_64_64	do_callback
    3720:	48 89 9c 24 30 04 00 	mov    %rbx,0x430(%rsp)
    3727:	00 
    3728:	48 89 bc 24 38 04 00 	mov    %rdi,0x438(%rsp)
    372f:	00 
    3730:	4c 89 ac 24 40 04 00 	mov    %r13,0x440(%rsp)
    3737:	00 
    3738:	ff d0                	call   *%rax
    373a:	48 8b 9c 24 30 04 00 	mov    0x430(%rsp),%rbx
    3741:	00 
    3742:	4c 8b ac 24 40 04 00 	mov    0x440(%rsp),%r13
    3749:	00 
    374a:	48 89 c6             	mov    %rax,%rsi
    374d:	48 89 b4 24 30 04 00 	mov    %rsi,0x430(%rsp)
    3754:	00 
    3755:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3759:	48 89 d1             	mov    %rdx,%rcx
    375c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3760:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3764:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3768:	be 01 00 00 00       	mov    $0x1,%esi
    376d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3771:	be 01 00 00 00       	mov    $0x1,%esi
    3776:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    377a:	48 31 f6             	xor    %rsi,%rsi
    377d:	4c 89 e2             	mov    %r12,%rdx
    3780:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3787:	00 00 00 
			3782: R_X86_64_64	do_callback
    378a:	48 89 9c 24 38 04 00 	mov    %rbx,0x438(%rsp)
    3791:	00 
    3792:	48 89 bc 24 40 04 00 	mov    %rdi,0x440(%rsp)
    3799:	00 
    379a:	4c 89 ac 24 48 04 00 	mov    %r13,0x448(%rsp)
    37a1:	00 
    37a2:	ff d0                	call   *%rax
    37a4:	48 8b 9c 24 38 04 00 	mov    0x438(%rsp),%rbx
    37ab:	00 
    37ac:	4c 8b ac 24 48 04 00 	mov    0x448(%rsp),%r13
    37b3:	00 
    37b4:	48 89 c6             	mov    %rax,%rsi
    37b7:	48 89 b4 24 38 04 00 	mov    %rsi,0x438(%rsp)
    37be:	00 
    37bf:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    37c3:	48 89 d1             	mov    %rdx,%rcx
    37c6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    37ca:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    37ce:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    37d2:	be 01 00 00 00       	mov    $0x1,%esi
    37d7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    37db:	be 01 00 00 00       	mov    $0x1,%esi
    37e0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    37e4:	48 31 f6             	xor    %rsi,%rsi
    37e7:	4c 89 e2             	mov    %r12,%rdx
    37ea:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    37f1:	00 00 00 
			37ec: R_X86_64_64	do_callback
    37f4:	48 89 9c 24 40 04 00 	mov    %rbx,0x440(%rsp)
    37fb:	00 
    37fc:	48 89 bc 24 48 04 00 	mov    %rdi,0x448(%rsp)
    3803:	00 
    3804:	4c 89 ac 24 50 04 00 	mov    %r13,0x450(%rsp)
    380b:	00 
    380c:	ff d0                	call   *%rax
    380e:	48 8b 9c 24 40 04 00 	mov    0x440(%rsp),%rbx
    3815:	00 
    3816:	4c 8b ac 24 50 04 00 	mov    0x450(%rsp),%r13
    381d:	00 
    381e:	48 89 c6             	mov    %rax,%rsi
    3821:	48 89 b4 24 40 04 00 	mov    %rsi,0x440(%rsp)
    3828:	00 
    3829:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    382d:	48 89 d1             	mov    %rdx,%rcx
    3830:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3834:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3838:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    383c:	be 01 00 00 00       	mov    $0x1,%esi
    3841:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3845:	be 01 00 00 00       	mov    $0x1,%esi
    384a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    384e:	48 31 f6             	xor    %rsi,%rsi
    3851:	4c 89 e2             	mov    %r12,%rdx
    3854:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    385b:	00 00 00 
			3856: R_X86_64_64	do_callback
    385e:	48 89 9c 24 48 04 00 	mov    %rbx,0x448(%rsp)
    3865:	00 
    3866:	48 89 bc 24 50 04 00 	mov    %rdi,0x450(%rsp)
    386d:	00 
    386e:	4c 89 ac 24 58 04 00 	mov    %r13,0x458(%rsp)
    3875:	00 
    3876:	ff d0                	call   *%rax
    3878:	48 8b 9c 24 48 04 00 	mov    0x448(%rsp),%rbx
    387f:	00 
    3880:	4c 8b ac 24 58 04 00 	mov    0x458(%rsp),%r13
    3887:	00 
    3888:	48 89 c6             	mov    %rax,%rsi
    388b:	48 89 b4 24 48 04 00 	mov    %rsi,0x448(%rsp)
    3892:	00 
    3893:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3897:	48 89 d1             	mov    %rdx,%rcx
    389a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    389e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    38a2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    38a6:	be 01 00 00 00       	mov    $0x1,%esi
    38ab:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    38af:	be 01 00 00 00       	mov    $0x1,%esi
    38b4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    38b8:	48 31 f6             	xor    %rsi,%rsi
    38bb:	4c 89 e2             	mov    %r12,%rdx
    38be:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    38c5:	00 00 00 
			38c0: R_X86_64_64	do_callback
    38c8:	48 89 9c 24 50 04 00 	mov    %rbx,0x450(%rsp)
    38cf:	00 
    38d0:	48 89 bc 24 58 04 00 	mov    %rdi,0x458(%rsp)
    38d7:	00 
    38d8:	4c 89 ac 24 60 04 00 	mov    %r13,0x460(%rsp)
    38df:	00 
    38e0:	ff d0                	call   *%rax
    38e2:	48 8b 9c 24 50 04 00 	mov    0x450(%rsp),%rbx
    38e9:	00 
    38ea:	4c 8b ac 24 60 04 00 	mov    0x460(%rsp),%r13
    38f1:	00 
    38f2:	48 89 c6             	mov    %rax,%rsi
    38f5:	48 89 b4 24 50 04 00 	mov    %rsi,0x450(%rsp)
    38fc:	00 
    38fd:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3901:	48 89 d1             	mov    %rdx,%rcx
    3904:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3908:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    390c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3910:	be 01 00 00 00       	mov    $0x1,%esi
    3915:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3919:	be 01 00 00 00       	mov    $0x1,%esi
    391e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3922:	48 31 f6             	xor    %rsi,%rsi
    3925:	4c 89 e2             	mov    %r12,%rdx
    3928:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    392f:	00 00 00 
			392a: R_X86_64_64	do_callback
    3932:	48 89 9c 24 58 04 00 	mov    %rbx,0x458(%rsp)
    3939:	00 
    393a:	48 89 bc 24 60 04 00 	mov    %rdi,0x460(%rsp)
    3941:	00 
    3942:	4c 89 ac 24 68 04 00 	mov    %r13,0x468(%rsp)
    3949:	00 
    394a:	ff d0                	call   *%rax
    394c:	48 8b 9c 24 58 04 00 	mov    0x458(%rsp),%rbx
    3953:	00 
    3954:	4c 8b ac 24 68 04 00 	mov    0x468(%rsp),%r13
    395b:	00 
    395c:	48 89 c6             	mov    %rax,%rsi
    395f:	48 89 b4 24 58 04 00 	mov    %rsi,0x458(%rsp)
    3966:	00 
    3967:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    396b:	48 89 d1             	mov    %rdx,%rcx
    396e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3972:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3976:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    397a:	be 01 00 00 00       	mov    $0x1,%esi
    397f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3983:	be 01 00 00 00       	mov    $0x1,%esi
    3988:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    398c:	48 31 f6             	xor    %rsi,%rsi
    398f:	4c 89 e2             	mov    %r12,%rdx
    3992:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3999:	00 00 00 
			3994: R_X86_64_64	do_callback
    399c:	48 89 9c 24 60 04 00 	mov    %rbx,0x460(%rsp)
    39a3:	00 
    39a4:	48 89 bc 24 68 04 00 	mov    %rdi,0x468(%rsp)
    39ab:	00 
    39ac:	4c 89 ac 24 70 04 00 	mov    %r13,0x470(%rsp)
    39b3:	00 
    39b4:	ff d0                	call   *%rax
    39b6:	48 8b 9c 24 60 04 00 	mov    0x460(%rsp),%rbx
    39bd:	00 
    39be:	4c 8b ac 24 70 04 00 	mov    0x470(%rsp),%r13
    39c5:	00 
    39c6:	48 89 c6             	mov    %rax,%rsi
    39c9:	48 89 b4 24 60 04 00 	mov    %rsi,0x460(%rsp)
    39d0:	00 
    39d1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    39d5:	48 89 d1             	mov    %rdx,%rcx
    39d8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    39dc:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    39e0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    39e4:	be 01 00 00 00       	mov    $0x1,%esi
    39e9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    39ed:	be 01 00 00 00       	mov    $0x1,%esi
    39f2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    39f6:	48 31 f6             	xor    %rsi,%rsi
    39f9:	4c 89 e2             	mov    %r12,%rdx
    39fc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3a03:	00 00 00 
			39fe: R_X86_64_64	do_callback
    3a06:	48 89 9c 24 68 04 00 	mov    %rbx,0x468(%rsp)
    3a0d:	00 
    3a0e:	48 89 bc 24 70 04 00 	mov    %rdi,0x470(%rsp)
    3a15:	00 
    3a16:	4c 89 ac 24 78 04 00 	mov    %r13,0x478(%rsp)
    3a1d:	00 
    3a1e:	ff d0                	call   *%rax
    3a20:	48 8b 9c 24 68 04 00 	mov    0x468(%rsp),%rbx
    3a27:	00 
    3a28:	4c 8b ac 24 78 04 00 	mov    0x478(%rsp),%r13
    3a2f:	00 
    3a30:	48 89 c6             	mov    %rax,%rsi
    3a33:	48 89 b4 24 68 04 00 	mov    %rsi,0x468(%rsp)
    3a3a:	00 
    3a3b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3a3f:	48 89 d1             	mov    %rdx,%rcx
    3a42:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3a46:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3a4a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3a4e:	be 01 00 00 00       	mov    $0x1,%esi
    3a53:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3a57:	be 01 00 00 00       	mov    $0x1,%esi
    3a5c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3a60:	48 31 f6             	xor    %rsi,%rsi
    3a63:	4c 89 e2             	mov    %r12,%rdx
    3a66:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3a6d:	00 00 00 
			3a68: R_X86_64_64	do_callback
    3a70:	48 89 9c 24 70 04 00 	mov    %rbx,0x470(%rsp)
    3a77:	00 
    3a78:	48 89 bc 24 78 04 00 	mov    %rdi,0x478(%rsp)
    3a7f:	00 
    3a80:	4c 89 ac 24 80 04 00 	mov    %r13,0x480(%rsp)
    3a87:	00 
    3a88:	ff d0                	call   *%rax
    3a8a:	48 8b 9c 24 70 04 00 	mov    0x470(%rsp),%rbx
    3a91:	00 
    3a92:	4c 8b ac 24 80 04 00 	mov    0x480(%rsp),%r13
    3a99:	00 
    3a9a:	48 89 c6             	mov    %rax,%rsi
    3a9d:	48 89 b4 24 70 04 00 	mov    %rsi,0x470(%rsp)
    3aa4:	00 
    3aa5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3aa9:	48 89 d1             	mov    %rdx,%rcx
    3aac:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3ab0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3ab4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3ab8:	be 01 00 00 00       	mov    $0x1,%esi
    3abd:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3ac1:	be 01 00 00 00       	mov    $0x1,%esi
    3ac6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3aca:	48 31 f6             	xor    %rsi,%rsi
    3acd:	4c 89 e2             	mov    %r12,%rdx
    3ad0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3ad7:	00 00 00 
			3ad2: R_X86_64_64	do_callback
    3ada:	48 89 9c 24 78 04 00 	mov    %rbx,0x478(%rsp)
    3ae1:	00 
    3ae2:	48 89 bc 24 80 04 00 	mov    %rdi,0x480(%rsp)
    3ae9:	00 
    3aea:	4c 89 ac 24 88 04 00 	mov    %r13,0x488(%rsp)
    3af1:	00 
    3af2:	ff d0                	call   *%rax
    3af4:	48 8b 9c 24 78 04 00 	mov    0x478(%rsp),%rbx
    3afb:	00 
    3afc:	4c 8b ac 24 88 04 00 	mov    0x488(%rsp),%r13
    3b03:	00 
    3b04:	48 89 c6             	mov    %rax,%rsi
    3b07:	48 89 b4 24 78 04 00 	mov    %rsi,0x478(%rsp)
    3b0e:	00 
    3b0f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3b13:	48 89 d1             	mov    %rdx,%rcx
    3b16:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3b1a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3b1e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3b22:	be 01 00 00 00       	mov    $0x1,%esi
    3b27:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3b2b:	be 01 00 00 00       	mov    $0x1,%esi
    3b30:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3b34:	48 31 f6             	xor    %rsi,%rsi
    3b37:	4c 89 e2             	mov    %r12,%rdx
    3b3a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3b41:	00 00 00 
			3b3c: R_X86_64_64	do_callback
    3b44:	48 89 9c 24 80 04 00 	mov    %rbx,0x480(%rsp)
    3b4b:	00 
    3b4c:	48 89 bc 24 88 04 00 	mov    %rdi,0x488(%rsp)
    3b53:	00 
    3b54:	4c 89 ac 24 90 04 00 	mov    %r13,0x490(%rsp)
    3b5b:	00 
    3b5c:	ff d0                	call   *%rax
    3b5e:	48 8b 9c 24 80 04 00 	mov    0x480(%rsp),%rbx
    3b65:	00 
    3b66:	4c 8b ac 24 90 04 00 	mov    0x490(%rsp),%r13
    3b6d:	00 
    3b6e:	48 89 c6             	mov    %rax,%rsi
    3b71:	48 89 b4 24 80 04 00 	mov    %rsi,0x480(%rsp)
    3b78:	00 
    3b79:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3b7d:	48 89 d1             	mov    %rdx,%rcx
    3b80:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3b84:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3b88:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3b8c:	be 01 00 00 00       	mov    $0x1,%esi
    3b91:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3b95:	be 01 00 00 00       	mov    $0x1,%esi
    3b9a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3b9e:	48 31 f6             	xor    %rsi,%rsi
    3ba1:	4c 89 e2             	mov    %r12,%rdx
    3ba4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3bab:	00 00 00 
			3ba6: R_X86_64_64	do_callback
    3bae:	48 89 9c 24 88 04 00 	mov    %rbx,0x488(%rsp)
    3bb5:	00 
    3bb6:	48 89 bc 24 90 04 00 	mov    %rdi,0x490(%rsp)
    3bbd:	00 
    3bbe:	4c 89 ac 24 98 04 00 	mov    %r13,0x498(%rsp)
    3bc5:	00 
    3bc6:	ff d0                	call   *%rax
    3bc8:	48 8b 9c 24 88 04 00 	mov    0x488(%rsp),%rbx
    3bcf:	00 
    3bd0:	4c 8b ac 24 98 04 00 	mov    0x498(%rsp),%r13
    3bd7:	00 
    3bd8:	48 89 c6             	mov    %rax,%rsi
    3bdb:	48 89 b4 24 88 04 00 	mov    %rsi,0x488(%rsp)
    3be2:	00 
    3be3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3be7:	48 89 d1             	mov    %rdx,%rcx
    3bea:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3bee:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3bf2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3bf6:	be 01 00 00 00       	mov    $0x1,%esi
    3bfb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3bff:	be 01 00 00 00       	mov    $0x1,%esi
    3c04:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3c08:	48 31 f6             	xor    %rsi,%rsi
    3c0b:	4c 89 e2             	mov    %r12,%rdx
    3c0e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3c15:	00 00 00 
			3c10: R_X86_64_64	do_callback
    3c18:	48 89 9c 24 90 04 00 	mov    %rbx,0x490(%rsp)
    3c1f:	00 
    3c20:	48 89 bc 24 98 04 00 	mov    %rdi,0x498(%rsp)
    3c27:	00 
    3c28:	4c 89 ac 24 a0 04 00 	mov    %r13,0x4a0(%rsp)
    3c2f:	00 
    3c30:	ff d0                	call   *%rax
    3c32:	48 8b 9c 24 90 04 00 	mov    0x490(%rsp),%rbx
    3c39:	00 
    3c3a:	4c 8b ac 24 a0 04 00 	mov    0x4a0(%rsp),%r13
    3c41:	00 
    3c42:	48 89 c6             	mov    %rax,%rsi
    3c45:	48 89 b4 24 90 04 00 	mov    %rsi,0x490(%rsp)
    3c4c:	00 
    3c4d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3c51:	48 89 d1             	mov    %rdx,%rcx
    3c54:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3c58:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3c5c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3c60:	be 01 00 00 00       	mov    $0x1,%esi
    3c65:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3c69:	be 01 00 00 00       	mov    $0x1,%esi
    3c6e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3c72:	48 31 f6             	xor    %rsi,%rsi
    3c75:	4c 89 e2             	mov    %r12,%rdx
    3c78:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3c7f:	00 00 00 
			3c7a: R_X86_64_64	do_callback
    3c82:	48 89 9c 24 98 04 00 	mov    %rbx,0x498(%rsp)
    3c89:	00 
    3c8a:	48 89 bc 24 a0 04 00 	mov    %rdi,0x4a0(%rsp)
    3c91:	00 
    3c92:	4c 89 ac 24 a8 04 00 	mov    %r13,0x4a8(%rsp)
    3c99:	00 
    3c9a:	ff d0                	call   *%rax
    3c9c:	48 8b 9c 24 98 04 00 	mov    0x498(%rsp),%rbx
    3ca3:	00 
    3ca4:	4c 8b ac 24 a8 04 00 	mov    0x4a8(%rsp),%r13
    3cab:	00 
    3cac:	48 89 c6             	mov    %rax,%rsi
    3caf:	48 89 b4 24 98 04 00 	mov    %rsi,0x498(%rsp)
    3cb6:	00 
    3cb7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3cbb:	48 89 d1             	mov    %rdx,%rcx
    3cbe:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3cc2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3cc6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3cca:	be 01 00 00 00       	mov    $0x1,%esi
    3ccf:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3cd3:	be 01 00 00 00       	mov    $0x1,%esi
    3cd8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3cdc:	48 31 f6             	xor    %rsi,%rsi
    3cdf:	4c 89 e2             	mov    %r12,%rdx
    3ce2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3ce9:	00 00 00 
			3ce4: R_X86_64_64	do_callback
    3cec:	48 89 9c 24 a0 04 00 	mov    %rbx,0x4a0(%rsp)
    3cf3:	00 
    3cf4:	48 89 bc 24 a8 04 00 	mov    %rdi,0x4a8(%rsp)
    3cfb:	00 
    3cfc:	4c 89 ac 24 b0 04 00 	mov    %r13,0x4b0(%rsp)
    3d03:	00 
    3d04:	ff d0                	call   *%rax
    3d06:	48 8b 9c 24 a0 04 00 	mov    0x4a0(%rsp),%rbx
    3d0d:	00 
    3d0e:	4c 8b ac 24 b0 04 00 	mov    0x4b0(%rsp),%r13
    3d15:	00 
    3d16:	48 89 c6             	mov    %rax,%rsi
    3d19:	48 89 b4 24 a0 04 00 	mov    %rsi,0x4a0(%rsp)
    3d20:	00 
    3d21:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3d25:	48 89 d1             	mov    %rdx,%rcx
    3d28:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3d2c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3d30:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3d34:	be 01 00 00 00       	mov    $0x1,%esi
    3d39:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3d3d:	be 01 00 00 00       	mov    $0x1,%esi
    3d42:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3d46:	48 31 f6             	xor    %rsi,%rsi
    3d49:	4c 89 e2             	mov    %r12,%rdx
    3d4c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3d53:	00 00 00 
			3d4e: R_X86_64_64	do_callback
    3d56:	48 89 9c 24 a8 04 00 	mov    %rbx,0x4a8(%rsp)
    3d5d:	00 
    3d5e:	48 89 bc 24 b0 04 00 	mov    %rdi,0x4b0(%rsp)
    3d65:	00 
    3d66:	4c 89 ac 24 b8 04 00 	mov    %r13,0x4b8(%rsp)
    3d6d:	00 
    3d6e:	ff d0                	call   *%rax
    3d70:	48 8b 9c 24 a8 04 00 	mov    0x4a8(%rsp),%rbx
    3d77:	00 
    3d78:	4c 8b ac 24 b8 04 00 	mov    0x4b8(%rsp),%r13
    3d7f:	00 
    3d80:	48 89 c6             	mov    %rax,%rsi
    3d83:	48 89 b4 24 a8 04 00 	mov    %rsi,0x4a8(%rsp)
    3d8a:	00 
    3d8b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3d8f:	48 89 d1             	mov    %rdx,%rcx
    3d92:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3d96:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3d9a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3d9e:	be 01 00 00 00       	mov    $0x1,%esi
    3da3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3da7:	be 01 00 00 00       	mov    $0x1,%esi
    3dac:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3db0:	48 31 f6             	xor    %rsi,%rsi
    3db3:	4c 89 e2             	mov    %r12,%rdx
    3db6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3dbd:	00 00 00 
			3db8: R_X86_64_64	do_callback
    3dc0:	48 89 9c 24 b0 04 00 	mov    %rbx,0x4b0(%rsp)
    3dc7:	00 
    3dc8:	48 89 bc 24 b8 04 00 	mov    %rdi,0x4b8(%rsp)
    3dcf:	00 
    3dd0:	4c 89 ac 24 c0 04 00 	mov    %r13,0x4c0(%rsp)
    3dd7:	00 
    3dd8:	ff d0                	call   *%rax
    3dda:	48 8b 9c 24 b0 04 00 	mov    0x4b0(%rsp),%rbx
    3de1:	00 
    3de2:	4c 8b ac 24 c0 04 00 	mov    0x4c0(%rsp),%r13
    3de9:	00 
    3dea:	48 89 c6             	mov    %rax,%rsi
    3ded:	48 89 b4 24 b0 04 00 	mov    %rsi,0x4b0(%rsp)
    3df4:	00 
    3df5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3df9:	48 89 d1             	mov    %rdx,%rcx
    3dfc:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3e00:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3e04:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3e08:	be 01 00 00 00       	mov    $0x1,%esi
    3e0d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3e11:	be 01 00 00 00       	mov    $0x1,%esi
    3e16:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3e1a:	48 31 f6             	xor    %rsi,%rsi
    3e1d:	4c 89 e2             	mov    %r12,%rdx
    3e20:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3e27:	00 00 00 
			3e22: R_X86_64_64	do_callback
    3e2a:	48 89 9c 24 b8 04 00 	mov    %rbx,0x4b8(%rsp)
    3e31:	00 
    3e32:	48 89 bc 24 c0 04 00 	mov    %rdi,0x4c0(%rsp)
    3e39:	00 
    3e3a:	4c 89 ac 24 c8 04 00 	mov    %r13,0x4c8(%rsp)
    3e41:	00 
    3e42:	ff d0                	call   *%rax
    3e44:	48 8b 9c 24 b8 04 00 	mov    0x4b8(%rsp),%rbx
    3e4b:	00 
    3e4c:	4c 8b ac 24 c8 04 00 	mov    0x4c8(%rsp),%r13
    3e53:	00 
    3e54:	48 89 c6             	mov    %rax,%rsi
    3e57:	48 89 b4 24 b8 04 00 	mov    %rsi,0x4b8(%rsp)
    3e5e:	00 
    3e5f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3e63:	48 89 d1             	mov    %rdx,%rcx
    3e66:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3e6a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3e6e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3e72:	be 01 00 00 00       	mov    $0x1,%esi
    3e77:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3e7b:	be 01 00 00 00       	mov    $0x1,%esi
    3e80:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3e84:	48 31 f6             	xor    %rsi,%rsi
    3e87:	4c 89 e2             	mov    %r12,%rdx
    3e8a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3e91:	00 00 00 
			3e8c: R_X86_64_64	do_callback
    3e94:	48 89 9c 24 c0 04 00 	mov    %rbx,0x4c0(%rsp)
    3e9b:	00 
    3e9c:	48 89 bc 24 c8 04 00 	mov    %rdi,0x4c8(%rsp)
    3ea3:	00 
    3ea4:	4c 89 ac 24 d0 04 00 	mov    %r13,0x4d0(%rsp)
    3eab:	00 
    3eac:	ff d0                	call   *%rax
    3eae:	48 8b 9c 24 c0 04 00 	mov    0x4c0(%rsp),%rbx
    3eb5:	00 
    3eb6:	4c 8b ac 24 d0 04 00 	mov    0x4d0(%rsp),%r13
    3ebd:	00 
    3ebe:	48 89 c6             	mov    %rax,%rsi
    3ec1:	48 89 b4 24 c0 04 00 	mov    %rsi,0x4c0(%rsp)
    3ec8:	00 
    3ec9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3ecd:	48 89 d1             	mov    %rdx,%rcx
    3ed0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3ed4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3ed8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3edc:	be 01 00 00 00       	mov    $0x1,%esi
    3ee1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3ee5:	be 01 00 00 00       	mov    $0x1,%esi
    3eea:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3eee:	48 31 f6             	xor    %rsi,%rsi
    3ef1:	4c 89 e2             	mov    %r12,%rdx
    3ef4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3efb:	00 00 00 
			3ef6: R_X86_64_64	do_callback
    3efe:	48 89 9c 24 c8 04 00 	mov    %rbx,0x4c8(%rsp)
    3f05:	00 
    3f06:	48 89 bc 24 d0 04 00 	mov    %rdi,0x4d0(%rsp)
    3f0d:	00 
    3f0e:	4c 89 ac 24 d8 04 00 	mov    %r13,0x4d8(%rsp)
    3f15:	00 
    3f16:	ff d0                	call   *%rax
    3f18:	48 8b 9c 24 c8 04 00 	mov    0x4c8(%rsp),%rbx
    3f1f:	00 
    3f20:	4c 8b ac 24 d8 04 00 	mov    0x4d8(%rsp),%r13
    3f27:	00 
    3f28:	48 89 c6             	mov    %rax,%rsi
    3f2b:	48 89 b4 24 c8 04 00 	mov    %rsi,0x4c8(%rsp)
    3f32:	00 
    3f33:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3f37:	48 89 d1             	mov    %rdx,%rcx
    3f3a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3f3e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3f42:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3f46:	be 01 00 00 00       	mov    $0x1,%esi
    3f4b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3f4f:	be 01 00 00 00       	mov    $0x1,%esi
    3f54:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3f58:	48 31 f6             	xor    %rsi,%rsi
    3f5b:	4c 89 e2             	mov    %r12,%rdx
    3f5e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3f65:	00 00 00 
			3f60: R_X86_64_64	do_callback
    3f68:	48 89 9c 24 d0 04 00 	mov    %rbx,0x4d0(%rsp)
    3f6f:	00 
    3f70:	48 89 bc 24 d8 04 00 	mov    %rdi,0x4d8(%rsp)
    3f77:	00 
    3f78:	4c 89 ac 24 e0 04 00 	mov    %r13,0x4e0(%rsp)
    3f7f:	00 
    3f80:	ff d0                	call   *%rax
    3f82:	48 8b 9c 24 d0 04 00 	mov    0x4d0(%rsp),%rbx
    3f89:	00 
    3f8a:	4c 8b ac 24 e0 04 00 	mov    0x4e0(%rsp),%r13
    3f91:	00 
    3f92:	48 89 c6             	mov    %rax,%rsi
    3f95:	48 89 b4 24 d0 04 00 	mov    %rsi,0x4d0(%rsp)
    3f9c:	00 
    3f9d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    3fa1:	48 89 d1             	mov    %rdx,%rcx
    3fa4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    3fa8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    3fac:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    3fb0:	be 01 00 00 00       	mov    $0x1,%esi
    3fb5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    3fb9:	be 01 00 00 00       	mov    $0x1,%esi
    3fbe:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    3fc2:	48 31 f6             	xor    %rsi,%rsi
    3fc5:	4c 89 e2             	mov    %r12,%rdx
    3fc8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    3fcf:	00 00 00 
			3fca: R_X86_64_64	do_callback
    3fd2:	48 89 9c 24 d8 04 00 	mov    %rbx,0x4d8(%rsp)
    3fd9:	00 
    3fda:	48 89 bc 24 e0 04 00 	mov    %rdi,0x4e0(%rsp)
    3fe1:	00 
    3fe2:	4c 89 ac 24 e8 04 00 	mov    %r13,0x4e8(%rsp)
    3fe9:	00 
    3fea:	ff d0                	call   *%rax
    3fec:	48 8b 9c 24 d8 04 00 	mov    0x4d8(%rsp),%rbx
    3ff3:	00 
    3ff4:	4c 8b ac 24 e8 04 00 	mov    0x4e8(%rsp),%r13
    3ffb:	00 
    3ffc:	48 89 c6             	mov    %rax,%rsi
    3fff:	48 89 b4 24 d8 04 00 	mov    %rsi,0x4d8(%rsp)
    4006:	00 
    4007:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    400b:	48 89 d1             	mov    %rdx,%rcx
    400e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4012:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4016:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    401a:	be 01 00 00 00       	mov    $0x1,%esi
    401f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4023:	be 01 00 00 00       	mov    $0x1,%esi
    4028:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    402c:	48 31 f6             	xor    %rsi,%rsi
    402f:	4c 89 e2             	mov    %r12,%rdx
    4032:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4039:	00 00 00 
			4034: R_X86_64_64	do_callback
    403c:	48 89 9c 24 e0 04 00 	mov    %rbx,0x4e0(%rsp)
    4043:	00 
    4044:	48 89 bc 24 e8 04 00 	mov    %rdi,0x4e8(%rsp)
    404b:	00 
    404c:	4c 89 ac 24 f0 04 00 	mov    %r13,0x4f0(%rsp)
    4053:	00 
    4054:	ff d0                	call   *%rax
    4056:	48 8b 9c 24 e0 04 00 	mov    0x4e0(%rsp),%rbx
    405d:	00 
    405e:	4c 8b ac 24 f0 04 00 	mov    0x4f0(%rsp),%r13
    4065:	00 
    4066:	48 89 c6             	mov    %rax,%rsi
    4069:	48 89 b4 24 e0 04 00 	mov    %rsi,0x4e0(%rsp)
    4070:	00 
    4071:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4075:	48 89 d1             	mov    %rdx,%rcx
    4078:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    407c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4080:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4084:	be 01 00 00 00       	mov    $0x1,%esi
    4089:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    408d:	be 01 00 00 00       	mov    $0x1,%esi
    4092:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4096:	48 31 f6             	xor    %rsi,%rsi
    4099:	4c 89 e2             	mov    %r12,%rdx
    409c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    40a3:	00 00 00 
			409e: R_X86_64_64	do_callback
    40a6:	48 89 9c 24 e8 04 00 	mov    %rbx,0x4e8(%rsp)
    40ad:	00 
    40ae:	48 89 bc 24 f0 04 00 	mov    %rdi,0x4f0(%rsp)
    40b5:	00 
    40b6:	4c 89 ac 24 f8 04 00 	mov    %r13,0x4f8(%rsp)
    40bd:	00 
    40be:	ff d0                	call   *%rax
    40c0:	48 8b 9c 24 e8 04 00 	mov    0x4e8(%rsp),%rbx
    40c7:	00 
    40c8:	4c 8b ac 24 f8 04 00 	mov    0x4f8(%rsp),%r13
    40cf:	00 
    40d0:	48 89 c6             	mov    %rax,%rsi
    40d3:	48 89 b4 24 e8 04 00 	mov    %rsi,0x4e8(%rsp)
    40da:	00 
    40db:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    40df:	48 89 d1             	mov    %rdx,%rcx
    40e2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    40e6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    40ea:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    40ee:	be 01 00 00 00       	mov    $0x1,%esi
    40f3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    40f7:	be 01 00 00 00       	mov    $0x1,%esi
    40fc:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4100:	48 31 f6             	xor    %rsi,%rsi
    4103:	4c 89 e2             	mov    %r12,%rdx
    4106:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    410d:	00 00 00 
			4108: R_X86_64_64	do_callback
    4110:	48 89 9c 24 f0 04 00 	mov    %rbx,0x4f0(%rsp)
    4117:	00 
    4118:	48 89 bc 24 f8 04 00 	mov    %rdi,0x4f8(%rsp)
    411f:	00 
    4120:	4c 89 ac 24 00 05 00 	mov    %r13,0x500(%rsp)
    4127:	00 
    4128:	ff d0                	call   *%rax
    412a:	48 8b 9c 24 f0 04 00 	mov    0x4f0(%rsp),%rbx
    4131:	00 
    4132:	4c 8b ac 24 00 05 00 	mov    0x500(%rsp),%r13
    4139:	00 
    413a:	48 89 c6             	mov    %rax,%rsi
    413d:	48 89 b4 24 f0 04 00 	mov    %rsi,0x4f0(%rsp)
    4144:	00 
    4145:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4149:	48 89 d1             	mov    %rdx,%rcx
    414c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4150:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4154:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4158:	be 01 00 00 00       	mov    $0x1,%esi
    415d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4161:	be 01 00 00 00       	mov    $0x1,%esi
    4166:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    416a:	48 31 f6             	xor    %rsi,%rsi
    416d:	4c 89 e2             	mov    %r12,%rdx
    4170:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4177:	00 00 00 
			4172: R_X86_64_64	do_callback
    417a:	48 89 9c 24 f8 04 00 	mov    %rbx,0x4f8(%rsp)
    4181:	00 
    4182:	48 89 bc 24 00 05 00 	mov    %rdi,0x500(%rsp)
    4189:	00 
    418a:	4c 89 ac 24 08 05 00 	mov    %r13,0x508(%rsp)
    4191:	00 
    4192:	ff d0                	call   *%rax
    4194:	48 8b 9c 24 f8 04 00 	mov    0x4f8(%rsp),%rbx
    419b:	00 
    419c:	4c 8b ac 24 08 05 00 	mov    0x508(%rsp),%r13
    41a3:	00 
    41a4:	48 89 c6             	mov    %rax,%rsi
    41a7:	48 89 b4 24 f8 04 00 	mov    %rsi,0x4f8(%rsp)
    41ae:	00 
    41af:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    41b3:	48 89 d1             	mov    %rdx,%rcx
    41b6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    41ba:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    41be:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    41c2:	be 01 00 00 00       	mov    $0x1,%esi
    41c7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    41cb:	be 01 00 00 00       	mov    $0x1,%esi
    41d0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    41d4:	48 31 f6             	xor    %rsi,%rsi
    41d7:	4c 89 e2             	mov    %r12,%rdx
    41da:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    41e1:	00 00 00 
			41dc: R_X86_64_64	do_callback
    41e4:	48 89 9c 24 00 05 00 	mov    %rbx,0x500(%rsp)
    41eb:	00 
    41ec:	48 89 bc 24 08 05 00 	mov    %rdi,0x508(%rsp)
    41f3:	00 
    41f4:	4c 89 ac 24 10 05 00 	mov    %r13,0x510(%rsp)
    41fb:	00 
    41fc:	ff d0                	call   *%rax
    41fe:	48 8b 9c 24 00 05 00 	mov    0x500(%rsp),%rbx
    4205:	00 
    4206:	4c 8b ac 24 10 05 00 	mov    0x510(%rsp),%r13
    420d:	00 
    420e:	48 89 c6             	mov    %rax,%rsi
    4211:	48 89 b4 24 00 05 00 	mov    %rsi,0x500(%rsp)
    4218:	00 
    4219:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    421d:	48 89 d1             	mov    %rdx,%rcx
    4220:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4224:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4228:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    422c:	be 01 00 00 00       	mov    $0x1,%esi
    4231:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4235:	be 01 00 00 00       	mov    $0x1,%esi
    423a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    423e:	48 31 f6             	xor    %rsi,%rsi
    4241:	4c 89 e2             	mov    %r12,%rdx
    4244:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    424b:	00 00 00 
			4246: R_X86_64_64	do_callback
    424e:	48 89 9c 24 08 05 00 	mov    %rbx,0x508(%rsp)
    4255:	00 
    4256:	48 89 bc 24 10 05 00 	mov    %rdi,0x510(%rsp)
    425d:	00 
    425e:	4c 89 ac 24 18 05 00 	mov    %r13,0x518(%rsp)
    4265:	00 
    4266:	ff d0                	call   *%rax
    4268:	48 8b 9c 24 08 05 00 	mov    0x508(%rsp),%rbx
    426f:	00 
    4270:	4c 8b ac 24 18 05 00 	mov    0x518(%rsp),%r13
    4277:	00 
    4278:	48 89 c6             	mov    %rax,%rsi
    427b:	48 89 b4 24 08 05 00 	mov    %rsi,0x508(%rsp)
    4282:	00 
    4283:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4287:	48 89 d1             	mov    %rdx,%rcx
    428a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    428e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4292:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4296:	be 01 00 00 00       	mov    $0x1,%esi
    429b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    429f:	be 01 00 00 00       	mov    $0x1,%esi
    42a4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    42a8:	48 31 f6             	xor    %rsi,%rsi
    42ab:	4c 89 e2             	mov    %r12,%rdx
    42ae:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    42b5:	00 00 00 
			42b0: R_X86_64_64	do_callback
    42b8:	48 89 9c 24 10 05 00 	mov    %rbx,0x510(%rsp)
    42bf:	00 
    42c0:	48 89 bc 24 18 05 00 	mov    %rdi,0x518(%rsp)
    42c7:	00 
    42c8:	4c 89 ac 24 20 05 00 	mov    %r13,0x520(%rsp)
    42cf:	00 
    42d0:	ff d0                	call   *%rax
    42d2:	48 8b 9c 24 10 05 00 	mov    0x510(%rsp),%rbx
    42d9:	00 
    42da:	4c 8b ac 24 20 05 00 	mov    0x520(%rsp),%r13
    42e1:	00 
    42e2:	48 89 c6             	mov    %rax,%rsi
    42e5:	48 89 b4 24 10 05 00 	mov    %rsi,0x510(%rsp)
    42ec:	00 
    42ed:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    42f1:	48 89 d1             	mov    %rdx,%rcx
    42f4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    42f8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    42fc:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4300:	be 01 00 00 00       	mov    $0x1,%esi
    4305:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4309:	be 01 00 00 00       	mov    $0x1,%esi
    430e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4312:	48 31 f6             	xor    %rsi,%rsi
    4315:	4c 89 e2             	mov    %r12,%rdx
    4318:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    431f:	00 00 00 
			431a: R_X86_64_64	do_callback
    4322:	48 89 9c 24 18 05 00 	mov    %rbx,0x518(%rsp)
    4329:	00 
    432a:	48 89 bc 24 20 05 00 	mov    %rdi,0x520(%rsp)
    4331:	00 
    4332:	4c 89 ac 24 28 05 00 	mov    %r13,0x528(%rsp)
    4339:	00 
    433a:	ff d0                	call   *%rax
    433c:	48 8b 9c 24 18 05 00 	mov    0x518(%rsp),%rbx
    4343:	00 
    4344:	4c 8b ac 24 28 05 00 	mov    0x528(%rsp),%r13
    434b:	00 
    434c:	48 89 c6             	mov    %rax,%rsi
    434f:	48 89 b4 24 18 05 00 	mov    %rsi,0x518(%rsp)
    4356:	00 
    4357:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    435b:	48 89 d1             	mov    %rdx,%rcx
    435e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4362:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4366:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    436a:	be 01 00 00 00       	mov    $0x1,%esi
    436f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4373:	be 01 00 00 00       	mov    $0x1,%esi
    4378:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    437c:	48 31 f6             	xor    %rsi,%rsi
    437f:	4c 89 e2             	mov    %r12,%rdx
    4382:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4389:	00 00 00 
			4384: R_X86_64_64	do_callback
    438c:	48 89 9c 24 20 05 00 	mov    %rbx,0x520(%rsp)
    4393:	00 
    4394:	48 89 bc 24 28 05 00 	mov    %rdi,0x528(%rsp)
    439b:	00 
    439c:	4c 89 ac 24 30 05 00 	mov    %r13,0x530(%rsp)
    43a3:	00 
    43a4:	ff d0                	call   *%rax
    43a6:	48 8b 9c 24 20 05 00 	mov    0x520(%rsp),%rbx
    43ad:	00 
    43ae:	4c 8b ac 24 30 05 00 	mov    0x530(%rsp),%r13
    43b5:	00 
    43b6:	48 89 c6             	mov    %rax,%rsi
    43b9:	48 89 b4 24 20 05 00 	mov    %rsi,0x520(%rsp)
    43c0:	00 
    43c1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    43c5:	48 89 d1             	mov    %rdx,%rcx
    43c8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    43cc:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    43d0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    43d4:	be 01 00 00 00       	mov    $0x1,%esi
    43d9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    43dd:	be 01 00 00 00       	mov    $0x1,%esi
    43e2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    43e6:	48 31 f6             	xor    %rsi,%rsi
    43e9:	4c 89 e2             	mov    %r12,%rdx
    43ec:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    43f3:	00 00 00 
			43ee: R_X86_64_64	do_callback
    43f6:	48 89 9c 24 28 05 00 	mov    %rbx,0x528(%rsp)
    43fd:	00 
    43fe:	48 89 bc 24 30 05 00 	mov    %rdi,0x530(%rsp)
    4405:	00 
    4406:	4c 89 ac 24 38 05 00 	mov    %r13,0x538(%rsp)
    440d:	00 
    440e:	ff d0                	call   *%rax
    4410:	48 8b 9c 24 28 05 00 	mov    0x528(%rsp),%rbx
    4417:	00 
    4418:	4c 8b ac 24 38 05 00 	mov    0x538(%rsp),%r13
    441f:	00 
    4420:	48 89 c6             	mov    %rax,%rsi
    4423:	48 89 b4 24 28 05 00 	mov    %rsi,0x528(%rsp)
    442a:	00 
    442b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    442f:	48 89 d1             	mov    %rdx,%rcx
    4432:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4436:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    443a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    443e:	be 01 00 00 00       	mov    $0x1,%esi
    4443:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4447:	be 01 00 00 00       	mov    $0x1,%esi
    444c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4450:	48 31 f6             	xor    %rsi,%rsi
    4453:	4c 89 e2             	mov    %r12,%rdx
    4456:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    445d:	00 00 00 
			4458: R_X86_64_64	do_callback
    4460:	48 89 9c 24 30 05 00 	mov    %rbx,0x530(%rsp)
    4467:	00 
    4468:	48 89 bc 24 38 05 00 	mov    %rdi,0x538(%rsp)
    446f:	00 
    4470:	4c 89 ac 24 40 05 00 	mov    %r13,0x540(%rsp)
    4477:	00 
    4478:	ff d0                	call   *%rax
    447a:	48 8b 9c 24 30 05 00 	mov    0x530(%rsp),%rbx
    4481:	00 
    4482:	4c 8b ac 24 40 05 00 	mov    0x540(%rsp),%r13
    4489:	00 
    448a:	48 89 c6             	mov    %rax,%rsi
    448d:	48 89 b4 24 30 05 00 	mov    %rsi,0x530(%rsp)
    4494:	00 
    4495:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4499:	48 89 d1             	mov    %rdx,%rcx
    449c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    44a0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    44a4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    44a8:	be 01 00 00 00       	mov    $0x1,%esi
    44ad:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    44b1:	be 01 00 00 00       	mov    $0x1,%esi
    44b6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    44ba:	48 31 f6             	xor    %rsi,%rsi
    44bd:	4c 89 e2             	mov    %r12,%rdx
    44c0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    44c7:	00 00 00 
			44c2: R_X86_64_64	do_callback
    44ca:	48 89 9c 24 38 05 00 	mov    %rbx,0x538(%rsp)
    44d1:	00 
    44d2:	48 89 bc 24 40 05 00 	mov    %rdi,0x540(%rsp)
    44d9:	00 
    44da:	4c 89 ac 24 48 05 00 	mov    %r13,0x548(%rsp)
    44e1:	00 
    44e2:	ff d0                	call   *%rax
    44e4:	48 8b 9c 24 38 05 00 	mov    0x538(%rsp),%rbx
    44eb:	00 
    44ec:	4c 8b ac 24 48 05 00 	mov    0x548(%rsp),%r13
    44f3:	00 
    44f4:	48 89 c6             	mov    %rax,%rsi
    44f7:	48 89 b4 24 38 05 00 	mov    %rsi,0x538(%rsp)
    44fe:	00 
    44ff:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4503:	48 89 d1             	mov    %rdx,%rcx
    4506:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    450a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    450e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4512:	be 01 00 00 00       	mov    $0x1,%esi
    4517:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    451b:	be 01 00 00 00       	mov    $0x1,%esi
    4520:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4524:	48 31 f6             	xor    %rsi,%rsi
    4527:	4c 89 e2             	mov    %r12,%rdx
    452a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4531:	00 00 00 
			452c: R_X86_64_64	do_callback
    4534:	48 89 9c 24 40 05 00 	mov    %rbx,0x540(%rsp)
    453b:	00 
    453c:	48 89 bc 24 48 05 00 	mov    %rdi,0x548(%rsp)
    4543:	00 
    4544:	4c 89 ac 24 50 05 00 	mov    %r13,0x550(%rsp)
    454b:	00 
    454c:	ff d0                	call   *%rax
    454e:	48 8b 9c 24 40 05 00 	mov    0x540(%rsp),%rbx
    4555:	00 
    4556:	4c 8b ac 24 50 05 00 	mov    0x550(%rsp),%r13
    455d:	00 
    455e:	48 89 c6             	mov    %rax,%rsi
    4561:	48 89 b4 24 40 05 00 	mov    %rsi,0x540(%rsp)
    4568:	00 
    4569:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    456d:	48 89 d1             	mov    %rdx,%rcx
    4570:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4574:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4578:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    457c:	be 01 00 00 00       	mov    $0x1,%esi
    4581:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4585:	be 01 00 00 00       	mov    $0x1,%esi
    458a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    458e:	48 31 f6             	xor    %rsi,%rsi
    4591:	4c 89 e2             	mov    %r12,%rdx
    4594:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    459b:	00 00 00 
			4596: R_X86_64_64	do_callback
    459e:	48 89 9c 24 48 05 00 	mov    %rbx,0x548(%rsp)
    45a5:	00 
    45a6:	48 89 bc 24 50 05 00 	mov    %rdi,0x550(%rsp)
    45ad:	00 
    45ae:	4c 89 ac 24 58 05 00 	mov    %r13,0x558(%rsp)
    45b5:	00 
    45b6:	ff d0                	call   *%rax
    45b8:	48 8b 9c 24 48 05 00 	mov    0x548(%rsp),%rbx
    45bf:	00 
    45c0:	4c 8b ac 24 58 05 00 	mov    0x558(%rsp),%r13
    45c7:	00 
    45c8:	48 89 c6             	mov    %rax,%rsi
    45cb:	48 89 b4 24 48 05 00 	mov    %rsi,0x548(%rsp)
    45d2:	00 
    45d3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    45d7:	48 89 d1             	mov    %rdx,%rcx
    45da:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    45de:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    45e2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    45e6:	be 01 00 00 00       	mov    $0x1,%esi
    45eb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    45ef:	be 01 00 00 00       	mov    $0x1,%esi
    45f4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    45f8:	48 31 f6             	xor    %rsi,%rsi
    45fb:	4c 89 e2             	mov    %r12,%rdx
    45fe:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4605:	00 00 00 
			4600: R_X86_64_64	do_callback
    4608:	48 89 9c 24 50 05 00 	mov    %rbx,0x550(%rsp)
    460f:	00 
    4610:	48 89 bc 24 58 05 00 	mov    %rdi,0x558(%rsp)
    4617:	00 
    4618:	4c 89 ac 24 60 05 00 	mov    %r13,0x560(%rsp)
    461f:	00 
    4620:	ff d0                	call   *%rax
    4622:	48 8b 9c 24 50 05 00 	mov    0x550(%rsp),%rbx
    4629:	00 
    462a:	4c 8b ac 24 60 05 00 	mov    0x560(%rsp),%r13
    4631:	00 
    4632:	48 89 c6             	mov    %rax,%rsi
    4635:	48 89 b4 24 50 05 00 	mov    %rsi,0x550(%rsp)
    463c:	00 
    463d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4641:	48 89 d1             	mov    %rdx,%rcx
    4644:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4648:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    464c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4650:	be 01 00 00 00       	mov    $0x1,%esi
    4655:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4659:	be 01 00 00 00       	mov    $0x1,%esi
    465e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4662:	48 31 f6             	xor    %rsi,%rsi
    4665:	4c 89 e2             	mov    %r12,%rdx
    4668:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    466f:	00 00 00 
			466a: R_X86_64_64	do_callback
    4672:	48 89 9c 24 58 05 00 	mov    %rbx,0x558(%rsp)
    4679:	00 
    467a:	48 89 bc 24 60 05 00 	mov    %rdi,0x560(%rsp)
    4681:	00 
    4682:	4c 89 ac 24 68 05 00 	mov    %r13,0x568(%rsp)
    4689:	00 
    468a:	ff d0                	call   *%rax
    468c:	48 8b 9c 24 58 05 00 	mov    0x558(%rsp),%rbx
    4693:	00 
    4694:	4c 8b ac 24 68 05 00 	mov    0x568(%rsp),%r13
    469b:	00 
    469c:	48 89 c6             	mov    %rax,%rsi
    469f:	48 89 b4 24 58 05 00 	mov    %rsi,0x558(%rsp)
    46a6:	00 
    46a7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    46ab:	48 89 d1             	mov    %rdx,%rcx
    46ae:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    46b2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    46b6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    46ba:	be 01 00 00 00       	mov    $0x1,%esi
    46bf:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    46c3:	be 01 00 00 00       	mov    $0x1,%esi
    46c8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    46cc:	48 31 f6             	xor    %rsi,%rsi
    46cf:	4c 89 e2             	mov    %r12,%rdx
    46d2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    46d9:	00 00 00 
			46d4: R_X86_64_64	do_callback
    46dc:	48 89 9c 24 60 05 00 	mov    %rbx,0x560(%rsp)
    46e3:	00 
    46e4:	48 89 bc 24 68 05 00 	mov    %rdi,0x568(%rsp)
    46eb:	00 
    46ec:	4c 89 ac 24 70 05 00 	mov    %r13,0x570(%rsp)
    46f3:	00 
    46f4:	ff d0                	call   *%rax
    46f6:	48 8b 9c 24 60 05 00 	mov    0x560(%rsp),%rbx
    46fd:	00 
    46fe:	4c 8b ac 24 70 05 00 	mov    0x570(%rsp),%r13
    4705:	00 
    4706:	48 89 c6             	mov    %rax,%rsi
    4709:	48 89 b4 24 60 05 00 	mov    %rsi,0x560(%rsp)
    4710:	00 
    4711:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4715:	48 89 d1             	mov    %rdx,%rcx
    4718:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    471c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4720:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4724:	be 01 00 00 00       	mov    $0x1,%esi
    4729:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    472d:	be 01 00 00 00       	mov    $0x1,%esi
    4732:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4736:	48 31 f6             	xor    %rsi,%rsi
    4739:	4c 89 e2             	mov    %r12,%rdx
    473c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4743:	00 00 00 
			473e: R_X86_64_64	do_callback
    4746:	48 89 9c 24 68 05 00 	mov    %rbx,0x568(%rsp)
    474d:	00 
    474e:	48 89 bc 24 70 05 00 	mov    %rdi,0x570(%rsp)
    4755:	00 
    4756:	4c 89 ac 24 78 05 00 	mov    %r13,0x578(%rsp)
    475d:	00 
    475e:	ff d0                	call   *%rax
    4760:	48 8b 9c 24 68 05 00 	mov    0x568(%rsp),%rbx
    4767:	00 
    4768:	4c 8b ac 24 78 05 00 	mov    0x578(%rsp),%r13
    476f:	00 
    4770:	48 89 c6             	mov    %rax,%rsi
    4773:	48 89 b4 24 68 05 00 	mov    %rsi,0x568(%rsp)
    477a:	00 
    477b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    477f:	48 89 d1             	mov    %rdx,%rcx
    4782:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4786:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    478a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    478e:	be 01 00 00 00       	mov    $0x1,%esi
    4793:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4797:	be 01 00 00 00       	mov    $0x1,%esi
    479c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    47a0:	48 31 f6             	xor    %rsi,%rsi
    47a3:	4c 89 e2             	mov    %r12,%rdx
    47a6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    47ad:	00 00 00 
			47a8: R_X86_64_64	do_callback
    47b0:	48 89 9c 24 70 05 00 	mov    %rbx,0x570(%rsp)
    47b7:	00 
    47b8:	48 89 bc 24 78 05 00 	mov    %rdi,0x578(%rsp)
    47bf:	00 
    47c0:	4c 89 ac 24 80 05 00 	mov    %r13,0x580(%rsp)
    47c7:	00 
    47c8:	ff d0                	call   *%rax
    47ca:	48 8b 9c 24 70 05 00 	mov    0x570(%rsp),%rbx
    47d1:	00 
    47d2:	4c 8b ac 24 80 05 00 	mov    0x580(%rsp),%r13
    47d9:	00 
    47da:	48 89 c6             	mov    %rax,%rsi
    47dd:	48 89 b4 24 70 05 00 	mov    %rsi,0x570(%rsp)
    47e4:	00 
    47e5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    47e9:	48 89 d1             	mov    %rdx,%rcx
    47ec:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    47f0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    47f4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    47f8:	be 01 00 00 00       	mov    $0x1,%esi
    47fd:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4801:	be 01 00 00 00       	mov    $0x1,%esi
    4806:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    480a:	48 31 f6             	xor    %rsi,%rsi
    480d:	4c 89 e2             	mov    %r12,%rdx
    4810:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4817:	00 00 00 
			4812: R_X86_64_64	do_callback
    481a:	48 89 9c 24 78 05 00 	mov    %rbx,0x578(%rsp)
    4821:	00 
    4822:	48 89 bc 24 80 05 00 	mov    %rdi,0x580(%rsp)
    4829:	00 
    482a:	4c 89 ac 24 88 05 00 	mov    %r13,0x588(%rsp)
    4831:	00 
    4832:	ff d0                	call   *%rax
    4834:	48 8b 9c 24 78 05 00 	mov    0x578(%rsp),%rbx
    483b:	00 
    483c:	4c 8b ac 24 88 05 00 	mov    0x588(%rsp),%r13
    4843:	00 
    4844:	48 89 c6             	mov    %rax,%rsi
    4847:	48 89 b4 24 78 05 00 	mov    %rsi,0x578(%rsp)
    484e:	00 
    484f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4853:	48 89 d1             	mov    %rdx,%rcx
    4856:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    485a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    485e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4862:	be 01 00 00 00       	mov    $0x1,%esi
    4867:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    486b:	be 01 00 00 00       	mov    $0x1,%esi
    4870:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4874:	48 31 f6             	xor    %rsi,%rsi
    4877:	4c 89 e2             	mov    %r12,%rdx
    487a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4881:	00 00 00 
			487c: R_X86_64_64	do_callback
    4884:	48 89 9c 24 80 05 00 	mov    %rbx,0x580(%rsp)
    488b:	00 
    488c:	48 89 bc 24 88 05 00 	mov    %rdi,0x588(%rsp)
    4893:	00 
    4894:	4c 89 ac 24 90 05 00 	mov    %r13,0x590(%rsp)
    489b:	00 
    489c:	ff d0                	call   *%rax
    489e:	48 8b 9c 24 80 05 00 	mov    0x580(%rsp),%rbx
    48a5:	00 
    48a6:	4c 8b ac 24 90 05 00 	mov    0x590(%rsp),%r13
    48ad:	00 
    48ae:	48 89 c6             	mov    %rax,%rsi
    48b1:	48 89 b4 24 80 05 00 	mov    %rsi,0x580(%rsp)
    48b8:	00 
    48b9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    48bd:	48 89 d1             	mov    %rdx,%rcx
    48c0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    48c4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    48c8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    48cc:	be 01 00 00 00       	mov    $0x1,%esi
    48d1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    48d5:	be 01 00 00 00       	mov    $0x1,%esi
    48da:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    48de:	48 31 f6             	xor    %rsi,%rsi
    48e1:	4c 89 e2             	mov    %r12,%rdx
    48e4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    48eb:	00 00 00 
			48e6: R_X86_64_64	do_callback
    48ee:	48 89 9c 24 88 05 00 	mov    %rbx,0x588(%rsp)
    48f5:	00 
    48f6:	48 89 bc 24 90 05 00 	mov    %rdi,0x590(%rsp)
    48fd:	00 
    48fe:	4c 89 ac 24 98 05 00 	mov    %r13,0x598(%rsp)
    4905:	00 
    4906:	ff d0                	call   *%rax
    4908:	48 8b 9c 24 88 05 00 	mov    0x588(%rsp),%rbx
    490f:	00 
    4910:	4c 8b ac 24 98 05 00 	mov    0x598(%rsp),%r13
    4917:	00 
    4918:	48 89 c6             	mov    %rax,%rsi
    491b:	48 89 b4 24 88 05 00 	mov    %rsi,0x588(%rsp)
    4922:	00 
    4923:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4927:	48 89 d1             	mov    %rdx,%rcx
    492a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    492e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4932:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4936:	be 01 00 00 00       	mov    $0x1,%esi
    493b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    493f:	be 01 00 00 00       	mov    $0x1,%esi
    4944:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4948:	48 31 f6             	xor    %rsi,%rsi
    494b:	4c 89 e2             	mov    %r12,%rdx
    494e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4955:	00 00 00 
			4950: R_X86_64_64	do_callback
    4958:	48 89 9c 24 90 05 00 	mov    %rbx,0x590(%rsp)
    495f:	00 
    4960:	48 89 bc 24 98 05 00 	mov    %rdi,0x598(%rsp)
    4967:	00 
    4968:	4c 89 ac 24 a0 05 00 	mov    %r13,0x5a0(%rsp)
    496f:	00 
    4970:	ff d0                	call   *%rax
    4972:	48 8b 9c 24 90 05 00 	mov    0x590(%rsp),%rbx
    4979:	00 
    497a:	4c 8b ac 24 a0 05 00 	mov    0x5a0(%rsp),%r13
    4981:	00 
    4982:	48 89 c6             	mov    %rax,%rsi
    4985:	48 89 b4 24 90 05 00 	mov    %rsi,0x590(%rsp)
    498c:	00 
    498d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4991:	48 89 d1             	mov    %rdx,%rcx
    4994:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4998:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    499c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    49a0:	be 01 00 00 00       	mov    $0x1,%esi
    49a5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    49a9:	be 01 00 00 00       	mov    $0x1,%esi
    49ae:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    49b2:	48 31 f6             	xor    %rsi,%rsi
    49b5:	4c 89 e2             	mov    %r12,%rdx
    49b8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    49bf:	00 00 00 
			49ba: R_X86_64_64	do_callback
    49c2:	48 89 9c 24 98 05 00 	mov    %rbx,0x598(%rsp)
    49c9:	00 
    49ca:	48 89 bc 24 a0 05 00 	mov    %rdi,0x5a0(%rsp)
    49d1:	00 
    49d2:	4c 89 ac 24 a8 05 00 	mov    %r13,0x5a8(%rsp)
    49d9:	00 
    49da:	ff d0                	call   *%rax
    49dc:	48 8b 9c 24 98 05 00 	mov    0x598(%rsp),%rbx
    49e3:	00 
    49e4:	4c 8b ac 24 a8 05 00 	mov    0x5a8(%rsp),%r13
    49eb:	00 
    49ec:	48 89 c6             	mov    %rax,%rsi
    49ef:	48 89 b4 24 98 05 00 	mov    %rsi,0x598(%rsp)
    49f6:	00 
    49f7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    49fb:	48 89 d1             	mov    %rdx,%rcx
    49fe:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4a02:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4a06:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4a0a:	be 01 00 00 00       	mov    $0x1,%esi
    4a0f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4a13:	be 01 00 00 00       	mov    $0x1,%esi
    4a18:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4a1c:	48 31 f6             	xor    %rsi,%rsi
    4a1f:	4c 89 e2             	mov    %r12,%rdx
    4a22:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4a29:	00 00 00 
			4a24: R_X86_64_64	do_callback
    4a2c:	48 89 9c 24 a0 05 00 	mov    %rbx,0x5a0(%rsp)
    4a33:	00 
    4a34:	48 89 bc 24 a8 05 00 	mov    %rdi,0x5a8(%rsp)
    4a3b:	00 
    4a3c:	4c 89 ac 24 b0 05 00 	mov    %r13,0x5b0(%rsp)
    4a43:	00 
    4a44:	ff d0                	call   *%rax
    4a46:	48 8b 9c 24 a0 05 00 	mov    0x5a0(%rsp),%rbx
    4a4d:	00 
    4a4e:	4c 8b ac 24 b0 05 00 	mov    0x5b0(%rsp),%r13
    4a55:	00 
    4a56:	48 89 c6             	mov    %rax,%rsi
    4a59:	48 89 b4 24 a0 05 00 	mov    %rsi,0x5a0(%rsp)
    4a60:	00 
    4a61:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4a65:	48 89 d1             	mov    %rdx,%rcx
    4a68:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4a6c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4a70:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4a74:	be 01 00 00 00       	mov    $0x1,%esi
    4a79:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4a7d:	be 01 00 00 00       	mov    $0x1,%esi
    4a82:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4a86:	48 31 f6             	xor    %rsi,%rsi
    4a89:	4c 89 e2             	mov    %r12,%rdx
    4a8c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4a93:	00 00 00 
			4a8e: R_X86_64_64	do_callback
    4a96:	48 89 9c 24 a8 05 00 	mov    %rbx,0x5a8(%rsp)
    4a9d:	00 
    4a9e:	48 89 bc 24 b0 05 00 	mov    %rdi,0x5b0(%rsp)
    4aa5:	00 
    4aa6:	4c 89 ac 24 b8 05 00 	mov    %r13,0x5b8(%rsp)
    4aad:	00 
    4aae:	ff d0                	call   *%rax
    4ab0:	48 8b 9c 24 a8 05 00 	mov    0x5a8(%rsp),%rbx
    4ab7:	00 
    4ab8:	4c 8b ac 24 b8 05 00 	mov    0x5b8(%rsp),%r13
    4abf:	00 
    4ac0:	48 89 c6             	mov    %rax,%rsi
    4ac3:	48 89 b4 24 a8 05 00 	mov    %rsi,0x5a8(%rsp)
    4aca:	00 
    4acb:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4acf:	48 89 d1             	mov    %rdx,%rcx
    4ad2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4ad6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4ada:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4ade:	be 01 00 00 00       	mov    $0x1,%esi
    4ae3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4ae7:	be 01 00 00 00       	mov    $0x1,%esi
    4aec:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4af0:	48 31 f6             	xor    %rsi,%rsi
    4af3:	4c 89 e2             	mov    %r12,%rdx
    4af6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4afd:	00 00 00 
			4af8: R_X86_64_64	do_callback
    4b00:	48 89 9c 24 b0 05 00 	mov    %rbx,0x5b0(%rsp)
    4b07:	00 
    4b08:	48 89 bc 24 b8 05 00 	mov    %rdi,0x5b8(%rsp)
    4b0f:	00 
    4b10:	4c 89 ac 24 c0 05 00 	mov    %r13,0x5c0(%rsp)
    4b17:	00 
    4b18:	ff d0                	call   *%rax
    4b1a:	48 8b 9c 24 b0 05 00 	mov    0x5b0(%rsp),%rbx
    4b21:	00 
    4b22:	4c 8b ac 24 c0 05 00 	mov    0x5c0(%rsp),%r13
    4b29:	00 
    4b2a:	48 89 c6             	mov    %rax,%rsi
    4b2d:	48 89 b4 24 b0 05 00 	mov    %rsi,0x5b0(%rsp)
    4b34:	00 
    4b35:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4b39:	48 89 d1             	mov    %rdx,%rcx
    4b3c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4b40:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4b44:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4b48:	be 01 00 00 00       	mov    $0x1,%esi
    4b4d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4b51:	be 01 00 00 00       	mov    $0x1,%esi
    4b56:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4b5a:	48 31 f6             	xor    %rsi,%rsi
    4b5d:	4c 89 e2             	mov    %r12,%rdx
    4b60:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4b67:	00 00 00 
			4b62: R_X86_64_64	do_callback
    4b6a:	48 89 9c 24 b8 05 00 	mov    %rbx,0x5b8(%rsp)
    4b71:	00 
    4b72:	48 89 bc 24 c0 05 00 	mov    %rdi,0x5c0(%rsp)
    4b79:	00 
    4b7a:	4c 89 ac 24 c8 05 00 	mov    %r13,0x5c8(%rsp)
    4b81:	00 
    4b82:	ff d0                	call   *%rax
    4b84:	48 8b 9c 24 b8 05 00 	mov    0x5b8(%rsp),%rbx
    4b8b:	00 
    4b8c:	4c 8b ac 24 c8 05 00 	mov    0x5c8(%rsp),%r13
    4b93:	00 
    4b94:	48 89 c6             	mov    %rax,%rsi
    4b97:	48 89 b4 24 b8 05 00 	mov    %rsi,0x5b8(%rsp)
    4b9e:	00 
    4b9f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4ba3:	48 89 d1             	mov    %rdx,%rcx
    4ba6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4baa:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4bae:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4bb2:	be 01 00 00 00       	mov    $0x1,%esi
    4bb7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4bbb:	be 01 00 00 00       	mov    $0x1,%esi
    4bc0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4bc4:	48 31 f6             	xor    %rsi,%rsi
    4bc7:	4c 89 e2             	mov    %r12,%rdx
    4bca:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4bd1:	00 00 00 
			4bcc: R_X86_64_64	do_callback
    4bd4:	48 89 9c 24 c0 05 00 	mov    %rbx,0x5c0(%rsp)
    4bdb:	00 
    4bdc:	48 89 bc 24 c8 05 00 	mov    %rdi,0x5c8(%rsp)
    4be3:	00 
    4be4:	4c 89 ac 24 d0 05 00 	mov    %r13,0x5d0(%rsp)
    4beb:	00 
    4bec:	ff d0                	call   *%rax
    4bee:	48 8b 9c 24 c0 05 00 	mov    0x5c0(%rsp),%rbx
    4bf5:	00 
    4bf6:	4c 8b ac 24 d0 05 00 	mov    0x5d0(%rsp),%r13
    4bfd:	00 
    4bfe:	48 89 c6             	mov    %rax,%rsi
    4c01:	48 89 b4 24 c0 05 00 	mov    %rsi,0x5c0(%rsp)
    4c08:	00 
    4c09:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4c0d:	48 89 d1             	mov    %rdx,%rcx
    4c10:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4c14:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4c18:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4c1c:	be 01 00 00 00       	mov    $0x1,%esi
    4c21:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4c25:	be 01 00 00 00       	mov    $0x1,%esi
    4c2a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4c2e:	48 31 f6             	xor    %rsi,%rsi
    4c31:	4c 89 e2             	mov    %r12,%rdx
    4c34:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4c3b:	00 00 00 
			4c36: R_X86_64_64	do_callback
    4c3e:	48 89 9c 24 c8 05 00 	mov    %rbx,0x5c8(%rsp)
    4c45:	00 
    4c46:	48 89 bc 24 d0 05 00 	mov    %rdi,0x5d0(%rsp)
    4c4d:	00 
    4c4e:	4c 89 ac 24 d8 05 00 	mov    %r13,0x5d8(%rsp)
    4c55:	00 
    4c56:	ff d0                	call   *%rax
    4c58:	48 8b 9c 24 c8 05 00 	mov    0x5c8(%rsp),%rbx
    4c5f:	00 
    4c60:	4c 8b ac 24 d8 05 00 	mov    0x5d8(%rsp),%r13
    4c67:	00 
    4c68:	48 89 c6             	mov    %rax,%rsi
    4c6b:	48 89 b4 24 c8 05 00 	mov    %rsi,0x5c8(%rsp)
    4c72:	00 
    4c73:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4c77:	48 89 d1             	mov    %rdx,%rcx
    4c7a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4c7e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4c82:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4c86:	be 01 00 00 00       	mov    $0x1,%esi
    4c8b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4c8f:	be 01 00 00 00       	mov    $0x1,%esi
    4c94:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4c98:	48 31 f6             	xor    %rsi,%rsi
    4c9b:	4c 89 e2             	mov    %r12,%rdx
    4c9e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4ca5:	00 00 00 
			4ca0: R_X86_64_64	do_callback
    4ca8:	48 89 9c 24 d0 05 00 	mov    %rbx,0x5d0(%rsp)
    4caf:	00 
    4cb0:	48 89 bc 24 d8 05 00 	mov    %rdi,0x5d8(%rsp)
    4cb7:	00 
    4cb8:	4c 89 ac 24 e0 05 00 	mov    %r13,0x5e0(%rsp)
    4cbf:	00 
    4cc0:	ff d0                	call   *%rax
    4cc2:	48 8b 9c 24 d0 05 00 	mov    0x5d0(%rsp),%rbx
    4cc9:	00 
    4cca:	4c 8b ac 24 e0 05 00 	mov    0x5e0(%rsp),%r13
    4cd1:	00 
    4cd2:	48 89 c6             	mov    %rax,%rsi
    4cd5:	48 89 b4 24 d0 05 00 	mov    %rsi,0x5d0(%rsp)
    4cdc:	00 
    4cdd:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4ce1:	48 89 d1             	mov    %rdx,%rcx
    4ce4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4ce8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4cec:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4cf0:	be 01 00 00 00       	mov    $0x1,%esi
    4cf5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4cf9:	be 01 00 00 00       	mov    $0x1,%esi
    4cfe:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4d02:	48 31 f6             	xor    %rsi,%rsi
    4d05:	4c 89 e2             	mov    %r12,%rdx
    4d08:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4d0f:	00 00 00 
			4d0a: R_X86_64_64	do_callback
    4d12:	48 89 9c 24 d8 05 00 	mov    %rbx,0x5d8(%rsp)
    4d19:	00 
    4d1a:	48 89 bc 24 e0 05 00 	mov    %rdi,0x5e0(%rsp)
    4d21:	00 
    4d22:	4c 89 ac 24 e8 05 00 	mov    %r13,0x5e8(%rsp)
    4d29:	00 
    4d2a:	ff d0                	call   *%rax
    4d2c:	48 8b 9c 24 d8 05 00 	mov    0x5d8(%rsp),%rbx
    4d33:	00 
    4d34:	4c 8b ac 24 e8 05 00 	mov    0x5e8(%rsp),%r13
    4d3b:	00 
    4d3c:	48 89 c6             	mov    %rax,%rsi
    4d3f:	48 89 b4 24 d8 05 00 	mov    %rsi,0x5d8(%rsp)
    4d46:	00 
    4d47:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4d4b:	48 89 d1             	mov    %rdx,%rcx
    4d4e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4d52:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4d56:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4d5a:	be 01 00 00 00       	mov    $0x1,%esi
    4d5f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4d63:	be 01 00 00 00       	mov    $0x1,%esi
    4d68:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4d6c:	48 31 f6             	xor    %rsi,%rsi
    4d6f:	4c 89 e2             	mov    %r12,%rdx
    4d72:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4d79:	00 00 00 
			4d74: R_X86_64_64	do_callback
    4d7c:	48 89 9c 24 e0 05 00 	mov    %rbx,0x5e0(%rsp)
    4d83:	00 
    4d84:	48 89 bc 24 e8 05 00 	mov    %rdi,0x5e8(%rsp)
    4d8b:	00 
    4d8c:	4c 89 ac 24 f0 05 00 	mov    %r13,0x5f0(%rsp)
    4d93:	00 
    4d94:	ff d0                	call   *%rax
    4d96:	48 8b 9c 24 e0 05 00 	mov    0x5e0(%rsp),%rbx
    4d9d:	00 
    4d9e:	4c 8b ac 24 f0 05 00 	mov    0x5f0(%rsp),%r13
    4da5:	00 
    4da6:	48 89 c6             	mov    %rax,%rsi
    4da9:	48 89 b4 24 e0 05 00 	mov    %rsi,0x5e0(%rsp)
    4db0:	00 
    4db1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4db5:	48 89 d1             	mov    %rdx,%rcx
    4db8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4dbc:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4dc0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4dc4:	be 01 00 00 00       	mov    $0x1,%esi
    4dc9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4dcd:	be 01 00 00 00       	mov    $0x1,%esi
    4dd2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4dd6:	48 31 f6             	xor    %rsi,%rsi
    4dd9:	4c 89 e2             	mov    %r12,%rdx
    4ddc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4de3:	00 00 00 
			4dde: R_X86_64_64	do_callback
    4de6:	48 89 9c 24 e8 05 00 	mov    %rbx,0x5e8(%rsp)
    4ded:	00 
    4dee:	48 89 bc 24 f0 05 00 	mov    %rdi,0x5f0(%rsp)
    4df5:	00 
    4df6:	4c 89 ac 24 f8 05 00 	mov    %r13,0x5f8(%rsp)
    4dfd:	00 
    4dfe:	ff d0                	call   *%rax
    4e00:	48 8b 9c 24 e8 05 00 	mov    0x5e8(%rsp),%rbx
    4e07:	00 
    4e08:	4c 8b ac 24 f8 05 00 	mov    0x5f8(%rsp),%r13
    4e0f:	00 
    4e10:	48 89 c6             	mov    %rax,%rsi
    4e13:	48 89 b4 24 e8 05 00 	mov    %rsi,0x5e8(%rsp)
    4e1a:	00 
    4e1b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4e1f:	48 89 d1             	mov    %rdx,%rcx
    4e22:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4e26:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4e2a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4e2e:	be 01 00 00 00       	mov    $0x1,%esi
    4e33:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4e37:	be 01 00 00 00       	mov    $0x1,%esi
    4e3c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4e40:	48 31 f6             	xor    %rsi,%rsi
    4e43:	4c 89 e2             	mov    %r12,%rdx
    4e46:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4e4d:	00 00 00 
			4e48: R_X86_64_64	do_callback
    4e50:	48 89 9c 24 f0 05 00 	mov    %rbx,0x5f0(%rsp)
    4e57:	00 
    4e58:	48 89 bc 24 f8 05 00 	mov    %rdi,0x5f8(%rsp)
    4e5f:	00 
    4e60:	4c 89 ac 24 00 06 00 	mov    %r13,0x600(%rsp)
    4e67:	00 
    4e68:	ff d0                	call   *%rax
    4e6a:	48 8b 9c 24 f0 05 00 	mov    0x5f0(%rsp),%rbx
    4e71:	00 
    4e72:	4c 8b ac 24 00 06 00 	mov    0x600(%rsp),%r13
    4e79:	00 
    4e7a:	48 89 c6             	mov    %rax,%rsi
    4e7d:	48 89 b4 24 f0 05 00 	mov    %rsi,0x5f0(%rsp)
    4e84:	00 
    4e85:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4e89:	48 89 d1             	mov    %rdx,%rcx
    4e8c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4e90:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4e94:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4e98:	be 01 00 00 00       	mov    $0x1,%esi
    4e9d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4ea1:	be 01 00 00 00       	mov    $0x1,%esi
    4ea6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4eaa:	48 31 f6             	xor    %rsi,%rsi
    4ead:	4c 89 e2             	mov    %r12,%rdx
    4eb0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4eb7:	00 00 00 
			4eb2: R_X86_64_64	do_callback
    4eba:	48 89 9c 24 f8 05 00 	mov    %rbx,0x5f8(%rsp)
    4ec1:	00 
    4ec2:	48 89 bc 24 00 06 00 	mov    %rdi,0x600(%rsp)
    4ec9:	00 
    4eca:	4c 89 ac 24 08 06 00 	mov    %r13,0x608(%rsp)
    4ed1:	00 
    4ed2:	ff d0                	call   *%rax
    4ed4:	48 8b 9c 24 f8 05 00 	mov    0x5f8(%rsp),%rbx
    4edb:	00 
    4edc:	4c 8b ac 24 08 06 00 	mov    0x608(%rsp),%r13
    4ee3:	00 
    4ee4:	48 89 c6             	mov    %rax,%rsi
    4ee7:	48 89 b4 24 f8 05 00 	mov    %rsi,0x5f8(%rsp)
    4eee:	00 
    4eef:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4ef3:	48 89 d1             	mov    %rdx,%rcx
    4ef6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4efa:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4efe:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4f02:	be 01 00 00 00       	mov    $0x1,%esi
    4f07:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4f0b:	be 01 00 00 00       	mov    $0x1,%esi
    4f10:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4f14:	48 31 f6             	xor    %rsi,%rsi
    4f17:	4c 89 e2             	mov    %r12,%rdx
    4f1a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4f21:	00 00 00 
			4f1c: R_X86_64_64	do_callback
    4f24:	48 89 9c 24 00 06 00 	mov    %rbx,0x600(%rsp)
    4f2b:	00 
    4f2c:	48 89 bc 24 08 06 00 	mov    %rdi,0x608(%rsp)
    4f33:	00 
    4f34:	4c 89 ac 24 10 06 00 	mov    %r13,0x610(%rsp)
    4f3b:	00 
    4f3c:	ff d0                	call   *%rax
    4f3e:	48 8b 9c 24 00 06 00 	mov    0x600(%rsp),%rbx
    4f45:	00 
    4f46:	4c 8b ac 24 10 06 00 	mov    0x610(%rsp),%r13
    4f4d:	00 
    4f4e:	48 89 c6             	mov    %rax,%rsi
    4f51:	48 89 b4 24 00 06 00 	mov    %rsi,0x600(%rsp)
    4f58:	00 
    4f59:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4f5d:	48 89 d1             	mov    %rdx,%rcx
    4f60:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4f64:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4f68:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4f6c:	be 01 00 00 00       	mov    $0x1,%esi
    4f71:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4f75:	be 01 00 00 00       	mov    $0x1,%esi
    4f7a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4f7e:	48 31 f6             	xor    %rsi,%rsi
    4f81:	4c 89 e2             	mov    %r12,%rdx
    4f84:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4f8b:	00 00 00 
			4f86: R_X86_64_64	do_callback
    4f8e:	48 89 9c 24 08 06 00 	mov    %rbx,0x608(%rsp)
    4f95:	00 
    4f96:	48 89 bc 24 10 06 00 	mov    %rdi,0x610(%rsp)
    4f9d:	00 
    4f9e:	4c 89 ac 24 18 06 00 	mov    %r13,0x618(%rsp)
    4fa5:	00 
    4fa6:	ff d0                	call   *%rax
    4fa8:	48 8b 9c 24 08 06 00 	mov    0x608(%rsp),%rbx
    4faf:	00 
    4fb0:	4c 8b ac 24 18 06 00 	mov    0x618(%rsp),%r13
    4fb7:	00 
    4fb8:	48 89 c6             	mov    %rax,%rsi
    4fbb:	48 89 b4 24 08 06 00 	mov    %rsi,0x608(%rsp)
    4fc2:	00 
    4fc3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    4fc7:	48 89 d1             	mov    %rdx,%rcx
    4fca:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    4fce:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    4fd2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    4fd6:	be 01 00 00 00       	mov    $0x1,%esi
    4fdb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    4fdf:	be 01 00 00 00       	mov    $0x1,%esi
    4fe4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    4fe8:	48 31 f6             	xor    %rsi,%rsi
    4feb:	4c 89 e2             	mov    %r12,%rdx
    4fee:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    4ff5:	00 00 00 
			4ff0: R_X86_64_64	do_callback
    4ff8:	48 89 9c 24 10 06 00 	mov    %rbx,0x610(%rsp)
    4fff:	00 
    5000:	48 89 bc 24 18 06 00 	mov    %rdi,0x618(%rsp)
    5007:	00 
    5008:	4c 89 ac 24 20 06 00 	mov    %r13,0x620(%rsp)
    500f:	00 
    5010:	ff d0                	call   *%rax
    5012:	48 8b 9c 24 10 06 00 	mov    0x610(%rsp),%rbx
    5019:	00 
    501a:	4c 8b ac 24 20 06 00 	mov    0x620(%rsp),%r13
    5021:	00 
    5022:	48 89 c6             	mov    %rax,%rsi
    5025:	48 89 b4 24 10 06 00 	mov    %rsi,0x610(%rsp)
    502c:	00 
    502d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5031:	48 89 d1             	mov    %rdx,%rcx
    5034:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5038:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    503c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5040:	be 01 00 00 00       	mov    $0x1,%esi
    5045:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5049:	be 01 00 00 00       	mov    $0x1,%esi
    504e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5052:	48 31 f6             	xor    %rsi,%rsi
    5055:	4c 89 e2             	mov    %r12,%rdx
    5058:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    505f:	00 00 00 
			505a: R_X86_64_64	do_callback
    5062:	48 89 9c 24 18 06 00 	mov    %rbx,0x618(%rsp)
    5069:	00 
    506a:	48 89 bc 24 20 06 00 	mov    %rdi,0x620(%rsp)
    5071:	00 
    5072:	4c 89 ac 24 28 06 00 	mov    %r13,0x628(%rsp)
    5079:	00 
    507a:	ff d0                	call   *%rax
    507c:	48 8b 9c 24 18 06 00 	mov    0x618(%rsp),%rbx
    5083:	00 
    5084:	4c 8b ac 24 28 06 00 	mov    0x628(%rsp),%r13
    508b:	00 
    508c:	48 89 c6             	mov    %rax,%rsi
    508f:	48 89 b4 24 18 06 00 	mov    %rsi,0x618(%rsp)
    5096:	00 
    5097:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    509b:	48 89 d1             	mov    %rdx,%rcx
    509e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    50a2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    50a6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    50aa:	be 01 00 00 00       	mov    $0x1,%esi
    50af:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    50b3:	be 01 00 00 00       	mov    $0x1,%esi
    50b8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    50bc:	48 31 f6             	xor    %rsi,%rsi
    50bf:	4c 89 e2             	mov    %r12,%rdx
    50c2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    50c9:	00 00 00 
			50c4: R_X86_64_64	do_callback
    50cc:	48 89 9c 24 20 06 00 	mov    %rbx,0x620(%rsp)
    50d3:	00 
    50d4:	48 89 bc 24 28 06 00 	mov    %rdi,0x628(%rsp)
    50db:	00 
    50dc:	4c 89 ac 24 30 06 00 	mov    %r13,0x630(%rsp)
    50e3:	00 
    50e4:	ff d0                	call   *%rax
    50e6:	48 8b 9c 24 20 06 00 	mov    0x620(%rsp),%rbx
    50ed:	00 
    50ee:	4c 8b ac 24 30 06 00 	mov    0x630(%rsp),%r13
    50f5:	00 
    50f6:	48 89 c6             	mov    %rax,%rsi
    50f9:	48 89 b4 24 20 06 00 	mov    %rsi,0x620(%rsp)
    5100:	00 
    5101:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5105:	48 89 d1             	mov    %rdx,%rcx
    5108:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    510c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5110:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5114:	be 01 00 00 00       	mov    $0x1,%esi
    5119:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    511d:	be 01 00 00 00       	mov    $0x1,%esi
    5122:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5126:	48 31 f6             	xor    %rsi,%rsi
    5129:	4c 89 e2             	mov    %r12,%rdx
    512c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5133:	00 00 00 
			512e: R_X86_64_64	do_callback
    5136:	48 89 9c 24 28 06 00 	mov    %rbx,0x628(%rsp)
    513d:	00 
    513e:	48 89 bc 24 30 06 00 	mov    %rdi,0x630(%rsp)
    5145:	00 
    5146:	4c 89 ac 24 38 06 00 	mov    %r13,0x638(%rsp)
    514d:	00 
    514e:	ff d0                	call   *%rax
    5150:	48 8b 9c 24 28 06 00 	mov    0x628(%rsp),%rbx
    5157:	00 
    5158:	4c 8b ac 24 38 06 00 	mov    0x638(%rsp),%r13
    515f:	00 
    5160:	48 89 c6             	mov    %rax,%rsi
    5163:	48 89 b4 24 28 06 00 	mov    %rsi,0x628(%rsp)
    516a:	00 
    516b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    516f:	48 89 d1             	mov    %rdx,%rcx
    5172:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5176:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    517a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    517e:	be 01 00 00 00       	mov    $0x1,%esi
    5183:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5187:	be 01 00 00 00       	mov    $0x1,%esi
    518c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5190:	48 31 f6             	xor    %rsi,%rsi
    5193:	4c 89 e2             	mov    %r12,%rdx
    5196:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    519d:	00 00 00 
			5198: R_X86_64_64	do_callback
    51a0:	48 89 9c 24 30 06 00 	mov    %rbx,0x630(%rsp)
    51a7:	00 
    51a8:	48 89 bc 24 38 06 00 	mov    %rdi,0x638(%rsp)
    51af:	00 
    51b0:	4c 89 ac 24 40 06 00 	mov    %r13,0x640(%rsp)
    51b7:	00 
    51b8:	ff d0                	call   *%rax
    51ba:	48 8b 9c 24 30 06 00 	mov    0x630(%rsp),%rbx
    51c1:	00 
    51c2:	4c 8b ac 24 40 06 00 	mov    0x640(%rsp),%r13
    51c9:	00 
    51ca:	48 89 c6             	mov    %rax,%rsi
    51cd:	48 89 b4 24 30 06 00 	mov    %rsi,0x630(%rsp)
    51d4:	00 
    51d5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    51d9:	48 89 d1             	mov    %rdx,%rcx
    51dc:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    51e0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    51e4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    51e8:	be 01 00 00 00       	mov    $0x1,%esi
    51ed:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    51f1:	be 01 00 00 00       	mov    $0x1,%esi
    51f6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    51fa:	48 31 f6             	xor    %rsi,%rsi
    51fd:	4c 89 e2             	mov    %r12,%rdx
    5200:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5207:	00 00 00 
			5202: R_X86_64_64	do_callback
    520a:	48 89 9c 24 38 06 00 	mov    %rbx,0x638(%rsp)
    5211:	00 
    5212:	48 89 bc 24 40 06 00 	mov    %rdi,0x640(%rsp)
    5219:	00 
    521a:	4c 89 ac 24 48 06 00 	mov    %r13,0x648(%rsp)
    5221:	00 
    5222:	ff d0                	call   *%rax
    5224:	48 8b 9c 24 38 06 00 	mov    0x638(%rsp),%rbx
    522b:	00 
    522c:	4c 8b ac 24 48 06 00 	mov    0x648(%rsp),%r13
    5233:	00 
    5234:	48 89 c6             	mov    %rax,%rsi
    5237:	48 89 b4 24 38 06 00 	mov    %rsi,0x638(%rsp)
    523e:	00 
    523f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5243:	48 89 d1             	mov    %rdx,%rcx
    5246:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    524a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    524e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5252:	be 01 00 00 00       	mov    $0x1,%esi
    5257:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    525b:	be 01 00 00 00       	mov    $0x1,%esi
    5260:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5264:	48 31 f6             	xor    %rsi,%rsi
    5267:	4c 89 e2             	mov    %r12,%rdx
    526a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5271:	00 00 00 
			526c: R_X86_64_64	do_callback
    5274:	48 89 9c 24 40 06 00 	mov    %rbx,0x640(%rsp)
    527b:	00 
    527c:	48 89 bc 24 48 06 00 	mov    %rdi,0x648(%rsp)
    5283:	00 
    5284:	4c 89 ac 24 50 06 00 	mov    %r13,0x650(%rsp)
    528b:	00 
    528c:	ff d0                	call   *%rax
    528e:	48 8b 9c 24 40 06 00 	mov    0x640(%rsp),%rbx
    5295:	00 
    5296:	4c 8b ac 24 50 06 00 	mov    0x650(%rsp),%r13
    529d:	00 
    529e:	48 89 c6             	mov    %rax,%rsi
    52a1:	48 89 b4 24 40 06 00 	mov    %rsi,0x640(%rsp)
    52a8:	00 
    52a9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    52ad:	48 89 d1             	mov    %rdx,%rcx
    52b0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    52b4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    52b8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    52bc:	be 01 00 00 00       	mov    $0x1,%esi
    52c1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    52c5:	be 01 00 00 00       	mov    $0x1,%esi
    52ca:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    52ce:	48 31 f6             	xor    %rsi,%rsi
    52d1:	4c 89 e2             	mov    %r12,%rdx
    52d4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    52db:	00 00 00 
			52d6: R_X86_64_64	do_callback
    52de:	48 89 9c 24 48 06 00 	mov    %rbx,0x648(%rsp)
    52e5:	00 
    52e6:	48 89 bc 24 50 06 00 	mov    %rdi,0x650(%rsp)
    52ed:	00 
    52ee:	4c 89 ac 24 58 06 00 	mov    %r13,0x658(%rsp)
    52f5:	00 
    52f6:	ff d0                	call   *%rax
    52f8:	48 8b 9c 24 48 06 00 	mov    0x648(%rsp),%rbx
    52ff:	00 
    5300:	4c 8b ac 24 58 06 00 	mov    0x658(%rsp),%r13
    5307:	00 
    5308:	48 89 c6             	mov    %rax,%rsi
    530b:	48 89 b4 24 48 06 00 	mov    %rsi,0x648(%rsp)
    5312:	00 
    5313:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5317:	48 89 d1             	mov    %rdx,%rcx
    531a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    531e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5322:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5326:	be 01 00 00 00       	mov    $0x1,%esi
    532b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    532f:	be 01 00 00 00       	mov    $0x1,%esi
    5334:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5338:	48 31 f6             	xor    %rsi,%rsi
    533b:	4c 89 e2             	mov    %r12,%rdx
    533e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5345:	00 00 00 
			5340: R_X86_64_64	do_callback
    5348:	48 89 9c 24 50 06 00 	mov    %rbx,0x650(%rsp)
    534f:	00 
    5350:	48 89 bc 24 58 06 00 	mov    %rdi,0x658(%rsp)
    5357:	00 
    5358:	4c 89 ac 24 60 06 00 	mov    %r13,0x660(%rsp)
    535f:	00 
    5360:	ff d0                	call   *%rax
    5362:	48 8b 9c 24 50 06 00 	mov    0x650(%rsp),%rbx
    5369:	00 
    536a:	4c 8b ac 24 60 06 00 	mov    0x660(%rsp),%r13
    5371:	00 
    5372:	48 89 c6             	mov    %rax,%rsi
    5375:	48 89 b4 24 50 06 00 	mov    %rsi,0x650(%rsp)
    537c:	00 
    537d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5381:	48 89 d1             	mov    %rdx,%rcx
    5384:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5388:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    538c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5390:	be 01 00 00 00       	mov    $0x1,%esi
    5395:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5399:	be 01 00 00 00       	mov    $0x1,%esi
    539e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    53a2:	48 31 f6             	xor    %rsi,%rsi
    53a5:	4c 89 e2             	mov    %r12,%rdx
    53a8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    53af:	00 00 00 
			53aa: R_X86_64_64	do_callback
    53b2:	48 89 9c 24 58 06 00 	mov    %rbx,0x658(%rsp)
    53b9:	00 
    53ba:	48 89 bc 24 60 06 00 	mov    %rdi,0x660(%rsp)
    53c1:	00 
    53c2:	4c 89 ac 24 68 06 00 	mov    %r13,0x668(%rsp)
    53c9:	00 
    53ca:	ff d0                	call   *%rax
    53cc:	48 8b 9c 24 58 06 00 	mov    0x658(%rsp),%rbx
    53d3:	00 
    53d4:	4c 8b ac 24 68 06 00 	mov    0x668(%rsp),%r13
    53db:	00 
    53dc:	48 89 c6             	mov    %rax,%rsi
    53df:	48 89 b4 24 58 06 00 	mov    %rsi,0x658(%rsp)
    53e6:	00 
    53e7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    53eb:	48 89 d1             	mov    %rdx,%rcx
    53ee:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    53f2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    53f6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    53fa:	be 01 00 00 00       	mov    $0x1,%esi
    53ff:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5403:	be 01 00 00 00       	mov    $0x1,%esi
    5408:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    540c:	48 31 f6             	xor    %rsi,%rsi
    540f:	4c 89 e2             	mov    %r12,%rdx
    5412:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5419:	00 00 00 
			5414: R_X86_64_64	do_callback
    541c:	48 89 9c 24 60 06 00 	mov    %rbx,0x660(%rsp)
    5423:	00 
    5424:	48 89 bc 24 68 06 00 	mov    %rdi,0x668(%rsp)
    542b:	00 
    542c:	4c 89 ac 24 70 06 00 	mov    %r13,0x670(%rsp)
    5433:	00 
    5434:	ff d0                	call   *%rax
    5436:	48 8b 9c 24 60 06 00 	mov    0x660(%rsp),%rbx
    543d:	00 
    543e:	4c 8b ac 24 70 06 00 	mov    0x670(%rsp),%r13
    5445:	00 
    5446:	48 89 c6             	mov    %rax,%rsi
    5449:	48 89 b4 24 60 06 00 	mov    %rsi,0x660(%rsp)
    5450:	00 
    5451:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5455:	48 89 d1             	mov    %rdx,%rcx
    5458:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    545c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5460:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5464:	be 01 00 00 00       	mov    $0x1,%esi
    5469:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    546d:	be 01 00 00 00       	mov    $0x1,%esi
    5472:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5476:	48 31 f6             	xor    %rsi,%rsi
    5479:	4c 89 e2             	mov    %r12,%rdx
    547c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5483:	00 00 00 
			547e: R_X86_64_64	do_callback
    5486:	48 89 9c 24 68 06 00 	mov    %rbx,0x668(%rsp)
    548d:	00 
    548e:	48 89 bc 24 70 06 00 	mov    %rdi,0x670(%rsp)
    5495:	00 
    5496:	4c 89 ac 24 78 06 00 	mov    %r13,0x678(%rsp)
    549d:	00 
    549e:	ff d0                	call   *%rax
    54a0:	48 8b 9c 24 68 06 00 	mov    0x668(%rsp),%rbx
    54a7:	00 
    54a8:	4c 8b ac 24 78 06 00 	mov    0x678(%rsp),%r13
    54af:	00 
    54b0:	48 89 c6             	mov    %rax,%rsi
    54b3:	48 89 b4 24 68 06 00 	mov    %rsi,0x668(%rsp)
    54ba:	00 
    54bb:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    54bf:	48 89 d1             	mov    %rdx,%rcx
    54c2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    54c6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    54ca:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    54ce:	be 01 00 00 00       	mov    $0x1,%esi
    54d3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    54d7:	be 01 00 00 00       	mov    $0x1,%esi
    54dc:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    54e0:	48 31 f6             	xor    %rsi,%rsi
    54e3:	4c 89 e2             	mov    %r12,%rdx
    54e6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    54ed:	00 00 00 
			54e8: R_X86_64_64	do_callback
    54f0:	48 89 9c 24 70 06 00 	mov    %rbx,0x670(%rsp)
    54f7:	00 
    54f8:	48 89 bc 24 78 06 00 	mov    %rdi,0x678(%rsp)
    54ff:	00 
    5500:	4c 89 ac 24 80 06 00 	mov    %r13,0x680(%rsp)
    5507:	00 
    5508:	ff d0                	call   *%rax
    550a:	48 8b 9c 24 70 06 00 	mov    0x670(%rsp),%rbx
    5511:	00 
    5512:	4c 8b ac 24 80 06 00 	mov    0x680(%rsp),%r13
    5519:	00 
    551a:	48 89 c6             	mov    %rax,%rsi
    551d:	48 89 b4 24 70 06 00 	mov    %rsi,0x670(%rsp)
    5524:	00 
    5525:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5529:	48 89 d1             	mov    %rdx,%rcx
    552c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5530:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5534:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5538:	be 01 00 00 00       	mov    $0x1,%esi
    553d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5541:	be 01 00 00 00       	mov    $0x1,%esi
    5546:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    554a:	48 31 f6             	xor    %rsi,%rsi
    554d:	4c 89 e2             	mov    %r12,%rdx
    5550:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5557:	00 00 00 
			5552: R_X86_64_64	do_callback
    555a:	48 89 9c 24 78 06 00 	mov    %rbx,0x678(%rsp)
    5561:	00 
    5562:	48 89 bc 24 80 06 00 	mov    %rdi,0x680(%rsp)
    5569:	00 
    556a:	4c 89 ac 24 88 06 00 	mov    %r13,0x688(%rsp)
    5571:	00 
    5572:	ff d0                	call   *%rax
    5574:	48 8b 9c 24 78 06 00 	mov    0x678(%rsp),%rbx
    557b:	00 
    557c:	4c 8b ac 24 88 06 00 	mov    0x688(%rsp),%r13
    5583:	00 
    5584:	48 89 c6             	mov    %rax,%rsi
    5587:	48 89 b4 24 78 06 00 	mov    %rsi,0x678(%rsp)
    558e:	00 
    558f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5593:	48 89 d1             	mov    %rdx,%rcx
    5596:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    559a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    559e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    55a2:	be 01 00 00 00       	mov    $0x1,%esi
    55a7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    55ab:	be 01 00 00 00       	mov    $0x1,%esi
    55b0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    55b4:	48 31 f6             	xor    %rsi,%rsi
    55b7:	4c 89 e2             	mov    %r12,%rdx
    55ba:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    55c1:	00 00 00 
			55bc: R_X86_64_64	do_callback
    55c4:	48 89 9c 24 80 06 00 	mov    %rbx,0x680(%rsp)
    55cb:	00 
    55cc:	48 89 bc 24 88 06 00 	mov    %rdi,0x688(%rsp)
    55d3:	00 
    55d4:	4c 89 ac 24 90 06 00 	mov    %r13,0x690(%rsp)
    55db:	00 
    55dc:	ff d0                	call   *%rax
    55de:	48 8b 9c 24 80 06 00 	mov    0x680(%rsp),%rbx
    55e5:	00 
    55e6:	4c 8b ac 24 90 06 00 	mov    0x690(%rsp),%r13
    55ed:	00 
    55ee:	48 89 c6             	mov    %rax,%rsi
    55f1:	48 89 b4 24 80 06 00 	mov    %rsi,0x680(%rsp)
    55f8:	00 
    55f9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    55fd:	48 89 d1             	mov    %rdx,%rcx
    5600:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5604:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5608:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    560c:	be 01 00 00 00       	mov    $0x1,%esi
    5611:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5615:	be 01 00 00 00       	mov    $0x1,%esi
    561a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    561e:	48 31 f6             	xor    %rsi,%rsi
    5621:	4c 89 e2             	mov    %r12,%rdx
    5624:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    562b:	00 00 00 
			5626: R_X86_64_64	do_callback
    562e:	48 89 9c 24 88 06 00 	mov    %rbx,0x688(%rsp)
    5635:	00 
    5636:	48 89 bc 24 90 06 00 	mov    %rdi,0x690(%rsp)
    563d:	00 
    563e:	4c 89 ac 24 98 06 00 	mov    %r13,0x698(%rsp)
    5645:	00 
    5646:	ff d0                	call   *%rax
    5648:	48 8b 9c 24 88 06 00 	mov    0x688(%rsp),%rbx
    564f:	00 
    5650:	4c 8b ac 24 98 06 00 	mov    0x698(%rsp),%r13
    5657:	00 
    5658:	48 89 c6             	mov    %rax,%rsi
    565b:	48 89 b4 24 88 06 00 	mov    %rsi,0x688(%rsp)
    5662:	00 
    5663:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5667:	48 89 d1             	mov    %rdx,%rcx
    566a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    566e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5672:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5676:	be 01 00 00 00       	mov    $0x1,%esi
    567b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    567f:	be 01 00 00 00       	mov    $0x1,%esi
    5684:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5688:	48 31 f6             	xor    %rsi,%rsi
    568b:	4c 89 e2             	mov    %r12,%rdx
    568e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5695:	00 00 00 
			5690: R_X86_64_64	do_callback
    5698:	48 89 9c 24 90 06 00 	mov    %rbx,0x690(%rsp)
    569f:	00 
    56a0:	48 89 bc 24 98 06 00 	mov    %rdi,0x698(%rsp)
    56a7:	00 
    56a8:	4c 89 ac 24 a0 06 00 	mov    %r13,0x6a0(%rsp)
    56af:	00 
    56b0:	ff d0                	call   *%rax
    56b2:	48 8b 9c 24 90 06 00 	mov    0x690(%rsp),%rbx
    56b9:	00 
    56ba:	4c 8b ac 24 a0 06 00 	mov    0x6a0(%rsp),%r13
    56c1:	00 
    56c2:	48 89 c6             	mov    %rax,%rsi
    56c5:	48 89 b4 24 90 06 00 	mov    %rsi,0x690(%rsp)
    56cc:	00 
    56cd:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    56d1:	48 89 d1             	mov    %rdx,%rcx
    56d4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    56d8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    56dc:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    56e0:	be 01 00 00 00       	mov    $0x1,%esi
    56e5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    56e9:	be 01 00 00 00       	mov    $0x1,%esi
    56ee:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    56f2:	48 31 f6             	xor    %rsi,%rsi
    56f5:	4c 89 e2             	mov    %r12,%rdx
    56f8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    56ff:	00 00 00 
			56fa: R_X86_64_64	do_callback
    5702:	48 89 9c 24 98 06 00 	mov    %rbx,0x698(%rsp)
    5709:	00 
    570a:	48 89 bc 24 a0 06 00 	mov    %rdi,0x6a0(%rsp)
    5711:	00 
    5712:	4c 89 ac 24 a8 06 00 	mov    %r13,0x6a8(%rsp)
    5719:	00 
    571a:	ff d0                	call   *%rax
    571c:	48 8b 9c 24 98 06 00 	mov    0x698(%rsp),%rbx
    5723:	00 
    5724:	4c 8b ac 24 a8 06 00 	mov    0x6a8(%rsp),%r13
    572b:	00 
    572c:	48 89 c6             	mov    %rax,%rsi
    572f:	48 89 b4 24 98 06 00 	mov    %rsi,0x698(%rsp)
    5736:	00 
    5737:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    573b:	48 89 d1             	mov    %rdx,%rcx
    573e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5742:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5746:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    574a:	be 01 00 00 00       	mov    $0x1,%esi
    574f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5753:	be 01 00 00 00       	mov    $0x1,%esi
    5758:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    575c:	48 31 f6             	xor    %rsi,%rsi
    575f:	4c 89 e2             	mov    %r12,%rdx
    5762:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5769:	00 00 00 
			5764: R_X86_64_64	do_callback
    576c:	48 89 9c 24 a0 06 00 	mov    %rbx,0x6a0(%rsp)
    5773:	00 
    5774:	48 89 bc 24 a8 06 00 	mov    %rdi,0x6a8(%rsp)
    577b:	00 
    577c:	4c 89 ac 24 b0 06 00 	mov    %r13,0x6b0(%rsp)
    5783:	00 
    5784:	ff d0                	call   *%rax
    5786:	48 8b 9c 24 a0 06 00 	mov    0x6a0(%rsp),%rbx
    578d:	00 
    578e:	4c 8b ac 24 b0 06 00 	mov    0x6b0(%rsp),%r13
    5795:	00 
    5796:	48 89 c6             	mov    %rax,%rsi
    5799:	48 89 b4 24 a0 06 00 	mov    %rsi,0x6a0(%rsp)
    57a0:	00 
    57a1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    57a5:	48 89 d1             	mov    %rdx,%rcx
    57a8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    57ac:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    57b0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    57b4:	be 01 00 00 00       	mov    $0x1,%esi
    57b9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    57bd:	be 01 00 00 00       	mov    $0x1,%esi
    57c2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    57c6:	48 31 f6             	xor    %rsi,%rsi
    57c9:	4c 89 e2             	mov    %r12,%rdx
    57cc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    57d3:	00 00 00 
			57ce: R_X86_64_64	do_callback
    57d6:	48 89 9c 24 a8 06 00 	mov    %rbx,0x6a8(%rsp)
    57dd:	00 
    57de:	48 89 bc 24 b0 06 00 	mov    %rdi,0x6b0(%rsp)
    57e5:	00 
    57e6:	4c 89 ac 24 b8 06 00 	mov    %r13,0x6b8(%rsp)
    57ed:	00 
    57ee:	ff d0                	call   *%rax
    57f0:	48 8b 9c 24 a8 06 00 	mov    0x6a8(%rsp),%rbx
    57f7:	00 
    57f8:	4c 8b ac 24 b8 06 00 	mov    0x6b8(%rsp),%r13
    57ff:	00 
    5800:	48 89 c6             	mov    %rax,%rsi
    5803:	48 89 b4 24 a8 06 00 	mov    %rsi,0x6a8(%rsp)
    580a:	00 
    580b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    580f:	48 89 d1             	mov    %rdx,%rcx
    5812:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5816:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    581a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    581e:	be 01 00 00 00       	mov    $0x1,%esi
    5823:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5827:	be 01 00 00 00       	mov    $0x1,%esi
    582c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5830:	48 31 f6             	xor    %rsi,%rsi
    5833:	4c 89 e2             	mov    %r12,%rdx
    5836:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    583d:	00 00 00 
			5838: R_X86_64_64	do_callback
    5840:	48 89 9c 24 b0 06 00 	mov    %rbx,0x6b0(%rsp)
    5847:	00 
    5848:	48 89 bc 24 b8 06 00 	mov    %rdi,0x6b8(%rsp)
    584f:	00 
    5850:	4c 89 ac 24 c0 06 00 	mov    %r13,0x6c0(%rsp)
    5857:	00 
    5858:	ff d0                	call   *%rax
    585a:	48 8b 9c 24 b0 06 00 	mov    0x6b0(%rsp),%rbx
    5861:	00 
    5862:	4c 8b ac 24 c0 06 00 	mov    0x6c0(%rsp),%r13
    5869:	00 
    586a:	48 89 c6             	mov    %rax,%rsi
    586d:	48 89 b4 24 b0 06 00 	mov    %rsi,0x6b0(%rsp)
    5874:	00 
    5875:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5879:	48 89 d1             	mov    %rdx,%rcx
    587c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5880:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5884:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5888:	be 01 00 00 00       	mov    $0x1,%esi
    588d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5891:	be 01 00 00 00       	mov    $0x1,%esi
    5896:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    589a:	48 31 f6             	xor    %rsi,%rsi
    589d:	4c 89 e2             	mov    %r12,%rdx
    58a0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    58a7:	00 00 00 
			58a2: R_X86_64_64	do_callback
    58aa:	48 89 9c 24 b8 06 00 	mov    %rbx,0x6b8(%rsp)
    58b1:	00 
    58b2:	48 89 bc 24 c0 06 00 	mov    %rdi,0x6c0(%rsp)
    58b9:	00 
    58ba:	4c 89 ac 24 c8 06 00 	mov    %r13,0x6c8(%rsp)
    58c1:	00 
    58c2:	ff d0                	call   *%rax
    58c4:	48 8b 9c 24 b8 06 00 	mov    0x6b8(%rsp),%rbx
    58cb:	00 
    58cc:	4c 8b ac 24 c8 06 00 	mov    0x6c8(%rsp),%r13
    58d3:	00 
    58d4:	48 89 c6             	mov    %rax,%rsi
    58d7:	48 89 b4 24 b8 06 00 	mov    %rsi,0x6b8(%rsp)
    58de:	00 
    58df:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    58e3:	48 89 d1             	mov    %rdx,%rcx
    58e6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    58ea:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    58ee:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    58f2:	be 01 00 00 00       	mov    $0x1,%esi
    58f7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    58fb:	be 01 00 00 00       	mov    $0x1,%esi
    5900:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5904:	48 31 f6             	xor    %rsi,%rsi
    5907:	4c 89 e2             	mov    %r12,%rdx
    590a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5911:	00 00 00 
			590c: R_X86_64_64	do_callback
    5914:	48 89 9c 24 c0 06 00 	mov    %rbx,0x6c0(%rsp)
    591b:	00 
    591c:	48 89 bc 24 c8 06 00 	mov    %rdi,0x6c8(%rsp)
    5923:	00 
    5924:	4c 89 ac 24 d0 06 00 	mov    %r13,0x6d0(%rsp)
    592b:	00 
    592c:	ff d0                	call   *%rax
    592e:	48 8b 9c 24 c0 06 00 	mov    0x6c0(%rsp),%rbx
    5935:	00 
    5936:	4c 8b ac 24 d0 06 00 	mov    0x6d0(%rsp),%r13
    593d:	00 
    593e:	48 89 c6             	mov    %rax,%rsi
    5941:	48 89 b4 24 c0 06 00 	mov    %rsi,0x6c0(%rsp)
    5948:	00 
    5949:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    594d:	48 89 d1             	mov    %rdx,%rcx
    5950:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5954:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5958:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    595c:	be 01 00 00 00       	mov    $0x1,%esi
    5961:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5965:	be 01 00 00 00       	mov    $0x1,%esi
    596a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    596e:	48 31 f6             	xor    %rsi,%rsi
    5971:	4c 89 e2             	mov    %r12,%rdx
    5974:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    597b:	00 00 00 
			5976: R_X86_64_64	do_callback
    597e:	48 89 9c 24 c8 06 00 	mov    %rbx,0x6c8(%rsp)
    5985:	00 
    5986:	48 89 bc 24 d0 06 00 	mov    %rdi,0x6d0(%rsp)
    598d:	00 
    598e:	4c 89 ac 24 d8 06 00 	mov    %r13,0x6d8(%rsp)
    5995:	00 
    5996:	ff d0                	call   *%rax
    5998:	48 8b 9c 24 c8 06 00 	mov    0x6c8(%rsp),%rbx
    599f:	00 
    59a0:	4c 8b ac 24 d8 06 00 	mov    0x6d8(%rsp),%r13
    59a7:	00 
    59a8:	48 89 c6             	mov    %rax,%rsi
    59ab:	48 89 b4 24 c8 06 00 	mov    %rsi,0x6c8(%rsp)
    59b2:	00 
    59b3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    59b7:	48 89 d1             	mov    %rdx,%rcx
    59ba:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    59be:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    59c2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    59c6:	be 01 00 00 00       	mov    $0x1,%esi
    59cb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    59cf:	be 01 00 00 00       	mov    $0x1,%esi
    59d4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    59d8:	48 31 f6             	xor    %rsi,%rsi
    59db:	4c 89 e2             	mov    %r12,%rdx
    59de:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    59e5:	00 00 00 
			59e0: R_X86_64_64	do_callback
    59e8:	48 89 9c 24 d0 06 00 	mov    %rbx,0x6d0(%rsp)
    59ef:	00 
    59f0:	48 89 bc 24 d8 06 00 	mov    %rdi,0x6d8(%rsp)
    59f7:	00 
    59f8:	4c 89 ac 24 e0 06 00 	mov    %r13,0x6e0(%rsp)
    59ff:	00 
    5a00:	ff d0                	call   *%rax
    5a02:	48 8b 9c 24 d0 06 00 	mov    0x6d0(%rsp),%rbx
    5a09:	00 
    5a0a:	4c 8b ac 24 e0 06 00 	mov    0x6e0(%rsp),%r13
    5a11:	00 
    5a12:	48 89 c6             	mov    %rax,%rsi
    5a15:	48 89 b4 24 d0 06 00 	mov    %rsi,0x6d0(%rsp)
    5a1c:	00 
    5a1d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5a21:	48 89 d1             	mov    %rdx,%rcx
    5a24:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5a28:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5a2c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5a30:	be 01 00 00 00       	mov    $0x1,%esi
    5a35:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5a39:	be 01 00 00 00       	mov    $0x1,%esi
    5a3e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5a42:	48 31 f6             	xor    %rsi,%rsi
    5a45:	4c 89 e2             	mov    %r12,%rdx
    5a48:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5a4f:	00 00 00 
			5a4a: R_X86_64_64	do_callback
    5a52:	48 89 9c 24 d8 06 00 	mov    %rbx,0x6d8(%rsp)
    5a59:	00 
    5a5a:	48 89 bc 24 e0 06 00 	mov    %rdi,0x6e0(%rsp)
    5a61:	00 
    5a62:	4c 89 ac 24 e8 06 00 	mov    %r13,0x6e8(%rsp)
    5a69:	00 
    5a6a:	ff d0                	call   *%rax
    5a6c:	48 8b 9c 24 d8 06 00 	mov    0x6d8(%rsp),%rbx
    5a73:	00 
    5a74:	4c 8b ac 24 e8 06 00 	mov    0x6e8(%rsp),%r13
    5a7b:	00 
    5a7c:	48 89 c6             	mov    %rax,%rsi
    5a7f:	48 89 b4 24 d8 06 00 	mov    %rsi,0x6d8(%rsp)
    5a86:	00 
    5a87:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5a8b:	48 89 d1             	mov    %rdx,%rcx
    5a8e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5a92:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5a96:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5a9a:	be 01 00 00 00       	mov    $0x1,%esi
    5a9f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5aa3:	be 01 00 00 00       	mov    $0x1,%esi
    5aa8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5aac:	48 31 f6             	xor    %rsi,%rsi
    5aaf:	4c 89 e2             	mov    %r12,%rdx
    5ab2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5ab9:	00 00 00 
			5ab4: R_X86_64_64	do_callback
    5abc:	48 89 9c 24 e0 06 00 	mov    %rbx,0x6e0(%rsp)
    5ac3:	00 
    5ac4:	48 89 bc 24 e8 06 00 	mov    %rdi,0x6e8(%rsp)
    5acb:	00 
    5acc:	4c 89 ac 24 f0 06 00 	mov    %r13,0x6f0(%rsp)
    5ad3:	00 
    5ad4:	ff d0                	call   *%rax
    5ad6:	48 8b 9c 24 e0 06 00 	mov    0x6e0(%rsp),%rbx
    5add:	00 
    5ade:	4c 8b ac 24 f0 06 00 	mov    0x6f0(%rsp),%r13
    5ae5:	00 
    5ae6:	48 89 c6             	mov    %rax,%rsi
    5ae9:	48 89 b4 24 e0 06 00 	mov    %rsi,0x6e0(%rsp)
    5af0:	00 
    5af1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5af5:	48 89 d1             	mov    %rdx,%rcx
    5af8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5afc:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5b00:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5b04:	be 01 00 00 00       	mov    $0x1,%esi
    5b09:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5b0d:	be 01 00 00 00       	mov    $0x1,%esi
    5b12:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5b16:	48 31 f6             	xor    %rsi,%rsi
    5b19:	4c 89 e2             	mov    %r12,%rdx
    5b1c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5b23:	00 00 00 
			5b1e: R_X86_64_64	do_callback
    5b26:	48 89 9c 24 e8 06 00 	mov    %rbx,0x6e8(%rsp)
    5b2d:	00 
    5b2e:	48 89 bc 24 f0 06 00 	mov    %rdi,0x6f0(%rsp)
    5b35:	00 
    5b36:	4c 89 ac 24 f8 06 00 	mov    %r13,0x6f8(%rsp)
    5b3d:	00 
    5b3e:	ff d0                	call   *%rax
    5b40:	48 8b 9c 24 e8 06 00 	mov    0x6e8(%rsp),%rbx
    5b47:	00 
    5b48:	4c 8b ac 24 f8 06 00 	mov    0x6f8(%rsp),%r13
    5b4f:	00 
    5b50:	48 89 c6             	mov    %rax,%rsi
    5b53:	48 89 b4 24 e8 06 00 	mov    %rsi,0x6e8(%rsp)
    5b5a:	00 
    5b5b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5b5f:	48 89 d1             	mov    %rdx,%rcx
    5b62:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5b66:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5b6a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5b6e:	be 01 00 00 00       	mov    $0x1,%esi
    5b73:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5b77:	be 01 00 00 00       	mov    $0x1,%esi
    5b7c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5b80:	48 31 f6             	xor    %rsi,%rsi
    5b83:	4c 89 e2             	mov    %r12,%rdx
    5b86:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5b8d:	00 00 00 
			5b88: R_X86_64_64	do_callback
    5b90:	48 89 9c 24 f0 06 00 	mov    %rbx,0x6f0(%rsp)
    5b97:	00 
    5b98:	48 89 bc 24 f8 06 00 	mov    %rdi,0x6f8(%rsp)
    5b9f:	00 
    5ba0:	4c 89 ac 24 00 07 00 	mov    %r13,0x700(%rsp)
    5ba7:	00 
    5ba8:	ff d0                	call   *%rax
    5baa:	48 8b 9c 24 f0 06 00 	mov    0x6f0(%rsp),%rbx
    5bb1:	00 
    5bb2:	4c 8b ac 24 00 07 00 	mov    0x700(%rsp),%r13
    5bb9:	00 
    5bba:	48 89 c6             	mov    %rax,%rsi
    5bbd:	48 89 b4 24 f0 06 00 	mov    %rsi,0x6f0(%rsp)
    5bc4:	00 
    5bc5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5bc9:	48 89 d1             	mov    %rdx,%rcx
    5bcc:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5bd0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5bd4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5bd8:	be 01 00 00 00       	mov    $0x1,%esi
    5bdd:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5be1:	be 01 00 00 00       	mov    $0x1,%esi
    5be6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5bea:	48 31 f6             	xor    %rsi,%rsi
    5bed:	4c 89 e2             	mov    %r12,%rdx
    5bf0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5bf7:	00 00 00 
			5bf2: R_X86_64_64	do_callback
    5bfa:	48 89 9c 24 f8 06 00 	mov    %rbx,0x6f8(%rsp)
    5c01:	00 
    5c02:	48 89 bc 24 00 07 00 	mov    %rdi,0x700(%rsp)
    5c09:	00 
    5c0a:	4c 89 ac 24 08 07 00 	mov    %r13,0x708(%rsp)
    5c11:	00 
    5c12:	ff d0                	call   *%rax
    5c14:	48 8b 9c 24 f8 06 00 	mov    0x6f8(%rsp),%rbx
    5c1b:	00 
    5c1c:	4c 8b ac 24 08 07 00 	mov    0x708(%rsp),%r13
    5c23:	00 
    5c24:	48 89 c6             	mov    %rax,%rsi
    5c27:	48 89 b4 24 f8 06 00 	mov    %rsi,0x6f8(%rsp)
    5c2e:	00 
    5c2f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5c33:	48 89 d1             	mov    %rdx,%rcx
    5c36:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5c3a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5c3e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5c42:	be 01 00 00 00       	mov    $0x1,%esi
    5c47:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5c4b:	be 01 00 00 00       	mov    $0x1,%esi
    5c50:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5c54:	48 31 f6             	xor    %rsi,%rsi
    5c57:	4c 89 e2             	mov    %r12,%rdx
    5c5a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5c61:	00 00 00 
			5c5c: R_X86_64_64	do_callback
    5c64:	48 89 9c 24 00 07 00 	mov    %rbx,0x700(%rsp)
    5c6b:	00 
    5c6c:	48 89 bc 24 08 07 00 	mov    %rdi,0x708(%rsp)
    5c73:	00 
    5c74:	4c 89 ac 24 10 07 00 	mov    %r13,0x710(%rsp)
    5c7b:	00 
    5c7c:	ff d0                	call   *%rax
    5c7e:	48 8b 9c 24 00 07 00 	mov    0x700(%rsp),%rbx
    5c85:	00 
    5c86:	4c 8b ac 24 10 07 00 	mov    0x710(%rsp),%r13
    5c8d:	00 
    5c8e:	48 89 c6             	mov    %rax,%rsi
    5c91:	48 89 b4 24 00 07 00 	mov    %rsi,0x700(%rsp)
    5c98:	00 
    5c99:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5c9d:	48 89 d1             	mov    %rdx,%rcx
    5ca0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5ca4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5ca8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5cac:	be 01 00 00 00       	mov    $0x1,%esi
    5cb1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5cb5:	be 01 00 00 00       	mov    $0x1,%esi
    5cba:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5cbe:	48 31 f6             	xor    %rsi,%rsi
    5cc1:	4c 89 e2             	mov    %r12,%rdx
    5cc4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5ccb:	00 00 00 
			5cc6: R_X86_64_64	do_callback
    5cce:	48 89 9c 24 08 07 00 	mov    %rbx,0x708(%rsp)
    5cd5:	00 
    5cd6:	48 89 bc 24 10 07 00 	mov    %rdi,0x710(%rsp)
    5cdd:	00 
    5cde:	4c 89 ac 24 18 07 00 	mov    %r13,0x718(%rsp)
    5ce5:	00 
    5ce6:	ff d0                	call   *%rax
    5ce8:	48 8b 9c 24 08 07 00 	mov    0x708(%rsp),%rbx
    5cef:	00 
    5cf0:	4c 8b ac 24 18 07 00 	mov    0x718(%rsp),%r13
    5cf7:	00 
    5cf8:	48 89 c6             	mov    %rax,%rsi
    5cfb:	48 89 b4 24 08 07 00 	mov    %rsi,0x708(%rsp)
    5d02:	00 
    5d03:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5d07:	48 89 d1             	mov    %rdx,%rcx
    5d0a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5d0e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5d12:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5d16:	be 01 00 00 00       	mov    $0x1,%esi
    5d1b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5d1f:	be 01 00 00 00       	mov    $0x1,%esi
    5d24:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5d28:	48 31 f6             	xor    %rsi,%rsi
    5d2b:	4c 89 e2             	mov    %r12,%rdx
    5d2e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5d35:	00 00 00 
			5d30: R_X86_64_64	do_callback
    5d38:	48 89 9c 24 10 07 00 	mov    %rbx,0x710(%rsp)
    5d3f:	00 
    5d40:	48 89 bc 24 18 07 00 	mov    %rdi,0x718(%rsp)
    5d47:	00 
    5d48:	4c 89 ac 24 20 07 00 	mov    %r13,0x720(%rsp)
    5d4f:	00 
    5d50:	ff d0                	call   *%rax
    5d52:	48 8b 9c 24 10 07 00 	mov    0x710(%rsp),%rbx
    5d59:	00 
    5d5a:	4c 8b ac 24 20 07 00 	mov    0x720(%rsp),%r13
    5d61:	00 
    5d62:	48 89 c6             	mov    %rax,%rsi
    5d65:	48 89 b4 24 10 07 00 	mov    %rsi,0x710(%rsp)
    5d6c:	00 
    5d6d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5d71:	48 89 d1             	mov    %rdx,%rcx
    5d74:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5d78:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5d7c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5d80:	be 01 00 00 00       	mov    $0x1,%esi
    5d85:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5d89:	be 01 00 00 00       	mov    $0x1,%esi
    5d8e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5d92:	48 31 f6             	xor    %rsi,%rsi
    5d95:	4c 89 e2             	mov    %r12,%rdx
    5d98:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5d9f:	00 00 00 
			5d9a: R_X86_64_64	do_callback
    5da2:	48 89 9c 24 18 07 00 	mov    %rbx,0x718(%rsp)
    5da9:	00 
    5daa:	48 89 bc 24 20 07 00 	mov    %rdi,0x720(%rsp)
    5db1:	00 
    5db2:	4c 89 ac 24 28 07 00 	mov    %r13,0x728(%rsp)
    5db9:	00 
    5dba:	ff d0                	call   *%rax
    5dbc:	48 8b 9c 24 18 07 00 	mov    0x718(%rsp),%rbx
    5dc3:	00 
    5dc4:	4c 8b ac 24 28 07 00 	mov    0x728(%rsp),%r13
    5dcb:	00 
    5dcc:	48 89 c6             	mov    %rax,%rsi
    5dcf:	48 89 b4 24 18 07 00 	mov    %rsi,0x718(%rsp)
    5dd6:	00 
    5dd7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5ddb:	48 89 d1             	mov    %rdx,%rcx
    5dde:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5de2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5de6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5dea:	be 01 00 00 00       	mov    $0x1,%esi
    5def:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5df3:	be 01 00 00 00       	mov    $0x1,%esi
    5df8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5dfc:	48 31 f6             	xor    %rsi,%rsi
    5dff:	4c 89 e2             	mov    %r12,%rdx
    5e02:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5e09:	00 00 00 
			5e04: R_X86_64_64	do_callback
    5e0c:	48 89 9c 24 20 07 00 	mov    %rbx,0x720(%rsp)
    5e13:	00 
    5e14:	48 89 bc 24 28 07 00 	mov    %rdi,0x728(%rsp)
    5e1b:	00 
    5e1c:	4c 89 ac 24 30 07 00 	mov    %r13,0x730(%rsp)
    5e23:	00 
    5e24:	ff d0                	call   *%rax
    5e26:	48 8b 9c 24 20 07 00 	mov    0x720(%rsp),%rbx
    5e2d:	00 
    5e2e:	4c 8b ac 24 30 07 00 	mov    0x730(%rsp),%r13
    5e35:	00 
    5e36:	48 89 c6             	mov    %rax,%rsi
    5e39:	48 89 b4 24 20 07 00 	mov    %rsi,0x720(%rsp)
    5e40:	00 
    5e41:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5e45:	48 89 d1             	mov    %rdx,%rcx
    5e48:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5e4c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5e50:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5e54:	be 01 00 00 00       	mov    $0x1,%esi
    5e59:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5e5d:	be 01 00 00 00       	mov    $0x1,%esi
    5e62:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5e66:	48 31 f6             	xor    %rsi,%rsi
    5e69:	4c 89 e2             	mov    %r12,%rdx
    5e6c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5e73:	00 00 00 
			5e6e: R_X86_64_64	do_callback
    5e76:	48 89 9c 24 28 07 00 	mov    %rbx,0x728(%rsp)
    5e7d:	00 
    5e7e:	48 89 bc 24 30 07 00 	mov    %rdi,0x730(%rsp)
    5e85:	00 
    5e86:	4c 89 ac 24 38 07 00 	mov    %r13,0x738(%rsp)
    5e8d:	00 
    5e8e:	ff d0                	call   *%rax
    5e90:	48 8b 9c 24 28 07 00 	mov    0x728(%rsp),%rbx
    5e97:	00 
    5e98:	4c 8b ac 24 38 07 00 	mov    0x738(%rsp),%r13
    5e9f:	00 
    5ea0:	48 89 c6             	mov    %rax,%rsi
    5ea3:	48 89 b4 24 28 07 00 	mov    %rsi,0x728(%rsp)
    5eaa:	00 
    5eab:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5eaf:	48 89 d1             	mov    %rdx,%rcx
    5eb2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5eb6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5eba:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5ebe:	be 01 00 00 00       	mov    $0x1,%esi
    5ec3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5ec7:	be 01 00 00 00       	mov    $0x1,%esi
    5ecc:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5ed0:	48 31 f6             	xor    %rsi,%rsi
    5ed3:	4c 89 e2             	mov    %r12,%rdx
    5ed6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5edd:	00 00 00 
			5ed8: R_X86_64_64	do_callback
    5ee0:	48 89 9c 24 30 07 00 	mov    %rbx,0x730(%rsp)
    5ee7:	00 
    5ee8:	48 89 bc 24 38 07 00 	mov    %rdi,0x738(%rsp)
    5eef:	00 
    5ef0:	4c 89 ac 24 40 07 00 	mov    %r13,0x740(%rsp)
    5ef7:	00 
    5ef8:	ff d0                	call   *%rax
    5efa:	48 8b 9c 24 30 07 00 	mov    0x730(%rsp),%rbx
    5f01:	00 
    5f02:	4c 8b ac 24 40 07 00 	mov    0x740(%rsp),%r13
    5f09:	00 
    5f0a:	48 89 c6             	mov    %rax,%rsi
    5f0d:	48 89 b4 24 30 07 00 	mov    %rsi,0x730(%rsp)
    5f14:	00 
    5f15:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5f19:	48 89 d1             	mov    %rdx,%rcx
    5f1c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5f20:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5f24:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5f28:	be 01 00 00 00       	mov    $0x1,%esi
    5f2d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5f31:	be 01 00 00 00       	mov    $0x1,%esi
    5f36:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5f3a:	48 31 f6             	xor    %rsi,%rsi
    5f3d:	4c 89 e2             	mov    %r12,%rdx
    5f40:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5f47:	00 00 00 
			5f42: R_X86_64_64	do_callback
    5f4a:	48 89 9c 24 38 07 00 	mov    %rbx,0x738(%rsp)
    5f51:	00 
    5f52:	48 89 bc 24 40 07 00 	mov    %rdi,0x740(%rsp)
    5f59:	00 
    5f5a:	4c 89 ac 24 48 07 00 	mov    %r13,0x748(%rsp)
    5f61:	00 
    5f62:	ff d0                	call   *%rax
    5f64:	48 8b 9c 24 38 07 00 	mov    0x738(%rsp),%rbx
    5f6b:	00 
    5f6c:	4c 8b ac 24 48 07 00 	mov    0x748(%rsp),%r13
    5f73:	00 
    5f74:	48 89 c6             	mov    %rax,%rsi
    5f77:	48 89 b4 24 38 07 00 	mov    %rsi,0x738(%rsp)
    5f7e:	00 
    5f7f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5f83:	48 89 d1             	mov    %rdx,%rcx
    5f86:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5f8a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5f8e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5f92:	be 01 00 00 00       	mov    $0x1,%esi
    5f97:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    5f9b:	be 01 00 00 00       	mov    $0x1,%esi
    5fa0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    5fa4:	48 31 f6             	xor    %rsi,%rsi
    5fa7:	4c 89 e2             	mov    %r12,%rdx
    5faa:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    5fb1:	00 00 00 
			5fac: R_X86_64_64	do_callback
    5fb4:	48 89 9c 24 40 07 00 	mov    %rbx,0x740(%rsp)
    5fbb:	00 
    5fbc:	48 89 bc 24 48 07 00 	mov    %rdi,0x748(%rsp)
    5fc3:	00 
    5fc4:	4c 89 ac 24 50 07 00 	mov    %r13,0x750(%rsp)
    5fcb:	00 
    5fcc:	ff d0                	call   *%rax
    5fce:	48 8b 9c 24 40 07 00 	mov    0x740(%rsp),%rbx
    5fd5:	00 
    5fd6:	4c 8b ac 24 50 07 00 	mov    0x750(%rsp),%r13
    5fdd:	00 
    5fde:	48 89 c6             	mov    %rax,%rsi
    5fe1:	48 89 b4 24 40 07 00 	mov    %rsi,0x740(%rsp)
    5fe8:	00 
    5fe9:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    5fed:	48 89 d1             	mov    %rdx,%rcx
    5ff0:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    5ff4:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    5ff8:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    5ffc:	be 01 00 00 00       	mov    $0x1,%esi
    6001:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6005:	be 01 00 00 00       	mov    $0x1,%esi
    600a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    600e:	48 31 f6             	xor    %rsi,%rsi
    6011:	4c 89 e2             	mov    %r12,%rdx
    6014:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    601b:	00 00 00 
			6016: R_X86_64_64	do_callback
    601e:	48 89 9c 24 48 07 00 	mov    %rbx,0x748(%rsp)
    6025:	00 
    6026:	48 89 bc 24 50 07 00 	mov    %rdi,0x750(%rsp)
    602d:	00 
    602e:	4c 89 ac 24 58 07 00 	mov    %r13,0x758(%rsp)
    6035:	00 
    6036:	ff d0                	call   *%rax
    6038:	48 8b 9c 24 48 07 00 	mov    0x748(%rsp),%rbx
    603f:	00 
    6040:	4c 8b ac 24 58 07 00 	mov    0x758(%rsp),%r13
    6047:	00 
    6048:	48 89 c6             	mov    %rax,%rsi
    604b:	48 89 b4 24 48 07 00 	mov    %rsi,0x748(%rsp)
    6052:	00 
    6053:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    6057:	48 89 d1             	mov    %rdx,%rcx
    605a:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    605e:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6062:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    6066:	be 01 00 00 00       	mov    $0x1,%esi
    606b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    606f:	be 01 00 00 00       	mov    $0x1,%esi
    6074:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    6078:	48 31 f6             	xor    %rsi,%rsi
    607b:	4c 89 e2             	mov    %r12,%rdx
    607e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6085:	00 00 00 
			6080: R_X86_64_64	do_callback
    6088:	48 89 9c 24 50 07 00 	mov    %rbx,0x750(%rsp)
    608f:	00 
    6090:	48 89 bc 24 58 07 00 	mov    %rdi,0x758(%rsp)
    6097:	00 
    6098:	4c 89 ac 24 60 07 00 	mov    %r13,0x760(%rsp)
    609f:	00 
    60a0:	ff d0                	call   *%rax
    60a2:	48 8b 9c 24 50 07 00 	mov    0x750(%rsp),%rbx
    60a9:	00 
    60aa:	4c 8b ac 24 60 07 00 	mov    0x760(%rsp),%r13
    60b1:	00 
    60b2:	48 89 c6             	mov    %rax,%rsi
    60b5:	48 89 b4 24 50 07 00 	mov    %rsi,0x750(%rsp)
    60bc:	00 
    60bd:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    60c1:	48 89 d1             	mov    %rdx,%rcx
    60c4:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    60c8:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    60cc:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    60d0:	be 01 00 00 00       	mov    $0x1,%esi
    60d5:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    60d9:	be 01 00 00 00       	mov    $0x1,%esi
    60de:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    60e2:	48 31 f6             	xor    %rsi,%rsi
    60e5:	4c 89 e2             	mov    %r12,%rdx
    60e8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    60ef:	00 00 00 
			60ea: R_X86_64_64	do_callback
    60f2:	48 89 9c 24 58 07 00 	mov    %rbx,0x758(%rsp)
    60f9:	00 
    60fa:	48 89 bc 24 60 07 00 	mov    %rdi,0x760(%rsp)
    6101:	00 
    6102:	4c 89 ac 24 68 07 00 	mov    %r13,0x768(%rsp)
    6109:	00 
    610a:	ff d0                	call   *%rax
    610c:	48 8b 9c 24 58 07 00 	mov    0x758(%rsp),%rbx
    6113:	00 
    6114:	4c 8b ac 24 68 07 00 	mov    0x768(%rsp),%r13
    611b:	00 
    611c:	48 89 c6             	mov    %rax,%rsi
    611f:	48 89 b4 24 58 07 00 	mov    %rsi,0x758(%rsp)
    6126:	00 
    6127:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    612b:	48 89 d1             	mov    %rdx,%rcx
    612e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6132:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6136:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    613a:	be 01 00 00 00       	mov    $0x1,%esi
    613f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6143:	be 01 00 00 00       	mov    $0x1,%esi
    6148:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    614c:	48 31 f6             	xor    %rsi,%rsi
    614f:	4c 89 e2             	mov    %r12,%rdx
    6152:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6159:	00 00 00 
			6154: R_X86_64_64	do_callback
    615c:	48 89 9c 24 60 07 00 	mov    %rbx,0x760(%rsp)
    6163:	00 
    6164:	48 89 bc 24 68 07 00 	mov    %rdi,0x768(%rsp)
    616b:	00 
    616c:	4c 89 ac 24 70 07 00 	mov    %r13,0x770(%rsp)
    6173:	00 
    6174:	ff d0                	call   *%rax
    6176:	48 8b 9c 24 60 07 00 	mov    0x760(%rsp),%rbx
    617d:	00 
    617e:	4c 8b ac 24 70 07 00 	mov    0x770(%rsp),%r13
    6185:	00 
    6186:	48 89 c6             	mov    %rax,%rsi
    6189:	48 89 b4 24 60 07 00 	mov    %rsi,0x760(%rsp)
    6190:	00 
    6191:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    6195:	48 89 d1             	mov    %rdx,%rcx
    6198:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    619c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    61a0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    61a4:	be 01 00 00 00       	mov    $0x1,%esi
    61a9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    61ad:	be 01 00 00 00       	mov    $0x1,%esi
    61b2:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    61b6:	48 31 f6             	xor    %rsi,%rsi
    61b9:	4c 89 e2             	mov    %r12,%rdx
    61bc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    61c3:	00 00 00 
			61be: R_X86_64_64	do_callback
    61c6:	48 89 9c 24 68 07 00 	mov    %rbx,0x768(%rsp)
    61cd:	00 
    61ce:	48 89 bc 24 70 07 00 	mov    %rdi,0x770(%rsp)
    61d5:	00 
    61d6:	4c 89 ac 24 78 07 00 	mov    %r13,0x778(%rsp)
    61dd:	00 
    61de:	ff d0                	call   *%rax
    61e0:	48 8b 9c 24 68 07 00 	mov    0x768(%rsp),%rbx
    61e7:	00 
    61e8:	4c 8b ac 24 78 07 00 	mov    0x778(%rsp),%r13
    61ef:	00 
    61f0:	48 89 c6             	mov    %rax,%rsi
    61f3:	48 89 b4 24 68 07 00 	mov    %rsi,0x768(%rsp)
    61fa:	00 
    61fb:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    61ff:	48 89 d1             	mov    %rdx,%rcx
    6202:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6206:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    620a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    620e:	be 01 00 00 00       	mov    $0x1,%esi
    6213:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6217:	be 01 00 00 00       	mov    $0x1,%esi
    621c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    6220:	48 31 f6             	xor    %rsi,%rsi
    6223:	4c 89 e2             	mov    %r12,%rdx
    6226:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    622d:	00 00 00 
			6228: R_X86_64_64	do_callback
    6230:	48 89 9c 24 70 07 00 	mov    %rbx,0x770(%rsp)
    6237:	00 
    6238:	48 89 bc 24 78 07 00 	mov    %rdi,0x778(%rsp)
    623f:	00 
    6240:	4c 89 ac 24 80 07 00 	mov    %r13,0x780(%rsp)
    6247:	00 
    6248:	ff d0                	call   *%rax
    624a:	48 8b 9c 24 70 07 00 	mov    0x770(%rsp),%rbx
    6251:	00 
    6252:	4c 8b ac 24 80 07 00 	mov    0x780(%rsp),%r13
    6259:	00 
    625a:	48 89 c6             	mov    %rax,%rsi
    625d:	48 89 b4 24 70 07 00 	mov    %rsi,0x770(%rsp)
    6264:	00 
    6265:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    6269:	48 89 d1             	mov    %rdx,%rcx
    626c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6270:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6274:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    6278:	be 01 00 00 00       	mov    $0x1,%esi
    627d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6281:	be 01 00 00 00       	mov    $0x1,%esi
    6286:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    628a:	48 31 f6             	xor    %rsi,%rsi
    628d:	4c 89 e2             	mov    %r12,%rdx
    6290:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6297:	00 00 00 
			6292: R_X86_64_64	do_callback
    629a:	48 89 9c 24 78 07 00 	mov    %rbx,0x778(%rsp)
    62a1:	00 
    62a2:	48 89 bc 24 80 07 00 	mov    %rdi,0x780(%rsp)
    62a9:	00 
    62aa:	4c 89 ac 24 88 07 00 	mov    %r13,0x788(%rsp)
    62b1:	00 
    62b2:	ff d0                	call   *%rax
    62b4:	48 8b 9c 24 78 07 00 	mov    0x778(%rsp),%rbx
    62bb:	00 
    62bc:	4c 8b ac 24 88 07 00 	mov    0x788(%rsp),%r13
    62c3:	00 
    62c4:	48 89 c6             	mov    %rax,%rsi
    62c7:	48 89 b4 24 78 07 00 	mov    %rsi,0x778(%rsp)
    62ce:	00 
    62cf:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    62d3:	48 89 d1             	mov    %rdx,%rcx
    62d6:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    62da:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    62de:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    62e2:	be 01 00 00 00       	mov    $0x1,%esi
    62e7:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    62eb:	be 01 00 00 00       	mov    $0x1,%esi
    62f0:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    62f4:	48 31 f6             	xor    %rsi,%rsi
    62f7:	4c 89 e2             	mov    %r12,%rdx
    62fa:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6301:	00 00 00 
			62fc: R_X86_64_64	do_callback
    6304:	48 89 9c 24 80 07 00 	mov    %rbx,0x780(%rsp)
    630b:	00 
    630c:	48 89 bc 24 88 07 00 	mov    %rdi,0x788(%rsp)
    6313:	00 
    6314:	4c 89 ac 24 90 07 00 	mov    %r13,0x790(%rsp)
    631b:	00 
    631c:	ff d0                	call   *%rax
    631e:	48 8b 9c 24 80 07 00 	mov    0x780(%rsp),%rbx
    6325:	00 
    6326:	4c 8b ac 24 90 07 00 	mov    0x790(%rsp),%r13
    632d:	00 
    632e:	48 89 c6             	mov    %rax,%rsi
    6331:	48 89 b4 24 80 07 00 	mov    %rsi,0x780(%rsp)
    6338:	00 
    6339:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    633d:	48 89 d1             	mov    %rdx,%rcx
    6340:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6344:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6348:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    634c:	be 01 00 00 00       	mov    $0x1,%esi
    6351:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6355:	be 01 00 00 00       	mov    $0x1,%esi
    635a:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    635e:	48 31 f6             	xor    %rsi,%rsi
    6361:	4c 89 e2             	mov    %r12,%rdx
    6364:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    636b:	00 00 00 
			6366: R_X86_64_64	do_callback
    636e:	48 89 9c 24 88 07 00 	mov    %rbx,0x788(%rsp)
    6375:	00 
    6376:	48 89 bc 24 90 07 00 	mov    %rdi,0x790(%rsp)
    637d:	00 
    637e:	4c 89 ac 24 98 07 00 	mov    %r13,0x798(%rsp)
    6385:	00 
    6386:	ff d0                	call   *%rax
    6388:	48 8b 9c 24 88 07 00 	mov    0x788(%rsp),%rbx
    638f:	00 
    6390:	4c 8b ac 24 98 07 00 	mov    0x798(%rsp),%r13
    6397:	00 
    6398:	48 89 c6             	mov    %rax,%rsi
    639b:	48 89 b4 24 88 07 00 	mov    %rsi,0x788(%rsp)
    63a2:	00 
    63a3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    63a7:	48 89 d1             	mov    %rdx,%rcx
    63aa:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    63ae:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    63b2:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    63b6:	be 01 00 00 00       	mov    $0x1,%esi
    63bb:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    63bf:	be 01 00 00 00       	mov    $0x1,%esi
    63c4:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    63c8:	48 31 f6             	xor    %rsi,%rsi
    63cb:	4c 89 e2             	mov    %r12,%rdx
    63ce:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    63d5:	00 00 00 
			63d0: R_X86_64_64	do_callback
    63d8:	48 89 9c 24 90 07 00 	mov    %rbx,0x790(%rsp)
    63df:	00 
    63e0:	48 89 bc 24 98 07 00 	mov    %rdi,0x798(%rsp)
    63e7:	00 
    63e8:	4c 89 ac 24 a0 07 00 	mov    %r13,0x7a0(%rsp)
    63ef:	00 
    63f0:	ff d0                	call   *%rax
    63f2:	48 8b 9c 24 90 07 00 	mov    0x790(%rsp),%rbx
    63f9:	00 
    63fa:	4c 8b ac 24 a0 07 00 	mov    0x7a0(%rsp),%r13
    6401:	00 
    6402:	48 89 c6             	mov    %rax,%rsi
    6405:	48 89 b4 24 90 07 00 	mov    %rsi,0x790(%rsp)
    640c:	00 
    640d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    6411:	48 89 d1             	mov    %rdx,%rcx
    6414:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6418:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    641c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    6420:	be 01 00 00 00       	mov    $0x1,%esi
    6425:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6429:	be 01 00 00 00       	mov    $0x1,%esi
    642e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    6432:	48 31 f6             	xor    %rsi,%rsi
    6435:	4c 89 e2             	mov    %r12,%rdx
    6438:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    643f:	00 00 00 
			643a: R_X86_64_64	do_callback
    6442:	48 89 9c 24 98 07 00 	mov    %rbx,0x798(%rsp)
    6449:	00 
    644a:	48 89 bc 24 a0 07 00 	mov    %rdi,0x7a0(%rsp)
    6451:	00 
    6452:	4c 89 ac 24 a8 07 00 	mov    %r13,0x7a8(%rsp)
    6459:	00 
    645a:	ff d0                	call   *%rax
    645c:	48 8b 9c 24 98 07 00 	mov    0x798(%rsp),%rbx
    6463:	00 
    6464:	4c 8b ac 24 a8 07 00 	mov    0x7a8(%rsp),%r13
    646b:	00 
    646c:	48 89 c6             	mov    %rax,%rsi
    646f:	48 89 b4 24 98 07 00 	mov    %rsi,0x798(%rsp)
    6476:	00 
    6477:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    647b:	48 89 d1             	mov    %rdx,%rcx
    647e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6482:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6486:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    648a:	be 01 00 00 00       	mov    $0x1,%esi
    648f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6493:	be 01 00 00 00       	mov    $0x1,%esi
    6498:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    649c:	48 31 f6             	xor    %rsi,%rsi
    649f:	4c 89 e2             	mov    %r12,%rdx
    64a2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    64a9:	00 00 00 
			64a4: R_X86_64_64	do_callback
    64ac:	48 89 9c 24 a0 07 00 	mov    %rbx,0x7a0(%rsp)
    64b3:	00 
    64b4:	48 89 bc 24 a8 07 00 	mov    %rdi,0x7a8(%rsp)
    64bb:	00 
    64bc:	4c 89 ac 24 b0 07 00 	mov    %r13,0x7b0(%rsp)
    64c3:	00 
    64c4:	ff d0                	call   *%rax
    64c6:	48 8b 9c 24 a0 07 00 	mov    0x7a0(%rsp),%rbx
    64cd:	00 
    64ce:	4c 8b ac 24 b0 07 00 	mov    0x7b0(%rsp),%r13
    64d5:	00 
    64d6:	48 89 c6             	mov    %rax,%rsi
    64d9:	48 89 b4 24 a0 07 00 	mov    %rsi,0x7a0(%rsp)
    64e0:	00 
    64e1:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    64e5:	48 89 d1             	mov    %rdx,%rcx
    64e8:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    64ec:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    64f0:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    64f4:	be 01 00 00 00       	mov    $0x1,%esi
    64f9:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    64fd:	be 01 00 00 00       	mov    $0x1,%esi
    6502:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    6506:	48 31 f6             	xor    %rsi,%rsi
    6509:	4c 89 e2             	mov    %r12,%rdx
    650c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6513:	00 00 00 
			650e: R_X86_64_64	do_callback
    6516:	48 89 9c 24 a8 07 00 	mov    %rbx,0x7a8(%rsp)
    651d:	00 
    651e:	48 89 bc 24 b0 07 00 	mov    %rdi,0x7b0(%rsp)
    6525:	00 
    6526:	4c 89 ac 24 b8 07 00 	mov    %r13,0x7b8(%rsp)
    652d:	00 
    652e:	ff d0                	call   *%rax
    6530:	48 8b 9c 24 a8 07 00 	mov    0x7a8(%rsp),%rbx
    6537:	00 
    6538:	4c 8b ac 24 b8 07 00 	mov    0x7b8(%rsp),%r13
    653f:	00 
    6540:	48 89 c6             	mov    %rax,%rsi
    6543:	48 89 b4 24 a8 07 00 	mov    %rsi,0x7a8(%rsp)
    654a:	00 
    654b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    654f:	48 89 d1             	mov    %rdx,%rcx
    6552:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6556:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    655a:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    655e:	be 01 00 00 00       	mov    $0x1,%esi
    6563:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6567:	be 01 00 00 00       	mov    $0x1,%esi
    656c:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    6570:	48 31 f6             	xor    %rsi,%rsi
    6573:	4c 89 e2             	mov    %r12,%rdx
    6576:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    657d:	00 00 00 
			6578: R_X86_64_64	do_callback
    6580:	48 89 9c 24 b0 07 00 	mov    %rbx,0x7b0(%rsp)
    6587:	00 
    6588:	48 89 bc 24 b8 07 00 	mov    %rdi,0x7b8(%rsp)
    658f:	00 
    6590:	4c 89 ac 24 c0 07 00 	mov    %r13,0x7c0(%rsp)
    6597:	00 
    6598:	ff d0                	call   *%rax
    659a:	48 8b 9c 24 b0 07 00 	mov    0x7b0(%rsp),%rbx
    65a1:	00 
    65a2:	4c 8b ac 24 c0 07 00 	mov    0x7c0(%rsp),%r13
    65a9:	00 
    65aa:	48 89 c6             	mov    %rax,%rsi
    65ad:	48 89 b4 24 b0 07 00 	mov    %rsi,0x7b0(%rsp)
    65b4:	00 
    65b5:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    65b9:	48 89 d1             	mov    %rdx,%rcx
    65bc:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    65c0:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    65c4:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    65c8:	be 01 00 00 00       	mov    $0x1,%esi
    65cd:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    65d1:	be 01 00 00 00       	mov    $0x1,%esi
    65d6:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    65da:	48 31 f6             	xor    %rsi,%rsi
    65dd:	4c 89 e2             	mov    %r12,%rdx
    65e0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    65e7:	00 00 00 
			65e2: R_X86_64_64	do_callback
    65ea:	48 89 9c 24 b8 07 00 	mov    %rbx,0x7b8(%rsp)
    65f1:	00 
    65f2:	48 89 bc 24 c0 07 00 	mov    %rdi,0x7c0(%rsp)
    65f9:	00 
    65fa:	4c 89 ac 24 c8 07 00 	mov    %r13,0x7c8(%rsp)
    6601:	00 
    6602:	ff d0                	call   *%rax
    6604:	48 8b 9c 24 b8 07 00 	mov    0x7b8(%rsp),%rbx
    660b:	00 
    660c:	4c 8b ac 24 c8 07 00 	mov    0x7c8(%rsp),%r13
    6613:	00 
    6614:	48 89 c6             	mov    %rax,%rsi
    6617:	48 89 b4 24 b8 07 00 	mov    %rsi,0x7b8(%rsp)
    661e:	00 
    661f:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    6623:	48 89 d1             	mov    %rdx,%rcx
    6626:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    662a:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    662e:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    6632:	be 01 00 00 00       	mov    $0x1,%esi
    6637:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    663b:	be 01 00 00 00       	mov    $0x1,%esi
    6640:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    6644:	48 31 f6             	xor    %rsi,%rsi
    6647:	4c 89 e2             	mov    %r12,%rdx
    664a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6651:	00 00 00 
			664c: R_X86_64_64	do_callback
    6654:	48 89 9c 24 c0 07 00 	mov    %rbx,0x7c0(%rsp)
    665b:	00 
    665c:	48 89 bc 24 c8 07 00 	mov    %rdi,0x7c8(%rsp)
    6663:	00 
    6664:	4c 89 ac 24 d0 07 00 	mov    %r13,0x7d0(%rsp)
    666b:	00 
    666c:	ff d0                	call   *%rax
    666e:	48 8b 9c 24 c0 07 00 	mov    0x7c0(%rsp),%rbx
    6675:	00 
    6676:	4c 8b ac 24 d0 07 00 	mov    0x7d0(%rsp),%r13
    667d:	00 
    667e:	48 89 c6             	mov    %rax,%rsi
    6681:	48 89 b4 24 c0 07 00 	mov    %rsi,0x7c0(%rsp)
    6688:	00 
    6689:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    668d:	48 89 d1             	mov    %rdx,%rcx
    6690:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6694:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6698:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    669c:	be 01 00 00 00       	mov    $0x1,%esi
    66a1:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    66a5:	be 01 00 00 00       	mov    $0x1,%esi
    66aa:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    66ae:	48 31 f6             	xor    %rsi,%rsi
    66b1:	4c 89 e2             	mov    %r12,%rdx
    66b4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    66bb:	00 00 00 
			66b6: R_X86_64_64	do_callback
    66be:	48 89 9c 24 c8 07 00 	mov    %rbx,0x7c8(%rsp)
    66c5:	00 
    66c6:	48 89 bc 24 d0 07 00 	mov    %rdi,0x7d0(%rsp)
    66cd:	00 
    66ce:	4c 89 ac 24 d8 07 00 	mov    %r13,0x7d8(%rsp)
    66d5:	00 
    66d6:	ff d0                	call   *%rax
    66d8:	48 8b 9c 24 c8 07 00 	mov    0x7c8(%rsp),%rbx
    66df:	00 
    66e0:	4c 8b ac 24 d8 07 00 	mov    0x7d8(%rsp),%r13
    66e7:	00 
    66e8:	48 89 c6             	mov    %rax,%rsi
    66eb:	48 89 b4 24 c8 07 00 	mov    %rsi,0x7c8(%rsp)
    66f2:	00 
    66f3:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    66f7:	48 89 d1             	mov    %rdx,%rcx
    66fa:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    66fe:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6702:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    6706:	be 01 00 00 00       	mov    $0x1,%esi
    670b:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    670f:	be 01 00 00 00       	mov    $0x1,%esi
    6714:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    6718:	48 31 f6             	xor    %rsi,%rsi
    671b:	4c 89 e2             	mov    %r12,%rdx
    671e:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6725:	00 00 00 
			6720: R_X86_64_64	do_callback
    6728:	48 89 9c 24 d0 07 00 	mov    %rbx,0x7d0(%rsp)
    672f:	00 
    6730:	48 89 bc 24 d8 07 00 	mov    %rdi,0x7d8(%rsp)
    6737:	00 
    6738:	4c 89 ac 24 e0 07 00 	mov    %r13,0x7e0(%rsp)
    673f:	00 
    6740:	ff d0                	call   *%rax
    6742:	48 8b 9c 24 d0 07 00 	mov    0x7d0(%rsp),%rbx
    6749:	00 
    674a:	4c 8b ac 24 e0 07 00 	mov    0x7e0(%rsp),%r13
    6751:	00 
    6752:	48 89 c6             	mov    %rax,%rsi
    6755:	48 89 b4 24 d0 07 00 	mov    %rsi,0x7d0(%rsp)
    675c:	00 
    675d:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    6761:	48 89 d1             	mov    %rdx,%rcx
    6764:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6768:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    676c:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    6770:	be 01 00 00 00       	mov    $0x1,%esi
    6775:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6779:	be 01 00 00 00       	mov    $0x1,%esi
    677e:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    6782:	48 31 f6             	xor    %rsi,%rsi
    6785:	4c 89 e2             	mov    %r12,%rdx
    6788:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    678f:	00 00 00 
			678a: R_X86_64_64	do_callback
    6792:	48 89 9c 24 d8 07 00 	mov    %rbx,0x7d8(%rsp)
    6799:	00 
    679a:	48 89 bc 24 e0 07 00 	mov    %rdi,0x7e0(%rsp)
    67a1:	00 
    67a2:	4c 89 ac 24 e8 07 00 	mov    %r13,0x7e8(%rsp)
    67a9:	00 
    67aa:	ff d0                	call   *%rax
    67ac:	48 8b 9c 24 d8 07 00 	mov    0x7d8(%rsp),%rbx
    67b3:	00 
    67b4:	4c 8b ac 24 e8 07 00 	mov    0x7e8(%rsp),%r13
    67bb:	00 
    67bc:	48 89 c6             	mov    %rax,%rsi
    67bf:	48 89 b4 24 d8 07 00 	mov    %rsi,0x7d8(%rsp)
    67c6:	00 
    67c7:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    67cb:	48 89 d1             	mov    %rdx,%rcx
    67ce:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    67d2:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    67d6:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    67da:	be 01 00 00 00       	mov    $0x1,%esi
    67df:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    67e3:	be 01 00 00 00       	mov    $0x1,%esi
    67e8:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    67ec:	48 31 f6             	xor    %rsi,%rsi
    67ef:	4c 89 e2             	mov    %r12,%rdx
    67f2:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    67f9:	00 00 00 
			67f4: R_X86_64_64	do_callback
    67fc:	48 89 9c 24 e0 07 00 	mov    %rbx,0x7e0(%rsp)
    6803:	00 
    6804:	48 89 bc 24 e8 07 00 	mov    %rdi,0x7e8(%rsp)
    680b:	00 
    680c:	4c 89 ac 24 f0 07 00 	mov    %r13,0x7f0(%rsp)
    6813:	00 
    6814:	ff d0                	call   *%rax
    6816:	48 8b 9c 24 e0 07 00 	mov    0x7e0(%rsp),%rbx
    681d:	00 
    681e:	4c 8b ac 24 f0 07 00 	mov    0x7f0(%rsp),%r13
    6825:	00 
    6826:	48 89 c6             	mov    %rax,%rsi
    6829:	48 89 b4 24 e0 07 00 	mov    %rsi,0x7e0(%rsp)
    6830:	00 
    6831:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    6835:	48 89 d1             	mov    %rdx,%rcx
    6838:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    683c:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6840:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    6844:	be 01 00 00 00       	mov    $0x1,%esi
    6849:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    684d:	be 01 00 00 00       	mov    $0x1,%esi
    6852:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    6856:	48 31 f6             	xor    %rsi,%rsi
    6859:	4c 89 e2             	mov    %r12,%rdx
    685c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6863:	00 00 00 
			685e: R_X86_64_64	do_callback
    6866:	48 89 9c 24 e8 07 00 	mov    %rbx,0x7e8(%rsp)
    686d:	00 
    686e:	48 89 bc 24 f0 07 00 	mov    %rdi,0x7f0(%rsp)
    6875:	00 
    6876:	4c 89 ac 24 f8 07 00 	mov    %r13,0x7f8(%rsp)
    687d:	00 
    687e:	ff d0                	call   *%rax
    6880:	48 8b 9c 24 e8 07 00 	mov    0x7e8(%rsp),%rbx
    6887:	00 
    6888:	4c 8b ac 24 f8 07 00 	mov    0x7f8(%rsp),%r13
    688f:	00 
    6890:	48 89 c6             	mov    %rax,%rsi
    6893:	48 89 b4 24 e8 07 00 	mov    %rsi,0x7e8(%rsp)
    689a:	00 
    689b:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    689f:	48 89 d1             	mov    %rdx,%rcx
    68a2:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    68a6:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    68aa:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    68ae:	be 01 00 00 00       	mov    $0x1,%esi
    68b3:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    68b7:	be 01 00 00 00       	mov    $0x1,%esi
    68bc:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    68c0:	48 31 f6             	xor    %rsi,%rsi
    68c3:	4c 89 e2             	mov    %r12,%rdx
    68c6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    68cd:	00 00 00 
			68c8: R_X86_64_64	do_callback
    68d0:	48 89 9c 24 f0 07 00 	mov    %rbx,0x7f0(%rsp)
    68d7:	00 
    68d8:	48 89 bc 24 f8 07 00 	mov    %rdi,0x7f8(%rsp)
    68df:	00 
    68e0:	4c 89 ac 24 00 08 00 	mov    %r13,0x800(%rsp)
    68e7:	00 
    68e8:	ff d0                	call   *%rax
    68ea:	48 8b 9c 24 f0 07 00 	mov    0x7f0(%rsp),%rbx
    68f1:	00 
    68f2:	4c 8b ac 24 00 08 00 	mov    0x800(%rsp),%r13
    68f9:	00 
    68fa:	48 89 c6             	mov    %rax,%rsi
    68fd:	48 89 b4 24 f0 07 00 	mov    %rsi,0x7f0(%rsp)
    6904:	00 
    6905:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    6909:	48 89 d1             	mov    %rdx,%rcx
    690c:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6910:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6914:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    6918:	be 01 00 00 00       	mov    $0x1,%esi
    691d:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6921:	be 01 00 00 00       	mov    $0x1,%esi
    6926:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    692a:	48 31 f6             	xor    %rsi,%rsi
    692d:	4c 89 e2             	mov    %r12,%rdx
    6930:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6937:	00 00 00 
			6932: R_X86_64_64	do_callback
    693a:	48 89 9c 24 f8 07 00 	mov    %rbx,0x7f8(%rsp)
    6941:	00 
    6942:	48 89 bc 24 00 08 00 	mov    %rdi,0x800(%rsp)
    6949:	00 
    694a:	4c 89 ac 24 08 08 00 	mov    %r13,0x808(%rsp)
    6951:	00 
    6952:	ff d0                	call   *%rax
    6954:	48 8b 9c 24 f8 07 00 	mov    0x7f8(%rsp),%rbx
    695b:	00 
    695c:	4c 8b ac 24 08 08 00 	mov    0x808(%rsp),%r13
    6963:	00 
    6964:	49 89 c6             	mov    %rax,%r14
    6967:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    696b:	48 89 d1             	mov    %rdx,%rcx
    696e:	48 83 c1 e0          	add    $0xffffffffffffffe0,%rcx
    6972:	48 89 5a e0          	mov    %rbx,-0x20(%rdx)
    6976:	4c 89 7a e8          	mov    %r15,-0x18(%rdx)
    697a:	be 01 00 00 00       	mov    $0x1,%esi
    697f:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6983:	be 01 00 00 00       	mov    $0x1,%esi
    6988:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
    698c:	48 31 f6             	xor    %rsi,%rsi
    698f:	4c 89 e2             	mov    %r12,%rdx
    6992:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6999:	00 00 00 
			6994: R_X86_64_64	do_callback
    699c:	48 89 bc 24 f8 07 00 	mov    %rdi,0x7f8(%rsp)
    69a3:	00 
    69a4:	4c 89 b4 24 00 08 00 	mov    %r14,0x800(%rsp)
    69ab:	00 
    69ac:	ff d0                	call   *%rax
    69ae:	4c 8b b4 24 00 08 00 	mov    0x800(%rsp),%r14
    69b5:	00 
    69b6:	49 89 c5             	mov    %rax,%r13
    69b9:	48 89 d6             	mov    %rdx,%rsi
    69bc:	48 89 b4 24 f8 07 00 	mov    %rsi,0x7f8(%rsp)
    69c3:	00 
    69c4:	bf 01 01 00 00       	mov    $0x101,%edi
    69c9:	31 f6                	xor    %esi,%esi
    69cb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    69d2:	00 00 00 
			69cd: R_X86_64_64	caml_alloc_shr
    69d5:	4c 89 ac 24 00 08 00 	mov    %r13,0x800(%rsp)
    69dc:	00 
    69dd:	4c 89 b4 24 08 08 00 	mov    %r14,0x808(%rsp)
    69e4:	00 
    69e5:	ff d0                	call   *%rax
    69e7:	4c 8b ac 24 00 08 00 	mov    0x800(%rsp),%r13
    69ee:	00 
    69ef:	4c 8b b4 24 08 08 00 	mov    0x808(%rsp),%r14
    69f6:	00 
    69f7:	48 89 c3             	mov    %rax,%rbx
    69fa:	49 89 df             	mov    %rbx,%r15
    69fd:	4c 89 ff             	mov    %r15,%rdi
    6a00:	4c 89 ee             	mov    %r13,%rsi
    6a03:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6a0a:	00 00 00 
			6a05: R_X86_64_64	caml_initialize
    6a0d:	48 89 b4 24 00 08 00 	mov    %rsi,0x800(%rsp)
    6a14:	00 
    6a15:	4c 89 bc 24 08 08 00 	mov    %r15,0x808(%rsp)
    6a1c:	00 
    6a1d:	48 89 9c 24 10 08 00 	mov    %rbx,0x810(%rsp)
    6a24:	00 
    6a25:	48 89 bc 24 18 08 00 	mov    %rdi,0x818(%rsp)
    6a2c:	00 
    6a2d:	4c 89 b4 24 20 08 00 	mov    %r14,0x820(%rsp)
    6a34:	00 
    6a35:	ff d0                	call   *%rax
    6a37:	48 8b 9c 24 10 08 00 	mov    0x810(%rsp),%rbx
    6a3e:	00 
    6a3f:	4c 8b bc 24 08 08 00 	mov    0x808(%rsp),%r15
    6a46:	00 
    6a47:	4c 8b b4 24 20 08 00 	mov    0x820(%rsp),%r14
    6a4e:	00 
    6a4f:	4c 89 ff             	mov    %r15,%rdi
    6a52:	48 83 c7 08          	add    $0x8,%rdi
    6a56:	4c 89 f6             	mov    %r14,%rsi
    6a59:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6a60:	00 00 00 
			6a5b: R_X86_64_64	caml_initialize
    6a63:	48 89 b4 24 00 08 00 	mov    %rsi,0x800(%rsp)
    6a6a:	00 
    6a6b:	4c 89 bc 24 08 08 00 	mov    %r15,0x808(%rsp)
    6a72:	00 
    6a73:	48 89 9c 24 10 08 00 	mov    %rbx,0x810(%rsp)
    6a7a:	00 
    6a7b:	48 89 bc 24 18 08 00 	mov    %rdi,0x818(%rsp)
    6a82:	00 
    6a83:	ff d0                	call   *%rax
    6a85:	48 8b 9c 24 10 08 00 	mov    0x810(%rsp),%rbx
    6a8c:	00 
    6a8d:	4c 8b bc 24 08 08 00 	mov    0x808(%rsp),%r15
    6a94:	00 
    6a95:	4c 89 ff             	mov    %r15,%rdi
    6a98:	48 83 c7 10          	add    $0x10,%rdi
    6a9c:	48 8b b4 24 f0 07 00 	mov    0x7f0(%rsp),%rsi
    6aa3:	00 
    6aa4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6aab:	00 00 00 
			6aa6: R_X86_64_64	caml_initialize
    6aae:	48 89 b4 24 f0 07 00 	mov    %rsi,0x7f0(%rsp)
    6ab5:	00 
    6ab6:	4c 89 bc 24 00 08 00 	mov    %r15,0x800(%rsp)
    6abd:	00 
    6abe:	48 89 9c 24 08 08 00 	mov    %rbx,0x808(%rsp)
    6ac5:	00 
    6ac6:	48 89 bc 24 10 08 00 	mov    %rdi,0x810(%rsp)
    6acd:	00 
    6ace:	ff d0                	call   *%rax
    6ad0:	48 8b 9c 24 08 08 00 	mov    0x808(%rsp),%rbx
    6ad7:	00 
    6ad8:	4c 8b bc 24 00 08 00 	mov    0x800(%rsp),%r15
    6adf:	00 
    6ae0:	4c 89 ff             	mov    %r15,%rdi
    6ae3:	48 83 c7 18          	add    $0x18,%rdi
    6ae7:	48 8b b4 24 e8 07 00 	mov    0x7e8(%rsp),%rsi
    6aee:	00 
    6aef:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6af6:	00 00 00 
			6af1: R_X86_64_64	caml_initialize
    6af9:	48 89 b4 24 e8 07 00 	mov    %rsi,0x7e8(%rsp)
    6b00:	00 
    6b01:	4c 89 bc 24 f0 07 00 	mov    %r15,0x7f0(%rsp)
    6b08:	00 
    6b09:	48 89 9c 24 00 08 00 	mov    %rbx,0x800(%rsp)
    6b10:	00 
    6b11:	48 89 bc 24 08 08 00 	mov    %rdi,0x808(%rsp)
    6b18:	00 
    6b19:	ff d0                	call   *%rax
    6b1b:	48 8b 9c 24 00 08 00 	mov    0x800(%rsp),%rbx
    6b22:	00 
    6b23:	4c 8b bc 24 f0 07 00 	mov    0x7f0(%rsp),%r15
    6b2a:	00 
    6b2b:	4c 89 ff             	mov    %r15,%rdi
    6b2e:	48 83 c7 20          	add    $0x20,%rdi
    6b32:	48 8b b4 24 e0 07 00 	mov    0x7e0(%rsp),%rsi
    6b39:	00 
    6b3a:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6b41:	00 00 00 
			6b3c: R_X86_64_64	caml_initialize
    6b44:	48 89 b4 24 e0 07 00 	mov    %rsi,0x7e0(%rsp)
    6b4b:	00 
    6b4c:	4c 89 bc 24 e8 07 00 	mov    %r15,0x7e8(%rsp)
    6b53:	00 
    6b54:	48 89 9c 24 f0 07 00 	mov    %rbx,0x7f0(%rsp)
    6b5b:	00 
    6b5c:	48 89 bc 24 00 08 00 	mov    %rdi,0x800(%rsp)
    6b63:	00 
    6b64:	ff d0                	call   *%rax
    6b66:	48 8b 9c 24 f0 07 00 	mov    0x7f0(%rsp),%rbx
    6b6d:	00 
    6b6e:	4c 8b bc 24 e8 07 00 	mov    0x7e8(%rsp),%r15
    6b75:	00 
    6b76:	4c 89 ff             	mov    %r15,%rdi
    6b79:	48 83 c7 28          	add    $0x28,%rdi
    6b7d:	48 8b b4 24 d8 07 00 	mov    0x7d8(%rsp),%rsi
    6b84:	00 
    6b85:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6b8c:	00 00 00 
			6b87: R_X86_64_64	caml_initialize
    6b8f:	48 89 b4 24 d8 07 00 	mov    %rsi,0x7d8(%rsp)
    6b96:	00 
    6b97:	4c 89 bc 24 e0 07 00 	mov    %r15,0x7e0(%rsp)
    6b9e:	00 
    6b9f:	48 89 9c 24 e8 07 00 	mov    %rbx,0x7e8(%rsp)
    6ba6:	00 
    6ba7:	48 89 bc 24 f0 07 00 	mov    %rdi,0x7f0(%rsp)
    6bae:	00 
    6baf:	ff d0                	call   *%rax
    6bb1:	48 8b 9c 24 e8 07 00 	mov    0x7e8(%rsp),%rbx
    6bb8:	00 
    6bb9:	4c 8b bc 24 e0 07 00 	mov    0x7e0(%rsp),%r15
    6bc0:	00 
    6bc1:	4c 89 ff             	mov    %r15,%rdi
    6bc4:	48 83 c7 30          	add    $0x30,%rdi
    6bc8:	48 8b b4 24 d0 07 00 	mov    0x7d0(%rsp),%rsi
    6bcf:	00 
    6bd0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6bd7:	00 00 00 
			6bd2: R_X86_64_64	caml_initialize
    6bda:	48 89 b4 24 d0 07 00 	mov    %rsi,0x7d0(%rsp)
    6be1:	00 
    6be2:	4c 89 bc 24 d8 07 00 	mov    %r15,0x7d8(%rsp)
    6be9:	00 
    6bea:	48 89 9c 24 e0 07 00 	mov    %rbx,0x7e0(%rsp)
    6bf1:	00 
    6bf2:	48 89 bc 24 e8 07 00 	mov    %rdi,0x7e8(%rsp)
    6bf9:	00 
    6bfa:	ff d0                	call   *%rax
    6bfc:	48 8b 9c 24 e0 07 00 	mov    0x7e0(%rsp),%rbx
    6c03:	00 
    6c04:	4c 8b bc 24 d8 07 00 	mov    0x7d8(%rsp),%r15
    6c0b:	00 
    6c0c:	4c 89 ff             	mov    %r15,%rdi
    6c0f:	48 83 c7 38          	add    $0x38,%rdi
    6c13:	48 8b b4 24 c8 07 00 	mov    0x7c8(%rsp),%rsi
    6c1a:	00 
    6c1b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6c22:	00 00 00 
			6c1d: R_X86_64_64	caml_initialize
    6c25:	48 89 b4 24 c8 07 00 	mov    %rsi,0x7c8(%rsp)
    6c2c:	00 
    6c2d:	4c 89 bc 24 d0 07 00 	mov    %r15,0x7d0(%rsp)
    6c34:	00 
    6c35:	48 89 9c 24 d8 07 00 	mov    %rbx,0x7d8(%rsp)
    6c3c:	00 
    6c3d:	48 89 bc 24 e0 07 00 	mov    %rdi,0x7e0(%rsp)
    6c44:	00 
    6c45:	ff d0                	call   *%rax
    6c47:	48 8b 9c 24 d8 07 00 	mov    0x7d8(%rsp),%rbx
    6c4e:	00 
    6c4f:	4c 8b bc 24 d0 07 00 	mov    0x7d0(%rsp),%r15
    6c56:	00 
    6c57:	4c 89 ff             	mov    %r15,%rdi
    6c5a:	48 83 c7 40          	add    $0x40,%rdi
    6c5e:	48 8b b4 24 c0 07 00 	mov    0x7c0(%rsp),%rsi
    6c65:	00 
    6c66:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6c6d:	00 00 00 
			6c68: R_X86_64_64	caml_initialize
    6c70:	48 89 b4 24 c0 07 00 	mov    %rsi,0x7c0(%rsp)
    6c77:	00 
    6c78:	4c 89 bc 24 c8 07 00 	mov    %r15,0x7c8(%rsp)
    6c7f:	00 
    6c80:	48 89 9c 24 d0 07 00 	mov    %rbx,0x7d0(%rsp)
    6c87:	00 
    6c88:	48 89 bc 24 d8 07 00 	mov    %rdi,0x7d8(%rsp)
    6c8f:	00 
    6c90:	ff d0                	call   *%rax
    6c92:	48 8b 9c 24 d0 07 00 	mov    0x7d0(%rsp),%rbx
    6c99:	00 
    6c9a:	4c 8b bc 24 c8 07 00 	mov    0x7c8(%rsp),%r15
    6ca1:	00 
    6ca2:	4c 89 ff             	mov    %r15,%rdi
    6ca5:	48 83 c7 48          	add    $0x48,%rdi
    6ca9:	48 8b b4 24 b8 07 00 	mov    0x7b8(%rsp),%rsi
    6cb0:	00 
    6cb1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6cb8:	00 00 00 
			6cb3: R_X86_64_64	caml_initialize
    6cbb:	48 89 b4 24 b8 07 00 	mov    %rsi,0x7b8(%rsp)
    6cc2:	00 
    6cc3:	4c 89 bc 24 c0 07 00 	mov    %r15,0x7c0(%rsp)
    6cca:	00 
    6ccb:	48 89 9c 24 c8 07 00 	mov    %rbx,0x7c8(%rsp)
    6cd2:	00 
    6cd3:	48 89 bc 24 d0 07 00 	mov    %rdi,0x7d0(%rsp)
    6cda:	00 
    6cdb:	ff d0                	call   *%rax
    6cdd:	48 8b 9c 24 c8 07 00 	mov    0x7c8(%rsp),%rbx
    6ce4:	00 
    6ce5:	4c 8b bc 24 c0 07 00 	mov    0x7c0(%rsp),%r15
    6cec:	00 
    6ced:	4c 89 ff             	mov    %r15,%rdi
    6cf0:	48 83 c7 50          	add    $0x50,%rdi
    6cf4:	48 8b b4 24 b0 07 00 	mov    0x7b0(%rsp),%rsi
    6cfb:	00 
    6cfc:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6d03:	00 00 00 
			6cfe: R_X86_64_64	caml_initialize
    6d06:	48 89 b4 24 b0 07 00 	mov    %rsi,0x7b0(%rsp)
    6d0d:	00 
    6d0e:	4c 89 bc 24 b8 07 00 	mov    %r15,0x7b8(%rsp)
    6d15:	00 
    6d16:	48 89 9c 24 c0 07 00 	mov    %rbx,0x7c0(%rsp)
    6d1d:	00 
    6d1e:	48 89 bc 24 c8 07 00 	mov    %rdi,0x7c8(%rsp)
    6d25:	00 
    6d26:	ff d0                	call   *%rax
    6d28:	48 8b 9c 24 c0 07 00 	mov    0x7c0(%rsp),%rbx
    6d2f:	00 
    6d30:	4c 8b bc 24 b8 07 00 	mov    0x7b8(%rsp),%r15
    6d37:	00 
    6d38:	4c 89 ff             	mov    %r15,%rdi
    6d3b:	48 83 c7 58          	add    $0x58,%rdi
    6d3f:	48 8b b4 24 a8 07 00 	mov    0x7a8(%rsp),%rsi
    6d46:	00 
    6d47:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6d4e:	00 00 00 
			6d49: R_X86_64_64	caml_initialize
    6d51:	48 89 b4 24 a8 07 00 	mov    %rsi,0x7a8(%rsp)
    6d58:	00 
    6d59:	4c 89 bc 24 b0 07 00 	mov    %r15,0x7b0(%rsp)
    6d60:	00 
    6d61:	48 89 9c 24 b8 07 00 	mov    %rbx,0x7b8(%rsp)
    6d68:	00 
    6d69:	48 89 bc 24 c0 07 00 	mov    %rdi,0x7c0(%rsp)
    6d70:	00 
    6d71:	ff d0                	call   *%rax
    6d73:	48 8b 9c 24 b8 07 00 	mov    0x7b8(%rsp),%rbx
    6d7a:	00 
    6d7b:	4c 8b bc 24 b0 07 00 	mov    0x7b0(%rsp),%r15
    6d82:	00 
    6d83:	4c 89 ff             	mov    %r15,%rdi
    6d86:	48 83 c7 60          	add    $0x60,%rdi
    6d8a:	48 8b b4 24 a0 07 00 	mov    0x7a0(%rsp),%rsi
    6d91:	00 
    6d92:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6d99:	00 00 00 
			6d94: R_X86_64_64	caml_initialize
    6d9c:	48 89 b4 24 a0 07 00 	mov    %rsi,0x7a0(%rsp)
    6da3:	00 
    6da4:	4c 89 bc 24 a8 07 00 	mov    %r15,0x7a8(%rsp)
    6dab:	00 
    6dac:	48 89 9c 24 b0 07 00 	mov    %rbx,0x7b0(%rsp)
    6db3:	00 
    6db4:	48 89 bc 24 b8 07 00 	mov    %rdi,0x7b8(%rsp)
    6dbb:	00 
    6dbc:	ff d0                	call   *%rax
    6dbe:	48 8b 9c 24 b0 07 00 	mov    0x7b0(%rsp),%rbx
    6dc5:	00 
    6dc6:	4c 8b bc 24 a8 07 00 	mov    0x7a8(%rsp),%r15
    6dcd:	00 
    6dce:	4c 89 ff             	mov    %r15,%rdi
    6dd1:	48 83 c7 68          	add    $0x68,%rdi
    6dd5:	48 8b b4 24 98 07 00 	mov    0x798(%rsp),%rsi
    6ddc:	00 
    6ddd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6de4:	00 00 00 
			6ddf: R_X86_64_64	caml_initialize
    6de7:	48 89 b4 24 98 07 00 	mov    %rsi,0x798(%rsp)
    6dee:	00 
    6def:	4c 89 bc 24 a0 07 00 	mov    %r15,0x7a0(%rsp)
    6df6:	00 
    6df7:	48 89 9c 24 a8 07 00 	mov    %rbx,0x7a8(%rsp)
    6dfe:	00 
    6dff:	48 89 bc 24 b0 07 00 	mov    %rdi,0x7b0(%rsp)
    6e06:	00 
    6e07:	ff d0                	call   *%rax
    6e09:	48 8b 9c 24 a8 07 00 	mov    0x7a8(%rsp),%rbx
    6e10:	00 
    6e11:	4c 8b bc 24 a0 07 00 	mov    0x7a0(%rsp),%r15
    6e18:	00 
    6e19:	4c 89 ff             	mov    %r15,%rdi
    6e1c:	48 83 c7 70          	add    $0x70,%rdi
    6e20:	48 8b b4 24 90 07 00 	mov    0x790(%rsp),%rsi
    6e27:	00 
    6e28:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6e2f:	00 00 00 
			6e2a: R_X86_64_64	caml_initialize
    6e32:	48 89 b4 24 90 07 00 	mov    %rsi,0x790(%rsp)
    6e39:	00 
    6e3a:	4c 89 bc 24 98 07 00 	mov    %r15,0x798(%rsp)
    6e41:	00 
    6e42:	48 89 9c 24 a0 07 00 	mov    %rbx,0x7a0(%rsp)
    6e49:	00 
    6e4a:	48 89 bc 24 a8 07 00 	mov    %rdi,0x7a8(%rsp)
    6e51:	00 
    6e52:	ff d0                	call   *%rax
    6e54:	48 8b 9c 24 a0 07 00 	mov    0x7a0(%rsp),%rbx
    6e5b:	00 
    6e5c:	4c 8b bc 24 98 07 00 	mov    0x798(%rsp),%r15
    6e63:	00 
    6e64:	4c 89 ff             	mov    %r15,%rdi
    6e67:	48 83 c7 78          	add    $0x78,%rdi
    6e6b:	48 8b b4 24 88 07 00 	mov    0x788(%rsp),%rsi
    6e72:	00 
    6e73:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6e7a:	00 00 00 
			6e75: R_X86_64_64	caml_initialize
    6e7d:	48 89 b4 24 88 07 00 	mov    %rsi,0x788(%rsp)
    6e84:	00 
    6e85:	4c 89 bc 24 90 07 00 	mov    %r15,0x790(%rsp)
    6e8c:	00 
    6e8d:	48 89 9c 24 98 07 00 	mov    %rbx,0x798(%rsp)
    6e94:	00 
    6e95:	48 89 bc 24 a0 07 00 	mov    %rdi,0x7a0(%rsp)
    6e9c:	00 
    6e9d:	ff d0                	call   *%rax
    6e9f:	48 8b 9c 24 98 07 00 	mov    0x798(%rsp),%rbx
    6ea6:	00 
    6ea7:	4c 8b bc 24 90 07 00 	mov    0x790(%rsp),%r15
    6eae:	00 
    6eaf:	4c 89 ff             	mov    %r15,%rdi
    6eb2:	48 81 c7 80 00 00 00 	add    $0x80,%rdi
    6eb9:	48 8b b4 24 80 07 00 	mov    0x780(%rsp),%rsi
    6ec0:	00 
    6ec1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6ec8:	00 00 00 
			6ec3: R_X86_64_64	caml_initialize
    6ecb:	48 89 b4 24 80 07 00 	mov    %rsi,0x780(%rsp)
    6ed2:	00 
    6ed3:	4c 89 bc 24 88 07 00 	mov    %r15,0x788(%rsp)
    6eda:	00 
    6edb:	48 89 9c 24 90 07 00 	mov    %rbx,0x790(%rsp)
    6ee2:	00 
    6ee3:	48 89 bc 24 98 07 00 	mov    %rdi,0x798(%rsp)
    6eea:	00 
    6eeb:	ff d0                	call   *%rax
    6eed:	48 8b 9c 24 90 07 00 	mov    0x790(%rsp),%rbx
    6ef4:	00 
    6ef5:	4c 8b bc 24 88 07 00 	mov    0x788(%rsp),%r15
    6efc:	00 
    6efd:	4c 89 ff             	mov    %r15,%rdi
    6f00:	48 81 c7 88 00 00 00 	add    $0x88,%rdi
    6f07:	48 8b b4 24 78 07 00 	mov    0x778(%rsp),%rsi
    6f0e:	00 
    6f0f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6f16:	00 00 00 
			6f11: R_X86_64_64	caml_initialize
    6f19:	48 89 b4 24 78 07 00 	mov    %rsi,0x778(%rsp)
    6f20:	00 
    6f21:	4c 89 bc 24 80 07 00 	mov    %r15,0x780(%rsp)
    6f28:	00 
    6f29:	48 89 9c 24 88 07 00 	mov    %rbx,0x788(%rsp)
    6f30:	00 
    6f31:	48 89 bc 24 90 07 00 	mov    %rdi,0x790(%rsp)
    6f38:	00 
    6f39:	ff d0                	call   *%rax
    6f3b:	48 8b 9c 24 88 07 00 	mov    0x788(%rsp),%rbx
    6f42:	00 
    6f43:	4c 8b bc 24 80 07 00 	mov    0x780(%rsp),%r15
    6f4a:	00 
    6f4b:	4c 89 ff             	mov    %r15,%rdi
    6f4e:	48 81 c7 90 00 00 00 	add    $0x90,%rdi
    6f55:	48 8b b4 24 70 07 00 	mov    0x770(%rsp),%rsi
    6f5c:	00 
    6f5d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6f64:	00 00 00 
			6f5f: R_X86_64_64	caml_initialize
    6f67:	48 89 b4 24 70 07 00 	mov    %rsi,0x770(%rsp)
    6f6e:	00 
    6f6f:	4c 89 bc 24 78 07 00 	mov    %r15,0x778(%rsp)
    6f76:	00 
    6f77:	48 89 9c 24 80 07 00 	mov    %rbx,0x780(%rsp)
    6f7e:	00 
    6f7f:	48 89 bc 24 88 07 00 	mov    %rdi,0x788(%rsp)
    6f86:	00 
    6f87:	ff d0                	call   *%rax
    6f89:	48 8b 9c 24 80 07 00 	mov    0x780(%rsp),%rbx
    6f90:	00 
    6f91:	4c 8b bc 24 78 07 00 	mov    0x778(%rsp),%r15
    6f98:	00 
    6f99:	4c 89 ff             	mov    %r15,%rdi
    6f9c:	48 81 c7 98 00 00 00 	add    $0x98,%rdi
    6fa3:	48 8b b4 24 68 07 00 	mov    0x768(%rsp),%rsi
    6faa:	00 
    6fab:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    6fb2:	00 00 00 
			6fad: R_X86_64_64	caml_initialize
    6fb5:	48 89 b4 24 68 07 00 	mov    %rsi,0x768(%rsp)
    6fbc:	00 
    6fbd:	4c 89 bc 24 70 07 00 	mov    %r15,0x770(%rsp)
    6fc4:	00 
    6fc5:	48 89 9c 24 78 07 00 	mov    %rbx,0x778(%rsp)
    6fcc:	00 
    6fcd:	48 89 bc 24 80 07 00 	mov    %rdi,0x780(%rsp)
    6fd4:	00 
    6fd5:	ff d0                	call   *%rax
    6fd7:	48 8b 9c 24 78 07 00 	mov    0x778(%rsp),%rbx
    6fde:	00 
    6fdf:	4c 8b bc 24 70 07 00 	mov    0x770(%rsp),%r15
    6fe6:	00 
    6fe7:	4c 89 ff             	mov    %r15,%rdi
    6fea:	48 81 c7 a0 00 00 00 	add    $0xa0,%rdi
    6ff1:	48 8b b4 24 60 07 00 	mov    0x760(%rsp),%rsi
    6ff8:	00 
    6ff9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7000:	00 00 00 
			6ffb: R_X86_64_64	caml_initialize
    7003:	48 89 b4 24 60 07 00 	mov    %rsi,0x760(%rsp)
    700a:	00 
    700b:	4c 89 bc 24 68 07 00 	mov    %r15,0x768(%rsp)
    7012:	00 
    7013:	48 89 9c 24 70 07 00 	mov    %rbx,0x770(%rsp)
    701a:	00 
    701b:	48 89 bc 24 78 07 00 	mov    %rdi,0x778(%rsp)
    7022:	00 
    7023:	ff d0                	call   *%rax
    7025:	48 8b 9c 24 70 07 00 	mov    0x770(%rsp),%rbx
    702c:	00 
    702d:	4c 8b bc 24 68 07 00 	mov    0x768(%rsp),%r15
    7034:	00 
    7035:	4c 89 ff             	mov    %r15,%rdi
    7038:	48 81 c7 a8 00 00 00 	add    $0xa8,%rdi
    703f:	48 8b b4 24 58 07 00 	mov    0x758(%rsp),%rsi
    7046:	00 
    7047:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    704e:	00 00 00 
			7049: R_X86_64_64	caml_initialize
    7051:	48 89 b4 24 58 07 00 	mov    %rsi,0x758(%rsp)
    7058:	00 
    7059:	4c 89 bc 24 60 07 00 	mov    %r15,0x760(%rsp)
    7060:	00 
    7061:	48 89 9c 24 68 07 00 	mov    %rbx,0x768(%rsp)
    7068:	00 
    7069:	48 89 bc 24 70 07 00 	mov    %rdi,0x770(%rsp)
    7070:	00 
    7071:	ff d0                	call   *%rax
    7073:	48 8b 9c 24 68 07 00 	mov    0x768(%rsp),%rbx
    707a:	00 
    707b:	4c 8b bc 24 60 07 00 	mov    0x760(%rsp),%r15
    7082:	00 
    7083:	4c 89 ff             	mov    %r15,%rdi
    7086:	48 81 c7 b0 00 00 00 	add    $0xb0,%rdi
    708d:	48 8b b4 24 50 07 00 	mov    0x750(%rsp),%rsi
    7094:	00 
    7095:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    709c:	00 00 00 
			7097: R_X86_64_64	caml_initialize
    709f:	48 89 b4 24 50 07 00 	mov    %rsi,0x750(%rsp)
    70a6:	00 
    70a7:	4c 89 bc 24 58 07 00 	mov    %r15,0x758(%rsp)
    70ae:	00 
    70af:	48 89 9c 24 60 07 00 	mov    %rbx,0x760(%rsp)
    70b6:	00 
    70b7:	48 89 bc 24 68 07 00 	mov    %rdi,0x768(%rsp)
    70be:	00 
    70bf:	ff d0                	call   *%rax
    70c1:	48 8b 9c 24 60 07 00 	mov    0x760(%rsp),%rbx
    70c8:	00 
    70c9:	4c 8b bc 24 58 07 00 	mov    0x758(%rsp),%r15
    70d0:	00 
    70d1:	4c 89 ff             	mov    %r15,%rdi
    70d4:	48 81 c7 b8 00 00 00 	add    $0xb8,%rdi
    70db:	48 8b b4 24 48 07 00 	mov    0x748(%rsp),%rsi
    70e2:	00 
    70e3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    70ea:	00 00 00 
			70e5: R_X86_64_64	caml_initialize
    70ed:	48 89 b4 24 48 07 00 	mov    %rsi,0x748(%rsp)
    70f4:	00 
    70f5:	4c 89 bc 24 50 07 00 	mov    %r15,0x750(%rsp)
    70fc:	00 
    70fd:	48 89 9c 24 58 07 00 	mov    %rbx,0x758(%rsp)
    7104:	00 
    7105:	48 89 bc 24 60 07 00 	mov    %rdi,0x760(%rsp)
    710c:	00 
    710d:	ff d0                	call   *%rax
    710f:	48 8b 9c 24 58 07 00 	mov    0x758(%rsp),%rbx
    7116:	00 
    7117:	4c 8b bc 24 50 07 00 	mov    0x750(%rsp),%r15
    711e:	00 
    711f:	4c 89 ff             	mov    %r15,%rdi
    7122:	48 81 c7 c0 00 00 00 	add    $0xc0,%rdi
    7129:	48 8b b4 24 40 07 00 	mov    0x740(%rsp),%rsi
    7130:	00 
    7131:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7138:	00 00 00 
			7133: R_X86_64_64	caml_initialize
    713b:	48 89 b4 24 40 07 00 	mov    %rsi,0x740(%rsp)
    7142:	00 
    7143:	4c 89 bc 24 48 07 00 	mov    %r15,0x748(%rsp)
    714a:	00 
    714b:	48 89 9c 24 50 07 00 	mov    %rbx,0x750(%rsp)
    7152:	00 
    7153:	48 89 bc 24 58 07 00 	mov    %rdi,0x758(%rsp)
    715a:	00 
    715b:	ff d0                	call   *%rax
    715d:	48 8b 9c 24 50 07 00 	mov    0x750(%rsp),%rbx
    7164:	00 
    7165:	4c 8b bc 24 48 07 00 	mov    0x748(%rsp),%r15
    716c:	00 
    716d:	4c 89 ff             	mov    %r15,%rdi
    7170:	48 81 c7 c8 00 00 00 	add    $0xc8,%rdi
    7177:	48 8b b4 24 38 07 00 	mov    0x738(%rsp),%rsi
    717e:	00 
    717f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7186:	00 00 00 
			7181: R_X86_64_64	caml_initialize
    7189:	48 89 b4 24 38 07 00 	mov    %rsi,0x738(%rsp)
    7190:	00 
    7191:	4c 89 bc 24 40 07 00 	mov    %r15,0x740(%rsp)
    7198:	00 
    7199:	48 89 9c 24 48 07 00 	mov    %rbx,0x748(%rsp)
    71a0:	00 
    71a1:	48 89 bc 24 50 07 00 	mov    %rdi,0x750(%rsp)
    71a8:	00 
    71a9:	ff d0                	call   *%rax
    71ab:	48 8b 9c 24 48 07 00 	mov    0x748(%rsp),%rbx
    71b2:	00 
    71b3:	4c 8b bc 24 40 07 00 	mov    0x740(%rsp),%r15
    71ba:	00 
    71bb:	4c 89 ff             	mov    %r15,%rdi
    71be:	48 81 c7 d0 00 00 00 	add    $0xd0,%rdi
    71c5:	48 8b b4 24 30 07 00 	mov    0x730(%rsp),%rsi
    71cc:	00 
    71cd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    71d4:	00 00 00 
			71cf: R_X86_64_64	caml_initialize
    71d7:	48 89 b4 24 30 07 00 	mov    %rsi,0x730(%rsp)
    71de:	00 
    71df:	4c 89 bc 24 38 07 00 	mov    %r15,0x738(%rsp)
    71e6:	00 
    71e7:	48 89 9c 24 40 07 00 	mov    %rbx,0x740(%rsp)
    71ee:	00 
    71ef:	48 89 bc 24 48 07 00 	mov    %rdi,0x748(%rsp)
    71f6:	00 
    71f7:	ff d0                	call   *%rax
    71f9:	48 8b 9c 24 40 07 00 	mov    0x740(%rsp),%rbx
    7200:	00 
    7201:	4c 8b bc 24 38 07 00 	mov    0x738(%rsp),%r15
    7208:	00 
    7209:	4c 89 ff             	mov    %r15,%rdi
    720c:	48 81 c7 d8 00 00 00 	add    $0xd8,%rdi
    7213:	48 8b b4 24 28 07 00 	mov    0x728(%rsp),%rsi
    721a:	00 
    721b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7222:	00 00 00 
			721d: R_X86_64_64	caml_initialize
    7225:	48 89 b4 24 28 07 00 	mov    %rsi,0x728(%rsp)
    722c:	00 
    722d:	4c 89 bc 24 30 07 00 	mov    %r15,0x730(%rsp)
    7234:	00 
    7235:	48 89 9c 24 38 07 00 	mov    %rbx,0x738(%rsp)
    723c:	00 
    723d:	48 89 bc 24 40 07 00 	mov    %rdi,0x740(%rsp)
    7244:	00 
    7245:	ff d0                	call   *%rax
    7247:	48 8b 9c 24 38 07 00 	mov    0x738(%rsp),%rbx
    724e:	00 
    724f:	4c 8b bc 24 30 07 00 	mov    0x730(%rsp),%r15
    7256:	00 
    7257:	4c 89 ff             	mov    %r15,%rdi
    725a:	48 81 c7 e0 00 00 00 	add    $0xe0,%rdi
    7261:	48 8b b4 24 20 07 00 	mov    0x720(%rsp),%rsi
    7268:	00 
    7269:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7270:	00 00 00 
			726b: R_X86_64_64	caml_initialize
    7273:	48 89 b4 24 20 07 00 	mov    %rsi,0x720(%rsp)
    727a:	00 
    727b:	4c 89 bc 24 28 07 00 	mov    %r15,0x728(%rsp)
    7282:	00 
    7283:	48 89 9c 24 30 07 00 	mov    %rbx,0x730(%rsp)
    728a:	00 
    728b:	48 89 bc 24 38 07 00 	mov    %rdi,0x738(%rsp)
    7292:	00 
    7293:	ff d0                	call   *%rax
    7295:	48 8b 9c 24 30 07 00 	mov    0x730(%rsp),%rbx
    729c:	00 
    729d:	4c 8b bc 24 28 07 00 	mov    0x728(%rsp),%r15
    72a4:	00 
    72a5:	4c 89 ff             	mov    %r15,%rdi
    72a8:	48 81 c7 e8 00 00 00 	add    $0xe8,%rdi
    72af:	48 8b b4 24 18 07 00 	mov    0x718(%rsp),%rsi
    72b6:	00 
    72b7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    72be:	00 00 00 
			72b9: R_X86_64_64	caml_initialize
    72c1:	48 89 b4 24 18 07 00 	mov    %rsi,0x718(%rsp)
    72c8:	00 
    72c9:	4c 89 bc 24 20 07 00 	mov    %r15,0x720(%rsp)
    72d0:	00 
    72d1:	48 89 9c 24 28 07 00 	mov    %rbx,0x728(%rsp)
    72d8:	00 
    72d9:	48 89 bc 24 30 07 00 	mov    %rdi,0x730(%rsp)
    72e0:	00 
    72e1:	ff d0                	call   *%rax
    72e3:	48 8b 9c 24 28 07 00 	mov    0x728(%rsp),%rbx
    72ea:	00 
    72eb:	4c 8b bc 24 20 07 00 	mov    0x720(%rsp),%r15
    72f2:	00 
    72f3:	4c 89 ff             	mov    %r15,%rdi
    72f6:	48 81 c7 f0 00 00 00 	add    $0xf0,%rdi
    72fd:	48 8b b4 24 10 07 00 	mov    0x710(%rsp),%rsi
    7304:	00 
    7305:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    730c:	00 00 00 
			7307: R_X86_64_64	caml_initialize
    730f:	48 89 b4 24 10 07 00 	mov    %rsi,0x710(%rsp)
    7316:	00 
    7317:	4c 89 bc 24 18 07 00 	mov    %r15,0x718(%rsp)
    731e:	00 
    731f:	48 89 9c 24 20 07 00 	mov    %rbx,0x720(%rsp)
    7326:	00 
    7327:	48 89 bc 24 28 07 00 	mov    %rdi,0x728(%rsp)
    732e:	00 
    732f:	ff d0                	call   *%rax
    7331:	48 8b 9c 24 20 07 00 	mov    0x720(%rsp),%rbx
    7338:	00 
    7339:	4c 8b bc 24 18 07 00 	mov    0x718(%rsp),%r15
    7340:	00 
    7341:	4c 89 ff             	mov    %r15,%rdi
    7344:	48 81 c7 f8 00 00 00 	add    $0xf8,%rdi
    734b:	48 8b b4 24 08 07 00 	mov    0x708(%rsp),%rsi
    7352:	00 
    7353:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    735a:	00 00 00 
			7355: R_X86_64_64	caml_initialize
    735d:	48 89 b4 24 08 07 00 	mov    %rsi,0x708(%rsp)
    7364:	00 
    7365:	4c 89 bc 24 10 07 00 	mov    %r15,0x710(%rsp)
    736c:	00 
    736d:	48 89 9c 24 18 07 00 	mov    %rbx,0x718(%rsp)
    7374:	00 
    7375:	48 89 bc 24 20 07 00 	mov    %rdi,0x720(%rsp)
    737c:	00 
    737d:	ff d0                	call   *%rax
    737f:	48 8b 9c 24 18 07 00 	mov    0x718(%rsp),%rbx
    7386:	00 
    7387:	4c 8b bc 24 10 07 00 	mov    0x710(%rsp),%r15
    738e:	00 
    738f:	4c 89 ff             	mov    %r15,%rdi
    7392:	48 81 c7 00 01 00 00 	add    $0x100,%rdi
    7399:	48 8b b4 24 00 07 00 	mov    0x700(%rsp),%rsi
    73a0:	00 
    73a1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    73a8:	00 00 00 
			73a3: R_X86_64_64	caml_initialize
    73ab:	48 89 b4 24 00 07 00 	mov    %rsi,0x700(%rsp)
    73b2:	00 
    73b3:	4c 89 bc 24 08 07 00 	mov    %r15,0x708(%rsp)
    73ba:	00 
    73bb:	48 89 9c 24 10 07 00 	mov    %rbx,0x710(%rsp)
    73c2:	00 
    73c3:	48 89 bc 24 18 07 00 	mov    %rdi,0x718(%rsp)
    73ca:	00 
    73cb:	ff d0                	call   *%rax
    73cd:	48 8b 9c 24 10 07 00 	mov    0x710(%rsp),%rbx
    73d4:	00 
    73d5:	4c 8b bc 24 08 07 00 	mov    0x708(%rsp),%r15
    73dc:	00 
    73dd:	4c 89 ff             	mov    %r15,%rdi
    73e0:	48 81 c7 08 01 00 00 	add    $0x108,%rdi
    73e7:	48 8b b4 24 f8 06 00 	mov    0x6f8(%rsp),%rsi
    73ee:	00 
    73ef:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    73f6:	00 00 00 
			73f1: R_X86_64_64	caml_initialize
    73f9:	48 89 b4 24 f8 06 00 	mov    %rsi,0x6f8(%rsp)
    7400:	00 
    7401:	4c 89 bc 24 00 07 00 	mov    %r15,0x700(%rsp)
    7408:	00 
    7409:	48 89 9c 24 08 07 00 	mov    %rbx,0x708(%rsp)
    7410:	00 
    7411:	48 89 bc 24 10 07 00 	mov    %rdi,0x710(%rsp)
    7418:	00 
    7419:	ff d0                	call   *%rax
    741b:	48 8b 9c 24 08 07 00 	mov    0x708(%rsp),%rbx
    7422:	00 
    7423:	4c 8b bc 24 00 07 00 	mov    0x700(%rsp),%r15
    742a:	00 
    742b:	4c 89 ff             	mov    %r15,%rdi
    742e:	48 81 c7 10 01 00 00 	add    $0x110,%rdi
    7435:	48 8b b4 24 f0 06 00 	mov    0x6f0(%rsp),%rsi
    743c:	00 
    743d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7444:	00 00 00 
			743f: R_X86_64_64	caml_initialize
    7447:	48 89 b4 24 f0 06 00 	mov    %rsi,0x6f0(%rsp)
    744e:	00 
    744f:	4c 89 bc 24 f8 06 00 	mov    %r15,0x6f8(%rsp)
    7456:	00 
    7457:	48 89 9c 24 00 07 00 	mov    %rbx,0x700(%rsp)
    745e:	00 
    745f:	48 89 bc 24 08 07 00 	mov    %rdi,0x708(%rsp)
    7466:	00 
    7467:	ff d0                	call   *%rax
    7469:	48 8b 9c 24 00 07 00 	mov    0x700(%rsp),%rbx
    7470:	00 
    7471:	4c 8b bc 24 f8 06 00 	mov    0x6f8(%rsp),%r15
    7478:	00 
    7479:	4c 89 ff             	mov    %r15,%rdi
    747c:	48 81 c7 18 01 00 00 	add    $0x118,%rdi
    7483:	48 8b b4 24 e8 06 00 	mov    0x6e8(%rsp),%rsi
    748a:	00 
    748b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7492:	00 00 00 
			748d: R_X86_64_64	caml_initialize
    7495:	48 89 b4 24 e8 06 00 	mov    %rsi,0x6e8(%rsp)
    749c:	00 
    749d:	4c 89 bc 24 f0 06 00 	mov    %r15,0x6f0(%rsp)
    74a4:	00 
    74a5:	48 89 9c 24 f8 06 00 	mov    %rbx,0x6f8(%rsp)
    74ac:	00 
    74ad:	48 89 bc 24 00 07 00 	mov    %rdi,0x700(%rsp)
    74b4:	00 
    74b5:	ff d0                	call   *%rax
    74b7:	48 8b 9c 24 f8 06 00 	mov    0x6f8(%rsp),%rbx
    74be:	00 
    74bf:	4c 8b bc 24 f0 06 00 	mov    0x6f0(%rsp),%r15
    74c6:	00 
    74c7:	4c 89 ff             	mov    %r15,%rdi
    74ca:	48 81 c7 20 01 00 00 	add    $0x120,%rdi
    74d1:	48 8b b4 24 e0 06 00 	mov    0x6e0(%rsp),%rsi
    74d8:	00 
    74d9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    74e0:	00 00 00 
			74db: R_X86_64_64	caml_initialize
    74e3:	48 89 b4 24 e0 06 00 	mov    %rsi,0x6e0(%rsp)
    74ea:	00 
    74eb:	4c 89 bc 24 e8 06 00 	mov    %r15,0x6e8(%rsp)
    74f2:	00 
    74f3:	48 89 9c 24 f0 06 00 	mov    %rbx,0x6f0(%rsp)
    74fa:	00 
    74fb:	48 89 bc 24 f8 06 00 	mov    %rdi,0x6f8(%rsp)
    7502:	00 
    7503:	ff d0                	call   *%rax
    7505:	48 8b 9c 24 f0 06 00 	mov    0x6f0(%rsp),%rbx
    750c:	00 
    750d:	4c 8b bc 24 e8 06 00 	mov    0x6e8(%rsp),%r15
    7514:	00 
    7515:	4c 89 ff             	mov    %r15,%rdi
    7518:	48 81 c7 28 01 00 00 	add    $0x128,%rdi
    751f:	48 8b b4 24 d8 06 00 	mov    0x6d8(%rsp),%rsi
    7526:	00 
    7527:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    752e:	00 00 00 
			7529: R_X86_64_64	caml_initialize
    7531:	48 89 b4 24 d8 06 00 	mov    %rsi,0x6d8(%rsp)
    7538:	00 
    7539:	4c 89 bc 24 e0 06 00 	mov    %r15,0x6e0(%rsp)
    7540:	00 
    7541:	48 89 9c 24 e8 06 00 	mov    %rbx,0x6e8(%rsp)
    7548:	00 
    7549:	48 89 bc 24 f0 06 00 	mov    %rdi,0x6f0(%rsp)
    7550:	00 
    7551:	ff d0                	call   *%rax
    7553:	48 8b 9c 24 e8 06 00 	mov    0x6e8(%rsp),%rbx
    755a:	00 
    755b:	4c 8b bc 24 e0 06 00 	mov    0x6e0(%rsp),%r15
    7562:	00 
    7563:	4c 89 ff             	mov    %r15,%rdi
    7566:	48 81 c7 30 01 00 00 	add    $0x130,%rdi
    756d:	48 8b b4 24 d0 06 00 	mov    0x6d0(%rsp),%rsi
    7574:	00 
    7575:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    757c:	00 00 00 
			7577: R_X86_64_64	caml_initialize
    757f:	48 89 b4 24 d0 06 00 	mov    %rsi,0x6d0(%rsp)
    7586:	00 
    7587:	4c 89 bc 24 d8 06 00 	mov    %r15,0x6d8(%rsp)
    758e:	00 
    758f:	48 89 9c 24 e0 06 00 	mov    %rbx,0x6e0(%rsp)
    7596:	00 
    7597:	48 89 bc 24 e8 06 00 	mov    %rdi,0x6e8(%rsp)
    759e:	00 
    759f:	ff d0                	call   *%rax
    75a1:	48 8b 9c 24 e0 06 00 	mov    0x6e0(%rsp),%rbx
    75a8:	00 
    75a9:	4c 8b bc 24 d8 06 00 	mov    0x6d8(%rsp),%r15
    75b0:	00 
    75b1:	4c 89 ff             	mov    %r15,%rdi
    75b4:	48 81 c7 38 01 00 00 	add    $0x138,%rdi
    75bb:	48 8b b4 24 c8 06 00 	mov    0x6c8(%rsp),%rsi
    75c2:	00 
    75c3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    75ca:	00 00 00 
			75c5: R_X86_64_64	caml_initialize
    75cd:	48 89 b4 24 c8 06 00 	mov    %rsi,0x6c8(%rsp)
    75d4:	00 
    75d5:	4c 89 bc 24 d0 06 00 	mov    %r15,0x6d0(%rsp)
    75dc:	00 
    75dd:	48 89 9c 24 d8 06 00 	mov    %rbx,0x6d8(%rsp)
    75e4:	00 
    75e5:	48 89 bc 24 e0 06 00 	mov    %rdi,0x6e0(%rsp)
    75ec:	00 
    75ed:	ff d0                	call   *%rax
    75ef:	48 8b 9c 24 d8 06 00 	mov    0x6d8(%rsp),%rbx
    75f6:	00 
    75f7:	4c 8b bc 24 d0 06 00 	mov    0x6d0(%rsp),%r15
    75fe:	00 
    75ff:	4c 89 ff             	mov    %r15,%rdi
    7602:	48 81 c7 40 01 00 00 	add    $0x140,%rdi
    7609:	48 8b b4 24 c0 06 00 	mov    0x6c0(%rsp),%rsi
    7610:	00 
    7611:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7618:	00 00 00 
			7613: R_X86_64_64	caml_initialize
    761b:	48 89 b4 24 c0 06 00 	mov    %rsi,0x6c0(%rsp)
    7622:	00 
    7623:	4c 89 bc 24 c8 06 00 	mov    %r15,0x6c8(%rsp)
    762a:	00 
    762b:	48 89 9c 24 d0 06 00 	mov    %rbx,0x6d0(%rsp)
    7632:	00 
    7633:	48 89 bc 24 d8 06 00 	mov    %rdi,0x6d8(%rsp)
    763a:	00 
    763b:	ff d0                	call   *%rax
    763d:	48 8b 9c 24 d0 06 00 	mov    0x6d0(%rsp),%rbx
    7644:	00 
    7645:	4c 8b bc 24 c8 06 00 	mov    0x6c8(%rsp),%r15
    764c:	00 
    764d:	4c 89 ff             	mov    %r15,%rdi
    7650:	48 81 c7 48 01 00 00 	add    $0x148,%rdi
    7657:	48 8b b4 24 b8 06 00 	mov    0x6b8(%rsp),%rsi
    765e:	00 
    765f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7666:	00 00 00 
			7661: R_X86_64_64	caml_initialize
    7669:	48 89 b4 24 b8 06 00 	mov    %rsi,0x6b8(%rsp)
    7670:	00 
    7671:	4c 89 bc 24 c0 06 00 	mov    %r15,0x6c0(%rsp)
    7678:	00 
    7679:	48 89 9c 24 c8 06 00 	mov    %rbx,0x6c8(%rsp)
    7680:	00 
    7681:	48 89 bc 24 d0 06 00 	mov    %rdi,0x6d0(%rsp)
    7688:	00 
    7689:	ff d0                	call   *%rax
    768b:	48 8b 9c 24 c8 06 00 	mov    0x6c8(%rsp),%rbx
    7692:	00 
    7693:	4c 8b bc 24 c0 06 00 	mov    0x6c0(%rsp),%r15
    769a:	00 
    769b:	4c 89 ff             	mov    %r15,%rdi
    769e:	48 81 c7 50 01 00 00 	add    $0x150,%rdi
    76a5:	48 8b b4 24 b0 06 00 	mov    0x6b0(%rsp),%rsi
    76ac:	00 
    76ad:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    76b4:	00 00 00 
			76af: R_X86_64_64	caml_initialize
    76b7:	48 89 b4 24 b0 06 00 	mov    %rsi,0x6b0(%rsp)
    76be:	00 
    76bf:	4c 89 bc 24 b8 06 00 	mov    %r15,0x6b8(%rsp)
    76c6:	00 
    76c7:	48 89 9c 24 c0 06 00 	mov    %rbx,0x6c0(%rsp)
    76ce:	00 
    76cf:	48 89 bc 24 c8 06 00 	mov    %rdi,0x6c8(%rsp)
    76d6:	00 
    76d7:	ff d0                	call   *%rax
    76d9:	48 8b 9c 24 c0 06 00 	mov    0x6c0(%rsp),%rbx
    76e0:	00 
    76e1:	4c 8b bc 24 b8 06 00 	mov    0x6b8(%rsp),%r15
    76e8:	00 
    76e9:	4c 89 ff             	mov    %r15,%rdi
    76ec:	48 81 c7 58 01 00 00 	add    $0x158,%rdi
    76f3:	48 8b b4 24 a8 06 00 	mov    0x6a8(%rsp),%rsi
    76fa:	00 
    76fb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7702:	00 00 00 
			76fd: R_X86_64_64	caml_initialize
    7705:	48 89 b4 24 a8 06 00 	mov    %rsi,0x6a8(%rsp)
    770c:	00 
    770d:	4c 89 bc 24 b0 06 00 	mov    %r15,0x6b0(%rsp)
    7714:	00 
    7715:	48 89 9c 24 b8 06 00 	mov    %rbx,0x6b8(%rsp)
    771c:	00 
    771d:	48 89 bc 24 c0 06 00 	mov    %rdi,0x6c0(%rsp)
    7724:	00 
    7725:	ff d0                	call   *%rax
    7727:	48 8b 9c 24 b8 06 00 	mov    0x6b8(%rsp),%rbx
    772e:	00 
    772f:	4c 8b bc 24 b0 06 00 	mov    0x6b0(%rsp),%r15
    7736:	00 
    7737:	4c 89 ff             	mov    %r15,%rdi
    773a:	48 81 c7 60 01 00 00 	add    $0x160,%rdi
    7741:	48 8b b4 24 a0 06 00 	mov    0x6a0(%rsp),%rsi
    7748:	00 
    7749:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7750:	00 00 00 
			774b: R_X86_64_64	caml_initialize
    7753:	48 89 b4 24 a0 06 00 	mov    %rsi,0x6a0(%rsp)
    775a:	00 
    775b:	4c 89 bc 24 a8 06 00 	mov    %r15,0x6a8(%rsp)
    7762:	00 
    7763:	48 89 9c 24 b0 06 00 	mov    %rbx,0x6b0(%rsp)
    776a:	00 
    776b:	48 89 bc 24 b8 06 00 	mov    %rdi,0x6b8(%rsp)
    7772:	00 
    7773:	ff d0                	call   *%rax
    7775:	48 8b 9c 24 b0 06 00 	mov    0x6b0(%rsp),%rbx
    777c:	00 
    777d:	4c 8b bc 24 a8 06 00 	mov    0x6a8(%rsp),%r15
    7784:	00 
    7785:	4c 89 ff             	mov    %r15,%rdi
    7788:	48 81 c7 68 01 00 00 	add    $0x168,%rdi
    778f:	48 8b b4 24 98 06 00 	mov    0x698(%rsp),%rsi
    7796:	00 
    7797:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    779e:	00 00 00 
			7799: R_X86_64_64	caml_initialize
    77a1:	48 89 b4 24 98 06 00 	mov    %rsi,0x698(%rsp)
    77a8:	00 
    77a9:	4c 89 bc 24 a0 06 00 	mov    %r15,0x6a0(%rsp)
    77b0:	00 
    77b1:	48 89 9c 24 a8 06 00 	mov    %rbx,0x6a8(%rsp)
    77b8:	00 
    77b9:	48 89 bc 24 b0 06 00 	mov    %rdi,0x6b0(%rsp)
    77c0:	00 
    77c1:	ff d0                	call   *%rax
    77c3:	48 8b 9c 24 a8 06 00 	mov    0x6a8(%rsp),%rbx
    77ca:	00 
    77cb:	4c 8b bc 24 a0 06 00 	mov    0x6a0(%rsp),%r15
    77d2:	00 
    77d3:	4c 89 ff             	mov    %r15,%rdi
    77d6:	48 81 c7 70 01 00 00 	add    $0x170,%rdi
    77dd:	48 8b b4 24 90 06 00 	mov    0x690(%rsp),%rsi
    77e4:	00 
    77e5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    77ec:	00 00 00 
			77e7: R_X86_64_64	caml_initialize
    77ef:	48 89 b4 24 90 06 00 	mov    %rsi,0x690(%rsp)
    77f6:	00 
    77f7:	4c 89 bc 24 98 06 00 	mov    %r15,0x698(%rsp)
    77fe:	00 
    77ff:	48 89 9c 24 a0 06 00 	mov    %rbx,0x6a0(%rsp)
    7806:	00 
    7807:	48 89 bc 24 a8 06 00 	mov    %rdi,0x6a8(%rsp)
    780e:	00 
    780f:	ff d0                	call   *%rax
    7811:	48 8b 9c 24 a0 06 00 	mov    0x6a0(%rsp),%rbx
    7818:	00 
    7819:	4c 8b bc 24 98 06 00 	mov    0x698(%rsp),%r15
    7820:	00 
    7821:	4c 89 ff             	mov    %r15,%rdi
    7824:	48 81 c7 78 01 00 00 	add    $0x178,%rdi
    782b:	48 8b b4 24 88 06 00 	mov    0x688(%rsp),%rsi
    7832:	00 
    7833:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    783a:	00 00 00 
			7835: R_X86_64_64	caml_initialize
    783d:	48 89 b4 24 88 06 00 	mov    %rsi,0x688(%rsp)
    7844:	00 
    7845:	4c 89 bc 24 90 06 00 	mov    %r15,0x690(%rsp)
    784c:	00 
    784d:	48 89 9c 24 98 06 00 	mov    %rbx,0x698(%rsp)
    7854:	00 
    7855:	48 89 bc 24 a0 06 00 	mov    %rdi,0x6a0(%rsp)
    785c:	00 
    785d:	ff d0                	call   *%rax
    785f:	48 8b 9c 24 98 06 00 	mov    0x698(%rsp),%rbx
    7866:	00 
    7867:	4c 8b bc 24 90 06 00 	mov    0x690(%rsp),%r15
    786e:	00 
    786f:	4c 89 ff             	mov    %r15,%rdi
    7872:	48 81 c7 80 01 00 00 	add    $0x180,%rdi
    7879:	48 8b b4 24 80 06 00 	mov    0x680(%rsp),%rsi
    7880:	00 
    7881:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7888:	00 00 00 
			7883: R_X86_64_64	caml_initialize
    788b:	48 89 b4 24 80 06 00 	mov    %rsi,0x680(%rsp)
    7892:	00 
    7893:	4c 89 bc 24 88 06 00 	mov    %r15,0x688(%rsp)
    789a:	00 
    789b:	48 89 9c 24 90 06 00 	mov    %rbx,0x690(%rsp)
    78a2:	00 
    78a3:	48 89 bc 24 98 06 00 	mov    %rdi,0x698(%rsp)
    78aa:	00 
    78ab:	ff d0                	call   *%rax
    78ad:	48 8b 9c 24 90 06 00 	mov    0x690(%rsp),%rbx
    78b4:	00 
    78b5:	4c 8b bc 24 88 06 00 	mov    0x688(%rsp),%r15
    78bc:	00 
    78bd:	4c 89 ff             	mov    %r15,%rdi
    78c0:	48 81 c7 88 01 00 00 	add    $0x188,%rdi
    78c7:	48 8b b4 24 78 06 00 	mov    0x678(%rsp),%rsi
    78ce:	00 
    78cf:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    78d6:	00 00 00 
			78d1: R_X86_64_64	caml_initialize
    78d9:	48 89 b4 24 78 06 00 	mov    %rsi,0x678(%rsp)
    78e0:	00 
    78e1:	4c 89 bc 24 80 06 00 	mov    %r15,0x680(%rsp)
    78e8:	00 
    78e9:	48 89 9c 24 88 06 00 	mov    %rbx,0x688(%rsp)
    78f0:	00 
    78f1:	48 89 bc 24 90 06 00 	mov    %rdi,0x690(%rsp)
    78f8:	00 
    78f9:	ff d0                	call   *%rax
    78fb:	48 8b 9c 24 88 06 00 	mov    0x688(%rsp),%rbx
    7902:	00 
    7903:	4c 8b bc 24 80 06 00 	mov    0x680(%rsp),%r15
    790a:	00 
    790b:	4c 89 ff             	mov    %r15,%rdi
    790e:	48 81 c7 90 01 00 00 	add    $0x190,%rdi
    7915:	48 8b b4 24 70 06 00 	mov    0x670(%rsp),%rsi
    791c:	00 
    791d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7924:	00 00 00 
			791f: R_X86_64_64	caml_initialize
    7927:	48 89 b4 24 70 06 00 	mov    %rsi,0x670(%rsp)
    792e:	00 
    792f:	4c 89 bc 24 78 06 00 	mov    %r15,0x678(%rsp)
    7936:	00 
    7937:	48 89 9c 24 80 06 00 	mov    %rbx,0x680(%rsp)
    793e:	00 
    793f:	48 89 bc 24 88 06 00 	mov    %rdi,0x688(%rsp)
    7946:	00 
    7947:	ff d0                	call   *%rax
    7949:	48 8b 9c 24 80 06 00 	mov    0x680(%rsp),%rbx
    7950:	00 
    7951:	4c 8b bc 24 78 06 00 	mov    0x678(%rsp),%r15
    7958:	00 
    7959:	4c 89 ff             	mov    %r15,%rdi
    795c:	48 81 c7 98 01 00 00 	add    $0x198,%rdi
    7963:	48 8b b4 24 68 06 00 	mov    0x668(%rsp),%rsi
    796a:	00 
    796b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7972:	00 00 00 
			796d: R_X86_64_64	caml_initialize
    7975:	48 89 b4 24 68 06 00 	mov    %rsi,0x668(%rsp)
    797c:	00 
    797d:	4c 89 bc 24 70 06 00 	mov    %r15,0x670(%rsp)
    7984:	00 
    7985:	48 89 9c 24 78 06 00 	mov    %rbx,0x678(%rsp)
    798c:	00 
    798d:	48 89 bc 24 80 06 00 	mov    %rdi,0x680(%rsp)
    7994:	00 
    7995:	ff d0                	call   *%rax
    7997:	48 8b 9c 24 78 06 00 	mov    0x678(%rsp),%rbx
    799e:	00 
    799f:	4c 8b bc 24 70 06 00 	mov    0x670(%rsp),%r15
    79a6:	00 
    79a7:	4c 89 ff             	mov    %r15,%rdi
    79aa:	48 81 c7 a0 01 00 00 	add    $0x1a0,%rdi
    79b1:	48 8b b4 24 60 06 00 	mov    0x660(%rsp),%rsi
    79b8:	00 
    79b9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    79c0:	00 00 00 
			79bb: R_X86_64_64	caml_initialize
    79c3:	48 89 b4 24 60 06 00 	mov    %rsi,0x660(%rsp)
    79ca:	00 
    79cb:	4c 89 bc 24 68 06 00 	mov    %r15,0x668(%rsp)
    79d2:	00 
    79d3:	48 89 9c 24 70 06 00 	mov    %rbx,0x670(%rsp)
    79da:	00 
    79db:	48 89 bc 24 78 06 00 	mov    %rdi,0x678(%rsp)
    79e2:	00 
    79e3:	ff d0                	call   *%rax
    79e5:	48 8b 9c 24 70 06 00 	mov    0x670(%rsp),%rbx
    79ec:	00 
    79ed:	4c 8b bc 24 68 06 00 	mov    0x668(%rsp),%r15
    79f4:	00 
    79f5:	4c 89 ff             	mov    %r15,%rdi
    79f8:	48 81 c7 a8 01 00 00 	add    $0x1a8,%rdi
    79ff:	48 8b b4 24 58 06 00 	mov    0x658(%rsp),%rsi
    7a06:	00 
    7a07:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7a0e:	00 00 00 
			7a09: R_X86_64_64	caml_initialize
    7a11:	48 89 b4 24 58 06 00 	mov    %rsi,0x658(%rsp)
    7a18:	00 
    7a19:	4c 89 bc 24 60 06 00 	mov    %r15,0x660(%rsp)
    7a20:	00 
    7a21:	48 89 9c 24 68 06 00 	mov    %rbx,0x668(%rsp)
    7a28:	00 
    7a29:	48 89 bc 24 70 06 00 	mov    %rdi,0x670(%rsp)
    7a30:	00 
    7a31:	ff d0                	call   *%rax
    7a33:	48 8b 9c 24 68 06 00 	mov    0x668(%rsp),%rbx
    7a3a:	00 
    7a3b:	4c 8b bc 24 60 06 00 	mov    0x660(%rsp),%r15
    7a42:	00 
    7a43:	4c 89 ff             	mov    %r15,%rdi
    7a46:	48 81 c7 b0 01 00 00 	add    $0x1b0,%rdi
    7a4d:	48 8b b4 24 50 06 00 	mov    0x650(%rsp),%rsi
    7a54:	00 
    7a55:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7a5c:	00 00 00 
			7a57: R_X86_64_64	caml_initialize
    7a5f:	48 89 b4 24 50 06 00 	mov    %rsi,0x650(%rsp)
    7a66:	00 
    7a67:	4c 89 bc 24 58 06 00 	mov    %r15,0x658(%rsp)
    7a6e:	00 
    7a6f:	48 89 9c 24 60 06 00 	mov    %rbx,0x660(%rsp)
    7a76:	00 
    7a77:	48 89 bc 24 68 06 00 	mov    %rdi,0x668(%rsp)
    7a7e:	00 
    7a7f:	ff d0                	call   *%rax
    7a81:	48 8b 9c 24 60 06 00 	mov    0x660(%rsp),%rbx
    7a88:	00 
    7a89:	4c 8b bc 24 58 06 00 	mov    0x658(%rsp),%r15
    7a90:	00 
    7a91:	4c 89 ff             	mov    %r15,%rdi
    7a94:	48 81 c7 b8 01 00 00 	add    $0x1b8,%rdi
    7a9b:	48 8b b4 24 48 06 00 	mov    0x648(%rsp),%rsi
    7aa2:	00 
    7aa3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7aaa:	00 00 00 
			7aa5: R_X86_64_64	caml_initialize
    7aad:	48 89 b4 24 48 06 00 	mov    %rsi,0x648(%rsp)
    7ab4:	00 
    7ab5:	4c 89 bc 24 50 06 00 	mov    %r15,0x650(%rsp)
    7abc:	00 
    7abd:	48 89 9c 24 58 06 00 	mov    %rbx,0x658(%rsp)
    7ac4:	00 
    7ac5:	48 89 bc 24 60 06 00 	mov    %rdi,0x660(%rsp)
    7acc:	00 
    7acd:	ff d0                	call   *%rax
    7acf:	48 8b 9c 24 58 06 00 	mov    0x658(%rsp),%rbx
    7ad6:	00 
    7ad7:	4c 8b bc 24 50 06 00 	mov    0x650(%rsp),%r15
    7ade:	00 
    7adf:	4c 89 ff             	mov    %r15,%rdi
    7ae2:	48 81 c7 c0 01 00 00 	add    $0x1c0,%rdi
    7ae9:	48 8b b4 24 40 06 00 	mov    0x640(%rsp),%rsi
    7af0:	00 
    7af1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7af8:	00 00 00 
			7af3: R_X86_64_64	caml_initialize
    7afb:	48 89 b4 24 40 06 00 	mov    %rsi,0x640(%rsp)
    7b02:	00 
    7b03:	4c 89 bc 24 48 06 00 	mov    %r15,0x648(%rsp)
    7b0a:	00 
    7b0b:	48 89 9c 24 50 06 00 	mov    %rbx,0x650(%rsp)
    7b12:	00 
    7b13:	48 89 bc 24 58 06 00 	mov    %rdi,0x658(%rsp)
    7b1a:	00 
    7b1b:	ff d0                	call   *%rax
    7b1d:	48 8b 9c 24 50 06 00 	mov    0x650(%rsp),%rbx
    7b24:	00 
    7b25:	4c 8b bc 24 48 06 00 	mov    0x648(%rsp),%r15
    7b2c:	00 
    7b2d:	4c 89 ff             	mov    %r15,%rdi
    7b30:	48 81 c7 c8 01 00 00 	add    $0x1c8,%rdi
    7b37:	48 8b b4 24 38 06 00 	mov    0x638(%rsp),%rsi
    7b3e:	00 
    7b3f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7b46:	00 00 00 
			7b41: R_X86_64_64	caml_initialize
    7b49:	48 89 b4 24 38 06 00 	mov    %rsi,0x638(%rsp)
    7b50:	00 
    7b51:	4c 89 bc 24 40 06 00 	mov    %r15,0x640(%rsp)
    7b58:	00 
    7b59:	48 89 9c 24 48 06 00 	mov    %rbx,0x648(%rsp)
    7b60:	00 
    7b61:	48 89 bc 24 50 06 00 	mov    %rdi,0x650(%rsp)
    7b68:	00 
    7b69:	ff d0                	call   *%rax
    7b6b:	48 8b 9c 24 48 06 00 	mov    0x648(%rsp),%rbx
    7b72:	00 
    7b73:	4c 8b bc 24 40 06 00 	mov    0x640(%rsp),%r15
    7b7a:	00 
    7b7b:	4c 89 ff             	mov    %r15,%rdi
    7b7e:	48 81 c7 d0 01 00 00 	add    $0x1d0,%rdi
    7b85:	48 8b b4 24 30 06 00 	mov    0x630(%rsp),%rsi
    7b8c:	00 
    7b8d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7b94:	00 00 00 
			7b8f: R_X86_64_64	caml_initialize
    7b97:	48 89 b4 24 30 06 00 	mov    %rsi,0x630(%rsp)
    7b9e:	00 
    7b9f:	4c 89 bc 24 38 06 00 	mov    %r15,0x638(%rsp)
    7ba6:	00 
    7ba7:	48 89 9c 24 40 06 00 	mov    %rbx,0x640(%rsp)
    7bae:	00 
    7baf:	48 89 bc 24 48 06 00 	mov    %rdi,0x648(%rsp)
    7bb6:	00 
    7bb7:	ff d0                	call   *%rax
    7bb9:	48 8b 9c 24 40 06 00 	mov    0x640(%rsp),%rbx
    7bc0:	00 
    7bc1:	4c 8b bc 24 38 06 00 	mov    0x638(%rsp),%r15
    7bc8:	00 
    7bc9:	4c 89 ff             	mov    %r15,%rdi
    7bcc:	48 81 c7 d8 01 00 00 	add    $0x1d8,%rdi
    7bd3:	48 8b b4 24 28 06 00 	mov    0x628(%rsp),%rsi
    7bda:	00 
    7bdb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7be2:	00 00 00 
			7bdd: R_X86_64_64	caml_initialize
    7be5:	48 89 b4 24 28 06 00 	mov    %rsi,0x628(%rsp)
    7bec:	00 
    7bed:	4c 89 bc 24 30 06 00 	mov    %r15,0x630(%rsp)
    7bf4:	00 
    7bf5:	48 89 9c 24 38 06 00 	mov    %rbx,0x638(%rsp)
    7bfc:	00 
    7bfd:	48 89 bc 24 40 06 00 	mov    %rdi,0x640(%rsp)
    7c04:	00 
    7c05:	ff d0                	call   *%rax
    7c07:	48 8b 9c 24 38 06 00 	mov    0x638(%rsp),%rbx
    7c0e:	00 
    7c0f:	4c 8b bc 24 30 06 00 	mov    0x630(%rsp),%r15
    7c16:	00 
    7c17:	4c 89 ff             	mov    %r15,%rdi
    7c1a:	48 81 c7 e0 01 00 00 	add    $0x1e0,%rdi
    7c21:	48 8b b4 24 20 06 00 	mov    0x620(%rsp),%rsi
    7c28:	00 
    7c29:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7c30:	00 00 00 
			7c2b: R_X86_64_64	caml_initialize
    7c33:	48 89 b4 24 20 06 00 	mov    %rsi,0x620(%rsp)
    7c3a:	00 
    7c3b:	4c 89 bc 24 28 06 00 	mov    %r15,0x628(%rsp)
    7c42:	00 
    7c43:	48 89 9c 24 30 06 00 	mov    %rbx,0x630(%rsp)
    7c4a:	00 
    7c4b:	48 89 bc 24 38 06 00 	mov    %rdi,0x638(%rsp)
    7c52:	00 
    7c53:	ff d0                	call   *%rax
    7c55:	48 8b 9c 24 30 06 00 	mov    0x630(%rsp),%rbx
    7c5c:	00 
    7c5d:	4c 8b bc 24 28 06 00 	mov    0x628(%rsp),%r15
    7c64:	00 
    7c65:	4c 89 ff             	mov    %r15,%rdi
    7c68:	48 81 c7 e8 01 00 00 	add    $0x1e8,%rdi
    7c6f:	48 8b b4 24 18 06 00 	mov    0x618(%rsp),%rsi
    7c76:	00 
    7c77:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7c7e:	00 00 00 
			7c79: R_X86_64_64	caml_initialize
    7c81:	48 89 b4 24 18 06 00 	mov    %rsi,0x618(%rsp)
    7c88:	00 
    7c89:	4c 89 bc 24 20 06 00 	mov    %r15,0x620(%rsp)
    7c90:	00 
    7c91:	48 89 9c 24 28 06 00 	mov    %rbx,0x628(%rsp)
    7c98:	00 
    7c99:	48 89 bc 24 30 06 00 	mov    %rdi,0x630(%rsp)
    7ca0:	00 
    7ca1:	ff d0                	call   *%rax
    7ca3:	48 8b 9c 24 28 06 00 	mov    0x628(%rsp),%rbx
    7caa:	00 
    7cab:	4c 8b bc 24 20 06 00 	mov    0x620(%rsp),%r15
    7cb2:	00 
    7cb3:	4c 89 ff             	mov    %r15,%rdi
    7cb6:	48 81 c7 f0 01 00 00 	add    $0x1f0,%rdi
    7cbd:	48 8b b4 24 10 06 00 	mov    0x610(%rsp),%rsi
    7cc4:	00 
    7cc5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7ccc:	00 00 00 
			7cc7: R_X86_64_64	caml_initialize
    7ccf:	48 89 b4 24 10 06 00 	mov    %rsi,0x610(%rsp)
    7cd6:	00 
    7cd7:	4c 89 bc 24 18 06 00 	mov    %r15,0x618(%rsp)
    7cde:	00 
    7cdf:	48 89 9c 24 20 06 00 	mov    %rbx,0x620(%rsp)
    7ce6:	00 
    7ce7:	48 89 bc 24 28 06 00 	mov    %rdi,0x628(%rsp)
    7cee:	00 
    7cef:	ff d0                	call   *%rax
    7cf1:	48 8b 9c 24 20 06 00 	mov    0x620(%rsp),%rbx
    7cf8:	00 
    7cf9:	4c 8b bc 24 18 06 00 	mov    0x618(%rsp),%r15
    7d00:	00 
    7d01:	4c 89 ff             	mov    %r15,%rdi
    7d04:	48 81 c7 f8 01 00 00 	add    $0x1f8,%rdi
    7d0b:	48 8b b4 24 08 06 00 	mov    0x608(%rsp),%rsi
    7d12:	00 
    7d13:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7d1a:	00 00 00 
			7d15: R_X86_64_64	caml_initialize
    7d1d:	48 89 b4 24 08 06 00 	mov    %rsi,0x608(%rsp)
    7d24:	00 
    7d25:	4c 89 bc 24 10 06 00 	mov    %r15,0x610(%rsp)
    7d2c:	00 
    7d2d:	48 89 9c 24 18 06 00 	mov    %rbx,0x618(%rsp)
    7d34:	00 
    7d35:	48 89 bc 24 20 06 00 	mov    %rdi,0x620(%rsp)
    7d3c:	00 
    7d3d:	ff d0                	call   *%rax
    7d3f:	48 8b 9c 24 18 06 00 	mov    0x618(%rsp),%rbx
    7d46:	00 
    7d47:	4c 8b bc 24 10 06 00 	mov    0x610(%rsp),%r15
    7d4e:	00 
    7d4f:	4c 89 ff             	mov    %r15,%rdi
    7d52:	48 81 c7 00 02 00 00 	add    $0x200,%rdi
    7d59:	48 8b b4 24 00 06 00 	mov    0x600(%rsp),%rsi
    7d60:	00 
    7d61:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7d68:	00 00 00 
			7d63: R_X86_64_64	caml_initialize
    7d6b:	48 89 b4 24 00 06 00 	mov    %rsi,0x600(%rsp)
    7d72:	00 
    7d73:	4c 89 bc 24 08 06 00 	mov    %r15,0x608(%rsp)
    7d7a:	00 
    7d7b:	48 89 9c 24 10 06 00 	mov    %rbx,0x610(%rsp)
    7d82:	00 
    7d83:	48 89 bc 24 18 06 00 	mov    %rdi,0x618(%rsp)
    7d8a:	00 
    7d8b:	ff d0                	call   *%rax
    7d8d:	48 8b 9c 24 10 06 00 	mov    0x610(%rsp),%rbx
    7d94:	00 
    7d95:	4c 8b bc 24 08 06 00 	mov    0x608(%rsp),%r15
    7d9c:	00 
    7d9d:	4c 89 ff             	mov    %r15,%rdi
    7da0:	48 81 c7 08 02 00 00 	add    $0x208,%rdi
    7da7:	48 8b b4 24 f8 05 00 	mov    0x5f8(%rsp),%rsi
    7dae:	00 
    7daf:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7db6:	00 00 00 
			7db1: R_X86_64_64	caml_initialize
    7db9:	48 89 b4 24 f8 05 00 	mov    %rsi,0x5f8(%rsp)
    7dc0:	00 
    7dc1:	4c 89 bc 24 00 06 00 	mov    %r15,0x600(%rsp)
    7dc8:	00 
    7dc9:	48 89 9c 24 08 06 00 	mov    %rbx,0x608(%rsp)
    7dd0:	00 
    7dd1:	48 89 bc 24 10 06 00 	mov    %rdi,0x610(%rsp)
    7dd8:	00 
    7dd9:	ff d0                	call   *%rax
    7ddb:	48 8b 9c 24 08 06 00 	mov    0x608(%rsp),%rbx
    7de2:	00 
    7de3:	4c 8b bc 24 00 06 00 	mov    0x600(%rsp),%r15
    7dea:	00 
    7deb:	4c 89 ff             	mov    %r15,%rdi
    7dee:	48 81 c7 10 02 00 00 	add    $0x210,%rdi
    7df5:	48 8b b4 24 f0 05 00 	mov    0x5f0(%rsp),%rsi
    7dfc:	00 
    7dfd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7e04:	00 00 00 
			7dff: R_X86_64_64	caml_initialize
    7e07:	48 89 b4 24 f0 05 00 	mov    %rsi,0x5f0(%rsp)
    7e0e:	00 
    7e0f:	4c 89 bc 24 f8 05 00 	mov    %r15,0x5f8(%rsp)
    7e16:	00 
    7e17:	48 89 9c 24 00 06 00 	mov    %rbx,0x600(%rsp)
    7e1e:	00 
    7e1f:	48 89 bc 24 08 06 00 	mov    %rdi,0x608(%rsp)
    7e26:	00 
    7e27:	ff d0                	call   *%rax
    7e29:	48 8b 9c 24 00 06 00 	mov    0x600(%rsp),%rbx
    7e30:	00 
    7e31:	4c 8b bc 24 f8 05 00 	mov    0x5f8(%rsp),%r15
    7e38:	00 
    7e39:	4c 89 ff             	mov    %r15,%rdi
    7e3c:	48 81 c7 18 02 00 00 	add    $0x218,%rdi
    7e43:	48 8b b4 24 e8 05 00 	mov    0x5e8(%rsp),%rsi
    7e4a:	00 
    7e4b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7e52:	00 00 00 
			7e4d: R_X86_64_64	caml_initialize
    7e55:	48 89 b4 24 e8 05 00 	mov    %rsi,0x5e8(%rsp)
    7e5c:	00 
    7e5d:	4c 89 bc 24 f0 05 00 	mov    %r15,0x5f0(%rsp)
    7e64:	00 
    7e65:	48 89 9c 24 f8 05 00 	mov    %rbx,0x5f8(%rsp)
    7e6c:	00 
    7e6d:	48 89 bc 24 00 06 00 	mov    %rdi,0x600(%rsp)
    7e74:	00 
    7e75:	ff d0                	call   *%rax
    7e77:	48 8b 9c 24 f8 05 00 	mov    0x5f8(%rsp),%rbx
    7e7e:	00 
    7e7f:	4c 8b bc 24 f0 05 00 	mov    0x5f0(%rsp),%r15
    7e86:	00 
    7e87:	4c 89 ff             	mov    %r15,%rdi
    7e8a:	48 81 c7 20 02 00 00 	add    $0x220,%rdi
    7e91:	48 8b b4 24 e0 05 00 	mov    0x5e0(%rsp),%rsi
    7e98:	00 
    7e99:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7ea0:	00 00 00 
			7e9b: R_X86_64_64	caml_initialize
    7ea3:	48 89 b4 24 e0 05 00 	mov    %rsi,0x5e0(%rsp)
    7eaa:	00 
    7eab:	4c 89 bc 24 e8 05 00 	mov    %r15,0x5e8(%rsp)
    7eb2:	00 
    7eb3:	48 89 9c 24 f0 05 00 	mov    %rbx,0x5f0(%rsp)
    7eba:	00 
    7ebb:	48 89 bc 24 f8 05 00 	mov    %rdi,0x5f8(%rsp)
    7ec2:	00 
    7ec3:	ff d0                	call   *%rax
    7ec5:	48 8b 9c 24 f0 05 00 	mov    0x5f0(%rsp),%rbx
    7ecc:	00 
    7ecd:	4c 8b bc 24 e8 05 00 	mov    0x5e8(%rsp),%r15
    7ed4:	00 
    7ed5:	4c 89 ff             	mov    %r15,%rdi
    7ed8:	48 81 c7 28 02 00 00 	add    $0x228,%rdi
    7edf:	48 8b b4 24 d8 05 00 	mov    0x5d8(%rsp),%rsi
    7ee6:	00 
    7ee7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7eee:	00 00 00 
			7ee9: R_X86_64_64	caml_initialize
    7ef1:	48 89 b4 24 d8 05 00 	mov    %rsi,0x5d8(%rsp)
    7ef8:	00 
    7ef9:	4c 89 bc 24 e0 05 00 	mov    %r15,0x5e0(%rsp)
    7f00:	00 
    7f01:	48 89 9c 24 e8 05 00 	mov    %rbx,0x5e8(%rsp)
    7f08:	00 
    7f09:	48 89 bc 24 f0 05 00 	mov    %rdi,0x5f0(%rsp)
    7f10:	00 
    7f11:	ff d0                	call   *%rax
    7f13:	48 8b 9c 24 e8 05 00 	mov    0x5e8(%rsp),%rbx
    7f1a:	00 
    7f1b:	4c 8b bc 24 e0 05 00 	mov    0x5e0(%rsp),%r15
    7f22:	00 
    7f23:	4c 89 ff             	mov    %r15,%rdi
    7f26:	48 81 c7 30 02 00 00 	add    $0x230,%rdi
    7f2d:	48 8b b4 24 d0 05 00 	mov    0x5d0(%rsp),%rsi
    7f34:	00 
    7f35:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7f3c:	00 00 00 
			7f37: R_X86_64_64	caml_initialize
    7f3f:	48 89 b4 24 d0 05 00 	mov    %rsi,0x5d0(%rsp)
    7f46:	00 
    7f47:	4c 89 bc 24 d8 05 00 	mov    %r15,0x5d8(%rsp)
    7f4e:	00 
    7f4f:	48 89 9c 24 e0 05 00 	mov    %rbx,0x5e0(%rsp)
    7f56:	00 
    7f57:	48 89 bc 24 e8 05 00 	mov    %rdi,0x5e8(%rsp)
    7f5e:	00 
    7f5f:	ff d0                	call   *%rax
    7f61:	48 8b 9c 24 e0 05 00 	mov    0x5e0(%rsp),%rbx
    7f68:	00 
    7f69:	4c 8b bc 24 d8 05 00 	mov    0x5d8(%rsp),%r15
    7f70:	00 
    7f71:	4c 89 ff             	mov    %r15,%rdi
    7f74:	48 81 c7 38 02 00 00 	add    $0x238,%rdi
    7f7b:	48 8b b4 24 c8 05 00 	mov    0x5c8(%rsp),%rsi
    7f82:	00 
    7f83:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7f8a:	00 00 00 
			7f85: R_X86_64_64	caml_initialize
    7f8d:	48 89 b4 24 c8 05 00 	mov    %rsi,0x5c8(%rsp)
    7f94:	00 
    7f95:	4c 89 bc 24 d0 05 00 	mov    %r15,0x5d0(%rsp)
    7f9c:	00 
    7f9d:	48 89 9c 24 d8 05 00 	mov    %rbx,0x5d8(%rsp)
    7fa4:	00 
    7fa5:	48 89 bc 24 e0 05 00 	mov    %rdi,0x5e0(%rsp)
    7fac:	00 
    7fad:	ff d0                	call   *%rax
    7faf:	48 8b 9c 24 d8 05 00 	mov    0x5d8(%rsp),%rbx
    7fb6:	00 
    7fb7:	4c 8b bc 24 d0 05 00 	mov    0x5d0(%rsp),%r15
    7fbe:	00 
    7fbf:	4c 89 ff             	mov    %r15,%rdi
    7fc2:	48 81 c7 40 02 00 00 	add    $0x240,%rdi
    7fc9:	48 8b b4 24 c0 05 00 	mov    0x5c0(%rsp),%rsi
    7fd0:	00 
    7fd1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    7fd8:	00 00 00 
			7fd3: R_X86_64_64	caml_initialize
    7fdb:	48 89 b4 24 c0 05 00 	mov    %rsi,0x5c0(%rsp)
    7fe2:	00 
    7fe3:	4c 89 bc 24 c8 05 00 	mov    %r15,0x5c8(%rsp)
    7fea:	00 
    7feb:	48 89 9c 24 d0 05 00 	mov    %rbx,0x5d0(%rsp)
    7ff2:	00 
    7ff3:	48 89 bc 24 d8 05 00 	mov    %rdi,0x5d8(%rsp)
    7ffa:	00 
    7ffb:	ff d0                	call   *%rax
    7ffd:	48 8b 9c 24 d0 05 00 	mov    0x5d0(%rsp),%rbx
    8004:	00 
    8005:	4c 8b bc 24 c8 05 00 	mov    0x5c8(%rsp),%r15
    800c:	00 
    800d:	4c 89 ff             	mov    %r15,%rdi
    8010:	48 81 c7 48 02 00 00 	add    $0x248,%rdi
    8017:	48 8b b4 24 b8 05 00 	mov    0x5b8(%rsp),%rsi
    801e:	00 
    801f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8026:	00 00 00 
			8021: R_X86_64_64	caml_initialize
    8029:	48 89 b4 24 b8 05 00 	mov    %rsi,0x5b8(%rsp)
    8030:	00 
    8031:	4c 89 bc 24 c0 05 00 	mov    %r15,0x5c0(%rsp)
    8038:	00 
    8039:	48 89 9c 24 c8 05 00 	mov    %rbx,0x5c8(%rsp)
    8040:	00 
    8041:	48 89 bc 24 d0 05 00 	mov    %rdi,0x5d0(%rsp)
    8048:	00 
    8049:	ff d0                	call   *%rax
    804b:	48 8b 9c 24 c8 05 00 	mov    0x5c8(%rsp),%rbx
    8052:	00 
    8053:	4c 8b bc 24 c0 05 00 	mov    0x5c0(%rsp),%r15
    805a:	00 
    805b:	4c 89 ff             	mov    %r15,%rdi
    805e:	48 81 c7 50 02 00 00 	add    $0x250,%rdi
    8065:	48 8b b4 24 b0 05 00 	mov    0x5b0(%rsp),%rsi
    806c:	00 
    806d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8074:	00 00 00 
			806f: R_X86_64_64	caml_initialize
    8077:	48 89 b4 24 b0 05 00 	mov    %rsi,0x5b0(%rsp)
    807e:	00 
    807f:	4c 89 bc 24 b8 05 00 	mov    %r15,0x5b8(%rsp)
    8086:	00 
    8087:	48 89 9c 24 c0 05 00 	mov    %rbx,0x5c0(%rsp)
    808e:	00 
    808f:	48 89 bc 24 c8 05 00 	mov    %rdi,0x5c8(%rsp)
    8096:	00 
    8097:	ff d0                	call   *%rax
    8099:	48 8b 9c 24 c0 05 00 	mov    0x5c0(%rsp),%rbx
    80a0:	00 
    80a1:	4c 8b bc 24 b8 05 00 	mov    0x5b8(%rsp),%r15
    80a8:	00 
    80a9:	4c 89 ff             	mov    %r15,%rdi
    80ac:	48 81 c7 58 02 00 00 	add    $0x258,%rdi
    80b3:	48 8b b4 24 a8 05 00 	mov    0x5a8(%rsp),%rsi
    80ba:	00 
    80bb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    80c2:	00 00 00 
			80bd: R_X86_64_64	caml_initialize
    80c5:	48 89 b4 24 a8 05 00 	mov    %rsi,0x5a8(%rsp)
    80cc:	00 
    80cd:	4c 89 bc 24 b0 05 00 	mov    %r15,0x5b0(%rsp)
    80d4:	00 
    80d5:	48 89 9c 24 b8 05 00 	mov    %rbx,0x5b8(%rsp)
    80dc:	00 
    80dd:	48 89 bc 24 c0 05 00 	mov    %rdi,0x5c0(%rsp)
    80e4:	00 
    80e5:	ff d0                	call   *%rax
    80e7:	48 8b 9c 24 b8 05 00 	mov    0x5b8(%rsp),%rbx
    80ee:	00 
    80ef:	4c 8b bc 24 b0 05 00 	mov    0x5b0(%rsp),%r15
    80f6:	00 
    80f7:	4c 89 ff             	mov    %r15,%rdi
    80fa:	48 81 c7 60 02 00 00 	add    $0x260,%rdi
    8101:	48 8b b4 24 a0 05 00 	mov    0x5a0(%rsp),%rsi
    8108:	00 
    8109:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8110:	00 00 00 
			810b: R_X86_64_64	caml_initialize
    8113:	48 89 b4 24 a0 05 00 	mov    %rsi,0x5a0(%rsp)
    811a:	00 
    811b:	4c 89 bc 24 a8 05 00 	mov    %r15,0x5a8(%rsp)
    8122:	00 
    8123:	48 89 9c 24 b0 05 00 	mov    %rbx,0x5b0(%rsp)
    812a:	00 
    812b:	48 89 bc 24 b8 05 00 	mov    %rdi,0x5b8(%rsp)
    8132:	00 
    8133:	ff d0                	call   *%rax
    8135:	48 8b 9c 24 b0 05 00 	mov    0x5b0(%rsp),%rbx
    813c:	00 
    813d:	4c 8b bc 24 a8 05 00 	mov    0x5a8(%rsp),%r15
    8144:	00 
    8145:	4c 89 ff             	mov    %r15,%rdi
    8148:	48 81 c7 68 02 00 00 	add    $0x268,%rdi
    814f:	48 8b b4 24 98 05 00 	mov    0x598(%rsp),%rsi
    8156:	00 
    8157:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    815e:	00 00 00 
			8159: R_X86_64_64	caml_initialize
    8161:	48 89 b4 24 98 05 00 	mov    %rsi,0x598(%rsp)
    8168:	00 
    8169:	4c 89 bc 24 a0 05 00 	mov    %r15,0x5a0(%rsp)
    8170:	00 
    8171:	48 89 9c 24 a8 05 00 	mov    %rbx,0x5a8(%rsp)
    8178:	00 
    8179:	48 89 bc 24 b0 05 00 	mov    %rdi,0x5b0(%rsp)
    8180:	00 
    8181:	ff d0                	call   *%rax
    8183:	48 8b 9c 24 a8 05 00 	mov    0x5a8(%rsp),%rbx
    818a:	00 
    818b:	4c 8b bc 24 a0 05 00 	mov    0x5a0(%rsp),%r15
    8192:	00 
    8193:	4c 89 ff             	mov    %r15,%rdi
    8196:	48 81 c7 70 02 00 00 	add    $0x270,%rdi
    819d:	48 8b b4 24 90 05 00 	mov    0x590(%rsp),%rsi
    81a4:	00 
    81a5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    81ac:	00 00 00 
			81a7: R_X86_64_64	caml_initialize
    81af:	48 89 b4 24 90 05 00 	mov    %rsi,0x590(%rsp)
    81b6:	00 
    81b7:	4c 89 bc 24 98 05 00 	mov    %r15,0x598(%rsp)
    81be:	00 
    81bf:	48 89 9c 24 a0 05 00 	mov    %rbx,0x5a0(%rsp)
    81c6:	00 
    81c7:	48 89 bc 24 a8 05 00 	mov    %rdi,0x5a8(%rsp)
    81ce:	00 
    81cf:	ff d0                	call   *%rax
    81d1:	48 8b 9c 24 a0 05 00 	mov    0x5a0(%rsp),%rbx
    81d8:	00 
    81d9:	4c 8b bc 24 98 05 00 	mov    0x598(%rsp),%r15
    81e0:	00 
    81e1:	4c 89 ff             	mov    %r15,%rdi
    81e4:	48 81 c7 78 02 00 00 	add    $0x278,%rdi
    81eb:	48 8b b4 24 88 05 00 	mov    0x588(%rsp),%rsi
    81f2:	00 
    81f3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    81fa:	00 00 00 
			81f5: R_X86_64_64	caml_initialize
    81fd:	48 89 b4 24 88 05 00 	mov    %rsi,0x588(%rsp)
    8204:	00 
    8205:	4c 89 bc 24 90 05 00 	mov    %r15,0x590(%rsp)
    820c:	00 
    820d:	48 89 9c 24 98 05 00 	mov    %rbx,0x598(%rsp)
    8214:	00 
    8215:	48 89 bc 24 a0 05 00 	mov    %rdi,0x5a0(%rsp)
    821c:	00 
    821d:	ff d0                	call   *%rax
    821f:	48 8b 9c 24 98 05 00 	mov    0x598(%rsp),%rbx
    8226:	00 
    8227:	4c 8b bc 24 90 05 00 	mov    0x590(%rsp),%r15
    822e:	00 
    822f:	4c 89 ff             	mov    %r15,%rdi
    8232:	48 81 c7 80 02 00 00 	add    $0x280,%rdi
    8239:	48 8b b4 24 80 05 00 	mov    0x580(%rsp),%rsi
    8240:	00 
    8241:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8248:	00 00 00 
			8243: R_X86_64_64	caml_initialize
    824b:	48 89 b4 24 80 05 00 	mov    %rsi,0x580(%rsp)
    8252:	00 
    8253:	4c 89 bc 24 88 05 00 	mov    %r15,0x588(%rsp)
    825a:	00 
    825b:	48 89 9c 24 90 05 00 	mov    %rbx,0x590(%rsp)
    8262:	00 
    8263:	48 89 bc 24 98 05 00 	mov    %rdi,0x598(%rsp)
    826a:	00 
    826b:	ff d0                	call   *%rax
    826d:	48 8b 9c 24 90 05 00 	mov    0x590(%rsp),%rbx
    8274:	00 
    8275:	4c 8b bc 24 88 05 00 	mov    0x588(%rsp),%r15
    827c:	00 
    827d:	4c 89 ff             	mov    %r15,%rdi
    8280:	48 81 c7 88 02 00 00 	add    $0x288,%rdi
    8287:	48 8b b4 24 78 05 00 	mov    0x578(%rsp),%rsi
    828e:	00 
    828f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8296:	00 00 00 
			8291: R_X86_64_64	caml_initialize
    8299:	48 89 b4 24 78 05 00 	mov    %rsi,0x578(%rsp)
    82a0:	00 
    82a1:	4c 89 bc 24 80 05 00 	mov    %r15,0x580(%rsp)
    82a8:	00 
    82a9:	48 89 9c 24 88 05 00 	mov    %rbx,0x588(%rsp)
    82b0:	00 
    82b1:	48 89 bc 24 90 05 00 	mov    %rdi,0x590(%rsp)
    82b8:	00 
    82b9:	ff d0                	call   *%rax
    82bb:	48 8b 9c 24 88 05 00 	mov    0x588(%rsp),%rbx
    82c2:	00 
    82c3:	4c 8b bc 24 80 05 00 	mov    0x580(%rsp),%r15
    82ca:	00 
    82cb:	4c 89 ff             	mov    %r15,%rdi
    82ce:	48 81 c7 90 02 00 00 	add    $0x290,%rdi
    82d5:	48 8b b4 24 70 05 00 	mov    0x570(%rsp),%rsi
    82dc:	00 
    82dd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    82e4:	00 00 00 
			82df: R_X86_64_64	caml_initialize
    82e7:	48 89 b4 24 70 05 00 	mov    %rsi,0x570(%rsp)
    82ee:	00 
    82ef:	4c 89 bc 24 78 05 00 	mov    %r15,0x578(%rsp)
    82f6:	00 
    82f7:	48 89 9c 24 80 05 00 	mov    %rbx,0x580(%rsp)
    82fe:	00 
    82ff:	48 89 bc 24 88 05 00 	mov    %rdi,0x588(%rsp)
    8306:	00 
    8307:	ff d0                	call   *%rax
    8309:	48 8b 9c 24 80 05 00 	mov    0x580(%rsp),%rbx
    8310:	00 
    8311:	4c 8b bc 24 78 05 00 	mov    0x578(%rsp),%r15
    8318:	00 
    8319:	4c 89 ff             	mov    %r15,%rdi
    831c:	48 81 c7 98 02 00 00 	add    $0x298,%rdi
    8323:	48 8b b4 24 68 05 00 	mov    0x568(%rsp),%rsi
    832a:	00 
    832b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8332:	00 00 00 
			832d: R_X86_64_64	caml_initialize
    8335:	48 89 b4 24 68 05 00 	mov    %rsi,0x568(%rsp)
    833c:	00 
    833d:	4c 89 bc 24 70 05 00 	mov    %r15,0x570(%rsp)
    8344:	00 
    8345:	48 89 9c 24 78 05 00 	mov    %rbx,0x578(%rsp)
    834c:	00 
    834d:	48 89 bc 24 80 05 00 	mov    %rdi,0x580(%rsp)
    8354:	00 
    8355:	ff d0                	call   *%rax
    8357:	48 8b 9c 24 78 05 00 	mov    0x578(%rsp),%rbx
    835e:	00 
    835f:	4c 8b bc 24 70 05 00 	mov    0x570(%rsp),%r15
    8366:	00 
    8367:	4c 89 ff             	mov    %r15,%rdi
    836a:	48 81 c7 a0 02 00 00 	add    $0x2a0,%rdi
    8371:	48 8b b4 24 60 05 00 	mov    0x560(%rsp),%rsi
    8378:	00 
    8379:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8380:	00 00 00 
			837b: R_X86_64_64	caml_initialize
    8383:	48 89 b4 24 60 05 00 	mov    %rsi,0x560(%rsp)
    838a:	00 
    838b:	4c 89 bc 24 68 05 00 	mov    %r15,0x568(%rsp)
    8392:	00 
    8393:	48 89 9c 24 70 05 00 	mov    %rbx,0x570(%rsp)
    839a:	00 
    839b:	48 89 bc 24 78 05 00 	mov    %rdi,0x578(%rsp)
    83a2:	00 
    83a3:	ff d0                	call   *%rax
    83a5:	48 8b 9c 24 70 05 00 	mov    0x570(%rsp),%rbx
    83ac:	00 
    83ad:	4c 8b bc 24 68 05 00 	mov    0x568(%rsp),%r15
    83b4:	00 
    83b5:	4c 89 ff             	mov    %r15,%rdi
    83b8:	48 81 c7 a8 02 00 00 	add    $0x2a8,%rdi
    83bf:	48 8b b4 24 58 05 00 	mov    0x558(%rsp),%rsi
    83c6:	00 
    83c7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    83ce:	00 00 00 
			83c9: R_X86_64_64	caml_initialize
    83d1:	48 89 b4 24 58 05 00 	mov    %rsi,0x558(%rsp)
    83d8:	00 
    83d9:	4c 89 bc 24 60 05 00 	mov    %r15,0x560(%rsp)
    83e0:	00 
    83e1:	48 89 9c 24 68 05 00 	mov    %rbx,0x568(%rsp)
    83e8:	00 
    83e9:	48 89 bc 24 70 05 00 	mov    %rdi,0x570(%rsp)
    83f0:	00 
    83f1:	ff d0                	call   *%rax
    83f3:	48 8b 9c 24 68 05 00 	mov    0x568(%rsp),%rbx
    83fa:	00 
    83fb:	4c 8b bc 24 60 05 00 	mov    0x560(%rsp),%r15
    8402:	00 
    8403:	4c 89 ff             	mov    %r15,%rdi
    8406:	48 81 c7 b0 02 00 00 	add    $0x2b0,%rdi
    840d:	48 8b b4 24 50 05 00 	mov    0x550(%rsp),%rsi
    8414:	00 
    8415:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    841c:	00 00 00 
			8417: R_X86_64_64	caml_initialize
    841f:	48 89 b4 24 50 05 00 	mov    %rsi,0x550(%rsp)
    8426:	00 
    8427:	4c 89 bc 24 58 05 00 	mov    %r15,0x558(%rsp)
    842e:	00 
    842f:	48 89 9c 24 60 05 00 	mov    %rbx,0x560(%rsp)
    8436:	00 
    8437:	48 89 bc 24 68 05 00 	mov    %rdi,0x568(%rsp)
    843e:	00 
    843f:	ff d0                	call   *%rax
    8441:	48 8b 9c 24 60 05 00 	mov    0x560(%rsp),%rbx
    8448:	00 
    8449:	4c 8b bc 24 58 05 00 	mov    0x558(%rsp),%r15
    8450:	00 
    8451:	4c 89 ff             	mov    %r15,%rdi
    8454:	48 81 c7 b8 02 00 00 	add    $0x2b8,%rdi
    845b:	48 8b b4 24 48 05 00 	mov    0x548(%rsp),%rsi
    8462:	00 
    8463:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    846a:	00 00 00 
			8465: R_X86_64_64	caml_initialize
    846d:	48 89 b4 24 48 05 00 	mov    %rsi,0x548(%rsp)
    8474:	00 
    8475:	4c 89 bc 24 50 05 00 	mov    %r15,0x550(%rsp)
    847c:	00 
    847d:	48 89 9c 24 58 05 00 	mov    %rbx,0x558(%rsp)
    8484:	00 
    8485:	48 89 bc 24 60 05 00 	mov    %rdi,0x560(%rsp)
    848c:	00 
    848d:	ff d0                	call   *%rax
    848f:	48 8b 9c 24 58 05 00 	mov    0x558(%rsp),%rbx
    8496:	00 
    8497:	4c 8b bc 24 50 05 00 	mov    0x550(%rsp),%r15
    849e:	00 
    849f:	4c 89 ff             	mov    %r15,%rdi
    84a2:	48 81 c7 c0 02 00 00 	add    $0x2c0,%rdi
    84a9:	48 8b b4 24 40 05 00 	mov    0x540(%rsp),%rsi
    84b0:	00 
    84b1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    84b8:	00 00 00 
			84b3: R_X86_64_64	caml_initialize
    84bb:	48 89 b4 24 40 05 00 	mov    %rsi,0x540(%rsp)
    84c2:	00 
    84c3:	4c 89 bc 24 48 05 00 	mov    %r15,0x548(%rsp)
    84ca:	00 
    84cb:	48 89 9c 24 50 05 00 	mov    %rbx,0x550(%rsp)
    84d2:	00 
    84d3:	48 89 bc 24 58 05 00 	mov    %rdi,0x558(%rsp)
    84da:	00 
    84db:	ff d0                	call   *%rax
    84dd:	48 8b 9c 24 50 05 00 	mov    0x550(%rsp),%rbx
    84e4:	00 
    84e5:	4c 8b bc 24 48 05 00 	mov    0x548(%rsp),%r15
    84ec:	00 
    84ed:	4c 89 ff             	mov    %r15,%rdi
    84f0:	48 81 c7 c8 02 00 00 	add    $0x2c8,%rdi
    84f7:	48 8b b4 24 38 05 00 	mov    0x538(%rsp),%rsi
    84fe:	00 
    84ff:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8506:	00 00 00 
			8501: R_X86_64_64	caml_initialize
    8509:	48 89 b4 24 38 05 00 	mov    %rsi,0x538(%rsp)
    8510:	00 
    8511:	4c 89 bc 24 40 05 00 	mov    %r15,0x540(%rsp)
    8518:	00 
    8519:	48 89 9c 24 48 05 00 	mov    %rbx,0x548(%rsp)
    8520:	00 
    8521:	48 89 bc 24 50 05 00 	mov    %rdi,0x550(%rsp)
    8528:	00 
    8529:	ff d0                	call   *%rax
    852b:	48 8b 9c 24 48 05 00 	mov    0x548(%rsp),%rbx
    8532:	00 
    8533:	4c 8b bc 24 40 05 00 	mov    0x540(%rsp),%r15
    853a:	00 
    853b:	4c 89 ff             	mov    %r15,%rdi
    853e:	48 81 c7 d0 02 00 00 	add    $0x2d0,%rdi
    8545:	48 8b b4 24 30 05 00 	mov    0x530(%rsp),%rsi
    854c:	00 
    854d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8554:	00 00 00 
			854f: R_X86_64_64	caml_initialize
    8557:	48 89 b4 24 30 05 00 	mov    %rsi,0x530(%rsp)
    855e:	00 
    855f:	4c 89 bc 24 38 05 00 	mov    %r15,0x538(%rsp)
    8566:	00 
    8567:	48 89 9c 24 40 05 00 	mov    %rbx,0x540(%rsp)
    856e:	00 
    856f:	48 89 bc 24 48 05 00 	mov    %rdi,0x548(%rsp)
    8576:	00 
    8577:	ff d0                	call   *%rax
    8579:	48 8b 9c 24 40 05 00 	mov    0x540(%rsp),%rbx
    8580:	00 
    8581:	4c 8b bc 24 38 05 00 	mov    0x538(%rsp),%r15
    8588:	00 
    8589:	4c 89 ff             	mov    %r15,%rdi
    858c:	48 81 c7 d8 02 00 00 	add    $0x2d8,%rdi
    8593:	48 8b b4 24 28 05 00 	mov    0x528(%rsp),%rsi
    859a:	00 
    859b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    85a2:	00 00 00 
			859d: R_X86_64_64	caml_initialize
    85a5:	48 89 b4 24 28 05 00 	mov    %rsi,0x528(%rsp)
    85ac:	00 
    85ad:	4c 89 bc 24 30 05 00 	mov    %r15,0x530(%rsp)
    85b4:	00 
    85b5:	48 89 9c 24 38 05 00 	mov    %rbx,0x538(%rsp)
    85bc:	00 
    85bd:	48 89 bc 24 40 05 00 	mov    %rdi,0x540(%rsp)
    85c4:	00 
    85c5:	ff d0                	call   *%rax
    85c7:	48 8b 9c 24 38 05 00 	mov    0x538(%rsp),%rbx
    85ce:	00 
    85cf:	4c 8b bc 24 30 05 00 	mov    0x530(%rsp),%r15
    85d6:	00 
    85d7:	4c 89 ff             	mov    %r15,%rdi
    85da:	48 81 c7 e0 02 00 00 	add    $0x2e0,%rdi
    85e1:	48 8b b4 24 20 05 00 	mov    0x520(%rsp),%rsi
    85e8:	00 
    85e9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    85f0:	00 00 00 
			85eb: R_X86_64_64	caml_initialize
    85f3:	48 89 b4 24 20 05 00 	mov    %rsi,0x520(%rsp)
    85fa:	00 
    85fb:	4c 89 bc 24 28 05 00 	mov    %r15,0x528(%rsp)
    8602:	00 
    8603:	48 89 9c 24 30 05 00 	mov    %rbx,0x530(%rsp)
    860a:	00 
    860b:	48 89 bc 24 38 05 00 	mov    %rdi,0x538(%rsp)
    8612:	00 
    8613:	ff d0                	call   *%rax
    8615:	48 8b 9c 24 30 05 00 	mov    0x530(%rsp),%rbx
    861c:	00 
    861d:	4c 8b bc 24 28 05 00 	mov    0x528(%rsp),%r15
    8624:	00 
    8625:	4c 89 ff             	mov    %r15,%rdi
    8628:	48 81 c7 e8 02 00 00 	add    $0x2e8,%rdi
    862f:	48 8b b4 24 18 05 00 	mov    0x518(%rsp),%rsi
    8636:	00 
    8637:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    863e:	00 00 00 
			8639: R_X86_64_64	caml_initialize
    8641:	48 89 b4 24 18 05 00 	mov    %rsi,0x518(%rsp)
    8648:	00 
    8649:	4c 89 bc 24 20 05 00 	mov    %r15,0x520(%rsp)
    8650:	00 
    8651:	48 89 9c 24 28 05 00 	mov    %rbx,0x528(%rsp)
    8658:	00 
    8659:	48 89 bc 24 30 05 00 	mov    %rdi,0x530(%rsp)
    8660:	00 
    8661:	ff d0                	call   *%rax
    8663:	48 8b 9c 24 28 05 00 	mov    0x528(%rsp),%rbx
    866a:	00 
    866b:	4c 8b bc 24 20 05 00 	mov    0x520(%rsp),%r15
    8672:	00 
    8673:	4c 89 ff             	mov    %r15,%rdi
    8676:	48 81 c7 f0 02 00 00 	add    $0x2f0,%rdi
    867d:	48 8b b4 24 10 05 00 	mov    0x510(%rsp),%rsi
    8684:	00 
    8685:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    868c:	00 00 00 
			8687: R_X86_64_64	caml_initialize
    868f:	48 89 b4 24 10 05 00 	mov    %rsi,0x510(%rsp)
    8696:	00 
    8697:	4c 89 bc 24 18 05 00 	mov    %r15,0x518(%rsp)
    869e:	00 
    869f:	48 89 9c 24 20 05 00 	mov    %rbx,0x520(%rsp)
    86a6:	00 
    86a7:	48 89 bc 24 28 05 00 	mov    %rdi,0x528(%rsp)
    86ae:	00 
    86af:	ff d0                	call   *%rax
    86b1:	48 8b 9c 24 20 05 00 	mov    0x520(%rsp),%rbx
    86b8:	00 
    86b9:	4c 8b bc 24 18 05 00 	mov    0x518(%rsp),%r15
    86c0:	00 
    86c1:	4c 89 ff             	mov    %r15,%rdi
    86c4:	48 81 c7 f8 02 00 00 	add    $0x2f8,%rdi
    86cb:	48 8b b4 24 08 05 00 	mov    0x508(%rsp),%rsi
    86d2:	00 
    86d3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    86da:	00 00 00 
			86d5: R_X86_64_64	caml_initialize
    86dd:	48 89 b4 24 08 05 00 	mov    %rsi,0x508(%rsp)
    86e4:	00 
    86e5:	4c 89 bc 24 10 05 00 	mov    %r15,0x510(%rsp)
    86ec:	00 
    86ed:	48 89 9c 24 18 05 00 	mov    %rbx,0x518(%rsp)
    86f4:	00 
    86f5:	48 89 bc 24 20 05 00 	mov    %rdi,0x520(%rsp)
    86fc:	00 
    86fd:	ff d0                	call   *%rax
    86ff:	48 8b 9c 24 18 05 00 	mov    0x518(%rsp),%rbx
    8706:	00 
    8707:	4c 8b bc 24 10 05 00 	mov    0x510(%rsp),%r15
    870e:	00 
    870f:	4c 89 ff             	mov    %r15,%rdi
    8712:	48 81 c7 00 03 00 00 	add    $0x300,%rdi
    8719:	48 8b b4 24 00 05 00 	mov    0x500(%rsp),%rsi
    8720:	00 
    8721:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8728:	00 00 00 
			8723: R_X86_64_64	caml_initialize
    872b:	48 89 b4 24 00 05 00 	mov    %rsi,0x500(%rsp)
    8732:	00 
    8733:	4c 89 bc 24 08 05 00 	mov    %r15,0x508(%rsp)
    873a:	00 
    873b:	48 89 9c 24 10 05 00 	mov    %rbx,0x510(%rsp)
    8742:	00 
    8743:	48 89 bc 24 18 05 00 	mov    %rdi,0x518(%rsp)
    874a:	00 
    874b:	ff d0                	call   *%rax
    874d:	48 8b 9c 24 10 05 00 	mov    0x510(%rsp),%rbx
    8754:	00 
    8755:	4c 8b bc 24 08 05 00 	mov    0x508(%rsp),%r15
    875c:	00 
    875d:	4c 89 ff             	mov    %r15,%rdi
    8760:	48 81 c7 08 03 00 00 	add    $0x308,%rdi
    8767:	48 8b b4 24 f8 04 00 	mov    0x4f8(%rsp),%rsi
    876e:	00 
    876f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8776:	00 00 00 
			8771: R_X86_64_64	caml_initialize
    8779:	48 89 b4 24 f8 04 00 	mov    %rsi,0x4f8(%rsp)
    8780:	00 
    8781:	4c 89 bc 24 00 05 00 	mov    %r15,0x500(%rsp)
    8788:	00 
    8789:	48 89 9c 24 08 05 00 	mov    %rbx,0x508(%rsp)
    8790:	00 
    8791:	48 89 bc 24 10 05 00 	mov    %rdi,0x510(%rsp)
    8798:	00 
    8799:	ff d0                	call   *%rax
    879b:	48 8b 9c 24 08 05 00 	mov    0x508(%rsp),%rbx
    87a2:	00 
    87a3:	4c 8b bc 24 00 05 00 	mov    0x500(%rsp),%r15
    87aa:	00 
    87ab:	4c 89 ff             	mov    %r15,%rdi
    87ae:	48 81 c7 10 03 00 00 	add    $0x310,%rdi
    87b5:	48 8b b4 24 f0 04 00 	mov    0x4f0(%rsp),%rsi
    87bc:	00 
    87bd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    87c4:	00 00 00 
			87bf: R_X86_64_64	caml_initialize
    87c7:	48 89 b4 24 f0 04 00 	mov    %rsi,0x4f0(%rsp)
    87ce:	00 
    87cf:	4c 89 bc 24 f8 04 00 	mov    %r15,0x4f8(%rsp)
    87d6:	00 
    87d7:	48 89 9c 24 00 05 00 	mov    %rbx,0x500(%rsp)
    87de:	00 
    87df:	48 89 bc 24 08 05 00 	mov    %rdi,0x508(%rsp)
    87e6:	00 
    87e7:	ff d0                	call   *%rax
    87e9:	48 8b 9c 24 00 05 00 	mov    0x500(%rsp),%rbx
    87f0:	00 
    87f1:	4c 8b bc 24 f8 04 00 	mov    0x4f8(%rsp),%r15
    87f8:	00 
    87f9:	4c 89 ff             	mov    %r15,%rdi
    87fc:	48 81 c7 18 03 00 00 	add    $0x318,%rdi
    8803:	48 8b b4 24 e8 04 00 	mov    0x4e8(%rsp),%rsi
    880a:	00 
    880b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8812:	00 00 00 
			880d: R_X86_64_64	caml_initialize
    8815:	48 89 b4 24 e8 04 00 	mov    %rsi,0x4e8(%rsp)
    881c:	00 
    881d:	4c 89 bc 24 f0 04 00 	mov    %r15,0x4f0(%rsp)
    8824:	00 
    8825:	48 89 9c 24 f8 04 00 	mov    %rbx,0x4f8(%rsp)
    882c:	00 
    882d:	48 89 bc 24 00 05 00 	mov    %rdi,0x500(%rsp)
    8834:	00 
    8835:	ff d0                	call   *%rax
    8837:	48 8b 9c 24 f8 04 00 	mov    0x4f8(%rsp),%rbx
    883e:	00 
    883f:	4c 8b bc 24 f0 04 00 	mov    0x4f0(%rsp),%r15
    8846:	00 
    8847:	4c 89 ff             	mov    %r15,%rdi
    884a:	48 81 c7 20 03 00 00 	add    $0x320,%rdi
    8851:	48 8b b4 24 e0 04 00 	mov    0x4e0(%rsp),%rsi
    8858:	00 
    8859:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8860:	00 00 00 
			885b: R_X86_64_64	caml_initialize
    8863:	48 89 b4 24 e0 04 00 	mov    %rsi,0x4e0(%rsp)
    886a:	00 
    886b:	4c 89 bc 24 e8 04 00 	mov    %r15,0x4e8(%rsp)
    8872:	00 
    8873:	48 89 9c 24 f0 04 00 	mov    %rbx,0x4f0(%rsp)
    887a:	00 
    887b:	48 89 bc 24 f8 04 00 	mov    %rdi,0x4f8(%rsp)
    8882:	00 
    8883:	ff d0                	call   *%rax
    8885:	48 8b 9c 24 f0 04 00 	mov    0x4f0(%rsp),%rbx
    888c:	00 
    888d:	4c 8b bc 24 e8 04 00 	mov    0x4e8(%rsp),%r15
    8894:	00 
    8895:	4c 89 ff             	mov    %r15,%rdi
    8898:	48 81 c7 28 03 00 00 	add    $0x328,%rdi
    889f:	48 8b b4 24 d8 04 00 	mov    0x4d8(%rsp),%rsi
    88a6:	00 
    88a7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    88ae:	00 00 00 
			88a9: R_X86_64_64	caml_initialize
    88b1:	48 89 b4 24 d8 04 00 	mov    %rsi,0x4d8(%rsp)
    88b8:	00 
    88b9:	4c 89 bc 24 e0 04 00 	mov    %r15,0x4e0(%rsp)
    88c0:	00 
    88c1:	48 89 9c 24 e8 04 00 	mov    %rbx,0x4e8(%rsp)
    88c8:	00 
    88c9:	48 89 bc 24 f0 04 00 	mov    %rdi,0x4f0(%rsp)
    88d0:	00 
    88d1:	ff d0                	call   *%rax
    88d3:	48 8b 9c 24 e8 04 00 	mov    0x4e8(%rsp),%rbx
    88da:	00 
    88db:	4c 8b bc 24 e0 04 00 	mov    0x4e0(%rsp),%r15
    88e2:	00 
    88e3:	4c 89 ff             	mov    %r15,%rdi
    88e6:	48 81 c7 30 03 00 00 	add    $0x330,%rdi
    88ed:	48 8b b4 24 d0 04 00 	mov    0x4d0(%rsp),%rsi
    88f4:	00 
    88f5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    88fc:	00 00 00 
			88f7: R_X86_64_64	caml_initialize
    88ff:	48 89 b4 24 d0 04 00 	mov    %rsi,0x4d0(%rsp)
    8906:	00 
    8907:	4c 89 bc 24 d8 04 00 	mov    %r15,0x4d8(%rsp)
    890e:	00 
    890f:	48 89 9c 24 e0 04 00 	mov    %rbx,0x4e0(%rsp)
    8916:	00 
    8917:	48 89 bc 24 e8 04 00 	mov    %rdi,0x4e8(%rsp)
    891e:	00 
    891f:	ff d0                	call   *%rax
    8921:	48 8b 9c 24 e0 04 00 	mov    0x4e0(%rsp),%rbx
    8928:	00 
    8929:	4c 8b bc 24 d8 04 00 	mov    0x4d8(%rsp),%r15
    8930:	00 
    8931:	4c 89 ff             	mov    %r15,%rdi
    8934:	48 81 c7 38 03 00 00 	add    $0x338,%rdi
    893b:	48 8b b4 24 c8 04 00 	mov    0x4c8(%rsp),%rsi
    8942:	00 
    8943:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    894a:	00 00 00 
			8945: R_X86_64_64	caml_initialize
    894d:	48 89 b4 24 c8 04 00 	mov    %rsi,0x4c8(%rsp)
    8954:	00 
    8955:	4c 89 bc 24 d0 04 00 	mov    %r15,0x4d0(%rsp)
    895c:	00 
    895d:	48 89 9c 24 d8 04 00 	mov    %rbx,0x4d8(%rsp)
    8964:	00 
    8965:	48 89 bc 24 e0 04 00 	mov    %rdi,0x4e0(%rsp)
    896c:	00 
    896d:	ff d0                	call   *%rax
    896f:	48 8b 9c 24 d8 04 00 	mov    0x4d8(%rsp),%rbx
    8976:	00 
    8977:	4c 8b bc 24 d0 04 00 	mov    0x4d0(%rsp),%r15
    897e:	00 
    897f:	4c 89 ff             	mov    %r15,%rdi
    8982:	48 81 c7 40 03 00 00 	add    $0x340,%rdi
    8989:	48 8b b4 24 c0 04 00 	mov    0x4c0(%rsp),%rsi
    8990:	00 
    8991:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8998:	00 00 00 
			8993: R_X86_64_64	caml_initialize
    899b:	48 89 b4 24 c0 04 00 	mov    %rsi,0x4c0(%rsp)
    89a2:	00 
    89a3:	4c 89 bc 24 c8 04 00 	mov    %r15,0x4c8(%rsp)
    89aa:	00 
    89ab:	48 89 9c 24 d0 04 00 	mov    %rbx,0x4d0(%rsp)
    89b2:	00 
    89b3:	48 89 bc 24 d8 04 00 	mov    %rdi,0x4d8(%rsp)
    89ba:	00 
    89bb:	ff d0                	call   *%rax
    89bd:	48 8b 9c 24 d0 04 00 	mov    0x4d0(%rsp),%rbx
    89c4:	00 
    89c5:	4c 8b bc 24 c8 04 00 	mov    0x4c8(%rsp),%r15
    89cc:	00 
    89cd:	4c 89 ff             	mov    %r15,%rdi
    89d0:	48 81 c7 48 03 00 00 	add    $0x348,%rdi
    89d7:	48 8b b4 24 b8 04 00 	mov    0x4b8(%rsp),%rsi
    89de:	00 
    89df:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    89e6:	00 00 00 
			89e1: R_X86_64_64	caml_initialize
    89e9:	48 89 b4 24 b8 04 00 	mov    %rsi,0x4b8(%rsp)
    89f0:	00 
    89f1:	4c 89 bc 24 c0 04 00 	mov    %r15,0x4c0(%rsp)
    89f8:	00 
    89f9:	48 89 9c 24 c8 04 00 	mov    %rbx,0x4c8(%rsp)
    8a00:	00 
    8a01:	48 89 bc 24 d0 04 00 	mov    %rdi,0x4d0(%rsp)
    8a08:	00 
    8a09:	ff d0                	call   *%rax
    8a0b:	48 8b 9c 24 c8 04 00 	mov    0x4c8(%rsp),%rbx
    8a12:	00 
    8a13:	4c 8b bc 24 c0 04 00 	mov    0x4c0(%rsp),%r15
    8a1a:	00 
    8a1b:	4c 89 ff             	mov    %r15,%rdi
    8a1e:	48 81 c7 50 03 00 00 	add    $0x350,%rdi
    8a25:	48 8b b4 24 b0 04 00 	mov    0x4b0(%rsp),%rsi
    8a2c:	00 
    8a2d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8a34:	00 00 00 
			8a2f: R_X86_64_64	caml_initialize
    8a37:	48 89 b4 24 b0 04 00 	mov    %rsi,0x4b0(%rsp)
    8a3e:	00 
    8a3f:	4c 89 bc 24 b8 04 00 	mov    %r15,0x4b8(%rsp)
    8a46:	00 
    8a47:	48 89 9c 24 c0 04 00 	mov    %rbx,0x4c0(%rsp)
    8a4e:	00 
    8a4f:	48 89 bc 24 c8 04 00 	mov    %rdi,0x4c8(%rsp)
    8a56:	00 
    8a57:	ff d0                	call   *%rax
    8a59:	48 8b 9c 24 c0 04 00 	mov    0x4c0(%rsp),%rbx
    8a60:	00 
    8a61:	4c 8b bc 24 b8 04 00 	mov    0x4b8(%rsp),%r15
    8a68:	00 
    8a69:	4c 89 ff             	mov    %r15,%rdi
    8a6c:	48 81 c7 58 03 00 00 	add    $0x358,%rdi
    8a73:	48 8b b4 24 a8 04 00 	mov    0x4a8(%rsp),%rsi
    8a7a:	00 
    8a7b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8a82:	00 00 00 
			8a7d: R_X86_64_64	caml_initialize
    8a85:	48 89 b4 24 a8 04 00 	mov    %rsi,0x4a8(%rsp)
    8a8c:	00 
    8a8d:	4c 89 bc 24 b0 04 00 	mov    %r15,0x4b0(%rsp)
    8a94:	00 
    8a95:	48 89 9c 24 b8 04 00 	mov    %rbx,0x4b8(%rsp)
    8a9c:	00 
    8a9d:	48 89 bc 24 c0 04 00 	mov    %rdi,0x4c0(%rsp)
    8aa4:	00 
    8aa5:	ff d0                	call   *%rax
    8aa7:	48 8b 9c 24 b8 04 00 	mov    0x4b8(%rsp),%rbx
    8aae:	00 
    8aaf:	4c 8b bc 24 b0 04 00 	mov    0x4b0(%rsp),%r15
    8ab6:	00 
    8ab7:	4c 89 ff             	mov    %r15,%rdi
    8aba:	48 81 c7 60 03 00 00 	add    $0x360,%rdi
    8ac1:	48 8b b4 24 a0 04 00 	mov    0x4a0(%rsp),%rsi
    8ac8:	00 
    8ac9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8ad0:	00 00 00 
			8acb: R_X86_64_64	caml_initialize
    8ad3:	48 89 b4 24 a0 04 00 	mov    %rsi,0x4a0(%rsp)
    8ada:	00 
    8adb:	4c 89 bc 24 a8 04 00 	mov    %r15,0x4a8(%rsp)
    8ae2:	00 
    8ae3:	48 89 9c 24 b0 04 00 	mov    %rbx,0x4b0(%rsp)
    8aea:	00 
    8aeb:	48 89 bc 24 b8 04 00 	mov    %rdi,0x4b8(%rsp)
    8af2:	00 
    8af3:	ff d0                	call   *%rax
    8af5:	48 8b 9c 24 b0 04 00 	mov    0x4b0(%rsp),%rbx
    8afc:	00 
    8afd:	4c 8b bc 24 a8 04 00 	mov    0x4a8(%rsp),%r15
    8b04:	00 
    8b05:	4c 89 ff             	mov    %r15,%rdi
    8b08:	48 81 c7 68 03 00 00 	add    $0x368,%rdi
    8b0f:	48 8b b4 24 98 04 00 	mov    0x498(%rsp),%rsi
    8b16:	00 
    8b17:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8b1e:	00 00 00 
			8b19: R_X86_64_64	caml_initialize
    8b21:	48 89 b4 24 98 04 00 	mov    %rsi,0x498(%rsp)
    8b28:	00 
    8b29:	4c 89 bc 24 a0 04 00 	mov    %r15,0x4a0(%rsp)
    8b30:	00 
    8b31:	48 89 9c 24 a8 04 00 	mov    %rbx,0x4a8(%rsp)
    8b38:	00 
    8b39:	48 89 bc 24 b0 04 00 	mov    %rdi,0x4b0(%rsp)
    8b40:	00 
    8b41:	ff d0                	call   *%rax
    8b43:	48 8b 9c 24 a8 04 00 	mov    0x4a8(%rsp),%rbx
    8b4a:	00 
    8b4b:	4c 8b bc 24 a0 04 00 	mov    0x4a0(%rsp),%r15
    8b52:	00 
    8b53:	4c 89 ff             	mov    %r15,%rdi
    8b56:	48 81 c7 70 03 00 00 	add    $0x370,%rdi
    8b5d:	48 8b b4 24 90 04 00 	mov    0x490(%rsp),%rsi
    8b64:	00 
    8b65:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8b6c:	00 00 00 
			8b67: R_X86_64_64	caml_initialize
    8b6f:	48 89 b4 24 90 04 00 	mov    %rsi,0x490(%rsp)
    8b76:	00 
    8b77:	4c 89 bc 24 98 04 00 	mov    %r15,0x498(%rsp)
    8b7e:	00 
    8b7f:	48 89 9c 24 a0 04 00 	mov    %rbx,0x4a0(%rsp)
    8b86:	00 
    8b87:	48 89 bc 24 a8 04 00 	mov    %rdi,0x4a8(%rsp)
    8b8e:	00 
    8b8f:	ff d0                	call   *%rax
    8b91:	48 8b 9c 24 a0 04 00 	mov    0x4a0(%rsp),%rbx
    8b98:	00 
    8b99:	4c 8b bc 24 98 04 00 	mov    0x498(%rsp),%r15
    8ba0:	00 
    8ba1:	4c 89 ff             	mov    %r15,%rdi
    8ba4:	48 81 c7 78 03 00 00 	add    $0x378,%rdi
    8bab:	48 8b b4 24 88 04 00 	mov    0x488(%rsp),%rsi
    8bb2:	00 
    8bb3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8bba:	00 00 00 
			8bb5: R_X86_64_64	caml_initialize
    8bbd:	48 89 b4 24 88 04 00 	mov    %rsi,0x488(%rsp)
    8bc4:	00 
    8bc5:	4c 89 bc 24 90 04 00 	mov    %r15,0x490(%rsp)
    8bcc:	00 
    8bcd:	48 89 9c 24 98 04 00 	mov    %rbx,0x498(%rsp)
    8bd4:	00 
    8bd5:	48 89 bc 24 a0 04 00 	mov    %rdi,0x4a0(%rsp)
    8bdc:	00 
    8bdd:	ff d0                	call   *%rax
    8bdf:	48 8b 9c 24 98 04 00 	mov    0x498(%rsp),%rbx
    8be6:	00 
    8be7:	4c 8b bc 24 90 04 00 	mov    0x490(%rsp),%r15
    8bee:	00 
    8bef:	4c 89 ff             	mov    %r15,%rdi
    8bf2:	48 81 c7 80 03 00 00 	add    $0x380,%rdi
    8bf9:	48 8b b4 24 80 04 00 	mov    0x480(%rsp),%rsi
    8c00:	00 
    8c01:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8c08:	00 00 00 
			8c03: R_X86_64_64	caml_initialize
    8c0b:	48 89 b4 24 80 04 00 	mov    %rsi,0x480(%rsp)
    8c12:	00 
    8c13:	4c 89 bc 24 88 04 00 	mov    %r15,0x488(%rsp)
    8c1a:	00 
    8c1b:	48 89 9c 24 90 04 00 	mov    %rbx,0x490(%rsp)
    8c22:	00 
    8c23:	48 89 bc 24 98 04 00 	mov    %rdi,0x498(%rsp)
    8c2a:	00 
    8c2b:	ff d0                	call   *%rax
    8c2d:	48 8b 9c 24 90 04 00 	mov    0x490(%rsp),%rbx
    8c34:	00 
    8c35:	4c 8b bc 24 88 04 00 	mov    0x488(%rsp),%r15
    8c3c:	00 
    8c3d:	4c 89 ff             	mov    %r15,%rdi
    8c40:	48 81 c7 88 03 00 00 	add    $0x388,%rdi
    8c47:	48 8b b4 24 78 04 00 	mov    0x478(%rsp),%rsi
    8c4e:	00 
    8c4f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8c56:	00 00 00 
			8c51: R_X86_64_64	caml_initialize
    8c59:	48 89 b4 24 78 04 00 	mov    %rsi,0x478(%rsp)
    8c60:	00 
    8c61:	4c 89 bc 24 80 04 00 	mov    %r15,0x480(%rsp)
    8c68:	00 
    8c69:	48 89 9c 24 88 04 00 	mov    %rbx,0x488(%rsp)
    8c70:	00 
    8c71:	48 89 bc 24 90 04 00 	mov    %rdi,0x490(%rsp)
    8c78:	00 
    8c79:	ff d0                	call   *%rax
    8c7b:	48 8b 9c 24 88 04 00 	mov    0x488(%rsp),%rbx
    8c82:	00 
    8c83:	4c 8b bc 24 80 04 00 	mov    0x480(%rsp),%r15
    8c8a:	00 
    8c8b:	4c 89 ff             	mov    %r15,%rdi
    8c8e:	48 81 c7 90 03 00 00 	add    $0x390,%rdi
    8c95:	48 8b b4 24 70 04 00 	mov    0x470(%rsp),%rsi
    8c9c:	00 
    8c9d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8ca4:	00 00 00 
			8c9f: R_X86_64_64	caml_initialize
    8ca7:	48 89 b4 24 70 04 00 	mov    %rsi,0x470(%rsp)
    8cae:	00 
    8caf:	4c 89 bc 24 78 04 00 	mov    %r15,0x478(%rsp)
    8cb6:	00 
    8cb7:	48 89 9c 24 80 04 00 	mov    %rbx,0x480(%rsp)
    8cbe:	00 
    8cbf:	48 89 bc 24 88 04 00 	mov    %rdi,0x488(%rsp)
    8cc6:	00 
    8cc7:	ff d0                	call   *%rax
    8cc9:	48 8b 9c 24 80 04 00 	mov    0x480(%rsp),%rbx
    8cd0:	00 
    8cd1:	4c 8b bc 24 78 04 00 	mov    0x478(%rsp),%r15
    8cd8:	00 
    8cd9:	4c 89 ff             	mov    %r15,%rdi
    8cdc:	48 81 c7 98 03 00 00 	add    $0x398,%rdi
    8ce3:	48 8b b4 24 68 04 00 	mov    0x468(%rsp),%rsi
    8cea:	00 
    8ceb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8cf2:	00 00 00 
			8ced: R_X86_64_64	caml_initialize
    8cf5:	48 89 b4 24 68 04 00 	mov    %rsi,0x468(%rsp)
    8cfc:	00 
    8cfd:	4c 89 bc 24 70 04 00 	mov    %r15,0x470(%rsp)
    8d04:	00 
    8d05:	48 89 9c 24 78 04 00 	mov    %rbx,0x478(%rsp)
    8d0c:	00 
    8d0d:	48 89 bc 24 80 04 00 	mov    %rdi,0x480(%rsp)
    8d14:	00 
    8d15:	ff d0                	call   *%rax
    8d17:	48 8b 9c 24 78 04 00 	mov    0x478(%rsp),%rbx
    8d1e:	00 
    8d1f:	4c 8b bc 24 70 04 00 	mov    0x470(%rsp),%r15
    8d26:	00 
    8d27:	4c 89 ff             	mov    %r15,%rdi
    8d2a:	48 81 c7 a0 03 00 00 	add    $0x3a0,%rdi
    8d31:	48 8b b4 24 60 04 00 	mov    0x460(%rsp),%rsi
    8d38:	00 
    8d39:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8d40:	00 00 00 
			8d3b: R_X86_64_64	caml_initialize
    8d43:	48 89 b4 24 60 04 00 	mov    %rsi,0x460(%rsp)
    8d4a:	00 
    8d4b:	4c 89 bc 24 68 04 00 	mov    %r15,0x468(%rsp)
    8d52:	00 
    8d53:	48 89 9c 24 70 04 00 	mov    %rbx,0x470(%rsp)
    8d5a:	00 
    8d5b:	48 89 bc 24 78 04 00 	mov    %rdi,0x478(%rsp)
    8d62:	00 
    8d63:	ff d0                	call   *%rax
    8d65:	48 8b 9c 24 70 04 00 	mov    0x470(%rsp),%rbx
    8d6c:	00 
    8d6d:	4c 8b bc 24 68 04 00 	mov    0x468(%rsp),%r15
    8d74:	00 
    8d75:	4c 89 ff             	mov    %r15,%rdi
    8d78:	48 81 c7 a8 03 00 00 	add    $0x3a8,%rdi
    8d7f:	48 8b b4 24 58 04 00 	mov    0x458(%rsp),%rsi
    8d86:	00 
    8d87:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8d8e:	00 00 00 
			8d89: R_X86_64_64	caml_initialize
    8d91:	48 89 b4 24 58 04 00 	mov    %rsi,0x458(%rsp)
    8d98:	00 
    8d99:	4c 89 bc 24 60 04 00 	mov    %r15,0x460(%rsp)
    8da0:	00 
    8da1:	48 89 9c 24 68 04 00 	mov    %rbx,0x468(%rsp)
    8da8:	00 
    8da9:	48 89 bc 24 70 04 00 	mov    %rdi,0x470(%rsp)
    8db0:	00 
    8db1:	ff d0                	call   *%rax
    8db3:	48 8b 9c 24 68 04 00 	mov    0x468(%rsp),%rbx
    8dba:	00 
    8dbb:	4c 8b bc 24 60 04 00 	mov    0x460(%rsp),%r15
    8dc2:	00 
    8dc3:	4c 89 ff             	mov    %r15,%rdi
    8dc6:	48 81 c7 b0 03 00 00 	add    $0x3b0,%rdi
    8dcd:	48 8b b4 24 50 04 00 	mov    0x450(%rsp),%rsi
    8dd4:	00 
    8dd5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8ddc:	00 00 00 
			8dd7: R_X86_64_64	caml_initialize
    8ddf:	48 89 b4 24 50 04 00 	mov    %rsi,0x450(%rsp)
    8de6:	00 
    8de7:	4c 89 bc 24 58 04 00 	mov    %r15,0x458(%rsp)
    8dee:	00 
    8def:	48 89 9c 24 60 04 00 	mov    %rbx,0x460(%rsp)
    8df6:	00 
    8df7:	48 89 bc 24 68 04 00 	mov    %rdi,0x468(%rsp)
    8dfe:	00 
    8dff:	ff d0                	call   *%rax
    8e01:	48 8b 9c 24 60 04 00 	mov    0x460(%rsp),%rbx
    8e08:	00 
    8e09:	4c 8b bc 24 58 04 00 	mov    0x458(%rsp),%r15
    8e10:	00 
    8e11:	4c 89 ff             	mov    %r15,%rdi
    8e14:	48 81 c7 b8 03 00 00 	add    $0x3b8,%rdi
    8e1b:	48 8b b4 24 48 04 00 	mov    0x448(%rsp),%rsi
    8e22:	00 
    8e23:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8e2a:	00 00 00 
			8e25: R_X86_64_64	caml_initialize
    8e2d:	48 89 b4 24 48 04 00 	mov    %rsi,0x448(%rsp)
    8e34:	00 
    8e35:	4c 89 bc 24 50 04 00 	mov    %r15,0x450(%rsp)
    8e3c:	00 
    8e3d:	48 89 9c 24 58 04 00 	mov    %rbx,0x458(%rsp)
    8e44:	00 
    8e45:	48 89 bc 24 60 04 00 	mov    %rdi,0x460(%rsp)
    8e4c:	00 
    8e4d:	ff d0                	call   *%rax
    8e4f:	48 8b 9c 24 58 04 00 	mov    0x458(%rsp),%rbx
    8e56:	00 
    8e57:	4c 8b bc 24 50 04 00 	mov    0x450(%rsp),%r15
    8e5e:	00 
    8e5f:	4c 89 ff             	mov    %r15,%rdi
    8e62:	48 81 c7 c0 03 00 00 	add    $0x3c0,%rdi
    8e69:	48 8b b4 24 40 04 00 	mov    0x440(%rsp),%rsi
    8e70:	00 
    8e71:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8e78:	00 00 00 
			8e73: R_X86_64_64	caml_initialize
    8e7b:	48 89 b4 24 40 04 00 	mov    %rsi,0x440(%rsp)
    8e82:	00 
    8e83:	4c 89 bc 24 48 04 00 	mov    %r15,0x448(%rsp)
    8e8a:	00 
    8e8b:	48 89 9c 24 50 04 00 	mov    %rbx,0x450(%rsp)
    8e92:	00 
    8e93:	48 89 bc 24 58 04 00 	mov    %rdi,0x458(%rsp)
    8e9a:	00 
    8e9b:	ff d0                	call   *%rax
    8e9d:	48 8b 9c 24 50 04 00 	mov    0x450(%rsp),%rbx
    8ea4:	00 
    8ea5:	4c 8b bc 24 48 04 00 	mov    0x448(%rsp),%r15
    8eac:	00 
    8ead:	4c 89 ff             	mov    %r15,%rdi
    8eb0:	48 81 c7 c8 03 00 00 	add    $0x3c8,%rdi
    8eb7:	48 8b b4 24 38 04 00 	mov    0x438(%rsp),%rsi
    8ebe:	00 
    8ebf:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8ec6:	00 00 00 
			8ec1: R_X86_64_64	caml_initialize
    8ec9:	48 89 b4 24 38 04 00 	mov    %rsi,0x438(%rsp)
    8ed0:	00 
    8ed1:	4c 89 bc 24 40 04 00 	mov    %r15,0x440(%rsp)
    8ed8:	00 
    8ed9:	48 89 9c 24 48 04 00 	mov    %rbx,0x448(%rsp)
    8ee0:	00 
    8ee1:	48 89 bc 24 50 04 00 	mov    %rdi,0x450(%rsp)
    8ee8:	00 
    8ee9:	ff d0                	call   *%rax
    8eeb:	48 8b 9c 24 48 04 00 	mov    0x448(%rsp),%rbx
    8ef2:	00 
    8ef3:	4c 8b bc 24 40 04 00 	mov    0x440(%rsp),%r15
    8efa:	00 
    8efb:	4c 89 ff             	mov    %r15,%rdi
    8efe:	48 81 c7 d0 03 00 00 	add    $0x3d0,%rdi
    8f05:	48 8b b4 24 30 04 00 	mov    0x430(%rsp),%rsi
    8f0c:	00 
    8f0d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8f14:	00 00 00 
			8f0f: R_X86_64_64	caml_initialize
    8f17:	48 89 b4 24 30 04 00 	mov    %rsi,0x430(%rsp)
    8f1e:	00 
    8f1f:	4c 89 bc 24 38 04 00 	mov    %r15,0x438(%rsp)
    8f26:	00 
    8f27:	48 89 9c 24 40 04 00 	mov    %rbx,0x440(%rsp)
    8f2e:	00 
    8f2f:	48 89 bc 24 48 04 00 	mov    %rdi,0x448(%rsp)
    8f36:	00 
    8f37:	ff d0                	call   *%rax
    8f39:	48 8b 9c 24 40 04 00 	mov    0x440(%rsp),%rbx
    8f40:	00 
    8f41:	4c 8b bc 24 38 04 00 	mov    0x438(%rsp),%r15
    8f48:	00 
    8f49:	4c 89 ff             	mov    %r15,%rdi
    8f4c:	48 81 c7 d8 03 00 00 	add    $0x3d8,%rdi
    8f53:	48 8b b4 24 28 04 00 	mov    0x428(%rsp),%rsi
    8f5a:	00 
    8f5b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8f62:	00 00 00 
			8f5d: R_X86_64_64	caml_initialize
    8f65:	48 89 b4 24 28 04 00 	mov    %rsi,0x428(%rsp)
    8f6c:	00 
    8f6d:	4c 89 bc 24 30 04 00 	mov    %r15,0x430(%rsp)
    8f74:	00 
    8f75:	48 89 9c 24 38 04 00 	mov    %rbx,0x438(%rsp)
    8f7c:	00 
    8f7d:	48 89 bc 24 40 04 00 	mov    %rdi,0x440(%rsp)
    8f84:	00 
    8f85:	ff d0                	call   *%rax
    8f87:	48 8b 9c 24 38 04 00 	mov    0x438(%rsp),%rbx
    8f8e:	00 
    8f8f:	4c 8b bc 24 30 04 00 	mov    0x430(%rsp),%r15
    8f96:	00 
    8f97:	4c 89 ff             	mov    %r15,%rdi
    8f9a:	48 81 c7 e0 03 00 00 	add    $0x3e0,%rdi
    8fa1:	48 8b b4 24 20 04 00 	mov    0x420(%rsp),%rsi
    8fa8:	00 
    8fa9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8fb0:	00 00 00 
			8fab: R_X86_64_64	caml_initialize
    8fb3:	48 89 b4 24 20 04 00 	mov    %rsi,0x420(%rsp)
    8fba:	00 
    8fbb:	4c 89 bc 24 28 04 00 	mov    %r15,0x428(%rsp)
    8fc2:	00 
    8fc3:	48 89 9c 24 30 04 00 	mov    %rbx,0x430(%rsp)
    8fca:	00 
    8fcb:	48 89 bc 24 38 04 00 	mov    %rdi,0x438(%rsp)
    8fd2:	00 
    8fd3:	ff d0                	call   *%rax
    8fd5:	48 8b 9c 24 30 04 00 	mov    0x430(%rsp),%rbx
    8fdc:	00 
    8fdd:	4c 8b bc 24 28 04 00 	mov    0x428(%rsp),%r15
    8fe4:	00 
    8fe5:	4c 89 ff             	mov    %r15,%rdi
    8fe8:	48 81 c7 e8 03 00 00 	add    $0x3e8,%rdi
    8fef:	48 8b b4 24 18 04 00 	mov    0x418(%rsp),%rsi
    8ff6:	00 
    8ff7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    8ffe:	00 00 00 
			8ff9: R_X86_64_64	caml_initialize
    9001:	48 89 b4 24 18 04 00 	mov    %rsi,0x418(%rsp)
    9008:	00 
    9009:	4c 89 bc 24 20 04 00 	mov    %r15,0x420(%rsp)
    9010:	00 
    9011:	48 89 9c 24 28 04 00 	mov    %rbx,0x428(%rsp)
    9018:	00 
    9019:	48 89 bc 24 30 04 00 	mov    %rdi,0x430(%rsp)
    9020:	00 
    9021:	ff d0                	call   *%rax
    9023:	48 8b 9c 24 28 04 00 	mov    0x428(%rsp),%rbx
    902a:	00 
    902b:	4c 8b bc 24 20 04 00 	mov    0x420(%rsp),%r15
    9032:	00 
    9033:	4c 89 ff             	mov    %r15,%rdi
    9036:	48 81 c7 f0 03 00 00 	add    $0x3f0,%rdi
    903d:	48 8b b4 24 10 04 00 	mov    0x410(%rsp),%rsi
    9044:	00 
    9045:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    904c:	00 00 00 
			9047: R_X86_64_64	caml_initialize
    904f:	48 89 b4 24 10 04 00 	mov    %rsi,0x410(%rsp)
    9056:	00 
    9057:	4c 89 bc 24 18 04 00 	mov    %r15,0x418(%rsp)
    905e:	00 
    905f:	48 89 9c 24 20 04 00 	mov    %rbx,0x420(%rsp)
    9066:	00 
    9067:	48 89 bc 24 28 04 00 	mov    %rdi,0x428(%rsp)
    906e:	00 
    906f:	ff d0                	call   *%rax
    9071:	48 8b 9c 24 20 04 00 	mov    0x420(%rsp),%rbx
    9078:	00 
    9079:	4c 8b bc 24 18 04 00 	mov    0x418(%rsp),%r15
    9080:	00 
    9081:	4c 89 ff             	mov    %r15,%rdi
    9084:	48 81 c7 f8 03 00 00 	add    $0x3f8,%rdi
    908b:	48 8b b4 24 08 04 00 	mov    0x408(%rsp),%rsi
    9092:	00 
    9093:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    909a:	00 00 00 
			9095: R_X86_64_64	caml_initialize
    909d:	48 89 b4 24 08 04 00 	mov    %rsi,0x408(%rsp)
    90a4:	00 
    90a5:	4c 89 bc 24 10 04 00 	mov    %r15,0x410(%rsp)
    90ac:	00 
    90ad:	48 89 9c 24 18 04 00 	mov    %rbx,0x418(%rsp)
    90b4:	00 
    90b5:	48 89 bc 24 20 04 00 	mov    %rdi,0x420(%rsp)
    90bc:	00 
    90bd:	ff d0                	call   *%rax
    90bf:	48 8b 9c 24 18 04 00 	mov    0x418(%rsp),%rbx
    90c6:	00 
    90c7:	4c 8b bc 24 10 04 00 	mov    0x410(%rsp),%r15
    90ce:	00 
    90cf:	4c 89 ff             	mov    %r15,%rdi
    90d2:	48 81 c7 00 04 00 00 	add    $0x400,%rdi
    90d9:	48 8b b4 24 00 04 00 	mov    0x400(%rsp),%rsi
    90e0:	00 
    90e1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    90e8:	00 00 00 
			90e3: R_X86_64_64	caml_initialize
    90eb:	48 89 b4 24 00 04 00 	mov    %rsi,0x400(%rsp)
    90f2:	00 
    90f3:	4c 89 bc 24 08 04 00 	mov    %r15,0x408(%rsp)
    90fa:	00 
    90fb:	48 89 9c 24 10 04 00 	mov    %rbx,0x410(%rsp)
    9102:	00 
    9103:	48 89 bc 24 18 04 00 	mov    %rdi,0x418(%rsp)
    910a:	00 
    910b:	ff d0                	call   *%rax
    910d:	48 8b 9c 24 10 04 00 	mov    0x410(%rsp),%rbx
    9114:	00 
    9115:	4c 8b bc 24 08 04 00 	mov    0x408(%rsp),%r15
    911c:	00 
    911d:	4c 89 ff             	mov    %r15,%rdi
    9120:	48 81 c7 08 04 00 00 	add    $0x408,%rdi
    9127:	48 8b b4 24 f8 03 00 	mov    0x3f8(%rsp),%rsi
    912e:	00 
    912f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9136:	00 00 00 
			9131: R_X86_64_64	caml_initialize
    9139:	48 89 b4 24 f8 03 00 	mov    %rsi,0x3f8(%rsp)
    9140:	00 
    9141:	4c 89 bc 24 00 04 00 	mov    %r15,0x400(%rsp)
    9148:	00 
    9149:	48 89 9c 24 08 04 00 	mov    %rbx,0x408(%rsp)
    9150:	00 
    9151:	48 89 bc 24 10 04 00 	mov    %rdi,0x410(%rsp)
    9158:	00 
    9159:	ff d0                	call   *%rax
    915b:	48 8b 9c 24 08 04 00 	mov    0x408(%rsp),%rbx
    9162:	00 
    9163:	4c 8b bc 24 00 04 00 	mov    0x400(%rsp),%r15
    916a:	00 
    916b:	4c 89 ff             	mov    %r15,%rdi
    916e:	48 81 c7 10 04 00 00 	add    $0x410,%rdi
    9175:	48 8b b4 24 f0 03 00 	mov    0x3f0(%rsp),%rsi
    917c:	00 
    917d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9184:	00 00 00 
			917f: R_X86_64_64	caml_initialize
    9187:	48 89 b4 24 f0 03 00 	mov    %rsi,0x3f0(%rsp)
    918e:	00 
    918f:	4c 89 bc 24 f8 03 00 	mov    %r15,0x3f8(%rsp)
    9196:	00 
    9197:	48 89 9c 24 00 04 00 	mov    %rbx,0x400(%rsp)
    919e:	00 
    919f:	48 89 bc 24 08 04 00 	mov    %rdi,0x408(%rsp)
    91a6:	00 
    91a7:	ff d0                	call   *%rax
    91a9:	48 8b 9c 24 00 04 00 	mov    0x400(%rsp),%rbx
    91b0:	00 
    91b1:	4c 8b bc 24 f8 03 00 	mov    0x3f8(%rsp),%r15
    91b8:	00 
    91b9:	4c 89 ff             	mov    %r15,%rdi
    91bc:	48 81 c7 18 04 00 00 	add    $0x418,%rdi
    91c3:	48 8b b4 24 e8 03 00 	mov    0x3e8(%rsp),%rsi
    91ca:	00 
    91cb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    91d2:	00 00 00 
			91cd: R_X86_64_64	caml_initialize
    91d5:	48 89 b4 24 e8 03 00 	mov    %rsi,0x3e8(%rsp)
    91dc:	00 
    91dd:	4c 89 bc 24 f0 03 00 	mov    %r15,0x3f0(%rsp)
    91e4:	00 
    91e5:	48 89 9c 24 f8 03 00 	mov    %rbx,0x3f8(%rsp)
    91ec:	00 
    91ed:	48 89 bc 24 00 04 00 	mov    %rdi,0x400(%rsp)
    91f4:	00 
    91f5:	ff d0                	call   *%rax
    91f7:	48 8b 9c 24 f8 03 00 	mov    0x3f8(%rsp),%rbx
    91fe:	00 
    91ff:	4c 8b bc 24 f0 03 00 	mov    0x3f0(%rsp),%r15
    9206:	00 
    9207:	4c 89 ff             	mov    %r15,%rdi
    920a:	48 81 c7 20 04 00 00 	add    $0x420,%rdi
    9211:	48 8b b4 24 e0 03 00 	mov    0x3e0(%rsp),%rsi
    9218:	00 
    9219:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9220:	00 00 00 
			921b: R_X86_64_64	caml_initialize
    9223:	48 89 b4 24 e0 03 00 	mov    %rsi,0x3e0(%rsp)
    922a:	00 
    922b:	4c 89 bc 24 e8 03 00 	mov    %r15,0x3e8(%rsp)
    9232:	00 
    9233:	48 89 9c 24 f0 03 00 	mov    %rbx,0x3f0(%rsp)
    923a:	00 
    923b:	48 89 bc 24 f8 03 00 	mov    %rdi,0x3f8(%rsp)
    9242:	00 
    9243:	ff d0                	call   *%rax
    9245:	48 8b 9c 24 f0 03 00 	mov    0x3f0(%rsp),%rbx
    924c:	00 
    924d:	4c 8b bc 24 e8 03 00 	mov    0x3e8(%rsp),%r15
    9254:	00 
    9255:	4c 89 ff             	mov    %r15,%rdi
    9258:	48 81 c7 28 04 00 00 	add    $0x428,%rdi
    925f:	48 8b b4 24 d8 03 00 	mov    0x3d8(%rsp),%rsi
    9266:	00 
    9267:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    926e:	00 00 00 
			9269: R_X86_64_64	caml_initialize
    9271:	48 89 b4 24 d8 03 00 	mov    %rsi,0x3d8(%rsp)
    9278:	00 
    9279:	4c 89 bc 24 e0 03 00 	mov    %r15,0x3e0(%rsp)
    9280:	00 
    9281:	48 89 9c 24 e8 03 00 	mov    %rbx,0x3e8(%rsp)
    9288:	00 
    9289:	48 89 bc 24 f0 03 00 	mov    %rdi,0x3f0(%rsp)
    9290:	00 
    9291:	ff d0                	call   *%rax
    9293:	48 8b 9c 24 e8 03 00 	mov    0x3e8(%rsp),%rbx
    929a:	00 
    929b:	4c 8b bc 24 e0 03 00 	mov    0x3e0(%rsp),%r15
    92a2:	00 
    92a3:	4c 89 ff             	mov    %r15,%rdi
    92a6:	48 81 c7 30 04 00 00 	add    $0x430,%rdi
    92ad:	48 8b b4 24 d0 03 00 	mov    0x3d0(%rsp),%rsi
    92b4:	00 
    92b5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    92bc:	00 00 00 
			92b7: R_X86_64_64	caml_initialize
    92bf:	48 89 b4 24 d0 03 00 	mov    %rsi,0x3d0(%rsp)
    92c6:	00 
    92c7:	4c 89 bc 24 d8 03 00 	mov    %r15,0x3d8(%rsp)
    92ce:	00 
    92cf:	48 89 9c 24 e0 03 00 	mov    %rbx,0x3e0(%rsp)
    92d6:	00 
    92d7:	48 89 bc 24 e8 03 00 	mov    %rdi,0x3e8(%rsp)
    92de:	00 
    92df:	ff d0                	call   *%rax
    92e1:	48 8b 9c 24 e0 03 00 	mov    0x3e0(%rsp),%rbx
    92e8:	00 
    92e9:	4c 8b bc 24 d8 03 00 	mov    0x3d8(%rsp),%r15
    92f0:	00 
    92f1:	4c 89 ff             	mov    %r15,%rdi
    92f4:	48 81 c7 38 04 00 00 	add    $0x438,%rdi
    92fb:	48 8b b4 24 c8 03 00 	mov    0x3c8(%rsp),%rsi
    9302:	00 
    9303:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    930a:	00 00 00 
			9305: R_X86_64_64	caml_initialize
    930d:	48 89 b4 24 c8 03 00 	mov    %rsi,0x3c8(%rsp)
    9314:	00 
    9315:	4c 89 bc 24 d0 03 00 	mov    %r15,0x3d0(%rsp)
    931c:	00 
    931d:	48 89 9c 24 d8 03 00 	mov    %rbx,0x3d8(%rsp)
    9324:	00 
    9325:	48 89 bc 24 e0 03 00 	mov    %rdi,0x3e0(%rsp)
    932c:	00 
    932d:	ff d0                	call   *%rax
    932f:	48 8b 9c 24 d8 03 00 	mov    0x3d8(%rsp),%rbx
    9336:	00 
    9337:	4c 8b bc 24 d0 03 00 	mov    0x3d0(%rsp),%r15
    933e:	00 
    933f:	4c 89 ff             	mov    %r15,%rdi
    9342:	48 81 c7 40 04 00 00 	add    $0x440,%rdi
    9349:	48 8b b4 24 c0 03 00 	mov    0x3c0(%rsp),%rsi
    9350:	00 
    9351:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9358:	00 00 00 
			9353: R_X86_64_64	caml_initialize
    935b:	48 89 b4 24 c0 03 00 	mov    %rsi,0x3c0(%rsp)
    9362:	00 
    9363:	4c 89 bc 24 c8 03 00 	mov    %r15,0x3c8(%rsp)
    936a:	00 
    936b:	48 89 9c 24 d0 03 00 	mov    %rbx,0x3d0(%rsp)
    9372:	00 
    9373:	48 89 bc 24 d8 03 00 	mov    %rdi,0x3d8(%rsp)
    937a:	00 
    937b:	ff d0                	call   *%rax
    937d:	48 8b 9c 24 d0 03 00 	mov    0x3d0(%rsp),%rbx
    9384:	00 
    9385:	4c 8b bc 24 c8 03 00 	mov    0x3c8(%rsp),%r15
    938c:	00 
    938d:	4c 89 ff             	mov    %r15,%rdi
    9390:	48 81 c7 48 04 00 00 	add    $0x448,%rdi
    9397:	48 8b b4 24 b8 03 00 	mov    0x3b8(%rsp),%rsi
    939e:	00 
    939f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    93a6:	00 00 00 
			93a1: R_X86_64_64	caml_initialize
    93a9:	48 89 b4 24 b8 03 00 	mov    %rsi,0x3b8(%rsp)
    93b0:	00 
    93b1:	4c 89 bc 24 c0 03 00 	mov    %r15,0x3c0(%rsp)
    93b8:	00 
    93b9:	48 89 9c 24 c8 03 00 	mov    %rbx,0x3c8(%rsp)
    93c0:	00 
    93c1:	48 89 bc 24 d0 03 00 	mov    %rdi,0x3d0(%rsp)
    93c8:	00 
    93c9:	ff d0                	call   *%rax
    93cb:	48 8b 9c 24 c8 03 00 	mov    0x3c8(%rsp),%rbx
    93d2:	00 
    93d3:	4c 8b bc 24 c0 03 00 	mov    0x3c0(%rsp),%r15
    93da:	00 
    93db:	4c 89 ff             	mov    %r15,%rdi
    93de:	48 81 c7 50 04 00 00 	add    $0x450,%rdi
    93e5:	48 8b b4 24 b0 03 00 	mov    0x3b0(%rsp),%rsi
    93ec:	00 
    93ed:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    93f4:	00 00 00 
			93ef: R_X86_64_64	caml_initialize
    93f7:	48 89 b4 24 b0 03 00 	mov    %rsi,0x3b0(%rsp)
    93fe:	00 
    93ff:	4c 89 bc 24 b8 03 00 	mov    %r15,0x3b8(%rsp)
    9406:	00 
    9407:	48 89 9c 24 c0 03 00 	mov    %rbx,0x3c0(%rsp)
    940e:	00 
    940f:	48 89 bc 24 c8 03 00 	mov    %rdi,0x3c8(%rsp)
    9416:	00 
    9417:	ff d0                	call   *%rax
    9419:	48 8b 9c 24 c0 03 00 	mov    0x3c0(%rsp),%rbx
    9420:	00 
    9421:	4c 8b bc 24 b8 03 00 	mov    0x3b8(%rsp),%r15
    9428:	00 
    9429:	4c 89 ff             	mov    %r15,%rdi
    942c:	48 81 c7 58 04 00 00 	add    $0x458,%rdi
    9433:	48 8b b4 24 a8 03 00 	mov    0x3a8(%rsp),%rsi
    943a:	00 
    943b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9442:	00 00 00 
			943d: R_X86_64_64	caml_initialize
    9445:	48 89 b4 24 a8 03 00 	mov    %rsi,0x3a8(%rsp)
    944c:	00 
    944d:	4c 89 bc 24 b0 03 00 	mov    %r15,0x3b0(%rsp)
    9454:	00 
    9455:	48 89 9c 24 b8 03 00 	mov    %rbx,0x3b8(%rsp)
    945c:	00 
    945d:	48 89 bc 24 c0 03 00 	mov    %rdi,0x3c0(%rsp)
    9464:	00 
    9465:	ff d0                	call   *%rax
    9467:	48 8b 9c 24 b8 03 00 	mov    0x3b8(%rsp),%rbx
    946e:	00 
    946f:	4c 8b bc 24 b0 03 00 	mov    0x3b0(%rsp),%r15
    9476:	00 
    9477:	4c 89 ff             	mov    %r15,%rdi
    947a:	48 81 c7 60 04 00 00 	add    $0x460,%rdi
    9481:	48 8b b4 24 a0 03 00 	mov    0x3a0(%rsp),%rsi
    9488:	00 
    9489:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9490:	00 00 00 
			948b: R_X86_64_64	caml_initialize
    9493:	48 89 b4 24 a0 03 00 	mov    %rsi,0x3a0(%rsp)
    949a:	00 
    949b:	4c 89 bc 24 a8 03 00 	mov    %r15,0x3a8(%rsp)
    94a2:	00 
    94a3:	48 89 9c 24 b0 03 00 	mov    %rbx,0x3b0(%rsp)
    94aa:	00 
    94ab:	48 89 bc 24 b8 03 00 	mov    %rdi,0x3b8(%rsp)
    94b2:	00 
    94b3:	ff d0                	call   *%rax
    94b5:	48 8b 9c 24 b0 03 00 	mov    0x3b0(%rsp),%rbx
    94bc:	00 
    94bd:	4c 8b bc 24 a8 03 00 	mov    0x3a8(%rsp),%r15
    94c4:	00 
    94c5:	4c 89 ff             	mov    %r15,%rdi
    94c8:	48 81 c7 68 04 00 00 	add    $0x468,%rdi
    94cf:	48 8b b4 24 98 03 00 	mov    0x398(%rsp),%rsi
    94d6:	00 
    94d7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    94de:	00 00 00 
			94d9: R_X86_64_64	caml_initialize
    94e1:	48 89 b4 24 98 03 00 	mov    %rsi,0x398(%rsp)
    94e8:	00 
    94e9:	4c 89 bc 24 a0 03 00 	mov    %r15,0x3a0(%rsp)
    94f0:	00 
    94f1:	48 89 9c 24 a8 03 00 	mov    %rbx,0x3a8(%rsp)
    94f8:	00 
    94f9:	48 89 bc 24 b0 03 00 	mov    %rdi,0x3b0(%rsp)
    9500:	00 
    9501:	ff d0                	call   *%rax
    9503:	48 8b 9c 24 a8 03 00 	mov    0x3a8(%rsp),%rbx
    950a:	00 
    950b:	4c 8b bc 24 a0 03 00 	mov    0x3a0(%rsp),%r15
    9512:	00 
    9513:	4c 89 ff             	mov    %r15,%rdi
    9516:	48 81 c7 70 04 00 00 	add    $0x470,%rdi
    951d:	48 8b b4 24 90 03 00 	mov    0x390(%rsp),%rsi
    9524:	00 
    9525:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    952c:	00 00 00 
			9527: R_X86_64_64	caml_initialize
    952f:	48 89 b4 24 90 03 00 	mov    %rsi,0x390(%rsp)
    9536:	00 
    9537:	4c 89 bc 24 98 03 00 	mov    %r15,0x398(%rsp)
    953e:	00 
    953f:	48 89 9c 24 a0 03 00 	mov    %rbx,0x3a0(%rsp)
    9546:	00 
    9547:	48 89 bc 24 a8 03 00 	mov    %rdi,0x3a8(%rsp)
    954e:	00 
    954f:	ff d0                	call   *%rax
    9551:	48 8b 9c 24 a0 03 00 	mov    0x3a0(%rsp),%rbx
    9558:	00 
    9559:	4c 8b bc 24 98 03 00 	mov    0x398(%rsp),%r15
    9560:	00 
    9561:	4c 89 ff             	mov    %r15,%rdi
    9564:	48 81 c7 78 04 00 00 	add    $0x478,%rdi
    956b:	48 8b b4 24 88 03 00 	mov    0x388(%rsp),%rsi
    9572:	00 
    9573:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    957a:	00 00 00 
			9575: R_X86_64_64	caml_initialize
    957d:	48 89 b4 24 88 03 00 	mov    %rsi,0x388(%rsp)
    9584:	00 
    9585:	4c 89 bc 24 90 03 00 	mov    %r15,0x390(%rsp)
    958c:	00 
    958d:	48 89 9c 24 98 03 00 	mov    %rbx,0x398(%rsp)
    9594:	00 
    9595:	48 89 bc 24 a0 03 00 	mov    %rdi,0x3a0(%rsp)
    959c:	00 
    959d:	ff d0                	call   *%rax
    959f:	48 8b 9c 24 98 03 00 	mov    0x398(%rsp),%rbx
    95a6:	00 
    95a7:	4c 8b bc 24 90 03 00 	mov    0x390(%rsp),%r15
    95ae:	00 
    95af:	4c 89 ff             	mov    %r15,%rdi
    95b2:	48 81 c7 80 04 00 00 	add    $0x480,%rdi
    95b9:	48 8b b4 24 80 03 00 	mov    0x380(%rsp),%rsi
    95c0:	00 
    95c1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    95c8:	00 00 00 
			95c3: R_X86_64_64	caml_initialize
    95cb:	48 89 b4 24 80 03 00 	mov    %rsi,0x380(%rsp)
    95d2:	00 
    95d3:	4c 89 bc 24 88 03 00 	mov    %r15,0x388(%rsp)
    95da:	00 
    95db:	48 89 9c 24 90 03 00 	mov    %rbx,0x390(%rsp)
    95e2:	00 
    95e3:	48 89 bc 24 98 03 00 	mov    %rdi,0x398(%rsp)
    95ea:	00 
    95eb:	ff d0                	call   *%rax
    95ed:	48 8b 9c 24 90 03 00 	mov    0x390(%rsp),%rbx
    95f4:	00 
    95f5:	4c 8b bc 24 88 03 00 	mov    0x388(%rsp),%r15
    95fc:	00 
    95fd:	4c 89 ff             	mov    %r15,%rdi
    9600:	48 81 c7 88 04 00 00 	add    $0x488,%rdi
    9607:	48 8b b4 24 78 03 00 	mov    0x378(%rsp),%rsi
    960e:	00 
    960f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9616:	00 00 00 
			9611: R_X86_64_64	caml_initialize
    9619:	48 89 b4 24 78 03 00 	mov    %rsi,0x378(%rsp)
    9620:	00 
    9621:	4c 89 bc 24 80 03 00 	mov    %r15,0x380(%rsp)
    9628:	00 
    9629:	48 89 9c 24 88 03 00 	mov    %rbx,0x388(%rsp)
    9630:	00 
    9631:	48 89 bc 24 90 03 00 	mov    %rdi,0x390(%rsp)
    9638:	00 
    9639:	ff d0                	call   *%rax
    963b:	48 8b 9c 24 88 03 00 	mov    0x388(%rsp),%rbx
    9642:	00 
    9643:	4c 8b bc 24 80 03 00 	mov    0x380(%rsp),%r15
    964a:	00 
    964b:	4c 89 ff             	mov    %r15,%rdi
    964e:	48 81 c7 90 04 00 00 	add    $0x490,%rdi
    9655:	48 8b b4 24 70 03 00 	mov    0x370(%rsp),%rsi
    965c:	00 
    965d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9664:	00 00 00 
			965f: R_X86_64_64	caml_initialize
    9667:	48 89 b4 24 70 03 00 	mov    %rsi,0x370(%rsp)
    966e:	00 
    966f:	4c 89 bc 24 78 03 00 	mov    %r15,0x378(%rsp)
    9676:	00 
    9677:	48 89 9c 24 80 03 00 	mov    %rbx,0x380(%rsp)
    967e:	00 
    967f:	48 89 bc 24 88 03 00 	mov    %rdi,0x388(%rsp)
    9686:	00 
    9687:	ff d0                	call   *%rax
    9689:	48 8b 9c 24 80 03 00 	mov    0x380(%rsp),%rbx
    9690:	00 
    9691:	4c 8b bc 24 78 03 00 	mov    0x378(%rsp),%r15
    9698:	00 
    9699:	4c 89 ff             	mov    %r15,%rdi
    969c:	48 81 c7 98 04 00 00 	add    $0x498,%rdi
    96a3:	48 8b b4 24 68 03 00 	mov    0x368(%rsp),%rsi
    96aa:	00 
    96ab:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    96b2:	00 00 00 
			96ad: R_X86_64_64	caml_initialize
    96b5:	48 89 b4 24 68 03 00 	mov    %rsi,0x368(%rsp)
    96bc:	00 
    96bd:	4c 89 bc 24 70 03 00 	mov    %r15,0x370(%rsp)
    96c4:	00 
    96c5:	48 89 9c 24 78 03 00 	mov    %rbx,0x378(%rsp)
    96cc:	00 
    96cd:	48 89 bc 24 80 03 00 	mov    %rdi,0x380(%rsp)
    96d4:	00 
    96d5:	ff d0                	call   *%rax
    96d7:	48 8b 9c 24 78 03 00 	mov    0x378(%rsp),%rbx
    96de:	00 
    96df:	4c 8b bc 24 70 03 00 	mov    0x370(%rsp),%r15
    96e6:	00 
    96e7:	4c 89 ff             	mov    %r15,%rdi
    96ea:	48 81 c7 a0 04 00 00 	add    $0x4a0,%rdi
    96f1:	48 8b b4 24 60 03 00 	mov    0x360(%rsp),%rsi
    96f8:	00 
    96f9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9700:	00 00 00 
			96fb: R_X86_64_64	caml_initialize
    9703:	48 89 b4 24 60 03 00 	mov    %rsi,0x360(%rsp)
    970a:	00 
    970b:	4c 89 bc 24 68 03 00 	mov    %r15,0x368(%rsp)
    9712:	00 
    9713:	48 89 9c 24 70 03 00 	mov    %rbx,0x370(%rsp)
    971a:	00 
    971b:	48 89 bc 24 78 03 00 	mov    %rdi,0x378(%rsp)
    9722:	00 
    9723:	ff d0                	call   *%rax
    9725:	48 8b 9c 24 70 03 00 	mov    0x370(%rsp),%rbx
    972c:	00 
    972d:	4c 8b bc 24 68 03 00 	mov    0x368(%rsp),%r15
    9734:	00 
    9735:	4c 89 ff             	mov    %r15,%rdi
    9738:	48 81 c7 a8 04 00 00 	add    $0x4a8,%rdi
    973f:	48 8b b4 24 58 03 00 	mov    0x358(%rsp),%rsi
    9746:	00 
    9747:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    974e:	00 00 00 
			9749: R_X86_64_64	caml_initialize
    9751:	48 89 b4 24 58 03 00 	mov    %rsi,0x358(%rsp)
    9758:	00 
    9759:	4c 89 bc 24 60 03 00 	mov    %r15,0x360(%rsp)
    9760:	00 
    9761:	48 89 9c 24 68 03 00 	mov    %rbx,0x368(%rsp)
    9768:	00 
    9769:	48 89 bc 24 70 03 00 	mov    %rdi,0x370(%rsp)
    9770:	00 
    9771:	ff d0                	call   *%rax
    9773:	48 8b 9c 24 68 03 00 	mov    0x368(%rsp),%rbx
    977a:	00 
    977b:	4c 8b bc 24 60 03 00 	mov    0x360(%rsp),%r15
    9782:	00 
    9783:	4c 89 ff             	mov    %r15,%rdi
    9786:	48 81 c7 b0 04 00 00 	add    $0x4b0,%rdi
    978d:	48 8b b4 24 50 03 00 	mov    0x350(%rsp),%rsi
    9794:	00 
    9795:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    979c:	00 00 00 
			9797: R_X86_64_64	caml_initialize
    979f:	48 89 b4 24 50 03 00 	mov    %rsi,0x350(%rsp)
    97a6:	00 
    97a7:	4c 89 bc 24 58 03 00 	mov    %r15,0x358(%rsp)
    97ae:	00 
    97af:	48 89 9c 24 60 03 00 	mov    %rbx,0x360(%rsp)
    97b6:	00 
    97b7:	48 89 bc 24 68 03 00 	mov    %rdi,0x368(%rsp)
    97be:	00 
    97bf:	ff d0                	call   *%rax
    97c1:	48 8b 9c 24 60 03 00 	mov    0x360(%rsp),%rbx
    97c8:	00 
    97c9:	4c 8b bc 24 58 03 00 	mov    0x358(%rsp),%r15
    97d0:	00 
    97d1:	4c 89 ff             	mov    %r15,%rdi
    97d4:	48 81 c7 b8 04 00 00 	add    $0x4b8,%rdi
    97db:	48 8b b4 24 48 03 00 	mov    0x348(%rsp),%rsi
    97e2:	00 
    97e3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    97ea:	00 00 00 
			97e5: R_X86_64_64	caml_initialize
    97ed:	48 89 b4 24 48 03 00 	mov    %rsi,0x348(%rsp)
    97f4:	00 
    97f5:	4c 89 bc 24 50 03 00 	mov    %r15,0x350(%rsp)
    97fc:	00 
    97fd:	48 89 9c 24 58 03 00 	mov    %rbx,0x358(%rsp)
    9804:	00 
    9805:	48 89 bc 24 60 03 00 	mov    %rdi,0x360(%rsp)
    980c:	00 
    980d:	ff d0                	call   *%rax
    980f:	48 8b 9c 24 58 03 00 	mov    0x358(%rsp),%rbx
    9816:	00 
    9817:	4c 8b bc 24 50 03 00 	mov    0x350(%rsp),%r15
    981e:	00 
    981f:	4c 89 ff             	mov    %r15,%rdi
    9822:	48 81 c7 c0 04 00 00 	add    $0x4c0,%rdi
    9829:	48 8b b4 24 40 03 00 	mov    0x340(%rsp),%rsi
    9830:	00 
    9831:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9838:	00 00 00 
			9833: R_X86_64_64	caml_initialize
    983b:	48 89 b4 24 40 03 00 	mov    %rsi,0x340(%rsp)
    9842:	00 
    9843:	4c 89 bc 24 48 03 00 	mov    %r15,0x348(%rsp)
    984a:	00 
    984b:	48 89 9c 24 50 03 00 	mov    %rbx,0x350(%rsp)
    9852:	00 
    9853:	48 89 bc 24 58 03 00 	mov    %rdi,0x358(%rsp)
    985a:	00 
    985b:	ff d0                	call   *%rax
    985d:	48 8b 9c 24 50 03 00 	mov    0x350(%rsp),%rbx
    9864:	00 
    9865:	4c 8b bc 24 48 03 00 	mov    0x348(%rsp),%r15
    986c:	00 
    986d:	4c 89 ff             	mov    %r15,%rdi
    9870:	48 81 c7 c8 04 00 00 	add    $0x4c8,%rdi
    9877:	48 8b b4 24 38 03 00 	mov    0x338(%rsp),%rsi
    987e:	00 
    987f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9886:	00 00 00 
			9881: R_X86_64_64	caml_initialize
    9889:	48 89 b4 24 38 03 00 	mov    %rsi,0x338(%rsp)
    9890:	00 
    9891:	4c 89 bc 24 40 03 00 	mov    %r15,0x340(%rsp)
    9898:	00 
    9899:	48 89 9c 24 48 03 00 	mov    %rbx,0x348(%rsp)
    98a0:	00 
    98a1:	48 89 bc 24 50 03 00 	mov    %rdi,0x350(%rsp)
    98a8:	00 
    98a9:	ff d0                	call   *%rax
    98ab:	48 8b 9c 24 48 03 00 	mov    0x348(%rsp),%rbx
    98b2:	00 
    98b3:	4c 8b bc 24 40 03 00 	mov    0x340(%rsp),%r15
    98ba:	00 
    98bb:	4c 89 ff             	mov    %r15,%rdi
    98be:	48 81 c7 d0 04 00 00 	add    $0x4d0,%rdi
    98c5:	48 8b b4 24 30 03 00 	mov    0x330(%rsp),%rsi
    98cc:	00 
    98cd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    98d4:	00 00 00 
			98cf: R_X86_64_64	caml_initialize
    98d7:	48 89 b4 24 30 03 00 	mov    %rsi,0x330(%rsp)
    98de:	00 
    98df:	4c 89 bc 24 38 03 00 	mov    %r15,0x338(%rsp)
    98e6:	00 
    98e7:	48 89 9c 24 40 03 00 	mov    %rbx,0x340(%rsp)
    98ee:	00 
    98ef:	48 89 bc 24 48 03 00 	mov    %rdi,0x348(%rsp)
    98f6:	00 
    98f7:	ff d0                	call   *%rax
    98f9:	48 8b 9c 24 40 03 00 	mov    0x340(%rsp),%rbx
    9900:	00 
    9901:	4c 8b bc 24 38 03 00 	mov    0x338(%rsp),%r15
    9908:	00 
    9909:	4c 89 ff             	mov    %r15,%rdi
    990c:	48 81 c7 d8 04 00 00 	add    $0x4d8,%rdi
    9913:	48 8b b4 24 28 03 00 	mov    0x328(%rsp),%rsi
    991a:	00 
    991b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9922:	00 00 00 
			991d: R_X86_64_64	caml_initialize
    9925:	48 89 b4 24 28 03 00 	mov    %rsi,0x328(%rsp)
    992c:	00 
    992d:	4c 89 bc 24 30 03 00 	mov    %r15,0x330(%rsp)
    9934:	00 
    9935:	48 89 9c 24 38 03 00 	mov    %rbx,0x338(%rsp)
    993c:	00 
    993d:	48 89 bc 24 40 03 00 	mov    %rdi,0x340(%rsp)
    9944:	00 
    9945:	ff d0                	call   *%rax
    9947:	48 8b 9c 24 38 03 00 	mov    0x338(%rsp),%rbx
    994e:	00 
    994f:	4c 8b bc 24 30 03 00 	mov    0x330(%rsp),%r15
    9956:	00 
    9957:	4c 89 ff             	mov    %r15,%rdi
    995a:	48 81 c7 e0 04 00 00 	add    $0x4e0,%rdi
    9961:	48 8b b4 24 20 03 00 	mov    0x320(%rsp),%rsi
    9968:	00 
    9969:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9970:	00 00 00 
			996b: R_X86_64_64	caml_initialize
    9973:	48 89 b4 24 20 03 00 	mov    %rsi,0x320(%rsp)
    997a:	00 
    997b:	4c 89 bc 24 28 03 00 	mov    %r15,0x328(%rsp)
    9982:	00 
    9983:	48 89 9c 24 30 03 00 	mov    %rbx,0x330(%rsp)
    998a:	00 
    998b:	48 89 bc 24 38 03 00 	mov    %rdi,0x338(%rsp)
    9992:	00 
    9993:	ff d0                	call   *%rax
    9995:	48 8b 9c 24 30 03 00 	mov    0x330(%rsp),%rbx
    999c:	00 
    999d:	4c 8b bc 24 28 03 00 	mov    0x328(%rsp),%r15
    99a4:	00 
    99a5:	4c 89 ff             	mov    %r15,%rdi
    99a8:	48 81 c7 e8 04 00 00 	add    $0x4e8,%rdi
    99af:	48 8b b4 24 18 03 00 	mov    0x318(%rsp),%rsi
    99b6:	00 
    99b7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    99be:	00 00 00 
			99b9: R_X86_64_64	caml_initialize
    99c1:	48 89 b4 24 18 03 00 	mov    %rsi,0x318(%rsp)
    99c8:	00 
    99c9:	4c 89 bc 24 20 03 00 	mov    %r15,0x320(%rsp)
    99d0:	00 
    99d1:	48 89 9c 24 28 03 00 	mov    %rbx,0x328(%rsp)
    99d8:	00 
    99d9:	48 89 bc 24 30 03 00 	mov    %rdi,0x330(%rsp)
    99e0:	00 
    99e1:	ff d0                	call   *%rax
    99e3:	48 8b 9c 24 28 03 00 	mov    0x328(%rsp),%rbx
    99ea:	00 
    99eb:	4c 8b bc 24 20 03 00 	mov    0x320(%rsp),%r15
    99f2:	00 
    99f3:	4c 89 ff             	mov    %r15,%rdi
    99f6:	48 81 c7 f0 04 00 00 	add    $0x4f0,%rdi
    99fd:	48 8b b4 24 10 03 00 	mov    0x310(%rsp),%rsi
    9a04:	00 
    9a05:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9a0c:	00 00 00 
			9a07: R_X86_64_64	caml_initialize
    9a0f:	48 89 b4 24 10 03 00 	mov    %rsi,0x310(%rsp)
    9a16:	00 
    9a17:	4c 89 bc 24 18 03 00 	mov    %r15,0x318(%rsp)
    9a1e:	00 
    9a1f:	48 89 9c 24 20 03 00 	mov    %rbx,0x320(%rsp)
    9a26:	00 
    9a27:	48 89 bc 24 28 03 00 	mov    %rdi,0x328(%rsp)
    9a2e:	00 
    9a2f:	ff d0                	call   *%rax
    9a31:	48 8b 9c 24 20 03 00 	mov    0x320(%rsp),%rbx
    9a38:	00 
    9a39:	4c 8b bc 24 18 03 00 	mov    0x318(%rsp),%r15
    9a40:	00 
    9a41:	4c 89 ff             	mov    %r15,%rdi
    9a44:	48 81 c7 f8 04 00 00 	add    $0x4f8,%rdi
    9a4b:	48 8b b4 24 08 03 00 	mov    0x308(%rsp),%rsi
    9a52:	00 
    9a53:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9a5a:	00 00 00 
			9a55: R_X86_64_64	caml_initialize
    9a5d:	48 89 b4 24 08 03 00 	mov    %rsi,0x308(%rsp)
    9a64:	00 
    9a65:	4c 89 bc 24 10 03 00 	mov    %r15,0x310(%rsp)
    9a6c:	00 
    9a6d:	48 89 9c 24 18 03 00 	mov    %rbx,0x318(%rsp)
    9a74:	00 
    9a75:	48 89 bc 24 20 03 00 	mov    %rdi,0x320(%rsp)
    9a7c:	00 
    9a7d:	ff d0                	call   *%rax
    9a7f:	48 8b 9c 24 18 03 00 	mov    0x318(%rsp),%rbx
    9a86:	00 
    9a87:	4c 8b bc 24 10 03 00 	mov    0x310(%rsp),%r15
    9a8e:	00 
    9a8f:	4c 89 ff             	mov    %r15,%rdi
    9a92:	48 81 c7 00 05 00 00 	add    $0x500,%rdi
    9a99:	48 8b b4 24 00 03 00 	mov    0x300(%rsp),%rsi
    9aa0:	00 
    9aa1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9aa8:	00 00 00 
			9aa3: R_X86_64_64	caml_initialize
    9aab:	48 89 b4 24 00 03 00 	mov    %rsi,0x300(%rsp)
    9ab2:	00 
    9ab3:	4c 89 bc 24 08 03 00 	mov    %r15,0x308(%rsp)
    9aba:	00 
    9abb:	48 89 9c 24 10 03 00 	mov    %rbx,0x310(%rsp)
    9ac2:	00 
    9ac3:	48 89 bc 24 18 03 00 	mov    %rdi,0x318(%rsp)
    9aca:	00 
    9acb:	ff d0                	call   *%rax
    9acd:	48 8b 9c 24 10 03 00 	mov    0x310(%rsp),%rbx
    9ad4:	00 
    9ad5:	4c 8b bc 24 08 03 00 	mov    0x308(%rsp),%r15
    9adc:	00 
    9add:	4c 89 ff             	mov    %r15,%rdi
    9ae0:	48 81 c7 08 05 00 00 	add    $0x508,%rdi
    9ae7:	48 8b b4 24 f8 02 00 	mov    0x2f8(%rsp),%rsi
    9aee:	00 
    9aef:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9af6:	00 00 00 
			9af1: R_X86_64_64	caml_initialize
    9af9:	48 89 b4 24 f8 02 00 	mov    %rsi,0x2f8(%rsp)
    9b00:	00 
    9b01:	4c 89 bc 24 00 03 00 	mov    %r15,0x300(%rsp)
    9b08:	00 
    9b09:	48 89 9c 24 08 03 00 	mov    %rbx,0x308(%rsp)
    9b10:	00 
    9b11:	48 89 bc 24 10 03 00 	mov    %rdi,0x310(%rsp)
    9b18:	00 
    9b19:	ff d0                	call   *%rax
    9b1b:	48 8b 9c 24 08 03 00 	mov    0x308(%rsp),%rbx
    9b22:	00 
    9b23:	4c 8b bc 24 00 03 00 	mov    0x300(%rsp),%r15
    9b2a:	00 
    9b2b:	4c 89 ff             	mov    %r15,%rdi
    9b2e:	48 81 c7 10 05 00 00 	add    $0x510,%rdi
    9b35:	48 8b b4 24 f0 02 00 	mov    0x2f0(%rsp),%rsi
    9b3c:	00 
    9b3d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9b44:	00 00 00 
			9b3f: R_X86_64_64	caml_initialize
    9b47:	48 89 b4 24 f0 02 00 	mov    %rsi,0x2f0(%rsp)
    9b4e:	00 
    9b4f:	4c 89 bc 24 f8 02 00 	mov    %r15,0x2f8(%rsp)
    9b56:	00 
    9b57:	48 89 9c 24 00 03 00 	mov    %rbx,0x300(%rsp)
    9b5e:	00 
    9b5f:	48 89 bc 24 08 03 00 	mov    %rdi,0x308(%rsp)
    9b66:	00 
    9b67:	ff d0                	call   *%rax
    9b69:	48 8b 9c 24 00 03 00 	mov    0x300(%rsp),%rbx
    9b70:	00 
    9b71:	4c 8b bc 24 f8 02 00 	mov    0x2f8(%rsp),%r15
    9b78:	00 
    9b79:	4c 89 ff             	mov    %r15,%rdi
    9b7c:	48 81 c7 18 05 00 00 	add    $0x518,%rdi
    9b83:	48 8b b4 24 e8 02 00 	mov    0x2e8(%rsp),%rsi
    9b8a:	00 
    9b8b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9b92:	00 00 00 
			9b8d: R_X86_64_64	caml_initialize
    9b95:	48 89 b4 24 e8 02 00 	mov    %rsi,0x2e8(%rsp)
    9b9c:	00 
    9b9d:	4c 89 bc 24 f0 02 00 	mov    %r15,0x2f0(%rsp)
    9ba4:	00 
    9ba5:	48 89 9c 24 f8 02 00 	mov    %rbx,0x2f8(%rsp)
    9bac:	00 
    9bad:	48 89 bc 24 00 03 00 	mov    %rdi,0x300(%rsp)
    9bb4:	00 
    9bb5:	ff d0                	call   *%rax
    9bb7:	48 8b 9c 24 f8 02 00 	mov    0x2f8(%rsp),%rbx
    9bbe:	00 
    9bbf:	4c 8b bc 24 f0 02 00 	mov    0x2f0(%rsp),%r15
    9bc6:	00 
    9bc7:	4c 89 ff             	mov    %r15,%rdi
    9bca:	48 81 c7 20 05 00 00 	add    $0x520,%rdi
    9bd1:	48 8b b4 24 e0 02 00 	mov    0x2e0(%rsp),%rsi
    9bd8:	00 
    9bd9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9be0:	00 00 00 
			9bdb: R_X86_64_64	caml_initialize
    9be3:	48 89 b4 24 e0 02 00 	mov    %rsi,0x2e0(%rsp)
    9bea:	00 
    9beb:	4c 89 bc 24 e8 02 00 	mov    %r15,0x2e8(%rsp)
    9bf2:	00 
    9bf3:	48 89 9c 24 f0 02 00 	mov    %rbx,0x2f0(%rsp)
    9bfa:	00 
    9bfb:	48 89 bc 24 f8 02 00 	mov    %rdi,0x2f8(%rsp)
    9c02:	00 
    9c03:	ff d0                	call   *%rax
    9c05:	48 8b 9c 24 f0 02 00 	mov    0x2f0(%rsp),%rbx
    9c0c:	00 
    9c0d:	4c 8b bc 24 e8 02 00 	mov    0x2e8(%rsp),%r15
    9c14:	00 
    9c15:	4c 89 ff             	mov    %r15,%rdi
    9c18:	48 81 c7 28 05 00 00 	add    $0x528,%rdi
    9c1f:	48 8b b4 24 d8 02 00 	mov    0x2d8(%rsp),%rsi
    9c26:	00 
    9c27:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9c2e:	00 00 00 
			9c29: R_X86_64_64	caml_initialize
    9c31:	48 89 b4 24 d8 02 00 	mov    %rsi,0x2d8(%rsp)
    9c38:	00 
    9c39:	4c 89 bc 24 e0 02 00 	mov    %r15,0x2e0(%rsp)
    9c40:	00 
    9c41:	48 89 9c 24 e8 02 00 	mov    %rbx,0x2e8(%rsp)
    9c48:	00 
    9c49:	48 89 bc 24 f0 02 00 	mov    %rdi,0x2f0(%rsp)
    9c50:	00 
    9c51:	ff d0                	call   *%rax
    9c53:	48 8b 9c 24 e8 02 00 	mov    0x2e8(%rsp),%rbx
    9c5a:	00 
    9c5b:	4c 8b bc 24 e0 02 00 	mov    0x2e0(%rsp),%r15
    9c62:	00 
    9c63:	4c 89 ff             	mov    %r15,%rdi
    9c66:	48 81 c7 30 05 00 00 	add    $0x530,%rdi
    9c6d:	48 8b b4 24 d0 02 00 	mov    0x2d0(%rsp),%rsi
    9c74:	00 
    9c75:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9c7c:	00 00 00 
			9c77: R_X86_64_64	caml_initialize
    9c7f:	48 89 b4 24 d0 02 00 	mov    %rsi,0x2d0(%rsp)
    9c86:	00 
    9c87:	4c 89 bc 24 d8 02 00 	mov    %r15,0x2d8(%rsp)
    9c8e:	00 
    9c8f:	48 89 9c 24 e0 02 00 	mov    %rbx,0x2e0(%rsp)
    9c96:	00 
    9c97:	48 89 bc 24 e8 02 00 	mov    %rdi,0x2e8(%rsp)
    9c9e:	00 
    9c9f:	ff d0                	call   *%rax
    9ca1:	48 8b 9c 24 e0 02 00 	mov    0x2e0(%rsp),%rbx
    9ca8:	00 
    9ca9:	4c 8b bc 24 d8 02 00 	mov    0x2d8(%rsp),%r15
    9cb0:	00 
    9cb1:	4c 89 ff             	mov    %r15,%rdi
    9cb4:	48 81 c7 38 05 00 00 	add    $0x538,%rdi
    9cbb:	48 8b b4 24 c8 02 00 	mov    0x2c8(%rsp),%rsi
    9cc2:	00 
    9cc3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9cca:	00 00 00 
			9cc5: R_X86_64_64	caml_initialize
    9ccd:	48 89 b4 24 c8 02 00 	mov    %rsi,0x2c8(%rsp)
    9cd4:	00 
    9cd5:	4c 89 bc 24 d0 02 00 	mov    %r15,0x2d0(%rsp)
    9cdc:	00 
    9cdd:	48 89 9c 24 d8 02 00 	mov    %rbx,0x2d8(%rsp)
    9ce4:	00 
    9ce5:	48 89 bc 24 e0 02 00 	mov    %rdi,0x2e0(%rsp)
    9cec:	00 
    9ced:	ff d0                	call   *%rax
    9cef:	48 8b 9c 24 d8 02 00 	mov    0x2d8(%rsp),%rbx
    9cf6:	00 
    9cf7:	4c 8b bc 24 d0 02 00 	mov    0x2d0(%rsp),%r15
    9cfe:	00 
    9cff:	4c 89 ff             	mov    %r15,%rdi
    9d02:	48 81 c7 40 05 00 00 	add    $0x540,%rdi
    9d09:	48 8b b4 24 c0 02 00 	mov    0x2c0(%rsp),%rsi
    9d10:	00 
    9d11:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9d18:	00 00 00 
			9d13: R_X86_64_64	caml_initialize
    9d1b:	48 89 b4 24 c0 02 00 	mov    %rsi,0x2c0(%rsp)
    9d22:	00 
    9d23:	4c 89 bc 24 c8 02 00 	mov    %r15,0x2c8(%rsp)
    9d2a:	00 
    9d2b:	48 89 9c 24 d0 02 00 	mov    %rbx,0x2d0(%rsp)
    9d32:	00 
    9d33:	48 89 bc 24 d8 02 00 	mov    %rdi,0x2d8(%rsp)
    9d3a:	00 
    9d3b:	ff d0                	call   *%rax
    9d3d:	48 8b 9c 24 d0 02 00 	mov    0x2d0(%rsp),%rbx
    9d44:	00 
    9d45:	4c 8b bc 24 c8 02 00 	mov    0x2c8(%rsp),%r15
    9d4c:	00 
    9d4d:	4c 89 ff             	mov    %r15,%rdi
    9d50:	48 81 c7 48 05 00 00 	add    $0x548,%rdi
    9d57:	48 8b b4 24 b8 02 00 	mov    0x2b8(%rsp),%rsi
    9d5e:	00 
    9d5f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9d66:	00 00 00 
			9d61: R_X86_64_64	caml_initialize
    9d69:	48 89 b4 24 b8 02 00 	mov    %rsi,0x2b8(%rsp)
    9d70:	00 
    9d71:	4c 89 bc 24 c0 02 00 	mov    %r15,0x2c0(%rsp)
    9d78:	00 
    9d79:	48 89 9c 24 c8 02 00 	mov    %rbx,0x2c8(%rsp)
    9d80:	00 
    9d81:	48 89 bc 24 d0 02 00 	mov    %rdi,0x2d0(%rsp)
    9d88:	00 
    9d89:	ff d0                	call   *%rax
    9d8b:	48 8b 9c 24 c8 02 00 	mov    0x2c8(%rsp),%rbx
    9d92:	00 
    9d93:	4c 8b bc 24 c0 02 00 	mov    0x2c0(%rsp),%r15
    9d9a:	00 
    9d9b:	4c 89 ff             	mov    %r15,%rdi
    9d9e:	48 81 c7 50 05 00 00 	add    $0x550,%rdi
    9da5:	48 8b b4 24 b0 02 00 	mov    0x2b0(%rsp),%rsi
    9dac:	00 
    9dad:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9db4:	00 00 00 
			9daf: R_X86_64_64	caml_initialize
    9db7:	48 89 b4 24 b0 02 00 	mov    %rsi,0x2b0(%rsp)
    9dbe:	00 
    9dbf:	4c 89 bc 24 b8 02 00 	mov    %r15,0x2b8(%rsp)
    9dc6:	00 
    9dc7:	48 89 9c 24 c0 02 00 	mov    %rbx,0x2c0(%rsp)
    9dce:	00 
    9dcf:	48 89 bc 24 c8 02 00 	mov    %rdi,0x2c8(%rsp)
    9dd6:	00 
    9dd7:	ff d0                	call   *%rax
    9dd9:	48 8b 9c 24 c0 02 00 	mov    0x2c0(%rsp),%rbx
    9de0:	00 
    9de1:	4c 8b bc 24 b8 02 00 	mov    0x2b8(%rsp),%r15
    9de8:	00 
    9de9:	4c 89 ff             	mov    %r15,%rdi
    9dec:	48 81 c7 58 05 00 00 	add    $0x558,%rdi
    9df3:	48 8b b4 24 a8 02 00 	mov    0x2a8(%rsp),%rsi
    9dfa:	00 
    9dfb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9e02:	00 00 00 
			9dfd: R_X86_64_64	caml_initialize
    9e05:	48 89 b4 24 a8 02 00 	mov    %rsi,0x2a8(%rsp)
    9e0c:	00 
    9e0d:	4c 89 bc 24 b0 02 00 	mov    %r15,0x2b0(%rsp)
    9e14:	00 
    9e15:	48 89 9c 24 b8 02 00 	mov    %rbx,0x2b8(%rsp)
    9e1c:	00 
    9e1d:	48 89 bc 24 c0 02 00 	mov    %rdi,0x2c0(%rsp)
    9e24:	00 
    9e25:	ff d0                	call   *%rax
    9e27:	48 8b 9c 24 b8 02 00 	mov    0x2b8(%rsp),%rbx
    9e2e:	00 
    9e2f:	4c 8b bc 24 b0 02 00 	mov    0x2b0(%rsp),%r15
    9e36:	00 
    9e37:	4c 89 ff             	mov    %r15,%rdi
    9e3a:	48 81 c7 60 05 00 00 	add    $0x560,%rdi
    9e41:	48 8b b4 24 a0 02 00 	mov    0x2a0(%rsp),%rsi
    9e48:	00 
    9e49:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9e50:	00 00 00 
			9e4b: R_X86_64_64	caml_initialize
    9e53:	48 89 b4 24 a0 02 00 	mov    %rsi,0x2a0(%rsp)
    9e5a:	00 
    9e5b:	4c 89 bc 24 a8 02 00 	mov    %r15,0x2a8(%rsp)
    9e62:	00 
    9e63:	48 89 9c 24 b0 02 00 	mov    %rbx,0x2b0(%rsp)
    9e6a:	00 
    9e6b:	48 89 bc 24 b8 02 00 	mov    %rdi,0x2b8(%rsp)
    9e72:	00 
    9e73:	ff d0                	call   *%rax
    9e75:	48 8b 9c 24 b0 02 00 	mov    0x2b0(%rsp),%rbx
    9e7c:	00 
    9e7d:	4c 8b bc 24 a8 02 00 	mov    0x2a8(%rsp),%r15
    9e84:	00 
    9e85:	4c 89 ff             	mov    %r15,%rdi
    9e88:	48 81 c7 68 05 00 00 	add    $0x568,%rdi
    9e8f:	48 8b b4 24 98 02 00 	mov    0x298(%rsp),%rsi
    9e96:	00 
    9e97:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9e9e:	00 00 00 
			9e99: R_X86_64_64	caml_initialize
    9ea1:	48 89 b4 24 98 02 00 	mov    %rsi,0x298(%rsp)
    9ea8:	00 
    9ea9:	4c 89 bc 24 a0 02 00 	mov    %r15,0x2a0(%rsp)
    9eb0:	00 
    9eb1:	48 89 9c 24 a8 02 00 	mov    %rbx,0x2a8(%rsp)
    9eb8:	00 
    9eb9:	48 89 bc 24 b0 02 00 	mov    %rdi,0x2b0(%rsp)
    9ec0:	00 
    9ec1:	ff d0                	call   *%rax
    9ec3:	48 8b 9c 24 a8 02 00 	mov    0x2a8(%rsp),%rbx
    9eca:	00 
    9ecb:	4c 8b bc 24 a0 02 00 	mov    0x2a0(%rsp),%r15
    9ed2:	00 
    9ed3:	4c 89 ff             	mov    %r15,%rdi
    9ed6:	48 81 c7 70 05 00 00 	add    $0x570,%rdi
    9edd:	48 8b b4 24 90 02 00 	mov    0x290(%rsp),%rsi
    9ee4:	00 
    9ee5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9eec:	00 00 00 
			9ee7: R_X86_64_64	caml_initialize
    9eef:	48 89 b4 24 90 02 00 	mov    %rsi,0x290(%rsp)
    9ef6:	00 
    9ef7:	4c 89 bc 24 98 02 00 	mov    %r15,0x298(%rsp)
    9efe:	00 
    9eff:	48 89 9c 24 a0 02 00 	mov    %rbx,0x2a0(%rsp)
    9f06:	00 
    9f07:	48 89 bc 24 a8 02 00 	mov    %rdi,0x2a8(%rsp)
    9f0e:	00 
    9f0f:	ff d0                	call   *%rax
    9f11:	48 8b 9c 24 a0 02 00 	mov    0x2a0(%rsp),%rbx
    9f18:	00 
    9f19:	4c 8b bc 24 98 02 00 	mov    0x298(%rsp),%r15
    9f20:	00 
    9f21:	4c 89 ff             	mov    %r15,%rdi
    9f24:	48 81 c7 78 05 00 00 	add    $0x578,%rdi
    9f2b:	48 8b b4 24 88 02 00 	mov    0x288(%rsp),%rsi
    9f32:	00 
    9f33:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9f3a:	00 00 00 
			9f35: R_X86_64_64	caml_initialize
    9f3d:	48 89 b4 24 88 02 00 	mov    %rsi,0x288(%rsp)
    9f44:	00 
    9f45:	4c 89 bc 24 90 02 00 	mov    %r15,0x290(%rsp)
    9f4c:	00 
    9f4d:	48 89 9c 24 98 02 00 	mov    %rbx,0x298(%rsp)
    9f54:	00 
    9f55:	48 89 bc 24 a0 02 00 	mov    %rdi,0x2a0(%rsp)
    9f5c:	00 
    9f5d:	ff d0                	call   *%rax
    9f5f:	48 8b 9c 24 98 02 00 	mov    0x298(%rsp),%rbx
    9f66:	00 
    9f67:	4c 8b bc 24 90 02 00 	mov    0x290(%rsp),%r15
    9f6e:	00 
    9f6f:	4c 89 ff             	mov    %r15,%rdi
    9f72:	48 81 c7 80 05 00 00 	add    $0x580,%rdi
    9f79:	48 8b b4 24 80 02 00 	mov    0x280(%rsp),%rsi
    9f80:	00 
    9f81:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9f88:	00 00 00 
			9f83: R_X86_64_64	caml_initialize
    9f8b:	48 89 b4 24 80 02 00 	mov    %rsi,0x280(%rsp)
    9f92:	00 
    9f93:	4c 89 bc 24 88 02 00 	mov    %r15,0x288(%rsp)
    9f9a:	00 
    9f9b:	48 89 9c 24 90 02 00 	mov    %rbx,0x290(%rsp)
    9fa2:	00 
    9fa3:	48 89 bc 24 98 02 00 	mov    %rdi,0x298(%rsp)
    9faa:	00 
    9fab:	ff d0                	call   *%rax
    9fad:	48 8b 9c 24 90 02 00 	mov    0x290(%rsp),%rbx
    9fb4:	00 
    9fb5:	4c 8b bc 24 88 02 00 	mov    0x288(%rsp),%r15
    9fbc:	00 
    9fbd:	4c 89 ff             	mov    %r15,%rdi
    9fc0:	48 81 c7 88 05 00 00 	add    $0x588,%rdi
    9fc7:	48 8b b4 24 78 02 00 	mov    0x278(%rsp),%rsi
    9fce:	00 
    9fcf:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    9fd6:	00 00 00 
			9fd1: R_X86_64_64	caml_initialize
    9fd9:	48 89 b4 24 78 02 00 	mov    %rsi,0x278(%rsp)
    9fe0:	00 
    9fe1:	4c 89 bc 24 80 02 00 	mov    %r15,0x280(%rsp)
    9fe8:	00 
    9fe9:	48 89 9c 24 88 02 00 	mov    %rbx,0x288(%rsp)
    9ff0:	00 
    9ff1:	48 89 bc 24 90 02 00 	mov    %rdi,0x290(%rsp)
    9ff8:	00 
    9ff9:	ff d0                	call   *%rax
    9ffb:	48 8b 9c 24 88 02 00 	mov    0x288(%rsp),%rbx
    a002:	00 
    a003:	4c 8b bc 24 80 02 00 	mov    0x280(%rsp),%r15
    a00a:	00 
    a00b:	4c 89 ff             	mov    %r15,%rdi
    a00e:	48 81 c7 90 05 00 00 	add    $0x590,%rdi
    a015:	48 8b b4 24 70 02 00 	mov    0x270(%rsp),%rsi
    a01c:	00 
    a01d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a024:	00 00 00 
			a01f: R_X86_64_64	caml_initialize
    a027:	48 89 b4 24 70 02 00 	mov    %rsi,0x270(%rsp)
    a02e:	00 
    a02f:	4c 89 bc 24 78 02 00 	mov    %r15,0x278(%rsp)
    a036:	00 
    a037:	48 89 9c 24 80 02 00 	mov    %rbx,0x280(%rsp)
    a03e:	00 
    a03f:	48 89 bc 24 88 02 00 	mov    %rdi,0x288(%rsp)
    a046:	00 
    a047:	ff d0                	call   *%rax
    a049:	48 8b 9c 24 80 02 00 	mov    0x280(%rsp),%rbx
    a050:	00 
    a051:	4c 8b bc 24 78 02 00 	mov    0x278(%rsp),%r15
    a058:	00 
    a059:	4c 89 ff             	mov    %r15,%rdi
    a05c:	48 81 c7 98 05 00 00 	add    $0x598,%rdi
    a063:	48 8b b4 24 68 02 00 	mov    0x268(%rsp),%rsi
    a06a:	00 
    a06b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a072:	00 00 00 
			a06d: R_X86_64_64	caml_initialize
    a075:	48 89 b4 24 68 02 00 	mov    %rsi,0x268(%rsp)
    a07c:	00 
    a07d:	4c 89 bc 24 70 02 00 	mov    %r15,0x270(%rsp)
    a084:	00 
    a085:	48 89 9c 24 78 02 00 	mov    %rbx,0x278(%rsp)
    a08c:	00 
    a08d:	48 89 bc 24 80 02 00 	mov    %rdi,0x280(%rsp)
    a094:	00 
    a095:	ff d0                	call   *%rax
    a097:	48 8b 9c 24 78 02 00 	mov    0x278(%rsp),%rbx
    a09e:	00 
    a09f:	4c 8b bc 24 70 02 00 	mov    0x270(%rsp),%r15
    a0a6:	00 
    a0a7:	4c 89 ff             	mov    %r15,%rdi
    a0aa:	48 81 c7 a0 05 00 00 	add    $0x5a0,%rdi
    a0b1:	48 8b b4 24 60 02 00 	mov    0x260(%rsp),%rsi
    a0b8:	00 
    a0b9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a0c0:	00 00 00 
			a0bb: R_X86_64_64	caml_initialize
    a0c3:	48 89 b4 24 60 02 00 	mov    %rsi,0x260(%rsp)
    a0ca:	00 
    a0cb:	4c 89 bc 24 68 02 00 	mov    %r15,0x268(%rsp)
    a0d2:	00 
    a0d3:	48 89 9c 24 70 02 00 	mov    %rbx,0x270(%rsp)
    a0da:	00 
    a0db:	48 89 bc 24 78 02 00 	mov    %rdi,0x278(%rsp)
    a0e2:	00 
    a0e3:	ff d0                	call   *%rax
    a0e5:	48 8b 9c 24 70 02 00 	mov    0x270(%rsp),%rbx
    a0ec:	00 
    a0ed:	4c 8b bc 24 68 02 00 	mov    0x268(%rsp),%r15
    a0f4:	00 
    a0f5:	4c 89 ff             	mov    %r15,%rdi
    a0f8:	48 81 c7 a8 05 00 00 	add    $0x5a8,%rdi
    a0ff:	48 8b b4 24 58 02 00 	mov    0x258(%rsp),%rsi
    a106:	00 
    a107:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a10e:	00 00 00 
			a109: R_X86_64_64	caml_initialize
    a111:	48 89 b4 24 58 02 00 	mov    %rsi,0x258(%rsp)
    a118:	00 
    a119:	4c 89 bc 24 60 02 00 	mov    %r15,0x260(%rsp)
    a120:	00 
    a121:	48 89 9c 24 68 02 00 	mov    %rbx,0x268(%rsp)
    a128:	00 
    a129:	48 89 bc 24 70 02 00 	mov    %rdi,0x270(%rsp)
    a130:	00 
    a131:	ff d0                	call   *%rax
    a133:	48 8b 9c 24 68 02 00 	mov    0x268(%rsp),%rbx
    a13a:	00 
    a13b:	4c 8b bc 24 60 02 00 	mov    0x260(%rsp),%r15
    a142:	00 
    a143:	4c 89 ff             	mov    %r15,%rdi
    a146:	48 81 c7 b0 05 00 00 	add    $0x5b0,%rdi
    a14d:	48 8b b4 24 50 02 00 	mov    0x250(%rsp),%rsi
    a154:	00 
    a155:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a15c:	00 00 00 
			a157: R_X86_64_64	caml_initialize
    a15f:	48 89 b4 24 50 02 00 	mov    %rsi,0x250(%rsp)
    a166:	00 
    a167:	4c 89 bc 24 58 02 00 	mov    %r15,0x258(%rsp)
    a16e:	00 
    a16f:	48 89 9c 24 60 02 00 	mov    %rbx,0x260(%rsp)
    a176:	00 
    a177:	48 89 bc 24 68 02 00 	mov    %rdi,0x268(%rsp)
    a17e:	00 
    a17f:	ff d0                	call   *%rax
    a181:	48 8b 9c 24 60 02 00 	mov    0x260(%rsp),%rbx
    a188:	00 
    a189:	4c 8b bc 24 58 02 00 	mov    0x258(%rsp),%r15
    a190:	00 
    a191:	4c 89 ff             	mov    %r15,%rdi
    a194:	48 81 c7 b8 05 00 00 	add    $0x5b8,%rdi
    a19b:	48 8b b4 24 48 02 00 	mov    0x248(%rsp),%rsi
    a1a2:	00 
    a1a3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a1aa:	00 00 00 
			a1a5: R_X86_64_64	caml_initialize
    a1ad:	48 89 b4 24 48 02 00 	mov    %rsi,0x248(%rsp)
    a1b4:	00 
    a1b5:	4c 89 bc 24 50 02 00 	mov    %r15,0x250(%rsp)
    a1bc:	00 
    a1bd:	48 89 9c 24 58 02 00 	mov    %rbx,0x258(%rsp)
    a1c4:	00 
    a1c5:	48 89 bc 24 60 02 00 	mov    %rdi,0x260(%rsp)
    a1cc:	00 
    a1cd:	ff d0                	call   *%rax
    a1cf:	48 8b 9c 24 58 02 00 	mov    0x258(%rsp),%rbx
    a1d6:	00 
    a1d7:	4c 8b bc 24 50 02 00 	mov    0x250(%rsp),%r15
    a1de:	00 
    a1df:	4c 89 ff             	mov    %r15,%rdi
    a1e2:	48 81 c7 c0 05 00 00 	add    $0x5c0,%rdi
    a1e9:	48 8b b4 24 40 02 00 	mov    0x240(%rsp),%rsi
    a1f0:	00 
    a1f1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a1f8:	00 00 00 
			a1f3: R_X86_64_64	caml_initialize
    a1fb:	48 89 b4 24 40 02 00 	mov    %rsi,0x240(%rsp)
    a202:	00 
    a203:	4c 89 bc 24 48 02 00 	mov    %r15,0x248(%rsp)
    a20a:	00 
    a20b:	48 89 9c 24 50 02 00 	mov    %rbx,0x250(%rsp)
    a212:	00 
    a213:	48 89 bc 24 58 02 00 	mov    %rdi,0x258(%rsp)
    a21a:	00 
    a21b:	ff d0                	call   *%rax
    a21d:	48 8b 9c 24 50 02 00 	mov    0x250(%rsp),%rbx
    a224:	00 
    a225:	4c 8b bc 24 48 02 00 	mov    0x248(%rsp),%r15
    a22c:	00 
    a22d:	4c 89 ff             	mov    %r15,%rdi
    a230:	48 81 c7 c8 05 00 00 	add    $0x5c8,%rdi
    a237:	48 8b b4 24 38 02 00 	mov    0x238(%rsp),%rsi
    a23e:	00 
    a23f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a246:	00 00 00 
			a241: R_X86_64_64	caml_initialize
    a249:	48 89 b4 24 38 02 00 	mov    %rsi,0x238(%rsp)
    a250:	00 
    a251:	4c 89 bc 24 40 02 00 	mov    %r15,0x240(%rsp)
    a258:	00 
    a259:	48 89 9c 24 48 02 00 	mov    %rbx,0x248(%rsp)
    a260:	00 
    a261:	48 89 bc 24 50 02 00 	mov    %rdi,0x250(%rsp)
    a268:	00 
    a269:	ff d0                	call   *%rax
    a26b:	48 8b 9c 24 48 02 00 	mov    0x248(%rsp),%rbx
    a272:	00 
    a273:	4c 8b bc 24 40 02 00 	mov    0x240(%rsp),%r15
    a27a:	00 
    a27b:	4c 89 ff             	mov    %r15,%rdi
    a27e:	48 81 c7 d0 05 00 00 	add    $0x5d0,%rdi
    a285:	48 8b b4 24 30 02 00 	mov    0x230(%rsp),%rsi
    a28c:	00 
    a28d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a294:	00 00 00 
			a28f: R_X86_64_64	caml_initialize
    a297:	48 89 b4 24 30 02 00 	mov    %rsi,0x230(%rsp)
    a29e:	00 
    a29f:	4c 89 bc 24 38 02 00 	mov    %r15,0x238(%rsp)
    a2a6:	00 
    a2a7:	48 89 9c 24 40 02 00 	mov    %rbx,0x240(%rsp)
    a2ae:	00 
    a2af:	48 89 bc 24 48 02 00 	mov    %rdi,0x248(%rsp)
    a2b6:	00 
    a2b7:	ff d0                	call   *%rax
    a2b9:	48 8b 9c 24 40 02 00 	mov    0x240(%rsp),%rbx
    a2c0:	00 
    a2c1:	4c 8b bc 24 38 02 00 	mov    0x238(%rsp),%r15
    a2c8:	00 
    a2c9:	4c 89 ff             	mov    %r15,%rdi
    a2cc:	48 81 c7 d8 05 00 00 	add    $0x5d8,%rdi
    a2d3:	48 8b b4 24 28 02 00 	mov    0x228(%rsp),%rsi
    a2da:	00 
    a2db:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a2e2:	00 00 00 
			a2dd: R_X86_64_64	caml_initialize
    a2e5:	48 89 b4 24 28 02 00 	mov    %rsi,0x228(%rsp)
    a2ec:	00 
    a2ed:	4c 89 bc 24 30 02 00 	mov    %r15,0x230(%rsp)
    a2f4:	00 
    a2f5:	48 89 9c 24 38 02 00 	mov    %rbx,0x238(%rsp)
    a2fc:	00 
    a2fd:	48 89 bc 24 40 02 00 	mov    %rdi,0x240(%rsp)
    a304:	00 
    a305:	ff d0                	call   *%rax
    a307:	48 8b 9c 24 38 02 00 	mov    0x238(%rsp),%rbx
    a30e:	00 
    a30f:	4c 8b bc 24 30 02 00 	mov    0x230(%rsp),%r15
    a316:	00 
    a317:	4c 89 ff             	mov    %r15,%rdi
    a31a:	48 81 c7 e0 05 00 00 	add    $0x5e0,%rdi
    a321:	48 8b b4 24 20 02 00 	mov    0x220(%rsp),%rsi
    a328:	00 
    a329:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a330:	00 00 00 
			a32b: R_X86_64_64	caml_initialize
    a333:	48 89 b4 24 20 02 00 	mov    %rsi,0x220(%rsp)
    a33a:	00 
    a33b:	4c 89 bc 24 28 02 00 	mov    %r15,0x228(%rsp)
    a342:	00 
    a343:	48 89 9c 24 30 02 00 	mov    %rbx,0x230(%rsp)
    a34a:	00 
    a34b:	48 89 bc 24 38 02 00 	mov    %rdi,0x238(%rsp)
    a352:	00 
    a353:	ff d0                	call   *%rax
    a355:	48 8b 9c 24 30 02 00 	mov    0x230(%rsp),%rbx
    a35c:	00 
    a35d:	4c 8b bc 24 28 02 00 	mov    0x228(%rsp),%r15
    a364:	00 
    a365:	4c 89 ff             	mov    %r15,%rdi
    a368:	48 81 c7 e8 05 00 00 	add    $0x5e8,%rdi
    a36f:	48 8b b4 24 18 02 00 	mov    0x218(%rsp),%rsi
    a376:	00 
    a377:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a37e:	00 00 00 
			a379: R_X86_64_64	caml_initialize
    a381:	48 89 b4 24 18 02 00 	mov    %rsi,0x218(%rsp)
    a388:	00 
    a389:	4c 89 bc 24 20 02 00 	mov    %r15,0x220(%rsp)
    a390:	00 
    a391:	48 89 9c 24 28 02 00 	mov    %rbx,0x228(%rsp)
    a398:	00 
    a399:	48 89 bc 24 30 02 00 	mov    %rdi,0x230(%rsp)
    a3a0:	00 
    a3a1:	ff d0                	call   *%rax
    a3a3:	48 8b 9c 24 28 02 00 	mov    0x228(%rsp),%rbx
    a3aa:	00 
    a3ab:	4c 8b bc 24 20 02 00 	mov    0x220(%rsp),%r15
    a3b2:	00 
    a3b3:	4c 89 ff             	mov    %r15,%rdi
    a3b6:	48 81 c7 f0 05 00 00 	add    $0x5f0,%rdi
    a3bd:	48 8b b4 24 10 02 00 	mov    0x210(%rsp),%rsi
    a3c4:	00 
    a3c5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a3cc:	00 00 00 
			a3c7: R_X86_64_64	caml_initialize
    a3cf:	48 89 b4 24 10 02 00 	mov    %rsi,0x210(%rsp)
    a3d6:	00 
    a3d7:	4c 89 bc 24 18 02 00 	mov    %r15,0x218(%rsp)
    a3de:	00 
    a3df:	48 89 9c 24 20 02 00 	mov    %rbx,0x220(%rsp)
    a3e6:	00 
    a3e7:	48 89 bc 24 28 02 00 	mov    %rdi,0x228(%rsp)
    a3ee:	00 
    a3ef:	ff d0                	call   *%rax
    a3f1:	48 8b 9c 24 20 02 00 	mov    0x220(%rsp),%rbx
    a3f8:	00 
    a3f9:	4c 8b bc 24 18 02 00 	mov    0x218(%rsp),%r15
    a400:	00 
    a401:	4c 89 ff             	mov    %r15,%rdi
    a404:	48 81 c7 f8 05 00 00 	add    $0x5f8,%rdi
    a40b:	48 8b b4 24 08 02 00 	mov    0x208(%rsp),%rsi
    a412:	00 
    a413:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a41a:	00 00 00 
			a415: R_X86_64_64	caml_initialize
    a41d:	48 89 b4 24 08 02 00 	mov    %rsi,0x208(%rsp)
    a424:	00 
    a425:	4c 89 bc 24 10 02 00 	mov    %r15,0x210(%rsp)
    a42c:	00 
    a42d:	48 89 9c 24 18 02 00 	mov    %rbx,0x218(%rsp)
    a434:	00 
    a435:	48 89 bc 24 20 02 00 	mov    %rdi,0x220(%rsp)
    a43c:	00 
    a43d:	ff d0                	call   *%rax
    a43f:	48 8b 9c 24 18 02 00 	mov    0x218(%rsp),%rbx
    a446:	00 
    a447:	4c 8b bc 24 10 02 00 	mov    0x210(%rsp),%r15
    a44e:	00 
    a44f:	4c 89 ff             	mov    %r15,%rdi
    a452:	48 81 c7 00 06 00 00 	add    $0x600,%rdi
    a459:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
    a460:	00 
    a461:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a468:	00 00 00 
			a463: R_X86_64_64	caml_initialize
    a46b:	48 89 b4 24 00 02 00 	mov    %rsi,0x200(%rsp)
    a472:	00 
    a473:	4c 89 bc 24 08 02 00 	mov    %r15,0x208(%rsp)
    a47a:	00 
    a47b:	48 89 9c 24 10 02 00 	mov    %rbx,0x210(%rsp)
    a482:	00 
    a483:	48 89 bc 24 18 02 00 	mov    %rdi,0x218(%rsp)
    a48a:	00 
    a48b:	ff d0                	call   *%rax
    a48d:	48 8b 9c 24 10 02 00 	mov    0x210(%rsp),%rbx
    a494:	00 
    a495:	4c 8b bc 24 08 02 00 	mov    0x208(%rsp),%r15
    a49c:	00 
    a49d:	4c 89 ff             	mov    %r15,%rdi
    a4a0:	48 81 c7 08 06 00 00 	add    $0x608,%rdi
    a4a7:	48 8b b4 24 f8 01 00 	mov    0x1f8(%rsp),%rsi
    a4ae:	00 
    a4af:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a4b6:	00 00 00 
			a4b1: R_X86_64_64	caml_initialize
    a4b9:	48 89 b4 24 f8 01 00 	mov    %rsi,0x1f8(%rsp)
    a4c0:	00 
    a4c1:	4c 89 bc 24 00 02 00 	mov    %r15,0x200(%rsp)
    a4c8:	00 
    a4c9:	48 89 9c 24 08 02 00 	mov    %rbx,0x208(%rsp)
    a4d0:	00 
    a4d1:	48 89 bc 24 10 02 00 	mov    %rdi,0x210(%rsp)
    a4d8:	00 
    a4d9:	ff d0                	call   *%rax
    a4db:	48 8b 9c 24 08 02 00 	mov    0x208(%rsp),%rbx
    a4e2:	00 
    a4e3:	4c 8b bc 24 00 02 00 	mov    0x200(%rsp),%r15
    a4ea:	00 
    a4eb:	4c 89 ff             	mov    %r15,%rdi
    a4ee:	48 81 c7 10 06 00 00 	add    $0x610,%rdi
    a4f5:	48 8b b4 24 f0 01 00 	mov    0x1f0(%rsp),%rsi
    a4fc:	00 
    a4fd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a504:	00 00 00 
			a4ff: R_X86_64_64	caml_initialize
    a507:	48 89 b4 24 f0 01 00 	mov    %rsi,0x1f0(%rsp)
    a50e:	00 
    a50f:	4c 89 bc 24 f8 01 00 	mov    %r15,0x1f8(%rsp)
    a516:	00 
    a517:	48 89 9c 24 00 02 00 	mov    %rbx,0x200(%rsp)
    a51e:	00 
    a51f:	48 89 bc 24 08 02 00 	mov    %rdi,0x208(%rsp)
    a526:	00 
    a527:	ff d0                	call   *%rax
    a529:	48 8b 9c 24 00 02 00 	mov    0x200(%rsp),%rbx
    a530:	00 
    a531:	4c 8b bc 24 f8 01 00 	mov    0x1f8(%rsp),%r15
    a538:	00 
    a539:	4c 89 ff             	mov    %r15,%rdi
    a53c:	48 81 c7 18 06 00 00 	add    $0x618,%rdi
    a543:	48 8b b4 24 e8 01 00 	mov    0x1e8(%rsp),%rsi
    a54a:	00 
    a54b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a552:	00 00 00 
			a54d: R_X86_64_64	caml_initialize
    a555:	48 89 b4 24 e8 01 00 	mov    %rsi,0x1e8(%rsp)
    a55c:	00 
    a55d:	4c 89 bc 24 f0 01 00 	mov    %r15,0x1f0(%rsp)
    a564:	00 
    a565:	48 89 9c 24 f8 01 00 	mov    %rbx,0x1f8(%rsp)
    a56c:	00 
    a56d:	48 89 bc 24 00 02 00 	mov    %rdi,0x200(%rsp)
    a574:	00 
    a575:	ff d0                	call   *%rax
    a577:	48 8b 9c 24 f8 01 00 	mov    0x1f8(%rsp),%rbx
    a57e:	00 
    a57f:	4c 8b bc 24 f0 01 00 	mov    0x1f0(%rsp),%r15
    a586:	00 
    a587:	4c 89 ff             	mov    %r15,%rdi
    a58a:	48 81 c7 20 06 00 00 	add    $0x620,%rdi
    a591:	48 8b b4 24 e0 01 00 	mov    0x1e0(%rsp),%rsi
    a598:	00 
    a599:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a5a0:	00 00 00 
			a59b: R_X86_64_64	caml_initialize
    a5a3:	48 89 b4 24 e0 01 00 	mov    %rsi,0x1e0(%rsp)
    a5aa:	00 
    a5ab:	4c 89 bc 24 e8 01 00 	mov    %r15,0x1e8(%rsp)
    a5b2:	00 
    a5b3:	48 89 9c 24 f0 01 00 	mov    %rbx,0x1f0(%rsp)
    a5ba:	00 
    a5bb:	48 89 bc 24 f8 01 00 	mov    %rdi,0x1f8(%rsp)
    a5c2:	00 
    a5c3:	ff d0                	call   *%rax
    a5c5:	48 8b 9c 24 f0 01 00 	mov    0x1f0(%rsp),%rbx
    a5cc:	00 
    a5cd:	4c 8b bc 24 e8 01 00 	mov    0x1e8(%rsp),%r15
    a5d4:	00 
    a5d5:	4c 89 ff             	mov    %r15,%rdi
    a5d8:	48 81 c7 28 06 00 00 	add    $0x628,%rdi
    a5df:	48 8b b4 24 d8 01 00 	mov    0x1d8(%rsp),%rsi
    a5e6:	00 
    a5e7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a5ee:	00 00 00 
			a5e9: R_X86_64_64	caml_initialize
    a5f1:	48 89 b4 24 d8 01 00 	mov    %rsi,0x1d8(%rsp)
    a5f8:	00 
    a5f9:	4c 89 bc 24 e0 01 00 	mov    %r15,0x1e0(%rsp)
    a600:	00 
    a601:	48 89 9c 24 e8 01 00 	mov    %rbx,0x1e8(%rsp)
    a608:	00 
    a609:	48 89 bc 24 f0 01 00 	mov    %rdi,0x1f0(%rsp)
    a610:	00 
    a611:	ff d0                	call   *%rax
    a613:	48 8b 9c 24 e8 01 00 	mov    0x1e8(%rsp),%rbx
    a61a:	00 
    a61b:	4c 8b bc 24 e0 01 00 	mov    0x1e0(%rsp),%r15
    a622:	00 
    a623:	4c 89 ff             	mov    %r15,%rdi
    a626:	48 81 c7 30 06 00 00 	add    $0x630,%rdi
    a62d:	48 8b b4 24 d0 01 00 	mov    0x1d0(%rsp),%rsi
    a634:	00 
    a635:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a63c:	00 00 00 
			a637: R_X86_64_64	caml_initialize
    a63f:	48 89 b4 24 d0 01 00 	mov    %rsi,0x1d0(%rsp)
    a646:	00 
    a647:	4c 89 bc 24 d8 01 00 	mov    %r15,0x1d8(%rsp)
    a64e:	00 
    a64f:	48 89 9c 24 e0 01 00 	mov    %rbx,0x1e0(%rsp)
    a656:	00 
    a657:	48 89 bc 24 e8 01 00 	mov    %rdi,0x1e8(%rsp)
    a65e:	00 
    a65f:	ff d0                	call   *%rax
    a661:	48 8b 9c 24 e0 01 00 	mov    0x1e0(%rsp),%rbx
    a668:	00 
    a669:	4c 8b bc 24 d8 01 00 	mov    0x1d8(%rsp),%r15
    a670:	00 
    a671:	4c 89 ff             	mov    %r15,%rdi
    a674:	48 81 c7 38 06 00 00 	add    $0x638,%rdi
    a67b:	48 8b b4 24 c8 01 00 	mov    0x1c8(%rsp),%rsi
    a682:	00 
    a683:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a68a:	00 00 00 
			a685: R_X86_64_64	caml_initialize
    a68d:	48 89 b4 24 c8 01 00 	mov    %rsi,0x1c8(%rsp)
    a694:	00 
    a695:	4c 89 bc 24 d0 01 00 	mov    %r15,0x1d0(%rsp)
    a69c:	00 
    a69d:	48 89 9c 24 d8 01 00 	mov    %rbx,0x1d8(%rsp)
    a6a4:	00 
    a6a5:	48 89 bc 24 e0 01 00 	mov    %rdi,0x1e0(%rsp)
    a6ac:	00 
    a6ad:	ff d0                	call   *%rax
    a6af:	48 8b 9c 24 d8 01 00 	mov    0x1d8(%rsp),%rbx
    a6b6:	00 
    a6b7:	4c 8b bc 24 d0 01 00 	mov    0x1d0(%rsp),%r15
    a6be:	00 
    a6bf:	4c 89 ff             	mov    %r15,%rdi
    a6c2:	48 81 c7 40 06 00 00 	add    $0x640,%rdi
    a6c9:	48 8b b4 24 c0 01 00 	mov    0x1c0(%rsp),%rsi
    a6d0:	00 
    a6d1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a6d8:	00 00 00 
			a6d3: R_X86_64_64	caml_initialize
    a6db:	48 89 b4 24 c0 01 00 	mov    %rsi,0x1c0(%rsp)
    a6e2:	00 
    a6e3:	4c 89 bc 24 c8 01 00 	mov    %r15,0x1c8(%rsp)
    a6ea:	00 
    a6eb:	48 89 9c 24 d0 01 00 	mov    %rbx,0x1d0(%rsp)
    a6f2:	00 
    a6f3:	48 89 bc 24 d8 01 00 	mov    %rdi,0x1d8(%rsp)
    a6fa:	00 
    a6fb:	ff d0                	call   *%rax
    a6fd:	48 8b 9c 24 d0 01 00 	mov    0x1d0(%rsp),%rbx
    a704:	00 
    a705:	4c 8b bc 24 c8 01 00 	mov    0x1c8(%rsp),%r15
    a70c:	00 
    a70d:	4c 89 ff             	mov    %r15,%rdi
    a710:	48 81 c7 48 06 00 00 	add    $0x648,%rdi
    a717:	48 8b b4 24 b8 01 00 	mov    0x1b8(%rsp),%rsi
    a71e:	00 
    a71f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a726:	00 00 00 
			a721: R_X86_64_64	caml_initialize
    a729:	48 89 b4 24 b8 01 00 	mov    %rsi,0x1b8(%rsp)
    a730:	00 
    a731:	4c 89 bc 24 c0 01 00 	mov    %r15,0x1c0(%rsp)
    a738:	00 
    a739:	48 89 9c 24 c8 01 00 	mov    %rbx,0x1c8(%rsp)
    a740:	00 
    a741:	48 89 bc 24 d0 01 00 	mov    %rdi,0x1d0(%rsp)
    a748:	00 
    a749:	ff d0                	call   *%rax
    a74b:	48 8b 9c 24 c8 01 00 	mov    0x1c8(%rsp),%rbx
    a752:	00 
    a753:	4c 8b bc 24 c0 01 00 	mov    0x1c0(%rsp),%r15
    a75a:	00 
    a75b:	4c 89 ff             	mov    %r15,%rdi
    a75e:	48 81 c7 50 06 00 00 	add    $0x650,%rdi
    a765:	48 8b b4 24 b0 01 00 	mov    0x1b0(%rsp),%rsi
    a76c:	00 
    a76d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a774:	00 00 00 
			a76f: R_X86_64_64	caml_initialize
    a777:	48 89 b4 24 b0 01 00 	mov    %rsi,0x1b0(%rsp)
    a77e:	00 
    a77f:	4c 89 bc 24 b8 01 00 	mov    %r15,0x1b8(%rsp)
    a786:	00 
    a787:	48 89 9c 24 c0 01 00 	mov    %rbx,0x1c0(%rsp)
    a78e:	00 
    a78f:	48 89 bc 24 c8 01 00 	mov    %rdi,0x1c8(%rsp)
    a796:	00 
    a797:	ff d0                	call   *%rax
    a799:	48 8b 9c 24 c0 01 00 	mov    0x1c0(%rsp),%rbx
    a7a0:	00 
    a7a1:	4c 8b bc 24 b8 01 00 	mov    0x1b8(%rsp),%r15
    a7a8:	00 
    a7a9:	4c 89 ff             	mov    %r15,%rdi
    a7ac:	48 81 c7 58 06 00 00 	add    $0x658,%rdi
    a7b3:	48 8b b4 24 a8 01 00 	mov    0x1a8(%rsp),%rsi
    a7ba:	00 
    a7bb:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a7c2:	00 00 00 
			a7bd: R_X86_64_64	caml_initialize
    a7c5:	48 89 b4 24 a8 01 00 	mov    %rsi,0x1a8(%rsp)
    a7cc:	00 
    a7cd:	4c 89 bc 24 b0 01 00 	mov    %r15,0x1b0(%rsp)
    a7d4:	00 
    a7d5:	48 89 9c 24 b8 01 00 	mov    %rbx,0x1b8(%rsp)
    a7dc:	00 
    a7dd:	48 89 bc 24 c0 01 00 	mov    %rdi,0x1c0(%rsp)
    a7e4:	00 
    a7e5:	ff d0                	call   *%rax
    a7e7:	48 8b 9c 24 b8 01 00 	mov    0x1b8(%rsp),%rbx
    a7ee:	00 
    a7ef:	4c 8b bc 24 b0 01 00 	mov    0x1b0(%rsp),%r15
    a7f6:	00 
    a7f7:	4c 89 ff             	mov    %r15,%rdi
    a7fa:	48 81 c7 60 06 00 00 	add    $0x660,%rdi
    a801:	48 8b b4 24 a0 01 00 	mov    0x1a0(%rsp),%rsi
    a808:	00 
    a809:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a810:	00 00 00 
			a80b: R_X86_64_64	caml_initialize
    a813:	48 89 b4 24 a0 01 00 	mov    %rsi,0x1a0(%rsp)
    a81a:	00 
    a81b:	4c 89 bc 24 a8 01 00 	mov    %r15,0x1a8(%rsp)
    a822:	00 
    a823:	48 89 9c 24 b0 01 00 	mov    %rbx,0x1b0(%rsp)
    a82a:	00 
    a82b:	48 89 bc 24 b8 01 00 	mov    %rdi,0x1b8(%rsp)
    a832:	00 
    a833:	ff d0                	call   *%rax
    a835:	48 8b 9c 24 b0 01 00 	mov    0x1b0(%rsp),%rbx
    a83c:	00 
    a83d:	4c 8b bc 24 a8 01 00 	mov    0x1a8(%rsp),%r15
    a844:	00 
    a845:	4c 89 ff             	mov    %r15,%rdi
    a848:	48 81 c7 68 06 00 00 	add    $0x668,%rdi
    a84f:	48 8b b4 24 98 01 00 	mov    0x198(%rsp),%rsi
    a856:	00 
    a857:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a85e:	00 00 00 
			a859: R_X86_64_64	caml_initialize
    a861:	48 89 b4 24 98 01 00 	mov    %rsi,0x198(%rsp)
    a868:	00 
    a869:	4c 89 bc 24 a0 01 00 	mov    %r15,0x1a0(%rsp)
    a870:	00 
    a871:	48 89 9c 24 a8 01 00 	mov    %rbx,0x1a8(%rsp)
    a878:	00 
    a879:	48 89 bc 24 b0 01 00 	mov    %rdi,0x1b0(%rsp)
    a880:	00 
    a881:	ff d0                	call   *%rax
    a883:	48 8b 9c 24 a8 01 00 	mov    0x1a8(%rsp),%rbx
    a88a:	00 
    a88b:	4c 8b bc 24 a0 01 00 	mov    0x1a0(%rsp),%r15
    a892:	00 
    a893:	4c 89 ff             	mov    %r15,%rdi
    a896:	48 81 c7 70 06 00 00 	add    $0x670,%rdi
    a89d:	48 8b b4 24 90 01 00 	mov    0x190(%rsp),%rsi
    a8a4:	00 
    a8a5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a8ac:	00 00 00 
			a8a7: R_X86_64_64	caml_initialize
    a8af:	48 89 b4 24 90 01 00 	mov    %rsi,0x190(%rsp)
    a8b6:	00 
    a8b7:	4c 89 bc 24 98 01 00 	mov    %r15,0x198(%rsp)
    a8be:	00 
    a8bf:	48 89 9c 24 a0 01 00 	mov    %rbx,0x1a0(%rsp)
    a8c6:	00 
    a8c7:	48 89 bc 24 a8 01 00 	mov    %rdi,0x1a8(%rsp)
    a8ce:	00 
    a8cf:	ff d0                	call   *%rax
    a8d1:	48 8b 9c 24 a0 01 00 	mov    0x1a0(%rsp),%rbx
    a8d8:	00 
    a8d9:	4c 8b bc 24 98 01 00 	mov    0x198(%rsp),%r15
    a8e0:	00 
    a8e1:	4c 89 ff             	mov    %r15,%rdi
    a8e4:	48 81 c7 78 06 00 00 	add    $0x678,%rdi
    a8eb:	48 8b b4 24 88 01 00 	mov    0x188(%rsp),%rsi
    a8f2:	00 
    a8f3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a8fa:	00 00 00 
			a8f5: R_X86_64_64	caml_initialize
    a8fd:	48 89 b4 24 88 01 00 	mov    %rsi,0x188(%rsp)
    a904:	00 
    a905:	4c 89 bc 24 90 01 00 	mov    %r15,0x190(%rsp)
    a90c:	00 
    a90d:	48 89 9c 24 98 01 00 	mov    %rbx,0x198(%rsp)
    a914:	00 
    a915:	48 89 bc 24 a0 01 00 	mov    %rdi,0x1a0(%rsp)
    a91c:	00 
    a91d:	ff d0                	call   *%rax
    a91f:	48 8b 9c 24 98 01 00 	mov    0x198(%rsp),%rbx
    a926:	00 
    a927:	4c 8b bc 24 90 01 00 	mov    0x190(%rsp),%r15
    a92e:	00 
    a92f:	4c 89 ff             	mov    %r15,%rdi
    a932:	48 81 c7 80 06 00 00 	add    $0x680,%rdi
    a939:	48 8b b4 24 80 01 00 	mov    0x180(%rsp),%rsi
    a940:	00 
    a941:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a948:	00 00 00 
			a943: R_X86_64_64	caml_initialize
    a94b:	48 89 b4 24 80 01 00 	mov    %rsi,0x180(%rsp)
    a952:	00 
    a953:	4c 89 bc 24 88 01 00 	mov    %r15,0x188(%rsp)
    a95a:	00 
    a95b:	48 89 9c 24 90 01 00 	mov    %rbx,0x190(%rsp)
    a962:	00 
    a963:	48 89 bc 24 98 01 00 	mov    %rdi,0x198(%rsp)
    a96a:	00 
    a96b:	ff d0                	call   *%rax
    a96d:	48 8b 9c 24 90 01 00 	mov    0x190(%rsp),%rbx
    a974:	00 
    a975:	4c 8b bc 24 88 01 00 	mov    0x188(%rsp),%r15
    a97c:	00 
    a97d:	4c 89 ff             	mov    %r15,%rdi
    a980:	48 81 c7 88 06 00 00 	add    $0x688,%rdi
    a987:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
    a98e:	00 
    a98f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a996:	00 00 00 
			a991: R_X86_64_64	caml_initialize
    a999:	48 89 b4 24 78 01 00 	mov    %rsi,0x178(%rsp)
    a9a0:	00 
    a9a1:	4c 89 bc 24 80 01 00 	mov    %r15,0x180(%rsp)
    a9a8:	00 
    a9a9:	48 89 9c 24 88 01 00 	mov    %rbx,0x188(%rsp)
    a9b0:	00 
    a9b1:	48 89 bc 24 90 01 00 	mov    %rdi,0x190(%rsp)
    a9b8:	00 
    a9b9:	ff d0                	call   *%rax
    a9bb:	48 8b 9c 24 88 01 00 	mov    0x188(%rsp),%rbx
    a9c2:	00 
    a9c3:	4c 8b bc 24 80 01 00 	mov    0x180(%rsp),%r15
    a9ca:	00 
    a9cb:	4c 89 ff             	mov    %r15,%rdi
    a9ce:	48 81 c7 90 06 00 00 	add    $0x690,%rdi
    a9d5:	48 8b b4 24 70 01 00 	mov    0x170(%rsp),%rsi
    a9dc:	00 
    a9dd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    a9e4:	00 00 00 
			a9df: R_X86_64_64	caml_initialize
    a9e7:	48 89 b4 24 70 01 00 	mov    %rsi,0x170(%rsp)
    a9ee:	00 
    a9ef:	4c 89 bc 24 78 01 00 	mov    %r15,0x178(%rsp)
    a9f6:	00 
    a9f7:	48 89 9c 24 80 01 00 	mov    %rbx,0x180(%rsp)
    a9fe:	00 
    a9ff:	48 89 bc 24 88 01 00 	mov    %rdi,0x188(%rsp)
    aa06:	00 
    aa07:	ff d0                	call   *%rax
    aa09:	48 8b 9c 24 80 01 00 	mov    0x180(%rsp),%rbx
    aa10:	00 
    aa11:	4c 8b bc 24 78 01 00 	mov    0x178(%rsp),%r15
    aa18:	00 
    aa19:	4c 89 ff             	mov    %r15,%rdi
    aa1c:	48 81 c7 98 06 00 00 	add    $0x698,%rdi
    aa23:	48 8b b4 24 68 01 00 	mov    0x168(%rsp),%rsi
    aa2a:	00 
    aa2b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    aa32:	00 00 00 
			aa2d: R_X86_64_64	caml_initialize
    aa35:	48 89 b4 24 68 01 00 	mov    %rsi,0x168(%rsp)
    aa3c:	00 
    aa3d:	4c 89 bc 24 70 01 00 	mov    %r15,0x170(%rsp)
    aa44:	00 
    aa45:	48 89 9c 24 78 01 00 	mov    %rbx,0x178(%rsp)
    aa4c:	00 
    aa4d:	48 89 bc 24 80 01 00 	mov    %rdi,0x180(%rsp)
    aa54:	00 
    aa55:	ff d0                	call   *%rax
    aa57:	48 8b 9c 24 78 01 00 	mov    0x178(%rsp),%rbx
    aa5e:	00 
    aa5f:	4c 8b bc 24 70 01 00 	mov    0x170(%rsp),%r15
    aa66:	00 
    aa67:	4c 89 ff             	mov    %r15,%rdi
    aa6a:	48 81 c7 a0 06 00 00 	add    $0x6a0,%rdi
    aa71:	48 8b b4 24 60 01 00 	mov    0x160(%rsp),%rsi
    aa78:	00 
    aa79:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    aa80:	00 00 00 
			aa7b: R_X86_64_64	caml_initialize
    aa83:	48 89 b4 24 60 01 00 	mov    %rsi,0x160(%rsp)
    aa8a:	00 
    aa8b:	4c 89 bc 24 68 01 00 	mov    %r15,0x168(%rsp)
    aa92:	00 
    aa93:	48 89 9c 24 70 01 00 	mov    %rbx,0x170(%rsp)
    aa9a:	00 
    aa9b:	48 89 bc 24 78 01 00 	mov    %rdi,0x178(%rsp)
    aaa2:	00 
    aaa3:	ff d0                	call   *%rax
    aaa5:	48 8b 9c 24 70 01 00 	mov    0x170(%rsp),%rbx
    aaac:	00 
    aaad:	4c 8b bc 24 68 01 00 	mov    0x168(%rsp),%r15
    aab4:	00 
    aab5:	4c 89 ff             	mov    %r15,%rdi
    aab8:	48 81 c7 a8 06 00 00 	add    $0x6a8,%rdi
    aabf:	48 8b b4 24 58 01 00 	mov    0x158(%rsp),%rsi
    aac6:	00 
    aac7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    aace:	00 00 00 
			aac9: R_X86_64_64	caml_initialize
    aad1:	48 89 b4 24 58 01 00 	mov    %rsi,0x158(%rsp)
    aad8:	00 
    aad9:	4c 89 bc 24 60 01 00 	mov    %r15,0x160(%rsp)
    aae0:	00 
    aae1:	48 89 9c 24 68 01 00 	mov    %rbx,0x168(%rsp)
    aae8:	00 
    aae9:	48 89 bc 24 70 01 00 	mov    %rdi,0x170(%rsp)
    aaf0:	00 
    aaf1:	ff d0                	call   *%rax
    aaf3:	48 8b 9c 24 68 01 00 	mov    0x168(%rsp),%rbx
    aafa:	00 
    aafb:	4c 8b bc 24 60 01 00 	mov    0x160(%rsp),%r15
    ab02:	00 
    ab03:	4c 89 ff             	mov    %r15,%rdi
    ab06:	48 81 c7 b0 06 00 00 	add    $0x6b0,%rdi
    ab0d:	48 8b b4 24 50 01 00 	mov    0x150(%rsp),%rsi
    ab14:	00 
    ab15:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    ab1c:	00 00 00 
			ab17: R_X86_64_64	caml_initialize
    ab1f:	48 89 b4 24 50 01 00 	mov    %rsi,0x150(%rsp)
    ab26:	00 
    ab27:	4c 89 bc 24 58 01 00 	mov    %r15,0x158(%rsp)
    ab2e:	00 
    ab2f:	48 89 9c 24 60 01 00 	mov    %rbx,0x160(%rsp)
    ab36:	00 
    ab37:	48 89 bc 24 68 01 00 	mov    %rdi,0x168(%rsp)
    ab3e:	00 
    ab3f:	ff d0                	call   *%rax
    ab41:	48 8b 9c 24 60 01 00 	mov    0x160(%rsp),%rbx
    ab48:	00 
    ab49:	4c 8b bc 24 58 01 00 	mov    0x158(%rsp),%r15
    ab50:	00 
    ab51:	4c 89 ff             	mov    %r15,%rdi
    ab54:	48 81 c7 b8 06 00 00 	add    $0x6b8,%rdi
    ab5b:	48 8b b4 24 48 01 00 	mov    0x148(%rsp),%rsi
    ab62:	00 
    ab63:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    ab6a:	00 00 00 
			ab65: R_X86_64_64	caml_initialize
    ab6d:	48 89 b4 24 48 01 00 	mov    %rsi,0x148(%rsp)
    ab74:	00 
    ab75:	4c 89 bc 24 50 01 00 	mov    %r15,0x150(%rsp)
    ab7c:	00 
    ab7d:	48 89 9c 24 58 01 00 	mov    %rbx,0x158(%rsp)
    ab84:	00 
    ab85:	48 89 bc 24 60 01 00 	mov    %rdi,0x160(%rsp)
    ab8c:	00 
    ab8d:	ff d0                	call   *%rax
    ab8f:	48 8b 9c 24 58 01 00 	mov    0x158(%rsp),%rbx
    ab96:	00 
    ab97:	4c 8b bc 24 50 01 00 	mov    0x150(%rsp),%r15
    ab9e:	00 
    ab9f:	4c 89 ff             	mov    %r15,%rdi
    aba2:	48 81 c7 c0 06 00 00 	add    $0x6c0,%rdi
    aba9:	48 8b b4 24 40 01 00 	mov    0x140(%rsp),%rsi
    abb0:	00 
    abb1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    abb8:	00 00 00 
			abb3: R_X86_64_64	caml_initialize
    abbb:	48 89 b4 24 40 01 00 	mov    %rsi,0x140(%rsp)
    abc2:	00 
    abc3:	4c 89 bc 24 48 01 00 	mov    %r15,0x148(%rsp)
    abca:	00 
    abcb:	48 89 9c 24 50 01 00 	mov    %rbx,0x150(%rsp)
    abd2:	00 
    abd3:	48 89 bc 24 58 01 00 	mov    %rdi,0x158(%rsp)
    abda:	00 
    abdb:	ff d0                	call   *%rax
    abdd:	48 8b 9c 24 50 01 00 	mov    0x150(%rsp),%rbx
    abe4:	00 
    abe5:	4c 8b bc 24 48 01 00 	mov    0x148(%rsp),%r15
    abec:	00 
    abed:	4c 89 ff             	mov    %r15,%rdi
    abf0:	48 81 c7 c8 06 00 00 	add    $0x6c8,%rdi
    abf7:	48 8b b4 24 38 01 00 	mov    0x138(%rsp),%rsi
    abfe:	00 
    abff:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    ac06:	00 00 00 
			ac01: R_X86_64_64	caml_initialize
    ac09:	48 89 b4 24 38 01 00 	mov    %rsi,0x138(%rsp)
    ac10:	00 
    ac11:	4c 89 bc 24 40 01 00 	mov    %r15,0x140(%rsp)
    ac18:	00 
    ac19:	48 89 9c 24 48 01 00 	mov    %rbx,0x148(%rsp)
    ac20:	00 
    ac21:	48 89 bc 24 50 01 00 	mov    %rdi,0x150(%rsp)
    ac28:	00 
    ac29:	ff d0                	call   *%rax
    ac2b:	48 8b 9c 24 48 01 00 	mov    0x148(%rsp),%rbx
    ac32:	00 
    ac33:	4c 8b bc 24 40 01 00 	mov    0x140(%rsp),%r15
    ac3a:	00 
    ac3b:	4c 89 ff             	mov    %r15,%rdi
    ac3e:	48 81 c7 d0 06 00 00 	add    $0x6d0,%rdi
    ac45:	48 8b b4 24 30 01 00 	mov    0x130(%rsp),%rsi
    ac4c:	00 
    ac4d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    ac54:	00 00 00 
			ac4f: R_X86_64_64	caml_initialize
    ac57:	48 89 b4 24 30 01 00 	mov    %rsi,0x130(%rsp)
    ac5e:	00 
    ac5f:	4c 89 bc 24 38 01 00 	mov    %r15,0x138(%rsp)
    ac66:	00 
    ac67:	48 89 9c 24 40 01 00 	mov    %rbx,0x140(%rsp)
    ac6e:	00 
    ac6f:	48 89 bc 24 48 01 00 	mov    %rdi,0x148(%rsp)
    ac76:	00 
    ac77:	ff d0                	call   *%rax
    ac79:	48 8b 9c 24 40 01 00 	mov    0x140(%rsp),%rbx
    ac80:	00 
    ac81:	4c 8b bc 24 38 01 00 	mov    0x138(%rsp),%r15
    ac88:	00 
    ac89:	4c 89 ff             	mov    %r15,%rdi
    ac8c:	48 81 c7 d8 06 00 00 	add    $0x6d8,%rdi
    ac93:	48 8b b4 24 28 01 00 	mov    0x128(%rsp),%rsi
    ac9a:	00 
    ac9b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    aca2:	00 00 00 
			ac9d: R_X86_64_64	caml_initialize
    aca5:	48 89 b4 24 28 01 00 	mov    %rsi,0x128(%rsp)
    acac:	00 
    acad:	4c 89 bc 24 30 01 00 	mov    %r15,0x130(%rsp)
    acb4:	00 
    acb5:	48 89 9c 24 38 01 00 	mov    %rbx,0x138(%rsp)
    acbc:	00 
    acbd:	48 89 bc 24 40 01 00 	mov    %rdi,0x140(%rsp)
    acc4:	00 
    acc5:	ff d0                	call   *%rax
    acc7:	48 8b 9c 24 38 01 00 	mov    0x138(%rsp),%rbx
    acce:	00 
    accf:	4c 8b bc 24 30 01 00 	mov    0x130(%rsp),%r15
    acd6:	00 
    acd7:	4c 89 ff             	mov    %r15,%rdi
    acda:	48 81 c7 e0 06 00 00 	add    $0x6e0,%rdi
    ace1:	48 8b b4 24 20 01 00 	mov    0x120(%rsp),%rsi
    ace8:	00 
    ace9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    acf0:	00 00 00 
			aceb: R_X86_64_64	caml_initialize
    acf3:	48 89 b4 24 20 01 00 	mov    %rsi,0x120(%rsp)
    acfa:	00 
    acfb:	4c 89 bc 24 28 01 00 	mov    %r15,0x128(%rsp)
    ad02:	00 
    ad03:	48 89 9c 24 30 01 00 	mov    %rbx,0x130(%rsp)
    ad0a:	00 
    ad0b:	48 89 bc 24 38 01 00 	mov    %rdi,0x138(%rsp)
    ad12:	00 
    ad13:	ff d0                	call   *%rax
    ad15:	48 8b 9c 24 30 01 00 	mov    0x130(%rsp),%rbx
    ad1c:	00 
    ad1d:	4c 8b bc 24 28 01 00 	mov    0x128(%rsp),%r15
    ad24:	00 
    ad25:	4c 89 ff             	mov    %r15,%rdi
    ad28:	48 81 c7 e8 06 00 00 	add    $0x6e8,%rdi
    ad2f:	48 8b b4 24 18 01 00 	mov    0x118(%rsp),%rsi
    ad36:	00 
    ad37:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    ad3e:	00 00 00 
			ad39: R_X86_64_64	caml_initialize
    ad41:	48 89 b4 24 18 01 00 	mov    %rsi,0x118(%rsp)
    ad48:	00 
    ad49:	4c 89 bc 24 20 01 00 	mov    %r15,0x120(%rsp)
    ad50:	00 
    ad51:	48 89 9c 24 28 01 00 	mov    %rbx,0x128(%rsp)
    ad58:	00 
    ad59:	48 89 bc 24 30 01 00 	mov    %rdi,0x130(%rsp)
    ad60:	00 
    ad61:	ff d0                	call   *%rax
    ad63:	48 8b 9c 24 28 01 00 	mov    0x128(%rsp),%rbx
    ad6a:	00 
    ad6b:	4c 8b bc 24 20 01 00 	mov    0x120(%rsp),%r15
    ad72:	00 
    ad73:	4c 89 ff             	mov    %r15,%rdi
    ad76:	48 81 c7 f0 06 00 00 	add    $0x6f0,%rdi
    ad7d:	48 8b b4 24 10 01 00 	mov    0x110(%rsp),%rsi
    ad84:	00 
    ad85:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    ad8c:	00 00 00 
			ad87: R_X86_64_64	caml_initialize
    ad8f:	48 89 b4 24 10 01 00 	mov    %rsi,0x110(%rsp)
    ad96:	00 
    ad97:	4c 89 bc 24 18 01 00 	mov    %r15,0x118(%rsp)
    ad9e:	00 
    ad9f:	48 89 9c 24 20 01 00 	mov    %rbx,0x120(%rsp)
    ada6:	00 
    ada7:	48 89 bc 24 28 01 00 	mov    %rdi,0x128(%rsp)
    adae:	00 
    adaf:	ff d0                	call   *%rax
    adb1:	48 8b 9c 24 20 01 00 	mov    0x120(%rsp),%rbx
    adb8:	00 
    adb9:	4c 8b bc 24 18 01 00 	mov    0x118(%rsp),%r15
    adc0:	00 
    adc1:	4c 89 ff             	mov    %r15,%rdi
    adc4:	48 81 c7 f8 06 00 00 	add    $0x6f8,%rdi
    adcb:	48 8b b4 24 08 01 00 	mov    0x108(%rsp),%rsi
    add2:	00 
    add3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    adda:	00 00 00 
			add5: R_X86_64_64	caml_initialize
    addd:	48 89 b4 24 08 01 00 	mov    %rsi,0x108(%rsp)
    ade4:	00 
    ade5:	4c 89 bc 24 10 01 00 	mov    %r15,0x110(%rsp)
    adec:	00 
    aded:	48 89 9c 24 18 01 00 	mov    %rbx,0x118(%rsp)
    adf4:	00 
    adf5:	48 89 bc 24 20 01 00 	mov    %rdi,0x120(%rsp)
    adfc:	00 
    adfd:	ff d0                	call   *%rax
    adff:	48 8b 9c 24 18 01 00 	mov    0x118(%rsp),%rbx
    ae06:	00 
    ae07:	4c 8b bc 24 10 01 00 	mov    0x110(%rsp),%r15
    ae0e:	00 
    ae0f:	4c 89 ff             	mov    %r15,%rdi
    ae12:	48 81 c7 00 07 00 00 	add    $0x700,%rdi
    ae19:	48 8b b4 24 00 01 00 	mov    0x100(%rsp),%rsi
    ae20:	00 
    ae21:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    ae28:	00 00 00 
			ae23: R_X86_64_64	caml_initialize
    ae2b:	48 89 b4 24 00 01 00 	mov    %rsi,0x100(%rsp)
    ae32:	00 
    ae33:	4c 89 bc 24 08 01 00 	mov    %r15,0x108(%rsp)
    ae3a:	00 
    ae3b:	48 89 9c 24 10 01 00 	mov    %rbx,0x110(%rsp)
    ae42:	00 
    ae43:	48 89 bc 24 18 01 00 	mov    %rdi,0x118(%rsp)
    ae4a:	00 
    ae4b:	ff d0                	call   *%rax
    ae4d:	48 8b 9c 24 10 01 00 	mov    0x110(%rsp),%rbx
    ae54:	00 
    ae55:	4c 8b bc 24 08 01 00 	mov    0x108(%rsp),%r15
    ae5c:	00 
    ae5d:	4c 89 ff             	mov    %r15,%rdi
    ae60:	48 81 c7 08 07 00 00 	add    $0x708,%rdi
    ae67:	48 8b b4 24 f8 00 00 	mov    0xf8(%rsp),%rsi
    ae6e:	00 
    ae6f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    ae76:	00 00 00 
			ae71: R_X86_64_64	caml_initialize
    ae79:	48 89 b4 24 f8 00 00 	mov    %rsi,0xf8(%rsp)
    ae80:	00 
    ae81:	4c 89 bc 24 00 01 00 	mov    %r15,0x100(%rsp)
    ae88:	00 
    ae89:	48 89 9c 24 08 01 00 	mov    %rbx,0x108(%rsp)
    ae90:	00 
    ae91:	48 89 bc 24 10 01 00 	mov    %rdi,0x110(%rsp)
    ae98:	00 
    ae99:	ff d0                	call   *%rax
    ae9b:	48 8b 9c 24 08 01 00 	mov    0x108(%rsp),%rbx
    aea2:	00 
    aea3:	4c 8b bc 24 00 01 00 	mov    0x100(%rsp),%r15
    aeaa:	00 
    aeab:	4c 89 ff             	mov    %r15,%rdi
    aeae:	48 81 c7 10 07 00 00 	add    $0x710,%rdi
    aeb5:	48 8b b4 24 f0 00 00 	mov    0xf0(%rsp),%rsi
    aebc:	00 
    aebd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    aec4:	00 00 00 
			aebf: R_X86_64_64	caml_initialize
    aec7:	48 89 b4 24 f0 00 00 	mov    %rsi,0xf0(%rsp)
    aece:	00 
    aecf:	4c 89 bc 24 f8 00 00 	mov    %r15,0xf8(%rsp)
    aed6:	00 
    aed7:	48 89 9c 24 00 01 00 	mov    %rbx,0x100(%rsp)
    aede:	00 
    aedf:	48 89 bc 24 08 01 00 	mov    %rdi,0x108(%rsp)
    aee6:	00 
    aee7:	ff d0                	call   *%rax
    aee9:	48 8b 9c 24 00 01 00 	mov    0x100(%rsp),%rbx
    aef0:	00 
    aef1:	4c 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%r15
    aef8:	00 
    aef9:	4c 89 ff             	mov    %r15,%rdi
    aefc:	48 81 c7 18 07 00 00 	add    $0x718,%rdi
    af03:	48 8b b4 24 e8 00 00 	mov    0xe8(%rsp),%rsi
    af0a:	00 
    af0b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    af12:	00 00 00 
			af0d: R_X86_64_64	caml_initialize
    af15:	48 89 b4 24 e8 00 00 	mov    %rsi,0xe8(%rsp)
    af1c:	00 
    af1d:	4c 89 bc 24 f0 00 00 	mov    %r15,0xf0(%rsp)
    af24:	00 
    af25:	48 89 9c 24 f8 00 00 	mov    %rbx,0xf8(%rsp)
    af2c:	00 
    af2d:	48 89 bc 24 00 01 00 	mov    %rdi,0x100(%rsp)
    af34:	00 
    af35:	ff d0                	call   *%rax
    af37:	48 8b 9c 24 f8 00 00 	mov    0xf8(%rsp),%rbx
    af3e:	00 
    af3f:	4c 8b bc 24 f0 00 00 	mov    0xf0(%rsp),%r15
    af46:	00 
    af47:	4c 89 ff             	mov    %r15,%rdi
    af4a:	48 81 c7 20 07 00 00 	add    $0x720,%rdi
    af51:	48 8b b4 24 e0 00 00 	mov    0xe0(%rsp),%rsi
    af58:	00 
    af59:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    af60:	00 00 00 
			af5b: R_X86_64_64	caml_initialize
    af63:	48 89 b4 24 e0 00 00 	mov    %rsi,0xe0(%rsp)
    af6a:	00 
    af6b:	4c 89 bc 24 e8 00 00 	mov    %r15,0xe8(%rsp)
    af72:	00 
    af73:	48 89 9c 24 f0 00 00 	mov    %rbx,0xf0(%rsp)
    af7a:	00 
    af7b:	48 89 bc 24 f8 00 00 	mov    %rdi,0xf8(%rsp)
    af82:	00 
    af83:	ff d0                	call   *%rax
    af85:	48 8b 9c 24 f0 00 00 	mov    0xf0(%rsp),%rbx
    af8c:	00 
    af8d:	4c 8b bc 24 e8 00 00 	mov    0xe8(%rsp),%r15
    af94:	00 
    af95:	4c 89 ff             	mov    %r15,%rdi
    af98:	48 81 c7 28 07 00 00 	add    $0x728,%rdi
    af9f:	48 8b b4 24 d8 00 00 	mov    0xd8(%rsp),%rsi
    afa6:	00 
    afa7:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    afae:	00 00 00 
			afa9: R_X86_64_64	caml_initialize
    afb1:	48 89 b4 24 d8 00 00 	mov    %rsi,0xd8(%rsp)
    afb8:	00 
    afb9:	4c 89 bc 24 e0 00 00 	mov    %r15,0xe0(%rsp)
    afc0:	00 
    afc1:	48 89 9c 24 e8 00 00 	mov    %rbx,0xe8(%rsp)
    afc8:	00 
    afc9:	48 89 bc 24 f0 00 00 	mov    %rdi,0xf0(%rsp)
    afd0:	00 
    afd1:	ff d0                	call   *%rax
    afd3:	48 8b 9c 24 e8 00 00 	mov    0xe8(%rsp),%rbx
    afda:	00 
    afdb:	4c 8b bc 24 e0 00 00 	mov    0xe0(%rsp),%r15
    afe2:	00 
    afe3:	4c 89 ff             	mov    %r15,%rdi
    afe6:	48 81 c7 30 07 00 00 	add    $0x730,%rdi
    afed:	48 8b b4 24 d0 00 00 	mov    0xd0(%rsp),%rsi
    aff4:	00 
    aff5:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    affc:	00 00 00 
			aff7: R_X86_64_64	caml_initialize
    afff:	48 89 b4 24 d0 00 00 	mov    %rsi,0xd0(%rsp)
    b006:	00 
    b007:	4c 89 bc 24 d8 00 00 	mov    %r15,0xd8(%rsp)
    b00e:	00 
    b00f:	48 89 9c 24 e0 00 00 	mov    %rbx,0xe0(%rsp)
    b016:	00 
    b017:	48 89 bc 24 e8 00 00 	mov    %rdi,0xe8(%rsp)
    b01e:	00 
    b01f:	ff d0                	call   *%rax
    b021:	48 8b 9c 24 e0 00 00 	mov    0xe0(%rsp),%rbx
    b028:	00 
    b029:	4c 8b bc 24 d8 00 00 	mov    0xd8(%rsp),%r15
    b030:	00 
    b031:	4c 89 ff             	mov    %r15,%rdi
    b034:	48 81 c7 38 07 00 00 	add    $0x738,%rdi
    b03b:	48 8b b4 24 c8 00 00 	mov    0xc8(%rsp),%rsi
    b042:	00 
    b043:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b04a:	00 00 00 
			b045: R_X86_64_64	caml_initialize
    b04d:	48 89 b4 24 c8 00 00 	mov    %rsi,0xc8(%rsp)
    b054:	00 
    b055:	4c 89 bc 24 d0 00 00 	mov    %r15,0xd0(%rsp)
    b05c:	00 
    b05d:	48 89 9c 24 d8 00 00 	mov    %rbx,0xd8(%rsp)
    b064:	00 
    b065:	48 89 bc 24 e0 00 00 	mov    %rdi,0xe0(%rsp)
    b06c:	00 
    b06d:	ff d0                	call   *%rax
    b06f:	48 8b 9c 24 d8 00 00 	mov    0xd8(%rsp),%rbx
    b076:	00 
    b077:	4c 8b bc 24 d0 00 00 	mov    0xd0(%rsp),%r15
    b07e:	00 
    b07f:	4c 89 ff             	mov    %r15,%rdi
    b082:	48 81 c7 40 07 00 00 	add    $0x740,%rdi
    b089:	48 8b b4 24 c0 00 00 	mov    0xc0(%rsp),%rsi
    b090:	00 
    b091:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b098:	00 00 00 
			b093: R_X86_64_64	caml_initialize
    b09b:	48 89 b4 24 c0 00 00 	mov    %rsi,0xc0(%rsp)
    b0a2:	00 
    b0a3:	4c 89 bc 24 c8 00 00 	mov    %r15,0xc8(%rsp)
    b0aa:	00 
    b0ab:	48 89 9c 24 d0 00 00 	mov    %rbx,0xd0(%rsp)
    b0b2:	00 
    b0b3:	48 89 bc 24 d8 00 00 	mov    %rdi,0xd8(%rsp)
    b0ba:	00 
    b0bb:	ff d0                	call   *%rax
    b0bd:	48 8b 9c 24 d0 00 00 	mov    0xd0(%rsp),%rbx
    b0c4:	00 
    b0c5:	4c 8b bc 24 c8 00 00 	mov    0xc8(%rsp),%r15
    b0cc:	00 
    b0cd:	4c 89 ff             	mov    %r15,%rdi
    b0d0:	48 81 c7 48 07 00 00 	add    $0x748,%rdi
    b0d7:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    b0de:	00 
    b0df:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b0e6:	00 00 00 
			b0e1: R_X86_64_64	caml_initialize
    b0e9:	48 89 b4 24 b8 00 00 	mov    %rsi,0xb8(%rsp)
    b0f0:	00 
    b0f1:	4c 89 bc 24 c0 00 00 	mov    %r15,0xc0(%rsp)
    b0f8:	00 
    b0f9:	48 89 9c 24 c8 00 00 	mov    %rbx,0xc8(%rsp)
    b100:	00 
    b101:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    b108:	00 
    b109:	ff d0                	call   *%rax
    b10b:	48 8b 9c 24 c8 00 00 	mov    0xc8(%rsp),%rbx
    b112:	00 
    b113:	4c 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%r15
    b11a:	00 
    b11b:	4c 89 ff             	mov    %r15,%rdi
    b11e:	48 81 c7 50 07 00 00 	add    $0x750,%rdi
    b125:	48 8b b4 24 b0 00 00 	mov    0xb0(%rsp),%rsi
    b12c:	00 
    b12d:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b134:	00 00 00 
			b12f: R_X86_64_64	caml_initialize
    b137:	48 89 b4 24 b0 00 00 	mov    %rsi,0xb0(%rsp)
    b13e:	00 
    b13f:	4c 89 bc 24 b8 00 00 	mov    %r15,0xb8(%rsp)
    b146:	00 
    b147:	48 89 9c 24 c0 00 00 	mov    %rbx,0xc0(%rsp)
    b14e:	00 
    b14f:	48 89 bc 24 c8 00 00 	mov    %rdi,0xc8(%rsp)
    b156:	00 
    b157:	ff d0                	call   *%rax
    b159:	48 8b 9c 24 c0 00 00 	mov    0xc0(%rsp),%rbx
    b160:	00 
    b161:	4c 8b bc 24 b8 00 00 	mov    0xb8(%rsp),%r15
    b168:	00 
    b169:	4c 89 ff             	mov    %r15,%rdi
    b16c:	48 81 c7 58 07 00 00 	add    $0x758,%rdi
    b173:	48 8b b4 24 a8 00 00 	mov    0xa8(%rsp),%rsi
    b17a:	00 
    b17b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b182:	00 00 00 
			b17d: R_X86_64_64	caml_initialize
    b185:	48 89 b4 24 a8 00 00 	mov    %rsi,0xa8(%rsp)
    b18c:	00 
    b18d:	4c 89 bc 24 b0 00 00 	mov    %r15,0xb0(%rsp)
    b194:	00 
    b195:	48 89 9c 24 b8 00 00 	mov    %rbx,0xb8(%rsp)
    b19c:	00 
    b19d:	48 89 bc 24 c0 00 00 	mov    %rdi,0xc0(%rsp)
    b1a4:	00 
    b1a5:	ff d0                	call   *%rax
    b1a7:	48 8b 9c 24 b8 00 00 	mov    0xb8(%rsp),%rbx
    b1ae:	00 
    b1af:	4c 8b bc 24 b0 00 00 	mov    0xb0(%rsp),%r15
    b1b6:	00 
    b1b7:	4c 89 ff             	mov    %r15,%rdi
    b1ba:	48 81 c7 60 07 00 00 	add    $0x760,%rdi
    b1c1:	48 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%rsi
    b1c8:	00 
    b1c9:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b1d0:	00 00 00 
			b1cb: R_X86_64_64	caml_initialize
    b1d3:	48 89 b4 24 a0 00 00 	mov    %rsi,0xa0(%rsp)
    b1da:	00 
    b1db:	4c 89 bc 24 a8 00 00 	mov    %r15,0xa8(%rsp)
    b1e2:	00 
    b1e3:	48 89 9c 24 b0 00 00 	mov    %rbx,0xb0(%rsp)
    b1ea:	00 
    b1eb:	48 89 bc 24 b8 00 00 	mov    %rdi,0xb8(%rsp)
    b1f2:	00 
    b1f3:	ff d0                	call   *%rax
    b1f5:	48 8b 9c 24 b0 00 00 	mov    0xb0(%rsp),%rbx
    b1fc:	00 
    b1fd:	4c 8b bc 24 a8 00 00 	mov    0xa8(%rsp),%r15
    b204:	00 
    b205:	4c 89 ff             	mov    %r15,%rdi
    b208:	48 81 c7 68 07 00 00 	add    $0x768,%rdi
    b20f:	48 8b b4 24 98 00 00 	mov    0x98(%rsp),%rsi
    b216:	00 
    b217:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b21e:	00 00 00 
			b219: R_X86_64_64	caml_initialize
    b221:	48 89 b4 24 98 00 00 	mov    %rsi,0x98(%rsp)
    b228:	00 
    b229:	4c 89 bc 24 a0 00 00 	mov    %r15,0xa0(%rsp)
    b230:	00 
    b231:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
    b238:	00 
    b239:	48 89 bc 24 b0 00 00 	mov    %rdi,0xb0(%rsp)
    b240:	00 
    b241:	ff d0                	call   *%rax
    b243:	48 8b 9c 24 a8 00 00 	mov    0xa8(%rsp),%rbx
    b24a:	00 
    b24b:	4c 8b bc 24 a0 00 00 	mov    0xa0(%rsp),%r15
    b252:	00 
    b253:	4c 89 ff             	mov    %r15,%rdi
    b256:	48 81 c7 70 07 00 00 	add    $0x770,%rdi
    b25d:	48 8b b4 24 90 00 00 	mov    0x90(%rsp),%rsi
    b264:	00 
    b265:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b26c:	00 00 00 
			b267: R_X86_64_64	caml_initialize
    b26f:	48 89 b4 24 90 00 00 	mov    %rsi,0x90(%rsp)
    b276:	00 
    b277:	4c 89 bc 24 98 00 00 	mov    %r15,0x98(%rsp)
    b27e:	00 
    b27f:	48 89 9c 24 a0 00 00 	mov    %rbx,0xa0(%rsp)
    b286:	00 
    b287:	48 89 bc 24 a8 00 00 	mov    %rdi,0xa8(%rsp)
    b28e:	00 
    b28f:	ff d0                	call   *%rax
    b291:	48 8b 9c 24 a0 00 00 	mov    0xa0(%rsp),%rbx
    b298:	00 
    b299:	4c 8b bc 24 98 00 00 	mov    0x98(%rsp),%r15
    b2a0:	00 
    b2a1:	4c 89 ff             	mov    %r15,%rdi
    b2a4:	48 81 c7 78 07 00 00 	add    $0x778,%rdi
    b2ab:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    b2b2:	00 
    b2b3:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b2ba:	00 00 00 
			b2b5: R_X86_64_64	caml_initialize
    b2bd:	48 89 b4 24 88 00 00 	mov    %rsi,0x88(%rsp)
    b2c4:	00 
    b2c5:	4c 89 bc 24 90 00 00 	mov    %r15,0x90(%rsp)
    b2cc:	00 
    b2cd:	48 89 9c 24 98 00 00 	mov    %rbx,0x98(%rsp)
    b2d4:	00 
    b2d5:	48 89 bc 24 a0 00 00 	mov    %rdi,0xa0(%rsp)
    b2dc:	00 
    b2dd:	ff d0                	call   *%rax
    b2df:	48 8b 9c 24 98 00 00 	mov    0x98(%rsp),%rbx
    b2e6:	00 
    b2e7:	4c 8b bc 24 90 00 00 	mov    0x90(%rsp),%r15
    b2ee:	00 
    b2ef:	4c 89 ff             	mov    %r15,%rdi
    b2f2:	48 81 c7 80 07 00 00 	add    $0x780,%rdi
    b2f9:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
    b300:	00 
    b301:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b308:	00 00 00 
			b303: R_X86_64_64	caml_initialize
    b30b:	48 89 b4 24 80 00 00 	mov    %rsi,0x80(%rsp)
    b312:	00 
    b313:	4c 89 bc 24 88 00 00 	mov    %r15,0x88(%rsp)
    b31a:	00 
    b31b:	48 89 9c 24 90 00 00 	mov    %rbx,0x90(%rsp)
    b322:	00 
    b323:	48 89 bc 24 98 00 00 	mov    %rdi,0x98(%rsp)
    b32a:	00 
    b32b:	ff d0                	call   *%rax
    b32d:	48 8b 9c 24 90 00 00 	mov    0x90(%rsp),%rbx
    b334:	00 
    b335:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
    b33c:	00 
    b33d:	4c 89 ff             	mov    %r15,%rdi
    b340:	48 81 c7 88 07 00 00 	add    $0x788,%rdi
    b347:	48 8b 74 24 78       	mov    0x78(%rsp),%rsi
    b34c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b353:	00 00 00 
			b34e: R_X86_64_64	caml_initialize
    b356:	48 89 74 24 78       	mov    %rsi,0x78(%rsp)
    b35b:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
    b362:	00 
    b363:	48 89 9c 24 88 00 00 	mov    %rbx,0x88(%rsp)
    b36a:	00 
    b36b:	48 89 bc 24 90 00 00 	mov    %rdi,0x90(%rsp)
    b372:	00 
    b373:	ff d0                	call   *%rax
    b375:	48 8b 9c 24 88 00 00 	mov    0x88(%rsp),%rbx
    b37c:	00 
    b37d:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
    b384:	00 
    b385:	4c 89 ff             	mov    %r15,%rdi
    b388:	48 81 c7 90 07 00 00 	add    $0x790,%rdi
    b38f:	48 8b 74 24 70       	mov    0x70(%rsp),%rsi
    b394:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b39b:	00 00 00 
			b396: R_X86_64_64	caml_initialize
    b39e:	48 89 74 24 70       	mov    %rsi,0x70(%rsp)
    b3a3:	4c 89 7c 24 78       	mov    %r15,0x78(%rsp)
    b3a8:	48 89 9c 24 80 00 00 	mov    %rbx,0x80(%rsp)
    b3af:	00 
    b3b0:	48 89 bc 24 88 00 00 	mov    %rdi,0x88(%rsp)
    b3b7:	00 
    b3b8:	ff d0                	call   *%rax
    b3ba:	48 8b 9c 24 80 00 00 	mov    0x80(%rsp),%rbx
    b3c1:	00 
    b3c2:	4c 8b 7c 24 78       	mov    0x78(%rsp),%r15
    b3c7:	4c 89 ff             	mov    %r15,%rdi
    b3ca:	48 81 c7 98 07 00 00 	add    $0x798,%rdi
    b3d1:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    b3d6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b3dd:	00 00 00 
			b3d8: R_X86_64_64	caml_initialize
    b3e0:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
    b3e5:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
    b3ea:	48 89 5c 24 78       	mov    %rbx,0x78(%rsp)
    b3ef:	48 89 bc 24 80 00 00 	mov    %rdi,0x80(%rsp)
    b3f6:	00 
    b3f7:	ff d0                	call   *%rax
    b3f9:	48 8b 5c 24 78       	mov    0x78(%rsp),%rbx
    b3fe:	4c 8b 7c 24 70       	mov    0x70(%rsp),%r15
    b403:	4c 89 ff             	mov    %r15,%rdi
    b406:	48 81 c7 a0 07 00 00 	add    $0x7a0,%rdi
    b40d:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    b412:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b419:	00 00 00 
			b414: R_X86_64_64	caml_initialize
    b41c:	48 89 74 24 60       	mov    %rsi,0x60(%rsp)
    b421:	4c 89 7c 24 68       	mov    %r15,0x68(%rsp)
    b426:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    b42b:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    b430:	ff d0                	call   *%rax
    b432:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    b437:	4c 8b 7c 24 68       	mov    0x68(%rsp),%r15
    b43c:	4c 89 ff             	mov    %r15,%rdi
    b43f:	48 81 c7 a8 07 00 00 	add    $0x7a8,%rdi
    b446:	48 8b 74 24 58       	mov    0x58(%rsp),%rsi
    b44b:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b452:	00 00 00 
			b44d: R_X86_64_64	caml_initialize
    b455:	48 89 74 24 58       	mov    %rsi,0x58(%rsp)
    b45a:	4c 89 7c 24 60       	mov    %r15,0x60(%rsp)
    b45f:	48 89 5c 24 68       	mov    %rbx,0x68(%rsp)
    b464:	48 89 7c 24 70       	mov    %rdi,0x70(%rsp)
    b469:	ff d0                	call   *%rax
    b46b:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx
    b470:	4c 8b 7c 24 60       	mov    0x60(%rsp),%r15
    b475:	4c 89 ff             	mov    %r15,%rdi
    b478:	48 81 c7 b0 07 00 00 	add    $0x7b0,%rdi
    b47f:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    b484:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b48b:	00 00 00 
			b486: R_X86_64_64	caml_initialize
    b48e:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    b493:	4c 89 7c 24 58       	mov    %r15,0x58(%rsp)
    b498:	48 89 5c 24 60       	mov    %rbx,0x60(%rsp)
    b49d:	48 89 7c 24 68       	mov    %rdi,0x68(%rsp)
    b4a2:	ff d0                	call   *%rax
    b4a4:	48 8b 5c 24 60       	mov    0x60(%rsp),%rbx
    b4a9:	4c 8b 7c 24 58       	mov    0x58(%rsp),%r15
    b4ae:	4c 89 ff             	mov    %r15,%rdi
    b4b1:	48 81 c7 b8 07 00 00 	add    $0x7b8,%rdi
    b4b8:	48 8b 74 24 48       	mov    0x48(%rsp),%rsi
    b4bd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b4c4:	00 00 00 
			b4bf: R_X86_64_64	caml_initialize
    b4c7:	48 89 74 24 48       	mov    %rsi,0x48(%rsp)
    b4cc:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
    b4d1:	48 89 5c 24 58       	mov    %rbx,0x58(%rsp)
    b4d6:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
    b4db:	ff d0                	call   *%rax
    b4dd:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
    b4e2:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    b4e7:	4c 89 ff             	mov    %r15,%rdi
    b4ea:	48 81 c7 c0 07 00 00 	add    $0x7c0,%rdi
    b4f1:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi
    b4f6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b4fd:	00 00 00 
			b4f8: R_X86_64_64	caml_initialize
    b500:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)
    b505:	4c 89 7c 24 48       	mov    %r15,0x48(%rsp)
    b50a:	48 89 5c 24 50       	mov    %rbx,0x50(%rsp)
    b50f:	48 89 7c 24 58       	mov    %rdi,0x58(%rsp)
    b514:	ff d0                	call   *%rax
    b516:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    b51b:	4c 8b 7c 24 48       	mov    0x48(%rsp),%r15
    b520:	4c 89 ff             	mov    %r15,%rdi
    b523:	48 81 c7 c8 07 00 00 	add    $0x7c8,%rdi
    b52a:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    b52f:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b536:	00 00 00 
			b531: R_X86_64_64	caml_initialize
    b539:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
    b53e:	4c 89 7c 24 40       	mov    %r15,0x40(%rsp)
    b543:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
    b548:	48 89 7c 24 50       	mov    %rdi,0x50(%rsp)
    b54d:	ff d0                	call   *%rax
    b54f:	48 8b 5c 24 48       	mov    0x48(%rsp),%rbx
    b554:	4c 8b 7c 24 40       	mov    0x40(%rsp),%r15
    b559:	4c 89 ff             	mov    %r15,%rdi
    b55c:	48 81 c7 d0 07 00 00 	add    $0x7d0,%rdi
    b563:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    b568:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b56f:	00 00 00 
			b56a: R_X86_64_64	caml_initialize
    b572:	48 89 74 24 30       	mov    %rsi,0x30(%rsp)
    b577:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    b57c:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    b581:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)
    b586:	ff d0                	call   *%rax
    b588:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
    b58d:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
    b592:	4c 89 ff             	mov    %r15,%rdi
    b595:	48 81 c7 d8 07 00 00 	add    $0x7d8,%rdi
    b59c:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    b5a1:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b5a8:	00 00 00 
			b5a3: R_X86_64_64	caml_initialize
    b5ab:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    b5b0:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
    b5b5:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
    b5ba:	48 89 7c 24 40       	mov    %rdi,0x40(%rsp)
    b5bf:	ff d0                	call   *%rax
    b5c1:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    b5c6:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
    b5cb:	4c 89 ff             	mov    %r15,%rdi
    b5ce:	48 81 c7 e0 07 00 00 	add    $0x7e0,%rdi
    b5d5:	48 8b 74 24 20       	mov    0x20(%rsp),%rsi
    b5da:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b5e1:	00 00 00 
			b5dc: R_X86_64_64	caml_initialize
    b5e4:	48 89 74 24 20       	mov    %rsi,0x20(%rsp)
    b5e9:	4c 89 7c 24 28       	mov    %r15,0x28(%rsp)
    b5ee:	48 89 5c 24 30       	mov    %rbx,0x30(%rsp)
    b5f3:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    b5f8:	ff d0                	call   *%rax
    b5fa:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    b5ff:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    b604:	4c 89 ff             	mov    %r15,%rdi
    b607:	48 81 c7 e8 07 00 00 	add    $0x7e8,%rdi
    b60e:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    b613:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b61a:	00 00 00 
			b615: R_X86_64_64	caml_initialize
    b61d:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    b622:	4c 89 7c 24 20       	mov    %r15,0x20(%rsp)
    b627:	48 89 5c 24 28       	mov    %rbx,0x28(%rsp)
    b62c:	48 89 7c 24 30       	mov    %rdi,0x30(%rsp)
    b631:	ff d0                	call   *%rax
    b633:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    b638:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
    b63d:	4c 89 ff             	mov    %r15,%rdi
    b640:	48 81 c7 f0 07 00 00 	add    $0x7f0,%rdi
    b647:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    b64c:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b653:	00 00 00 
			b64e: R_X86_64_64	caml_initialize
    b656:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    b65b:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    b660:	48 89 5c 24 20       	mov    %rbx,0x20(%rsp)
    b665:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    b66a:	ff d0                	call   *%rax
    b66c:	48 8b 5c 24 20       	mov    0x20(%rsp),%rbx
    b671:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
    b676:	4c 89 ff             	mov    %r15,%rdi
    b679:	48 81 c7 f8 07 00 00 	add    $0x7f8,%rdi
    b680:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    b685:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b68c:	00 00 00 
			b687: R_X86_64_64	caml_initialize
    b68f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    b694:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
    b699:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    b69e:	48 89 7c 24 20       	mov    %rdi,0x20(%rsp)
    b6a3:	ff d0                	call   *%rax
    b6a5:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    b6aa:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
    b6af:	49 81 c7 00 08 00 00 	add    $0x800,%r15
    b6b6:	4c 89 ff             	mov    %r15,%rdi
    b6b9:	48 8b 34 24          	mov    (%rsp),%rsi
    b6bd:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
    b6c4:	00 00 00 
			b6bf: R_X86_64_64	caml_initialize
    b6c7:	48 89 34 24          	mov    %rsi,(%rsp)
    b6cb:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    b6d0:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    b6d5:	ff d0                	call   *%rax
    b6d7:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    b6dc:	48 8b b4 24 f8 07 00 	mov    0x7f8(%rsp),%rsi
    b6e3:	00 
    b6e4:	49 89 34 24          	mov    %rsi,(%r12)
    b6e8:	48 31 d2             	xor    %rdx,%rdx
    b6eb:	48 89 d8             	mov    %rbx,%rax
    b6ee:	4c 8b a4 24 30 08 00 	mov    0x830(%rsp),%r12
    b6f5:	00 
    b6f6:	4c 8b ac 24 38 08 00 	mov    0x838(%rsp),%r13
    b6fd:	00 
    b6fe:	4c 8b b4 24 40 08 00 	mov    0x840(%rsp),%r14
    b705:	00 
    b706:	48 8b 9c 24 48 08 00 	mov    0x848(%rsp),%rbx
    b70d:	00 
    b70e:	4c 8b bc 24 50 08 00 	mov    0x850(%rsp),%r15
    b715:	00 
    b716:	48 81 c4 60 08 00 00 	add    $0x860,%rsp
    b71d:	48 89 ec             	mov    %rbp,%rsp
    b720:	5d                   	pop    %rbp
    b721:	c3                   	ret    
