function u0:0(r64, r64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    gv1 = symbol u1:1
    sig0 = (r64, i64) -> r64, i64 system_v
    fn0 = u0:1 sig0

block0(v0: r64, v1: r64):
    v2 = null.r64 
    v3 = iconst.i64 0
    v4 = symbol_value.i64 gv0
    v5 = load.i64 notrap aligned v4+152
    v6 = iconst.i64 1
    v7 = raw_bitcast.r64 v6
    v8 = load.r64 notrap aligned v0+8
    v9 = iconst.i64 0
    v10 = iconst.i64 1
    v11 = symbol_value.i64 gv1
    store notrap aligned v5, v4+152
    v12 = iadd_imm v5, -32
    store notrap aligned v7, v12
    store notrap aligned v11, v12+8
    store notrap aligned v10, v12+16
    store notrap aligned v10, v12+24
    v13, v14 = call fn0(v8, v9)
    v15 = load.i64 notrap aligned v4+152
    v16 = iconst.i64 3
    v17 = raw_bitcast.r64 v16
    v18 = iconst.i64 1
    v19 = raw_bitcast.r64 v18
    v20 = load.r64 notrap aligned v0+16
    v21 = iconst.i64 1
    v22 = iconst.i64 1
    v23 = symbol_value.i64 gv1
    store notrap aligned v15, v4+152
    v24 = iadd_imm v15, -40
    store notrap aligned v19, v24
    store notrap aligned v17, v24+8
    store notrap aligned v23, v24+16
    store notrap aligned v22, v24+24
    store notrap aligned v22, v24+32
    v25, v26 = call fn0(v20, v21)
    v27 = load.i64 notrap aligned v4+152
    v28 = iconst.i64 5
    v29 = raw_bitcast.r64 v28
    v30 = iconst.i64 3
    v31 = raw_bitcast.r64 v30
    v32 = iconst.i64 1
    v33 = raw_bitcast.r64 v32
    v34 = load.r64 notrap aligned v0+24
    v35 = iconst.i64 2
    v36 = iconst.i64 1
    v37 = symbol_value.i64 gv1
    store notrap aligned v27, v4+152
    v38 = iadd_imm v27, -48
    store notrap aligned v33, v38
    store notrap aligned v31, v38+8
    store notrap aligned v29, v38+16
    store notrap aligned v37, v38+24
    store notrap aligned v36, v38+32
    store notrap aligned v36, v38+40
    v39, v40 = call fn0(v34, v35)
    v41 = load.i64 notrap aligned v4+152
    v42 = null.r64 
    v43 = iconst.i64 7
    v44 = raw_bitcast.r64 v43
    v45 = iconst.i64 5
    v46 = raw_bitcast.r64 v45
    v47 = iconst.i64 3
    v48 = raw_bitcast.r64 v47
    v49 = iconst.i64 1
    v50 = raw_bitcast.r64 v49
    v51 = load.r64 notrap aligned v0+32
    v52 = iconst.i64 3
    v53 = iconst.i64 1
    v54 = symbol_value.i64 gv1
    store notrap aligned v41, v4+152
    v55 = iadd_imm v41, -56
    store notrap aligned v50, v55
    store notrap aligned v48, v55+8
    store notrap aligned v46, v55+16
    store notrap aligned v44, v55+24
    store notrap aligned v54, v55+32
    store notrap aligned v53, v55+40
    store notrap aligned v53, v55+48
    v56, v57 = call fn0(v51, v52)
    v58 = load.i64 notrap aligned v4+152
    v59 = iconst.i64 9
    v60 = raw_bitcast.r64 v59
    v61 = iconst.i64 7
    v62 = raw_bitcast.r64 v61
    v63 = iconst.i64 5
    v64 = raw_bitcast.r64 v63
    v65 = iconst.i64 3
    v66 = raw_bitcast.r64 v65
    v67 = iconst.i64 1
    v68 = raw_bitcast.r64 v67
    v69 = load.r64 notrap aligned v0+40
    v70 = iadd_imm v58, -40
    store notrap aligned v68, v70
    store notrap aligned v66, v70+8
    store notrap aligned v64, v70+16
    store notrap aligned v62, v70+24
    store notrap aligned v60, v70+32
    v71 = iconst.i64 5
    jump block1

block1:
    store.i64 notrap aligned v70, v4+152
    return v69, v71
}
