function u0:0(r64, i64) -> r64, i64 system_v {
    gv0 = symbol u1:0
    gv1 = symbol u1:1
    sig0 = (r64, i64) -> r64, i64 system_v
    fn0 = u0:1 sig0

block0(v0: r64, v1: i64):
    v2 = null.r64 
    v3 = iconst.i64 0
    v4 = symbol_value.i64 gv0
    v5 = load.r64 notrap aligned v1
    v6 = iadd_imm v1, 8
    v7 = iconst.i64 1
    v8 = raw_bitcast.r64 v7
    v9 = load.r64 notrap aligned v0+8
    v10 = iconst.i64 0
    v11 = iconst.i64 1
    v12 = symbol_value.i64 gv1
    store notrap aligned v6, v4+152
    v13 = iadd_imm v6, -32
    store notrap aligned v8, v13
    store notrap aligned v12, v13+8
    store notrap aligned v11, v13+16
    store notrap aligned v11, v13+24
    v14, v15 = call fn0(v9, v10)
    v16 = load.i64 notrap aligned v4+152
    v17 = iconst.i64 3
    v18 = raw_bitcast.r64 v17
    v19 = iconst.i64 1
    v20 = raw_bitcast.r64 v19
    v21 = load.r64 notrap aligned v0+16
    v22 = iconst.i64 1
    v23 = iconst.i64 1
    v24 = symbol_value.i64 gv1
    store notrap aligned v16, v4+152
    v25 = iadd_imm v16, -40
    store notrap aligned v20, v25
    store notrap aligned v18, v25+8
    store notrap aligned v24, v25+16
    store notrap aligned v23, v25+24
    store notrap aligned v23, v25+32
    v26, v27 = call fn0(v21, v22)
    v28 = load.i64 notrap aligned v4+152
    v29 = iconst.i64 5
    v30 = raw_bitcast.r64 v29
    v31 = iconst.i64 3
    v32 = raw_bitcast.r64 v31
    v33 = iconst.i64 1
    v34 = raw_bitcast.r64 v33
    v35 = load.r64 notrap aligned v0+24
    v36 = iconst.i64 2
    v37 = iconst.i64 1
    v38 = symbol_value.i64 gv1
    store notrap aligned v28, v4+152
    v39 = iadd_imm v28, -48
    store notrap aligned v34, v39
    store notrap aligned v32, v39+8
    store notrap aligned v30, v39+16
    store notrap aligned v38, v39+24
    store notrap aligned v37, v39+32
    store notrap aligned v37, v39+40
    v40, v41 = call fn0(v35, v36)
    v42 = load.i64 notrap aligned v4+152
    v43 = null.r64 
    v44 = iconst.i64 7
    v45 = raw_bitcast.r64 v44
    v46 = iconst.i64 5
    v47 = raw_bitcast.r64 v46
    v48 = iconst.i64 3
    v49 = raw_bitcast.r64 v48
    v50 = iconst.i64 1
    v51 = raw_bitcast.r64 v50
    v52 = load.r64 notrap aligned v0+32
    v53 = iconst.i64 3
    v54 = iconst.i64 1
    v55 = symbol_value.i64 gv1
    store notrap aligned v42, v4+152
    v56 = iadd_imm v42, -56
    store notrap aligned v51, v56
    store notrap aligned v49, v56+8
    store notrap aligned v47, v56+16
    store notrap aligned v45, v56+24
    store notrap aligned v55, v56+32
    store notrap aligned v54, v56+40
    store notrap aligned v54, v56+48
    v57, v58 = call fn0(v52, v53)
    v59 = load.i64 notrap aligned v4+152
    v60 = iconst.i64 9
    v61 = raw_bitcast.r64 v60
    v62 = iconst.i64 7
    v63 = raw_bitcast.r64 v62
    v64 = iconst.i64 5
    v65 = raw_bitcast.r64 v64
    v66 = iconst.i64 3
    v67 = raw_bitcast.r64 v66
    v68 = iconst.i64 1
    v69 = raw_bitcast.r64 v68
    v70 = load.r64 notrap aligned v0+40
    v71 = iadd_imm v59, -40
    store notrap aligned v69, v71
    store notrap aligned v67, v71+8
    store notrap aligned v65, v71+16
    store notrap aligned v63, v71+24
    store notrap aligned v61, v71+32
    v72 = iconst.i64 5
    jump block1

block1:
    store.i64 notrap aligned v71, v4+152
    return v70, v72
}
